language: cs
name: HumanEval_86_anti_shuffle
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            if (char.IsLetter(c)) {\n                result += char.ToUpper(c);\n
    \           }\n            else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b9569b080ed4dfda63304959219f47b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b9569b080ed4dfda63304959219f47b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n
    \       return new string(arr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c9f0fc790ca474bad337f0c224dc18c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c9f0fc790ca474bad337f0c224dc18c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (c != ' ')\n                sb.Append(c);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2cd1dffe7d14627968b5a01adf95781>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2cd1dffe7d14627968b5a01adf95781>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int ascii = word.ToCharArray().OrderBy(x
    => x).ToArray().Sum();\n            result += (char)(ascii + 32);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5701mpjy.cs(22,25): error CS1929: ''char[]'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n                result += c;\n            }\n
    \       }\n        result += word;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221231323fa3401082a01b04ba49cc7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221231323fa3401082a01b04ba49cc7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c + 1);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <261f015c42734172b52677d7053df0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <261f015c42734172b52677d7053df0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int ascii = 0;\n            foreach
    (char c in word)\n            {\n                ascii += (int)c;\n            }\n
    \           string newWord = word.Replace(word.ToCharArray().OrderBy(c => c).ToArray(),
    new string(word.ToCharArray().OrderBy(c => c).ToArray()));\n            result
    += newWord;\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwkj005f7.cs(27,43): error CS1503: Argument 1: cannot convert from ''char[]''
    to ''char''

    /tmp/tmpwkj005f7.cs(27,89): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            int ascii = (int)c;\n
    \           if (ascii < 65 || ascii > 90) {\n                word += c;\n            }\n
    \           else {\n                word += (char)(ascii - 64);\n            }\n
    \       }\n        foreach (char c in word) {\n            result += c;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfb395034a784c56a15741312cecf89e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfb395034a784c56a15741312cecf89e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    temp = \"\";\n        foreach (char c in s) {\n            int ascii = (int)c;\n
    \           if (ascii < 97) {\n                temp = temp + c;\n            }
    else if (ascii < 123) {\n                temp = temp + string.Format(\"{0}{1}\",
    (char)(ascii - 26), (char)((ascii - 26) + 26));\n            } else {\n                temp
    = temp + string.Format(\"{0}{1}\", (char)(ascii - 52), (char)((ascii - 52) + 52));\n
    \           }\n        }\n        result = temp;\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93e4fe203b6d416cb4be47f21be2620e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93e4fe203b6d416cb4be47f21be2620e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n            }
    else {\n                sb.Append(c.ToString());\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        StringBuilder
    sb = new StringBuilder();\n        foreach (char c in charArray) {\n            sb.Append(c);\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe64e2c9c82b472b859b350a9202cf6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe64e2c9c82b472b859b350a9202cf6c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = 0;\n            foreach
    (char c in word)\n            {\n                asciiValue += (int)c;\n            }\n
    \           string newWord = \"\";\n            while (asciiValue > 0)\n            {\n
    \               newWord += (char)asciiValue % 26;\n                asciiValue
    /= 26;\n            }\n            result += newWord;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f823c2baa4db41e4a15cbb8d16ec863b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f823c2baa4db41e4a15cbb8d16ec863b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            result += new string(word.OrderBy(c
    => c).ToArray());\n            result += \" \";\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d97beb4ce87a42eebcef282959639ea9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d97beb4ce87a42eebcef282959639ea9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiVal = Convert.ToInt32(word);\n
    \           string newWord = string.Empty;\n            while (asciiVal != 0)\n
    \           {\n                newWord += (char)asciiVal;\n                asciiVal--;\n
    \           }\n            result += newWord;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AntiShuffle
    (System.String s) [0x0001b] in <a8c1ae696655405aa910595905dee5ed>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <a8c1ae696655405aa910595905dee5ed>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AntiShuffle
    (System.String s) [0x0001b] in <a8c1ae696655405aa910595905dee5ed>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <a8c1ae696655405aa910595905dee5ed>:0 \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(AscW(c));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp93avvpdq.cs(21,30): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            result += new string(word.OrderBy(x
    => x).ToArray());\n            result += \" \";\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79ec15327b424dce947b7ebd7d55a239>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79ec15327b424dce947b7ebd7d55a239>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c + 1);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <261f015c42734172b52677d7053df0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <261f015c42734172b52677d7053df0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int max = 0;\n            foreach
    (char c in word)\n            {\n                max = Math.Max(max, (int)c);\n
    \           }\n            string newWord = \"\";\n            foreach (char c
    in word)\n            {\n                newWord += (char)((int)c + max);\n            }\n
    \           result += newWord + \" \";\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46984a5d0c9a456ab4ad383120a87886>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <46984a5d0c9a456ab4ad383120a87886>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] chars = s.ToCharArray();\n
    \       Array.Sort(chars);\n        foreach (char c in chars) {\n            result
    += c;\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <564b013ecd72449182f67872b1238a91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <564b013ecd72449182f67872b1238a91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = 0;\n            foreach
    (char c in word)\n            {\n                asciiValue += (int)c;\n            }\n
    \           string newWord = word.Replace(\" \", \"\");\n            string newWord2
    = \"\";\n            int asciiValue2 = 0;\n            foreach (char c in newWord)\n
    \           {\n                asciiValue2 += (int)c;\n            }\n            if
    (asciiValue > asciiValue2)\n            {\n                result += newWord;\n
    \           }\n            else\n            {\n                result += newWord2;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12249b901f8845609b37430c397e05aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12249b901f8845609b37430c397e05aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        StringBuilder
    sb = new StringBuilder();\n        foreach (char c in charArray) {\n            sb.Append(c);\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe64e2c9c82b472b859b350a9202cf6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe64e2c9c82b472b859b350a9202cf6c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int i = 0;\n            foreach
    (char c in word)\n            {\n                result += (char)(c + (i++ * 26));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a68254ca70e4542ba1dd67151f2c057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a68254ca70e4542ba1dd67151f2c057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(AsciiValue(c));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpexevagj5.cs(21,30): error CS0103: The name ''AsciiValue'' does not exist
    in the current context

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < chars.Length;
    i++) {\n            if (chars[i] == ' ') {\n                sb.Append(chars[i
    - 1]);\n                sb.Append(chars[i]);\n            } else {\n                sb.Append(chars[i]);\n
    \           }\n        }\n        return sb.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x00026]
    in <3a86ca8562274c04a0a1ca42051bddd6>:0 \n  at Problem.Main (System.String[] args)
    [0x00069] in <3a86ca8562274c04a0a1ca42051bddd6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.AntiShuffle (System.String s) [0x00026] in <3a86ca8562274c04a0a1ca42051bddd6>:0
    \n  at Problem.Main (System.String[] args) [0x00069] in <3a86ca8562274c04a0a1ca42051bddd6>:0
    \n"
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n            }
    else {\n                sb.Append(c.ToString());\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    temp = \"\";\n        foreach (char c in s) {\n            int ascii = (int)c;\n
    \           if (ascii < 65 || ascii > 90) {\n                temp = temp + c;\n
    \           }\n            else {\n                temp = temp + new string(new
    char[] { (char)ascii });\n            }\n        }\n        result = temp;\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f290746693e64fa585853717aa63f40b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f290746693e64fa585853717aa63f40b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n            }
    else {\n                sb.Append(c.ToString());\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            result += new string(word.OrderBy(x
    => x).ToArray());\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76b8ed6341d84ccb852848e76bb743bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76b8ed6341d84ccb852848e76bb743bf>:0
    \n"
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n                result += c;\n            }\n
    \       }\n        result += word;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221231323fa3401082a01b04ba49cc7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221231323fa3401082a01b04ba49cc7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(Math.Abs((int)c) + 1);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int i = 0;\n            foreach
    (char c in word)\n            {\n                result += (char)(c + (i++ * 26));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a68254ca70e4542ba1dd67151f2c057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a68254ca70e4542ba1dd67151f2c057>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiVal = word.ToCharArray().OrderBy(c
    => c).ToArray().Sum(c => c);\n            result += new string(word.ToCharArray().OrderBy(c
    => c).ToArray(), 0, asciiVal);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: startIndex\n  at System.String.Ctor (System.Char[] value, System.Int32 startIndex,
    System.Int32 length) [0x0003e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    System.String.CreateString (System.Char[] val, System.Int32 startIndex, System.Int32
    length) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at (wrapper managed-to-managed)
    System.String..ctor(char[],int,int)\n  at Problem.AntiShuffle (System.String s)
    [0x000a3] in <a6fc32a8ad9349de81f8c5f073d479ee>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <a6fc32a8ad9349de81f8c5f073d479ee>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be
    non-negative and less than the size of the collection.\nParameter name: startIndex\n
    \ at System.String.Ctor (System.Char[] value, System.Int32 startIndex, System.Int32
    length) [0x0003e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.CreateString
    (System.Char[] val, System.Int32 startIndex, System.Int32 length) [0x00000] in
    <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at (wrapper managed-to-managed) System.String..ctor(char[],int,int)\n
    \ at Problem.AntiShuffle (System.String s) [0x000a3] in <a6fc32a8ad9349de81f8c5f073d479ee>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a6fc32a8ad9349de81f8c5f073d479ee>:0
    \n"
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = 0;\n            foreach
    (char c in word)\n            {\n                asciiValue += (int)c;\n            }\n
    \           string newWord = word.Replace(\" \", string.Empty);\n            int
    newWordAsciiValue = 0;\n            foreach (char c in newWord)\n            {\n
    \               newWordAsciiValue += (int)c;\n            }\n            if (newWordAsciiValue
    > asciiValue)\n            {\n                result += newWord;\n            }\n
    \           else\n            {\n                result += word;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a15a50d09dc4135b9765470eab5be4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a15a50d09dc4135b9765470eab5be4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = 0;\n            foreach
    (char c in word)\n            {\n                asciiValue += (int)c;\n            }\n
    \           string newWord = word.Replace(\" \", string.Empty);\n            int
    newWordAscValue = 0;\n            foreach (char c in newWord)\n            {\n
    \               newWordAscValue += (int)c;\n            }\n            int newWordAscValue
    = newWordAscValue % 26;\n            string newWordChar = Convert.ToChar(newWordAscValue).ToString();\n
    \           result += newWordChar;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptob_ttm4.cs(33,17): error CS0128: A local variable or function named ''newWordAscValue''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = 0;\n            foreach
    (char c in word)\n            {\n                asciiValue += (int)c;\n            }\n
    \           string newWord = word.Replace(\" \", string.Empty);\n            int
    newAsciiValue = asciiValue;\n            while (newAsciiValue > 0)\n            {\n
    \               newAsciiValue /= 10;\n            }\n            result += newWord.Substring(0,
    newAsciiValue);\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ab0bc70f6054650bdaa4ff0928b52d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ab0bc70f6054650bdaa4ff0928b52d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    temp = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                temp = temp + c;\n            } else {\n                temp
    = temp + new string(Enumerable.Range(0, 26).Select(i => (char)(i + 65)).ToArray());\n
    \           }\n        }\n        foreach (char c in temp) {\n            result
    += c;\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9fb6328267ef4972af7db866f4b2136c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9fb6328267ef4972af7db866f4b2136c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int i = 0;\n            foreach
    (char c in word)\n            {\n                result += (char)(c + (i++ * 26));\n
    \           }\n            result += \" \";\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d6ed7890faa4beb90e3b16277e25328>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0d6ed7890faa4beb90e3b16277e25328>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = word.ToCharArray().Select(c
    => (int)c).ToArray().Max();\n            result += new string(new char[] { (char)asciiValue
    });\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67a328d47444f6bbd15ebc9a477b7da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c67a328d47444f6bbd15ebc9a477b7da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n            }
    else {\n                sb.Append(c.ToString());\n            }\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35fd1ea51e2e4a8e8e6e26f52f744d2c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int asciiValue = Convert.ToInt32(word);\n
    \           result += new string(new char[] { (char)asciiValue });\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in
    a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean
    overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AntiShuffle
    (System.String s) [0x0001b] in <fac027a2bb484969aa4b1f57a2d53bdf>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <fac027a2bb484969aa4b1f57a2d53bdf>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32 (System.String
    value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AntiShuffle
    (System.String s) [0x0001b] in <fac027a2bb484969aa4b1f57a2d53bdf>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <fac027a2bb484969aa4b1f57a2d53bdf>:0 \n"
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(Math.Abs((int)c) + 1);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int i = 0;\n            foreach
    (char c in word)\n            {\n                result += (char)(c + (i++ * 26));\n
    \           }\n            result += ' ';\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ecdc69f43835407f9343801fb7a304d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ecdc69f43835407f9343801fb7a304d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (string word in s.Split(' '))\n        {\n            int index = word.IndexOfAny(new
    char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
    'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' });\n            if
    (index != -1)\n            {\n                result += word.Substring(0, index)
    + word.Substring(index + 1);\n            }\n            else\n            {\n
    \               result += word;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08d34710464049ccbbe38e4503077477>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08d34710464049ccbbe38e4503077477>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            } else {\n                result +=
    word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f73191f8f44f3f9cc14d514b1ffa9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f73191f8f44f3f9cc14d514b1ffa9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n
    \       return new string(arr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c9f0fc790ca474bad337f0c224dc18c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c9f0fc790ca474bad337f0c224dc18c>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            }\n            else {\n                result
    += word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d805c18c0ef84aaba373449c7c3411e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)
    {\n            if (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c91b68e0484b9a8b1e2e2f72600acd>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        string
    word = \"\";\n        foreach (char c in s) {\n            if (char.IsLetter(c))
    {\n                word += c;\n            } else {\n                result +=
    word;\n                word = \"\";\n            }\n        }\n        result
    += word;\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f73191f8f44f3f9cc14d514b1ffa9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f73191f8f44f3f9cc14d514b1ffa9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += c;\n        }\n        char[] charArray
    = result.ToCharArray();\n        Array.Sort(charArray);\n        string result
    = new string(charArray);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbo_gcxoc.cs(25,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(Math.Abs((int)c) + 1);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 32);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c5053f02b59459fa0a8bb02747949ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(Math.Abs((int)c) + 1);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50d6608242104b2baef95df6495b96c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800473
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(AscW(c));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp93avvpdq.cs(21,30): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        foreach
    (char c in s) {\n            result += (char)(c ^ 0x20);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <397cec945ca64bfe9c2e0fea501892d6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f619b3563ff4da782c8ce53ad20b907>:0
    \n"
  stdout: ''
  timestamp: 1659800472
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // anti_shuffle('Hi') returns 'Hi'\n    // anti_shuffle('hello') returns 'ehllo'\n
    \   // anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'\n    public static
    string AntiShuffle(string s) {\n        string result = \"\";\n        char[]
    chars = s.ToCharArray();\n        Array.Sort(chars);\n        foreach (char c
    in chars) {\n            result += c;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1318246b7511477c84b7e3d6247165c1>:0
    \n"
  stdout: ''
  timestamp: 1659800472

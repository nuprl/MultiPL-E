language: cs
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long n = a;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a572d94e9114880911bec0de524fcb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a572d94e9114880911bec0de524fcb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a == 0) return true;\n        if (a\
    \ > 0 && a < Math.Pow(3,3)) return true;\n        if (a > Math.Pow(3,3) && a <\
    \ Math.Pow(5,5)) return true;\n        if (a > Math.Pow(5,5) && a < Math.Pow(7,7))\
    \ return true;\n        if (a > Math.Pow(7,7) && a < Math.Pow(9,9)) return true;\n\
    \        if (a > Math.Pow(9,9) && a < Math.Pow(11,11)) return true;\n        if\
    \ (a > Math.Pow(11,11) && a < Math.Pow(13,13)) return true;\n        if (a > Math.Pow(13,13)\
    \ && a < Math.Pow(15,15)) return true;\n        if (a > Math.Pow(15,15) && a <\
    \ Math.Pow(17,17)) return true;\n        if (a > Math.Pow(17,17) && a < Math.Pow(19,19))\
    \ return true;\n        if (a > Math.Pow(19,19) && a < Math.Pow(21,21) return\
    \ true;\n        if (a > Math.Pow(21,21) && a < Math.Pow(23,23)) return true;\n\
    \        if (a > Math.Pow(23,23) && a < Math.Pow(25,25)) return true;\n      \
    \  if (a > Math.Pow(25,25) && a < Math.Pow(27,27)) return true;\n        if (a\
    \ > Math.Pow(27,27) && a < Math.Pow(29,29)) return true;\n        if (a > Math.Pow(29,29)\
    \ && a < Math.Pow(31,31)) return true;\n        if (a > Math.Pow(31,31) && a <\
    \ Math.Pow(33,33)) return true;\n        if (a > Math.Pow(33,33) && a < Math.Pow(35,35))\
    \ return true;\n        if (a > Math.Pow(35,35) && a < Math.Pow(37,37)) return\
    \ true;\n        if (a > Math.Pow(37,37) && a < Math.Pow(39,39)) return true;\n\
    \        if (a > Math.Pow(39,39) && a < Math.Pow(41,41)) return true;\n      \
    \  if (a > Math.Pow(41,41) && a < Math.Pow(43,43)) return true;\n        if (a\
    \ > Math.Pow(43,43) && a < Math.Pow(45,45)) return true;\n        if (a > Math.Pow(45,45)\
    \ && a < Math.Pow(47,47)) return true;\n        if (a > Math.Pow(47,47) && a <\
    \ Math.Pow(49,49)) return true;\n        if (a > Math.Pow(49,49) && a < Math.Pow(51,51))\
    \ return true;\n        if (a > Math.Pow(51,51) && a < Math.Pow(53,53)) return\
    \ true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7hthghyg.cs(30,56): error CS1026: ) expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long square =\
    \ 1;\n        long cubes = 1;\n        long squares = 1;\n        long cubess\
    \ = 0;\n        long squaress = 0;\n        long cubesss = 1;\n        long squaresss\
    \ = 1;\n        long cubessss = 1;\n        long cubesssss = 1;\n        long\
    \ cubessssss = 1;\n        long cubesssssss = 1;\n        long cubessssssss =\
    \ 1;\n        long cubesssssssss = 1;\n        long cubessssssssss = 1;\n    \
    \    long cubesssssssssss = 1;\n        long cubessssssssssss = 1;\n        long\
    \ cubesssssssssssss = 1;\n        long cubessssssssssssss = 1;\n        long cubesssssssssssssss\
    \ = 1;\n        long cubessssssssssssssss = 1;\n        long cubesssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssss = 1;\n        long cubesssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssss = 1;\n        long cubesssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssssssssssss = 1;\n        long cubesssssssssssssssssssssssssssssssss\
    \ = 1;\n        long cubessssssssssssssssssssssssssssssssssss = 1;\n        long\
    \ cubessssssssssssss\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyly9rf43.cs(59,32): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long A = z;\n        long B = A;\n        long C = B;\n\
    \        long D = C;\n        long E = D;\n        long F = E;\n        long G\
    \ = F;\n        long H = G;\n        long I = H;\n        long J = I;\n      \
    \  long K = J;\n        long L = K;\n        long M = L;\n        long N = M;\n\
    \        long O = N;\n        long P = O;\n        long Q = Q;\n        long R\
    \ = P;\n        long S = R;\n        long T = S;\n        long U = T;\n      \
    \  long V = U;\n        long W = V;\n        long X = W;\n        long Y = X;\n\
    \        long Z = Y;\n        long AA = Z;\n        long AB = AA;\n        long\
    \ AC = AB;\n        long AD = AC;\n        long AE = AD;\n        long AF = AE;\n\
    \        long AG = AF;\n        long AH = AG;\n        long AI = AH;\n       \
    \ long AJ = AI;\n        long AK = AJ;\n        long AL = AK;\n        long AM\
    \ = AL;\n        long AN = AM;\n        long AO = AN;\n        long AP = AO;\n\
    \        long AQ = AP;\n        long AR = AQ;\n        long AS = AR;\n       \
    \ long AT = AS;\n        long AU = AT;\n        long AV = AU;\n        long AW\
    \ = AV;\n        long AX = AW;\n        long AY = AX;\n        long AZ = AY;\n\
    \        long BA = AZ;\n        long BB = BA;\n        long BC = BB;\n       \
    \ long BD = BC;\n        long BE = BD;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7rke2hoy.cs(61,18): error CS0165: Use of unassigned local variable ''Q''

    /tmp/tmp7rke2hoy.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long bb = a;\n        long cc =\
    \ a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n     \
    \   long gg = a;\n        long hh = a;\n        long ii = a;\n        long jj\
    \ = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n   \
    \     long nn = a;\n        long oo = a;\n        long pp = a;\n        long qq\
    \ = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n   \
    \     long uu = a;\n        long vv = a;\n        long ww = a;\n        long xx\
    \ = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n  \
    \      long bbb = a;\n        long ccc = a;\n        long ddd = a;\n        long\
    \ eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh = a;\n\
    \        long iii = a;\n        long jjj = a;\n        long kkk = a;\n       \
    \ long lll = a;\n        long mmm = a;\n        long nnn = a;\n        long ooo\
    \ = a;\n        long ppp = a;\n        long qqq = a;\n        long rrr = a;\n\
    \        long sss = a;\n        long tt = a;\n        long uuu = a;\n        long\
    \ vv = a;\n        long ww = a;\n        long xx = a;\n        long yy = a;\n\
    \        long zz = a;\n        long aaa = a;\n        long bbb = a;\n        long\
    \ ccc = a;\n        long ddd = a;\n        long eee = a;\n        long fff = a;\n\
    \        long ggg = a;\n        long hhh = a;\n        long iii = a;\n       \
    \ long jjj = a;\n        long kkk = a;\n        long lll = a;\n        long mm\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprwvfwbx3.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            n = n / 3;\n            cube = cube * 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67f0d8a51bb94ec7b80a53ffd6dc223e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67f0d8a51bb94ec7b80a53ffd6dc223e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return (a * a * a) == 1;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d425476ee851469f8f5de8821a42e2be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d425476ee851469f8f5de8821a42e2be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long bb = a;\n        long cc =\
    \ a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n     \
    \   long gg = a;\n        long hh = a;\n        long ii = a;\n        long jj\
    \ = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n   \
    \     long nn = a;\n        long oo = a;\n        long pp = a;\n        long qq\
    \ = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n   \
    \     long uu = a;\n        long vv = a;\n        long ww = a;\n        long xx\
    \ = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n  \
    \      long bbb = a;\n        long ccc = a;\n        long ddd = a;\n        long\
    \ eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh = a;\n\
    \        long iii = a;\n        long jjj = a;\n        long kkk = a;\n       \
    \ long lll = a;\n        long mmm = a;\n        long nnn = a;\n        long ooo\
    \ = a;\n        long ppp = a;\n        long qqq = a;\n        long rrr = a;\n\
    \        long sss = a;\n        long tt = a;\n        long uuu = a;\n        long\
    \ vvv = a;\n        long www = a;\n        long xx = a;\n        long yy = a;\n\
    \        long zzz = a;\n        long aaaa = a;\n        long bbbb = a;\n     \
    \   long cccc = a;\n        long ddd = a;\n        long eee = a;\n        long\
    \ ffff = a;\n        long gggg = a;\n        long hhhh = a;\n        long iiii\
    \ = a;\n        long jjjj = a;\n        long kkkk = a;\n        long llll\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_yw513ak.cs(108,18): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long A = a;\n        long B = b;\n        long C = c *\
    \ c;\n        long D = d * d;\n        long E = e * e;\n        long F = f * f;\n\
    \        long G = g * g;\n        long H = h * h;\n        long I = i * i;\n \
    \       long J = j * j;\n        long K = k * k;\n        long L = l * l;\n  \
    \      long M = m + m;\n        long N = n * n;\n        long O = o * o;\n   \
    \     long P = p * p;\n        long Q = q * q;\n        long R = r * r;\n    \
    \    long S = s * s;\n        long T = t * t;\n        long U = u * u;\n     \
    \   long V = v * v;\n        long W = w * w;\n        long X = x * x;\n      \
    \  long Y = y * y;\n        long Z = z * z;\n        long aa = a * A;\n      \
    \  long bb = b * B;\n        long cc = c * C;\n        long dd = d * D;\n    \
    \    long ee = e * E;\n        long ff = f * F;\n        long gg = g * G;\n  \
    \      long hh = h * H;\n        long ii = i * I;\n        long jj = j * J;\n\
    \        long kk = k * K;\n        long ll = l * L;\n        long mm = m + M;\n\
    \        long nn = n * N;\n        long oo = o * O;\n        long pp = p * P;\n\
    \        long qq = q * Q;\n        long rr = r * R;\n        long ss = s * S;\n\
    \        long tt = t * T;\n        long uu = u * U;\n        long vv = v * V;\n\
    \        long ww = w * W;\n        long xx = x * X;\n        long y\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp57sx4dyc.cs(95,15): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long z = b;\n        long a = b;\n        long b = b;\n        long c\
    \ = b;\n        long d = b;\n        long e = b;\n        long f = b;\n      \
    \  long g = b;\n        long h = b;\n        long i = b;\n        long j = b;\n\
    \        long k = b;\n        long l = b;\n        long m = b;\n        long n\
    \ = b;\n        long o = b;\n        long p = b;\n        long q = b;\n      \
    \  long r = b;\n        long s = b;\n        long t = b;\n        long u = b;\n\
    \        long v = b;\n        long w = b;\n        long x = b;\n        long y\
    \ = b;\n        long z = b;\n        long a = b;\n        long b = b;\n      \
    \  long c = b;\n        long d = b;\n        long e = b;\n        long f = b;\n\
    \        long g = b;\n        long h = b;\n        long i = b;\n        long j\
    \ = b;\n        long k = b;\n        long l = b;\n        long m = b;\n      \
    \  long n = b;\n        long o = b;\n        long p = b;\n        long q = b;\n\
    \        long r = b;\n        long s = b;\n        long t = b;\n        long u\
    \ = b;\n        long v = b;\n        long w = b;\n        long x = b;\n      \
    \  long y = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi32dz76v.cs(121,17): error CS1525: Invalid expression term ''}''

    /tmp/tmpi32dz76v.cs(121,17): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long cube2 = 1;\n\
    \        long cube3 = 1;\n        long cube4 = 1;\n        long cube5 = 1;\n \
    \       long cube6 = 1;\n        long cube7 = 1;\n        long cube8 = 1;\n  \
    \      long cube9 = 1;\n        long cube10 = 1;\n        long cube11 = 1;\n \
    \       long cube12 = 1;\n        long cube13 = 1;\n        long cube14 = 1;\n\
    \        long cube15 = 1;\n        long cube16 = 1;\n        long cube17 = 1;\n\
    \        long cube18 = 1;\n        long cube19 = 1;\n        long cube20 = 1;\n\
    \        long cube21 = 1;\n        long cube22 = 1;\n        long cube23 = 1;\n\
    \        long cube24 = 1;\n        long cube25 = 1;\n        long cube26 = 1;\n\
    \        long cube27 = 1;\n        long cube28 = 1;\n        long cube29 = 1;\n\
    \        long cube30 = 1;\n        long cube31 = 1;\n        long cube32 = 1;\n\
    \        long cube33 = 1;\n        long cube34 = 1;\n        long cube35 = 1;\n\
    \        long cube36 = 1;\n        long cube37 = 1;\n        long cube38 = 1;\n\
    \        long cube39 = 1;\n        long cube40 = 1;\n        long cube41 = 1;\n\
    \        long cube42 = 1;\n        long cube43 = 1;\n        long cube44 = 1;\n\
    \        long cube45 = 1;\n        long cube46 = 1;\n        long cube47 = 1;\n\
    \        long cube48 = 1;\n        long cube49 = 1;\n        long cube50 = 1;\n\
    \        long cube51 = 1;\n        long cube52 = 1;\n        long cube53 = 1;\n\
    \        long cube54 = 1;\n        long cube55 = 1;\n        long cube56 = 1;\n\
    \        long cube57 = 1;\n        long cube58 = 1;\n        long cube59 = 1;\n\
    \        long cube60 = 1;\n        long cube61 = 1;\n        long cube62 = 1;\n\
    \        long cube63 = 1;\n        long cube64 = 1;\n        long cube65 = 1;\n\
    \        long cube66 = 1;\n        long cube67 = 1;\n        long cube68 = 1;\n\
    \        long cube69 = 1;\n        long cube70 = 1;\n        long cube71 = 1;\n\
    \        long cube72 = 1;\n        long cube73 = 1;\n        long cube74 = 1;\n\
    \        long cube75 = 1;\n        long cube76 = 1;\n        long cube77 = 1;\n\
    \        long cube78 = 1;\n        long cube79 = 1;\n        long cube80 = 1;\n\
    \        long cube81 = 1;\n        long cube82 = 1;\n        long cube83 = 1;\n\
    \        long cube84 = 1;\n        long \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp527mtg6.cs(104,13): error CS1001: Identifier expected

    /tmp/tmpp527mtg6.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n   \
    \     long bu = 1;\n        long bv = 1;\n        long bw = 1;\n        long bx\
    \ = 1;\n        long by = 1;\n        long bz = 1;\n        long ca = 1;\n   \
    \     long cb = 1;\n        long cc = 1;\n        long cd = 1;\n        long ce\
    \ = 1;\n        long cf = 1;\n        long cg = 1;\n        long ch = 1;\n   \
    \     long ci = 1;\n        long cj = 1;\n        long ck = 1;\n        long cl\
    \ = 1;\n        long cm = 1;\n        long cn = 1;\n        long co = 1;\n   \
    \     long cp = 1;\n        long cq = 1;\n        long cr = 1;\n        long cs\
    \ = 1;\n        long ct = 1;\n        long cu = 1;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmmsbdzc0.cs(65,14): error CS1001: Identifier expected

    /tmp/tmpmmsbdzc0.cs(65,14): error CS1002: ; expected

    /tmp/tmpmmsbdzc0.cs(65,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpmmsbdzc0.cs(65,17): error CS1031: Type expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = a * a * a;\n        if (cube\
    \ == a)\n            return true;\n        else\n            return false;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8649f8f058814051976b514fab9ec30e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8649f8f058814051976b514fab9ec30e>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long AO = a;\n        long AP = a;\n        long\
    \ AQ = a;\n        long AR = a;\n        long AS = a;\n        long AT = a;\n\
    \        long AU = a;\n        long AV = a;\n        long AW = a;\n        long\
    \ AX = a;\n        long AY = a;\n        long AZ = a;\n        long BA = a;\n\
    \        long BB = a;\n        long BC = a;\n        long BD = a;\n        long\
    \ BE = a;\n        long BF = a;\n        long BG = a;\n        long BH = a;\n\
    \        long BI = a;\n        long BJ = a;\n        long BK = a;\n        long\
    \ BL = a;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzw1qhwhr.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long ao = a;\n        long bo = a;\n        long\
    \ co = a;\n        long do = a;\n        long eo = a;\n        long fo = a;\n\
    \        long go = a;\n        long ho = a;\n        long io = a;\n        long\
    \ jo = a;\n        long ko = a;\n        long lo = a;\n        long mo = a;\n\
    \        long no = a;\n        long po = a;\n        long qo = a;\n        long\
    \ ro = a;\n        long so = a;\n        long to = a;\n        long uo = a;\n\
    \        long vo = a;\n        long wo = a;\n        long xo = a;\n        long\
    \ yo = a;\n        long \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpesejp2hf.cs(88,14): error CS1001: Identifier expected

    /tmp/tmpesejp2hf.cs(88,14): error CS1002: ; expected

    /tmp/tmpesejp2hf.cs(88,17): error CS1525: Invalid expression term ''=''

    /tmp/tmpesejp2hf.cs(88,21): error CS1003: Syntax error, ''while'' expected

    /tmp/tmpesejp2hf.cs(88,21): error CS1003: Syntax error, ''('' expected

    /tmp/tmpesejp2hf.cs(89,9): error CS1525: Invalid expression term ''long''

    /tmp/tmpesejp2hf.cs(89,14): error CS1026: ) expected

    /tmp/tmpesejp2hf.cs(89,14): error CS1002: ; expected

    /tmp/tmpesejp2hf.cs(109,13): error CS1001: Identifier expected

    /tmp/tmpesejp2hf.cs(109,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long aa = a;\n        long bb = a;\n        long\
    \ cc = a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n\
    \        long gg = a;\n        long hh = a;\n        long ii = a;\n        long\
    \ jj = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n\
    \        long nn = a;\n        long oo = a;\n        long pp = a;\n        long\
    \ qq = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n\
    \        long uu = a;\n        long vv = a;\n        long ww = a;\n        long\
    \ xx = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n\
    \        long bbb = a;\n        long ccc = a;\n        long ddd = a;\n       \
    \ long eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh\
    \ = a;\n        long iii = a;\n        long jjj = a;\n        long kkk = a;\n\
    \        long lll = a;\n        long mmm = a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmperk98y09.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n   \
    \     long bu = 1;\n        long bv = 1;\n        long bw = 1;\n        long bx\
    \ = 1;\n        long by = 1;\n        long bz = 1;\n        long ca = 1;\n   \
    \     long cb = 1;\n        long cc = 1;\n        long cd = 1;\n        long ce\
    \ = 1;\n        long cf = 1;\n        long cg = 1;\n        long ch = 1;\n   \
    \     long ci = 1;\n        long cj = 1;\n        long ck = 1;\n        long cl\
    \ = 1;\n        long cm = 1;\n        long cn = 1;\n        long co = 1;\n   \
    \     long cp = 1;\n        long cq = 1;\n        long cr = 1;\n        long cs\
    \ = 1;\n        long ct = 1;\n        long cu = 1;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmmsbdzc0.cs(65,14): error CS1001: Identifier expected

    /tmp/tmpmmsbdzc0.cs(65,14): error CS1002: ; expected

    /tmp/tmpmmsbdzc0.cs(65,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpmmsbdzc0.cs(65,17): error CS1031: Type expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long aa = 1;\n        long ab = 1;\n        long\
    \ ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n\
    \        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long\
    \ aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n\
    \        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long\
    \ aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n\
    \        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long\
    \ ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n\
    \        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long\
    \ be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n\
    \        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long\
    \ bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n\
    \        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long\
    \ bs = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprwipgpiy.cs(89,14): error CS1001: Identifier expected

    /tmp/tmprwipgpiy.cs(89,14): error CS1002: ; expected

    /tmp/tmprwipgpiy.cs(89,14): error CS1525: Invalid expression term ''as''

    /tmp/tmprwipgpiy.cs(89,17): error CS1031: Type expected

    /tmp/tmprwipgpiy.cs(120,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a > 180)\n            return false;\n        if (a == 0)\n      \
    \      return true;\n        long b = a / 3;\n        long c = a % 3;\n      \
    \  if (b == c)\n            return true;\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c245f136e9d04de58d8b2da7d14cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c245f136e9d04de58d8b2da7d14cb3fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long aa = 1;\n        long ab = 1;\n        long\
    \ ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n\
    \        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long\
    \ aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n\
    \        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long\
    \ aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n\
    \        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long\
    \ ax = 1;\n        long ay = 1;\n        long az = 1;\n        long aaa = 1;\n\
    \        long aab = 1;\n        long aac = 1;\n        long aad = 1;\n       \
    \ long aae = 1;\n        long aaf = 1;\n        long aag = 1;\n        long aah\
    \ = 1;\n        long aai = 1;\n        long aaj = 1;\n        long aak = 1;\n\
    \        long aal = 1;\n        long aam = 1;\n        long aan = 1;\n       \
    \ long aoa = 1;\n        long aap = 1;\n        long aqa = 1;\n        long aar\
    \ = 1;\n        long asa = 1;\n        long ata = 1;\n        long aua = 1;\n\
    \        long ava\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpotqqbs4i.cs(89,14): error CS1001: Identifier expected

    /tmp/tmpotqqbs4i.cs(89,14): error CS1002: ; expected

    /tmp/tmpotqqbs4i.cs(89,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpotqqbs4i.cs(89,17): error CS1031: Type expected

    /tmp/tmpotqqbs4i.cs(118,17): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long n = a;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a572d94e9114880911bec0de524fcb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a572d94e9114880911bec0de524fcb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return Math.Pow(a, 3) == a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \n"
  stdout: ''
  timestamp: 1659794897
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long b = 1;\n        while (a != 0) {\n            long c = a % b;\n\
    \            if (c != 0)\n                return false;\n            a /= b;\n\
    \            b *= b;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659794901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n - 1;\n\
    \        }\n        if (cube == a)\n            return true;\n        else\n \
    \           return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f95380ca3a7141e89455bf03ecc9a867>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f95380ca3a7141e89455bf03ecc9a867>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n      \
    \  long v = u;\n        long w = v;\n        long x = w;\n        long y = x;\n\
    \        long z = y;\n        long a = z;\n        long b = a;\n        long c\
    \ = b;\n        long d = c;\n        long e = d;\n        long f = e;\n      \
    \  long g = f;\n        long h = g;\n        long i = h;\n        long j = i;\n\
    \        long k = j;\n        long l = k;\n        long m = l;\n        long n\
    \ = m;\n        long o = n;\n        long p = o;\n        long q = p;\n      \
    \  long r = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\
    \        long v = u;\n        long w = v;\n        long x = w;\n        long y\
    \ = x;\n        long z = y;\n        long a = z;\n        long b = a;\n      \
    \  long c = b;\n        long d = c;\n        long e = d;\n        long f = e;\n\
    \        long g = f;\n        long h = g;\n        long i = h;\n        long j\
    \ = i;\n        long k = j;\n        long l = k;\n        long m = l;\n      \
    \  long n = m;\n        long o = n;\n        long p = o;\n        long q = p;\n\
    \        long r = q;\n        long s = r;\n        long t = s;\n        long u\
    \ = t;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5cjb2oey.cs(20,18): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmp5cjb2oey.cs(45,14): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp5cjb2oey.cs(46,14): error CS0128: A local variable or function named ''b''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(47,14): error CS0128: A local variable or function named ''c''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(48,14): error CS0128: A local variable or function named ''d''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(49,14): error CS0128: A local variable or function named ''e''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(50,14): error CS0128: A local variable or function named ''f''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(51,14): error CS0128: A local variable or function named ''g''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(52,14): error CS0128: A local variable or function named ''h''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(53,14): error CS0128: A local variable or function named ''i''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(54,14): error CS0128: A local variable or function named ''j''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(55,14): error CS0128: A local variable or function named ''k''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(56,14): error CS0128: A local variable or function named ''l''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(57,14): error CS0128: A local variable or function named ''m''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(58,14): error CS0128: A local variable or function named ''n''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(59,14): error CS0128: A local variable or function named ''o''
    is already defined in this scope

    /tmp/tmp5cjb2oey.cs(60,14): error CS0128'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long AO = a;\n        long AP = a;\n        long\
    \ AQ = a;\n        long AR = a;\n        long AS = a;\n        long AT = a;\n\
    \        long AU = a;\n        long AV = a;\n        long AW = a;\n        long\
    \ AX = a;\n        long AY = a;\n        long AZ = a;\n        long BA = a;\n\
    \        long BB = a;\n        long BC = a;\n        long BD = a;\n        long\
    \ BE = a;\n        long BF = a;\n        long BG = a;\n        long BH = a;\n\
    \        long BI = a;\n        long BJ = a;\n        long BK = a;\n        long\
    \ BL = a;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzw1qhwhr.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long aa = a;\n        long bb = a;\n        long cc =\
    \ a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n     \
    \   long gg = a;\n        long hh = a;\n        long ii = a;\n        long jj\
    \ = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n   \
    \     long nn = a;\n        long oo = a;\n        long pp = a;\n        long qq\
    \ = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n   \
    \     long uu = a;\n        long vv = a;\n        long ww = a;\n        long xx\
    \ = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n  \
    \      long bbb = a;\n        long ccc = a;\n        long ddd = a;\n        long\
    \ eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh = a;\n\
    \        long iii = a;\n        long jjj = a;\n        long kkk = a;\n       \
    \ long lll = a;\n        long mmm = a;\n        long nnn = a;\n        long ooo\
    \ = a;\n        long ppp = a;\n        long qqq = a;\n        long rrr = a;\n\
    \        long sss = a;\n        long ttt = a;\n        long uuu = a;\n       \
    \ long vvv = a;\n        long www = a;\n        long xx = a;\n        long yy\
    \ = a;\n        long zzz = a;\n        long aaaa = a;\n        long bbbb = a;\n\
    \        long cccc = a;\n        long dddd = 0;\n        long eeee = 0;\n    \
    \    long ffff = 0;\n        long gggg = 0;\n        long hhhh = 0;\n        long\
    \ iiii = 0;\n        long jjjj = 0;\n        long kkkk = 0;\n        long llll\
    \ = 0;\n        long mmmm = 0;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcwcr6gxe.cs(94,14): error CS0128: A local variable or function named ''xx''
    is already defined in this scope

    /tmp/tmpcwcr6gxe.cs(95,14): error CS0128: A local variable or function named ''yy''
    is already defined in this scope

    /tmp/tmpcwcr6gxe.cs(100,14): warning CS0219: The variable ''dddd'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(101,14): warning CS0219: The variable ''eeee'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(102,14): warning CS0219: The variable ''ffff'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(103,14): warning CS0219: The variable ''gggg'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(104,14): warning CS0219: The variable ''hhhh'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(105,14): warning CS0219: The variable ''iiii'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(106,14): warning CS0219: The variable ''jjjj'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(107,14): warning CS0219: The variable ''kkkk'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(108,14): warning CS0219: The variable ''llll'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(109,14): warning CS0219: The variable ''mmmm'' is assigned
    but its value is never used

    /tmp/tmpcwcr6gxe.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long AO = a;\n        long AP = a;\n        long\
    \ AQ = a;\n        long AR = a;\n        long AS = a;\n        long AT = a;\n\
    \        long AU = a;\n        long AV = a;\n        long AW = a;\n        long\
    \ AX = a;\n        long AY = a;\n        long AZ = a;\n        long BA = a;\n\
    \        long BB = a;\n        long BC = a;\n        long BD = a;\n        long\
    \ BE = a;\n        long BF = a;\n        long BG = a;\n        long BH = a;\n\
    \        long BI = a;\n        long BJ = a;\n        long BK = a;\n        long\
    \ BL = a;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzw1qhwhr.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long aa = z;\n        long ab = aa;\n        long ac =\
    \ ab;\n        long ad = ac;\n        long ae = ad;\n        long af = ae;\n \
    \       long ag = af;\n        long ah = ag;\n        long ai = ah;\n        long\
    \ aj = ai;\n        long ak = aj;\n        long al = ak;\n        long am = al;\n\
    \        long an = am;\n        long ao = an;\n        long ap = ao;\n       \
    \ long aq = ap;\n        long ar = aq;\n        long as = ar;\n        long at\
    \ = as;\n        long au = at;\n        long av = au;\n        long aw = av;\n\
    \        long ax = aw;\n        long ay = ax;\n        long az = ay;\n       \
    \ long ba = az;\n        long bb = ba;\n        long bc = bb;\n        long bd\
    \ = bc;\n        long be = bd;\n        long bf = be;\n        long bg = bf;\n\
    \        long bh = bg;\n        long bi = bf;\n        long bj = bi;\n       \
    \ long bk = bj;\n        long bl = bj;\n        long bm = bl;\n        long bn\
    \ = bm;\n        long bo = bn;\n        long bp = bo;\n        long bq = bp;\n\
    \        long br = bq;\n        long bs = br;\n        long bt = bs;\n       \
    \ long bu = bt;\n        long bv = bu;\n        long bw = bv;\n        long bx\
    \ = bw;\n        long by = bx;\n        long bz = by;\n        long ca = bz;\n\
    \        long cb = ca;\n        long cc = cb;\n        long c\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcuwmddjb.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpcuwmddjb.cs(63,14): error CS1002: ; expected

    /tmp/tmpcuwmddjb.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpcuwmddjb.cs(63,17): error CS1031: Type expected

    /tmp/tmpcuwmddjb.cs(64,19): error CS1525: Invalid expression term ''as''

    /tmp/tmpcuwmddjb.cs(64,21): error CS1031: Type expected

    /tmp/tmpcuwmddjb.cs(100,15): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = a * a * a;\n        return\
    \ cube == a || cube == -a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46778a33cb41470f809aee906b3f5bc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46778a33cb41470f809aee906b3f5bc0>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long n = a;\n\
    \        long cube_pow = 1;\n        long cube_pow_pow = 1;\n        long cube_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow = 1;\n        long cube_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n     \
    \   long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long cube_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n        long \n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5qy90sk6.cs(51,13): error CS1001: Identifier expected

    /tmp/tmp5qy90sk6.cs(51,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return (a*a*a*a == 1);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aeef07fc0794002a1aaadcbfd051ff3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9aeef07fc0794002a1aaadcbfd051ff3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long aa = z;\n        long ab = aa;\n        long ac =\
    \ ab;\n        long ad = ac;\n        long ae = ad;\n        long af = ae;\n \
    \       long ag = af;\n        long ah = ag;\n        long ai = ah;\n        long\
    \ aj = ai;\n        long ak = aj;\n        long al = ak;\n        long am = al;\n\
    \        long an = am;\n        long ao = an;\n        long ap = ao;\n       \
    \ long aq = ap;\n        long ar = aq;\n        long as = ar;\n        long at\
    \ = as;\n        long au = at;\n        long av = au;\n        long aw = av;\n\
    \        long ax = aw;\n        long ay = ax;\n        long az = ay;\n       \
    \ long ba = az;\n        long bb = ba;\n        long bc = bb;\n        long bd\
    \ = bc;\n        long be = bd;\n        long bf = be;\n        long bg = bf;\n\
    \        long bh = bg;\n        long bi = bf;\n        long bj = bi;\n       \
    \ long bk = bj;\n        long bl = bj;\n        long bm = bl;\n        long bn\
    \ = bm;\n        long bo = bm;\n        long bp = bo;\n        long bq = bp;\n\
    \        long br = bq;\n        long bs = br;\n        long bt = bs;\n       \
    \ long bu = bt;\n        long bv = bu;\n        long bw = bv;\n        long bx\
    \ = bw;\n        long by = bx;\n        long bz = by;\n        long ca = bz;\n\
    \        long cb = ca;\n        long cc = cb;\n        long c\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyplgtyab.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpyplgtyab.cs(63,14): error CS1002: ; expected

    /tmp/tmpyplgtyab.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpyplgtyab.cs(63,17): error CS1031: Type expected

    /tmp/tmpyplgtyab.cs(64,19): error CS1525: Invalid expression term ''as''

    /tmp/tmpyplgtyab.cs(64,21): error CS1031: Type expected

    /tmp/tmpyplgtyab.cs(100,15): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return (a * a * a * a) == 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd72a1aafb1e40d5a629c41ace8e63d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd72a1aafb1e40d5a629c41ace8e63d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long aa = 1;\n        long bb = 1;\n        long\
    \ cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n\
    \        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long\
    \ jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n\
    \        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long\
    \ qq = 1;\n        long rr = 1;\n        long ss = 0;\n        long tt = 1;\n\
    \        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long\
    \ xx = 0;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n\
    \        long bbb = 1;\n        long ccc = 1;\n        long dd = 1;\n        long\
    \ eee = 1;\n        long fff = 0;\n        long ggg = 1;\n        long hhh = 1;\n\
    \        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n       \
    \ long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo\
    \ = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n\
    \        long sss = 1;\n        long ttt = 1;\n        long uuu\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpow5cueo_.cs(117,17): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return false;\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps3hnhlj_.cs(26,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(27,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(28,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(29,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(30,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(31,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(32,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(33,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(34,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(35,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(36,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(37,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(38,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(39,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(40,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(41,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(42,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(43,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmps3hnhlj_.cs(44,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = a * a * a;\n        return\
    \ cube == a || cube == -a;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46778a33cb41470f809aee906b3f5bc0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46778a33cb41470f809aee906b3f5bc0>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return Iscube(a / 3) * Iscube(a / 3) * Iscube(a / 3) == a;\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo9uwl8l0.cs(25,20): error CS0019: Operator ''*'' cannot be applied to
    operands of type ''bool'' and ''bool''

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return Iscube(a - 1) && Iscube(a - 1) && Iscube(a - 1);\n        return false;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7ef528b12b4a09851e33c2739d22f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e7ef528b12b4a09851e33c2739d22f8>:0 \n"
  stdout: None
  timestamp: 1659794902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long n = a;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n - 1;\n\
    \        }\n        if (cube == a)\n            return true;\n        else\n \
    \           return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4dfda14863694417b8cb8922f3750e4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4dfda14863694417b8cb8922f3750e4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a == 0)\n            return true;\n\
    \        if (a < 0)\n            return false;\n        long b = 1;\n        while\
    \ (a >= b) {\n            if (a % b == 0)\n                return false;\n   \
    \         b *= b;\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd25b694186942a1b9638a9ba4e876ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd25b694186942a1b9638a9ba4e876ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long bb = a;\n        long cc =\
    \ a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n     \
    \   long gg = a;\n        long hh = a;\n        long ii = a;\n        long jj\
    \ = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n   \
    \     long nn = a;\n        long oo = a;\n        long pp = a;\n        long qq\
    \ = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n   \
    \     long uu = a;\n        long vv = a;\n        long ww = a;\n        long xx\
    \ = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n  \
    \      long bbb = a;\n        long ccc = a;\n        long ddd = a;\n        long\
    \ eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh = a;\n\
    \        long iii = a;\n        long jjj = a;\n        long kkk = a;\n       \
    \ long lll = a;\n        long mmm = a;\n        long nnn = a;\n        long ooo\
    \ = a;\n        long ppp = a;\n        long qqq = a;\n        long rrr = a;\n\
    \        long sss = a;\n        long tt = a;\n        long uuu = a;\n        long\
    \ vv = a;\n        long ww = a;\n        long xx = a;\n        long yy = a;\n\
    \        long zz = a;\n        long aaa = a;\n        long bbb = a;\n        long\
    \ ccc = a;\n        long ddd = a;\n        long eee = a;\n        long fff = a;\n\
    \        long ggg = a;\n        long hhh = a;\n        long iii = a;\n       \
    \ long jjj = a;\n        long kkk = a;\n        long lll = a;\n        long mm\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprwvfwbx3.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long AO = a;\n        long AP = a;\n        long\
    \ AQ = a;\n        long AR = a;\n        long AS = a;\n        long AT = a;\n\
    \        long AU = a;\n        long AV = a;\n        long AW = a;\n        long\
    \ AX = a;\n        long AY = a;\n        long AZ = a;\n        long BA = a;\n\
    \        long BB = a;\n        long BC = a;\n        long BD = a;\n        long\
    \ BE = a;\n        long BF = a;\n        long BG = a;\n        long BH = a;\n\
    \        long BI = a;\n        long BJ = a;\n        long BK = a;\n        long\
    \ BL = a;\n        \n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21spihik.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return false;\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt = 1;\n        long bu = 1;\n        long bv = 1;\n        long bw = 1;\n\
    \        long bx = 1;\n        long by = 1;\n        long bz = 1;\n        long\
    \ ca = 1;\n        long cb = 1;\n        long cc = 1;\n        long cd = 1;\n\
    \        long ce = 1;\n        long cf = 1;\n        long cg = 1;\n        long\
    \ ch = 1;\n        long ci = 1;\n        long cj = 1;\n        long ck = 1;\n\
    \        long cl = 1;\n        long cm = 1;\n        long cn = 1;\n        long\
    \ co = 1;\n        long cp = 1;\n        long cq = 1;\n        long cr = 1;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp33ri6bbr.cs(69,14): error CS1001: Identifier expected

    /tmp/tmp33ri6bbr.cs(69,14): error CS1002: ; expected

    /tmp/tmp33ri6bbr.cs(69,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp33ri6bbr.cs(69,17): error CS1031: Type expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return Math.Pow(a, 3) == a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \n"
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpakru4ndu.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(39,14): warning CS0219: The variable ''u'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpakru4ndu.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /tmp/tmpakru4ndu.cs(39,14): warning CS0219: The variable ''u'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long n = a;\n        long cube = 1;\n        while (n > 1) {\n      \
    \      cube = cube * n;\n            n = n / 3;\n        }\n        return cube\
    \ == a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d944700b174044d1a013405b9bb6bd22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d944700b174044d1a013405b9bb6bd22>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return ((a % Math.Pow(3,2)) == 0);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef4deaa290894fdca29c88b7fd89403f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef4deaa290894fdca29c88b7fd89403f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long aa = 1;\n        long ab = 1;\n        long\
    \ ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n\
    \        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long\
    \ aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n\
    \        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long\
    \ aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n\
    \        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long\
    \ ax = 1;\n        long ay = 1;\n        long az = 1;\n        long aaa = 1;\n\
    \        long aab = 1;\n        long aac = 1;\n        long aad = 1;\n       \
    \ long aae = 1;\n        long aaf = 1;\n        long aag = 1;\n        long aah\
    \ = 1;\n        long ai1 = 1;\n        long aj1 = 1;\n        long ak1 = 1;\n\
    \        long al1 = 1;\n        long am1 = 1;\n        long an1 = 1;\n       \
    \ long ao1 = 1;\n        long ap1 = 1;\n        long aq1 = 1;\n        long ar1\
    \ = 1;\n        long as1 = 1;\n        long at1 = 1;\n        long au1 = 1;\n\
    \        long av1 = 1;\n        long aw1 = 1;\n        long ax1 = 1;\n\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplxkhfm4t.cs(89,14): error CS1001: Identifier expected

    /tmp/tmplxkhfm4t.cs(89,14): error CS1002: ; expected

    /tmp/tmplxkhfm4t.cs(89,14): error CS1525: Invalid expression term ''as''

    /tmp/tmplxkhfm4t.cs(89,17): error CS1031: Type expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long AO = a;\n        long AP = a;\n        long\
    \ AQ = a;\n        long AR = a;\n        long AS = a;\n        long AT = a;\n\
    \        long AU = a;\n        long AV = a;\n        long AW = a;\n        long\
    \ AX = a;\n        long AY = a;\n        long AZ = a;\n        long BA = a;\n\
    \        long BB = a;\n        long BC = a;\n        long BD = a;\n        long\
    \ BE = a;\n        long BF = a;\n        long BG = a;\n        long BH = a;\n\
    \        long BI = a;\n        long BJ = a;\n        long BK = a;\n        long\
    \ BL = a;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqmjg2un_.cs(19,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a < 3)\n            return true;\n        long b = 1;\n        long\
    \ c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n    \
    \    long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y\
    \ = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n    \
    \    long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af\
    \ = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n   \
    \     long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am\
    \ = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n   \
    \     long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at\
    \ = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n   \
    \     long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba\
    \ = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n   \
    \     long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh\
    \ = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n   \
    \     long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo\
    \ = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n   \
    \     long bs = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long\
    \ bt3 = 1;\n        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n\
    \        long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n       \
    \ long bt10 = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long\
    \ bt13 = 1;\n        long bt14 = 1;\n        long bt15 = 1;\n        long bt16\
    \ = 1;\n        long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n\
    \        long bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n    \
    \    long bt23 = 1;\n        long bt24\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf4wc5h8k.cs(67,14): error CS1001: Identifier expected

    /tmp/tmpf4wc5h8k.cs(67,14): error CS1002: ; expected

    /tmp/tmpf4wc5h8k.cs(67,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpf4wc5h8k.cs(67,17): error CS1031: Type expected

    /tmp/tmpf4wc5h8k.cs(117,18): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return false;\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt = 1;\n        long bu = 1;\n        long bv = 1;\n        long bw = 1;\n\
    \        long bx = 1;\n        long by = 1;\n        long bz = 1;\n        long\
    \ ca = 1;\n        long cb = 1;\n        long cc = 1;\n        long cd = 1;\n\
    \        long ce = 1;\n        long cf = 1;\n        long cg = 1;\n        long\
    \ ch = 1;\n        long ci = 1;\n        long cj = 1;\n        long ck = 1;\n\
    \        long cl = 1;\n        long cm = 1;\n        long cn = 1;\n        long\
    \ co = 1;\n        long cp = 1;\n        long cq = 1;\n        long cr = 1;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5ls45rdk.cs(69,14): error CS1001: Identifier expected

    /tmp/tmp5ls45rdk.cs(69,14): error CS1002: ; expected

    /tmp/tmp5ls45rdk.cs(69,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp5ls45rdk.cs(69,17): error CS1031: Type expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = b;\n        long e = b;\n        long f = b;\n        long g =\
    \ b;\n        long h = b;\n        long i = b;\n        long j = b;\n        long\
    \ k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n    \
    \    long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long aa = a;\n        long bb = a;\n        long cc =\
    \ a;\n        long dd = a;\n        long ee = a;\n        long ff = a;\n     \
    \   long gg = a;\n        long hh = a;\n        long ii = a;\n        long jj\
    \ = a;\n        long kk = a;\n        long ll = a;\n        long mm = a;\n   \
    \     long nn = a;\n        long oo = a;\n        long pp = a;\n        long qq\
    \ = a;\n        long rr = a;\n        long ss = a;\n        long tt = a;\n   \
    \     long uu = a;\n        long vv = a;\n        long ww = a;\n        long xx\
    \ = a;\n        long yy = a;\n        long zz = a;\n        long aaa = a;\n  \
    \      long bbb = a;\n        long ccc = a;\n        long ddd = a;\n        long\
    \ eee = a;\n        long fff = a;\n        long ggg = a;\n        long hhh = a;\n\
    \        long iii = a;\n        long jjj = a;\n        long kkk = a;\n       \
    \ long lll = a;\n        long mmm = a;\n        long nnn = a;\n        long ooo\
    \ = a;\n        long ppp = a;\n        long qqq = a;\n        long rrr = a;\n\
    \        long sss = a;\n        long tt = a;\n        long uuu = a;\n        long\
    \ vv = a;\n        long ww = a;\n        long xx = a;\n        long yy = a;\n\
    \        long zz = a;\n        long aaa = a;\n        long bbb = a;\n        long\
    \ ccc = a;\n        long ddd = a;\n        long eee = a;\n        long fff = a;\n\
    \        long ggg = a;\n        long hhh = a;\n        long iii = a;\n       \
    \ long jjj = a;\n        long kkk = a;\n        long lll = a;\n        long mm\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe_8bvskm.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = b;\n   \
    \     long d = c;\n        long e = d;\n        long f = e;\n        long g =\
    \ f;\n        long h = g;\n        long i = h;\n        long j = i;\n        long\
    \ k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n    \
    \    long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long aa = z;\n        long ab = aa;\n        long ac =\
    \ ab;\n        long ad = ac;\n        long ae = ad;\n        long af = ae;\n \
    \       long ag = af;\n        long ah = ag;\n        long ai = ah;\n        long\
    \ aj = ai;\n        long ak = aj;\n        long al = ak;\n        long am = al;\n\
    \        long an = am;\n        long ao = an;\n        long ap = ao;\n       \
    \ long aq = ap;\n        long ar = aq;\n        long as = ar;\n        long at\
    \ = as;\n        long au = at;\n        long av = au;\n        long aw = av;\n\
    \        long ax = aw;\n        long ay = ax;\n        long az = ay;\n       \
    \ long ba = az;\n        long bb = ba;\n        long bc = bb;\n        long bd\
    \ = bc;\n        long be = bd;\n        long bf = be;\n        long bg = bf;\n\
    \        long bh = bg;\n        long bi = bf;\n        long bj = bi;\n       \
    \ long bk = bj;\n        long bl = bl;\n        long bm = bl;\n        long bn\
    \ = bm;\n        long bo = bn;\n        long bp = bo;\n        long bq = bp;\n\
    \        long br = bq;\n        long bs = br;\n        long bt = bs;\n       \
    \ long bu = bt;\n        long bv = bu;\n        long bw = bv;\n        long bx\
    \ = bw;\n        long by = bx;\n        long bz = by;\n        long ca = bz;\n\
    \        long cb = ca;\n        long cc = cb;\n        long c\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n\
    \    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2xy1lggg.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp2xy1lggg.cs(63,14): error CS1002: ; expected

    /tmp/tmp2xy1lggg.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp2xy1lggg.cs(63,17): error CS1031: Type expected

    /tmp/tmp2xy1lggg.cs(64,19): error CS1525: Invalid expression term ''as''

    /tmp/tmp2xy1lggg.cs(64,21): error CS1031: Type expected

    /tmp/tmp2xy1lggg.cs(100,15): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return false;\n        if (a < 1)\n            return false;\n        if (a\
    \ > 64)\n            return false;\n        long b = a;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long\
    \ ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n\
    \        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long\
    \ aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n\
    \        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long\
    \ aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n\
    \        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long\
    \ ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n\
    \        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long\
    \ be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n\
    \        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long\
    \ bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n\
    \        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long\
    \ bs = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuf1ljbba.cs(73,14): error CS1001: Identifier expected

    /tmp/tmpuf1ljbba.cs(73,14): error CS1002: ; expected

    /tmp/tmpuf1ljbba.cs(73,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpuf1ljbba.cs(73,17): error CS1031: Type expected

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long cube = 1;\n        while (a > 0) {\n            cube = cube * a;\n\
    \            a--;\n        }\n        return cube == 1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8358250871c744a1b71d351d434a1a02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8358250871c744a1b71d351d434a1a02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long A\
    \ = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n      \
    \  long E = 1;\n        long F = 1;\n        long G = 1;\n        long H = 1;\n\
    \        long I = 1;\n        long J = 1;\n        long K = 1;\n        long L\
    \ = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n      \
    \  long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S = 1;\n\
    \        long T = 1;\n        long U = 1;\n        long V = 1;\n        long W\
    \ = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n      \
    \  long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long AD =\
    \ 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n     \
    \   long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long AK\
    \ = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n   \
    \     long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long AR\
    \ = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n   \
    \     long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long AY\
    \ = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n   \
    \     long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long BF\
    \ = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n   \
    \     long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long BM\
    \ = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n   \
    \     long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long BT\
    \ = 1;\n        long BU = 1;\n        long BV = 1;\n        long B\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq0hnlgu0.cs(121,15): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac =\
    \ 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n     \
    \   long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj\
    \ = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n   \
    \     long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq\
    \ = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n   \
    \     long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax\
    \ = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n   \
    \     long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be\
    \ = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n   \
    \     long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl\
    \ = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n   \
    \     long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs\
    \ = 1;\n        long bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n\
    \        long bt4 = 1;\n        long bt5 = 1;\n        long bt6 = 1;\n       \
    \ long bt7 = 1;\n        long bt8 = 1;\n        long bt9 = 1;\n        long bt10\
    \ = 1;\n        long bt11 = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n\
    \        long bt14 = 1;\n        long bt15 = 1;\n        long bt16 = 1;\n    \
    \    long bt17 = 1;\n        long bt18 = 1;\n        long bt19 = 1;\n        long\
    \ bt20 = 1;\n        long bt21 = 1;\n        long bt22 = 1;\n        long bt23\
    \ = 1;\n        long bt24 = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxcmf7p7.cs(63,14): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1002: ; expected

    /tmp/tmpoxcmf7p7.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpoxcmf7p7.cs(63,17): error CS1031: Type expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1001: Identifier expected

    /tmp/tmpoxcmf7p7.cs(116,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        if (cube == a)\n            return true;\n        else\n     \
    \       return false;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2804b013414ac79a6b232493c86936>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long aa = a;\n        long ab = a;\n        long ac =\
    \ a;\n        long ad = a;\n        long ae = a;\n        long af = a;\n     \
    \   long ag = a;\n        long ah = a;\n        long ai = a;\n        long aj\
    \ = a;\n        long ak = a;\n        long al = a;\n        long am = a;\n   \
    \     long an = a;\n        long ao = a;\n        long ap = a;\n        long aq\
    \ = a;\n        long ar = a;\n        long as = a;\n        long at = a;\n   \
    \     long au = a;\n        long av = a;\n        long aw = a;\n        long ax\
    \ = a;\n        long ay = a;\n        long az = a;\n        long ba = a;\n   \
    \     long bb = a;\n        long bc = a;\n        long bd = a;\n        long be\
    \ = a;\n        long bf = a;\n        long bg = a;\n        long bh = a;\n   \
    \     long bi = a;\n        long bj = a;\n        long bk = a;\n        long bl\
    \ = a;\n        long bm = a;\n        long bn = a;\n        long bo = a;\n   \
    \     long bp = a;\n        long bq = a;\n        long br = a;\n        long bs\
    \ = a;\n        long bt = a;\n        long bu = a;\n        long bv = a;\n   \
    \     long bw = a;\n        long bx = a;\n        long by = a;\n        long bz\
    \ = a;\n        long ca = a;\n        long cb = a;\n        long cc = a;\n   \
    \     long cd = a;\n        long ce = a;\n        long cf = a;\n        long cg\
    \ = a;\n        long ch = a;\n        long ci = a;\n        long cj = a;\n   \
    \     long ck = a;\n        long cl = a;\n        long cm\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp51un7c_r.cs(63,14): error CS1001: Identifier expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1002: ; expected

    /tmp/tmp51un7c_r.cs(63,14): error CS1525: Invalid expression term ''as''

    /tmp/tmp51un7c_r.cs(63,17): error CS1031: Type expected

    /tmp/tmp51un7c_r.cs(109,16): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long A\
    \ = 1;\n        long B = 1;\n        long C = 1;\n        long D = 1;\n      \
    \  long E = 1;\n        long F = 1;\n        long G = 1;\n        long H = 1;\n\
    \        long I = 1;\n        long J = 1;\n        long K = 1;\n        long L\
    \ = 1;\n        long M = 1;\n        long N = 1;\n        long O = 1;\n      \
    \  long P = 1;\n        long Q = 1;\n        long R = 1;\n        long S = 1;\n\
    \        long T = 1;\n        long U = 1;\n        long V = 1;\n        long W\
    \ = 1;\n        long X = 1;\n        long Y = 1;\n        long Z = 1;\n      \
    \  long AA = 1;\n        long AB = 1;\n        long AC = 1;\n        long AD =\
    \ 1;\n        long AE = 1;\n        long AF = 1;\n        long AG = 1;\n     \
    \   long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n        long AK\
    \ = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN = 1;\n   \
    \     long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n        long AR\
    \ = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU = 1;\n   \
    \     long AV = 1;\n        long AW = 1;\n        long AX = 1;\n        long AY\
    \ = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB = 1;\n   \
    \     long BC = 1;\n        long BD = 1;\n        long BE = 1;\n        long BF\
    \ = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI = 1;\n   \
    \     long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n        long BM\
    \ = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP = 1;\n   \
    \     long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n        long BT\
    \ = 1;\n        long BU = 1;\n        long BV = 1;\n        long B\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq0hnlgu0.cs(121,15): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long n = a;\n        long cube = 1;\n\
    \        while (n > 1) {\n            cube = cube * n;\n            n = n / 3;\n\
    \        }\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0785def2ad440f58f070ce2f70bd755>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a < 3)\n            return true;\n        long b = 1;\n        long\
    \ c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n    \
    \    long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y\
    \ = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n    \
    \    long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af\
    \ = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n   \
    \     long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am\
    \ = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n   \
    \     long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at\
    \ = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n   \
    \     long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba\
    \ = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n   \
    \     long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh\
    \ = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n   \
    \     long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo\
    \ = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n   \
    \     long bs = 1;\n        long bt = 0;\n        long bu = 1;\n        long bv\
    \ = 1;\n        long bw = 1;\n        long bx = 1;\n        long by = 1;\n   \
    \     long bz = 1;\n        long ca = 1;\n        long cb = 1;\n        long cc\
    \ = 1;\n        long cd = 1;\n        long ce = 1;\n        long cf = 1;\n   \
    \     long cg = 1;\n        long ch = 1;\n        long ci = 1;\n        long cj\
    \ = 1;\n        long ck = 1;\n        long cl = 1;\n        long cm = 1;\n   \
    \     long cn = 1;\n        long co = 1;\n        long cp = 1;\n        long cq\
    \ = 1;\n        long cr = 1;\n        long cs = 1;\n        long ct = 1;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe_143u5o.cs(67,14): error CS1001: Identifier expected

    /tmp/tmpe_143u5o.cs(67,14): error CS1002: ; expected

    /tmp/tmpe_143u5o.cs(67,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpe_143u5o.cs(67,17): error CS1031: Type expected

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return (a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\
    \ * a * a * a * a * a * a * a * a * a\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp79g1gkiv.cs(20,2058): error CS1026: ) expected

    /tmp/tmp79g1gkiv.cs(20,2058): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = a * a * a;\n        long square\
    \ = a * a;\n        long cubesquare = cube * square;\n        long cubecube =\
    \ cube * cube;\n        long squaresquare = square * square;\n        long squarecube\
    \ = square * cube;\n        long cubecube = cube * cube;\n        long cubesquaresquare\
    \ = cubesquare * square;\n        long cubecubesquare = cubecube * square;\n \
    \       long cubecubecube = cubecube * cube;\n        long cubesquaresquaresquare\
    \ = cubesquaresquare * square;\n        long cubecubesquaresquare = cubecubesquare\
    \ * square;\n        long cubecubecubesquare = cubecubecube * square;\n      \
    \  long cubesquaresquaresquare = cubesquaresquare * square;\n        long cubecubesquaresquare\
    \ = cubecubesquare * square;\n        long cubecubecubesquare = cubecubecube *\
    \ square;\n        long squaresquaresquare = squaresquare * square;\n        long\
    \ squarecube = square * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long cubecube = cube * cube;\n        long\
    \ cubecube = cube * cube;\n        long cubesquare = cube * square;\n        long\
    \ cubecube = cube * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long cubecube = cube * cube;\n        long\
    \ cubecube = cube * cube;\n        long cubesquare = cube * square;\n        long\
    \ cubecube = cube * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long cubecube = cube * cube;\n        long\
    \ cubecube = cube * cube;\n        long cubesquare = cube * square;\n        long\
    \ cubecube = cube * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long cubecube = cube * cube;\n        long\
    \ cubecube = cube * cube;\n        long cubesquare = cube * square;\n        long\
    \ cubecube = cube * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long cubecube = cube * cube;\n        \n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcsnbeu0c.cs(26,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(33,14): error CS0128: A local variable or function named ''cubesquaresquaresquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(34,14): error CS0128: A local variable or function named ''cubecubesquaresquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(35,14): error CS0128: A local variable or function named ''cubecubecubesquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(37,14): error CS0128: A local variable or function named ''squarecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(38,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(39,14): error CS0128: A local variable or function named ''cubesquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(40,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(41,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(42,14): error CS0128: A local variable or function named ''cubesquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(43,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(44,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(45,14): error CS0128: A local variable or function named ''cubesquare''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(46,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(47,14): error CS0128: A local variable or function named ''cubecube''
    is already defined in this scope

    /tmp/tmpcsnbeu0c.cs(48,14): error CS0128: A local variable or '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = 1;\n        long cubes = 1;\n\
    \        long cubesSquared = 1;\n        long cubesCubesSquared = 1;\n       \
    \ long cubesCubesCubesSquared = 1;\n        long cubesCubesCubesCubesSquared =\
    \ 1;\n        long cubesCubesCubesCubesCubesSquared = 1;\n        long cubesCubesCubesCubesCubesCubesSquared\
    \ = 1;\n        long cubesCubesCubesCubesCubesCubesCubesSquared = 1;\n       \
    \ long cubesCubesCubesCubesCubesCubesCubesCubesSquared = 1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ = 1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ = 1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ = 1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ =1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ =1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ =1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ =1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ =1;\n        long cubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesCubesSquared\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzqornjuv.cs(38,141): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = a;\n        long c = a;\n   \
    \     long d = a;\n        long e = a;\n        long f = a;\n        long g =\
    \ a;\n        long h = a;\n        long i = a;\n        long j = a;\n        long\
    \ k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n    \
    \    long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long A = a;\n        long B = a;\n        long C = a;\n\
    \        long D = a;\n        long E = a;\n        long F = a;\n        long G\
    \ = a;\n        long H = a;\n        long I = a;\n        long J = a;\n      \
    \  long K = a;\n        long L = a;\n        long M = a;\n        long N = a;\n\
    \        long O = a;\n        long P = a;\n        long Q = a;\n        long R\
    \ = a;\n        long S = a;\n        long T = a;\n        long U = a;\n      \
    \  long V = a;\n        long W = a;\n        long X = a;\n        long Y = a;\n\
    \        long Z = a;\n        long AA = a;\n        long AB = a;\n        long\
    \ AC = a;\n        long AD = a;\n        long AE = a;\n        long AF = a;\n\
    \        long AG = a;\n        long AH = a;\n        long AI = a;\n        long\
    \ AJ = a;\n        long AK = a;\n        long AL = a;\n        long AM = a;\n\
    \        long AN = a;\n        long ao = a;\n        long bo = a;\n        long\
    \ co = a;\n        long do = a;\n        long eo = a;\n        long fo = a;\n\
    \        long go = a;\n        long ho = a;\n        long io = a;\n        long\
    \ jo = a;\n        long ko = a;\n        long lo = a;\n        long mo = a;\n\
    \        long no = a;\n        long po = a;\n        long qo = a;\n        long\
    \ ro = a;\n        long so = a;\n        long to = a;\n        long uo = a;\n\
    \        long vo = a;\n        long wo = a;\n        long xo = a;\n        long\
    \ yo = a;\n        long \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n\
    \    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==\
    \ (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpesejp2hf.cs(88,14): error CS1001: Identifier expected

    /tmp/tmpesejp2hf.cs(88,14): error CS1002: ; expected

    /tmp/tmpesejp2hf.cs(88,17): error CS1525: Invalid expression term ''=''

    /tmp/tmpesejp2hf.cs(88,21): error CS1003: Syntax error, ''while'' expected

    /tmp/tmpesejp2hf.cs(88,21): error CS1003: Syntax error, ''('' expected

    /tmp/tmpesejp2hf.cs(89,9): error CS1525: Invalid expression term ''long''

    /tmp/tmpesejp2hf.cs(89,14): error CS1026: ) expected

    /tmp/tmpesejp2hf.cs(89,14): error CS1002: ; expected

    /tmp/tmpesejp2hf.cs(109,13): error CS1001: Identifier expected

    /tmp/tmpesejp2hf.cs(109,13): error CS1002: ; expected

    '
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return Math.Pow(a, 3) == a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \n"
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        if (a < 0)\n            return false;\n\
    \        if (a == 0)\n            return true;\n        if (a > 0)\n         \
    \   return false;\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcwv17o13.cs(69,14): error CS1001: Identifier expected

    /tmp/tmpcwv17o13.cs(69,14): error CS1002: ; expected

    /tmp/tmpcwv17o13.cs(69,14): error CS1525: Invalid expression term ''as''

    /tmp/tmpcwv17o13.cs(69,17): error CS1031: Type expected

    /tmp/tmpcwv17o13.cs(118,16): error CS1002: ; expected

    '
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return a > 0 && a < int.MaxValue && a\
    \ % 1 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
    \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002e18d493f94819b1afd3a7d243072b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002e18d493f94819b1afd3a7d243072b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794897
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        return Math.Pow(a, 3) == a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==\
    \ (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
    \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
    \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
    \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08c0f75065d34ac59a1991e8af41c4db>:0 \n"
  stdout: ''
  timestamp: 1659794897
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long A = 1;\n        long B = 1;\n        long C = 1;\n\
    \        long D = 1;\n        long E = 1;\n        long F = 1;\n        long G\
    \ = 1;\n        long H = 1;\n        long I = 1;\n        long J = 1;\n      \
    \  long K = 1;\n        long L = 1;\n        long M = 1;\n        long N = 1;\n\
    \        long O = 1;\n        long P = 1;\n        long Q = 1;\n        long R\
    \ = 1;\n        long S = 1;\n        long T = 1;\n        long U = 1;\n      \
    \  long V = 1;\n        long W = 1;\n        long X = 1;\n        long Y = 1;\n\
    \        long Z = 1;\n        long AA = 1;\n        long AB = 1;\n        long\
    \ AC = 1;\n        long AD = 1;\n        long AE = 1;\n        long AF = 1;\n\
    \        long AG = 1;\n        long AH = 1;\n        long AI = 1;\n        long\
    \ AJ = 1;\n        long AK = 1;\n        long AL = 1;\n        long AM = 1;\n\
    \        long AN = 1;\n        long AO = 1;\n        long AP = 1;\n        long\
    \ AQ = 1;\n        long AR = 1;\n        long AS = 1;\n        long AT = 1;\n\
    \        long AU = 1;\n        long AV = 1;\n        long AW = 1;\n        long\
    \ AX = 1;\n        long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n\
    \        long BB = 1;\n        long BC = 1;\n        long BD = 1;\n        long\
    \ BE = 1;\n        long BF = 1;\n        long BG = 1;\n        long BH = 1;\n\
    \        long BI = 1;\n        long BJ = 1;\n        long BK = 1;\n        long\
    \ BL = 1;\n        long BM = 1;\n        long BN = 1;\n        long BO = 1;\n\
    \        long BP = 1;\n        long BQ = 1;\n        long BR = 1;\n        long\
    \ BS = 1;\n        long BT = 1;\n        long BU = 1;\n        long BV = 1;\n\
    \        long BW = 1;\n        long BX = 1;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp12wnb37_.cs(20,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(21,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(22,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(23,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(24,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(25,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(26,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(27,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(28,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(29,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(30,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(31,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(32,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(33,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(34,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(35,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(36,14): warning CS0219: The variable ''r'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(37,14): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    /tmp/tmp12wnb37_.cs(38,14): warning CS0219: The variable ''t'' is assigned but
    its value is never used

    /t'
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // iscube(1) ==>\
    \ True\n    // iscube(2) ==> False\n    // iscube(-1) ==> True\n    // iscube(64)\
    \ ==> True\n    // iscube(0) ==> True\n    // iscube(180) ==> False\n    public\
    \ static bool Iscube(long a) {\n        long cube = Convert.ToInt64(Math.Pow(a,\
    \ 3));\n        return cube == a;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))\
    \ == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))\
    \ == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))\
    \ == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2ad3c3caaf848a7b891e43f074a4e79>:0 \n"
  stdout: ''
  timestamp: 1659794896

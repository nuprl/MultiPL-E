language: cs
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum + temp % 10;\n    \
    \            temp = temp / 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <872c1b06203d4dbbb1c2e057be8cf66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <872c1b06203d4dbbb1c2e057be8cf66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23b2e7abe65c44e3a0d60d5c4aebb406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23b2e7abe65c44e3a0d60d5c4aebb406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long max = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        long count = 0;\n        long sum2 = 0;\n        foreach (long\
    \ i in x) {\n            sum2 += i;\n            if (sum2 > max) {\n         \
    \       count++;\n            }\n        }\n        if (count == 0) {\n      \
    \      return result;\n        }\n        long max2 = max;\n        long sum3\
    \ = 0;\n        foreach (long i in x) {\n            sum3 += i;\n            if\
    \ (sum3 > max2) {\n                max2 = sum3;\n            }\n        }\n  \
    \      long count2 = 0;\n        long sum4 = 0;\n        foreach (long i in x)\
    \ {\n            sum4 += i;\n            if (sum4 > max2) {\n                count2++;\n\
    \            }\n        }\n        long max3 = max2;\n        long sum5 = 0;\n\
    \        foreach (long i in x) {\n            sum5 += i;\n            if (sum5\
    \ > max3) {\n                max3 = sum5;\n            }\n        }\n        long\
    \ count3 = 0;\n        long sum6 = 0;\n        foreach (long i in x) {\n     \
    \       sum6 += i;\n            if (sum6 > max3) {\n                count3++;\n\
    \            }\n        }\n        long max4 = max3;\n        long sum7 = 0;\n\
    \        foreach (long i in x) {\n            sum7 += i;\n            if (sum7\
    \ > max4) {\n                max4 = sum7;\n            }\n        }\n        long\
    \ count4 = 0;\n        long sum8 = 0;\n        foreach (long i in x) {\n     \
    \       sum8 += i;\n            if (sum8 > max4) {\n                count4++;\n\
    \            }\n        }\n        long max5 = max4;\n        long sum9 = 0;\n\
    \        foreach (long i in x) {\n            sum9 += i;\n            if (sum9\
    \ > max5) {\n                max5 = sum9;\n            }\n        }\n        long\
    \ count5 = 0;\n        long sum10 = 0;\n        foreach (long i in x) {\n    \
    \        sum10 += i;\n            if (sum10 > max5) {\n                count5++;\n\
    \            }\n        }\n        long max6 = max5;\n        long sum11 = 0;\n\
    \        foreach (long i in x) {\n            sum11 += i;\n            if (sum11\
    \ > max6) {\n                max6 = sum11;\n            }\n        }\n       \
    \ long count6 = 0;\n        long sum12 = 0;\n        foreach (long i in x) {\n\
    \            sum12 += i;\n            if (sum12 > max6) {\n                count6++;\n\
    \            }\n        }\n        long max7 = max6;\n        long sum13 = 0;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpew_yk64k.cs(119,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmpew_yk64k.cs(17,30): error CS0161: ''Problem.UniqueDigits(List<long>)'':
    not all code paths return a value

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        long lastDigitSum2\
    \ = 0;\n        foreach (long i in x) {\n            long digit = i % 10;\n  \
    \          if (digit != lastDigit) {\n                lastDigitSum = lastDigitSum2;\n\
    \                lastDigitSum2 = 0;\n                result.Add(lastDigitSum);\n\
    \            }\n            lastDigitSum2 += i;\n        }\n        if (lastDigitSum2\
    \ != 0) {\n            result.Add(lastDigitSum2);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7a35230f564fdb82ac23f395b69aad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7a35230f564fdb82ac23f395b69aad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        long sum = 0;\n        foreach (long i in x)\
    \ {\n            temp = i;\n            while (temp > 0) {\n                temp\
    \ = temp / 10;\n                count++;\n            }\n            sum = sum\
    \ + temp;\n            if (sum % 2 == 0) {\n                result.Add(i);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b649826330134b52acc316cb42d0417f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b649826330134b52acc316cb42d0417f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 != 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20b9dfa1af3340f881558fd8646a02d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20b9dfa1af3340f881558fd8646a02d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        while (temp != 0) {\n            temp = temp / 10;\n  \
    \          result.Add(temp);\n        }\n        List<long> result = new List<long>();\n\
    \        foreach (long i in x) {\n            long sum = 0;\n            foreach\
    \ (long j in x) {\n                sum += j;\n            }\n            if (sum\
    \ % i == 0) {\n                result.Add(i);\n            }\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L,\
    \ (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L,\
    \ (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwd459658.cs(28,20): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpwd459658.cs(30,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp2 = temp % 10;\n   \
    \             if (temp2 % 2 == 0) {\n                    result.Add(temp);\n \
    \               }\n                temp = temp / 10;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f17efdcd7ac3417db810405ea5a2b566>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f17efdcd7ac3417db810405ea5a2b566>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n            sum = 0;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <059c8309b1634d0eaac6f8647e3bed10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <059c8309b1634d0eaac6f8647e3bed10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            digit = i\
    \ % 10;\n            sum += digit;\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum + temp % 10;\n    \
    \            temp = temp / 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <872c1b06203d4dbbb1c2e057be8cf66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <872c1b06203d4dbbb1c2e057be8cf66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                if (temp % 2 == 0) {\n                    result.Add(temp);\n\
    \                    break;\n                }\n                temp = (temp /\
    \ 2);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long lastDigit = 0;\n        long lastDigit2 = 0;\n        long lastDigit3\
    \ = 0;\n        long lastDigit4 = 0;\n        long lastDigit5 = 0;\n        long\
    \ lastDigit6 = 0;\n        long lastDigit7 = 0;\n        long lastDigit8 = 0;\n\
    \        long lastDigit9 = 0;\n        long lastDigit10 = 0;\n        long lastDigit11\
    \ = 0;\n        long lastDigit12 = 0;\n        long lastDigit13 = 0;\n       \
    \ long lastDigit14 = 0;\n        long lastDigit15 = 0;\n        long lastDigit16\
    \ = 0;\n        long lastDigit17 = 0;\n        long lastDigit18 = 0;\n       \
    \ long lastDigit19 = 0;\n        long lastDigit20 = 0;\n        long lastDigit21\
    \ = 0;\n        long lastDigit22 = 0;\n        long lastDigit23 = 0;\n       \
    \ long lastDigit24 = 0;\n        long lastDigit25 = 0;\n        long lastDigit26\
    \ = 0;\n        long lastDigit27 = 0;\n        long lastDigit28 = 0;\n       \
    \ long lastDigit29 = 0;\n        long lastDigit30 = 0;\n        long lastDigit31\
    \ = 0;\n        long lastDigit32 = 0;\n        long lastDigit33 = 0;\n       \
    \ long lastDigit34 = 0;\n        long lastDigit35 = 0;\n        long lastDigit36\
    \ = 0;\n        long lastDigit37 = 0;\n        long lastDigit38 = 0;\n       \
    \ long lastDigit39 = 0;\n        long lastDigit40 = 0;\n        long lastDigit41\
    \ = 0;\n        long lastDigit42 = 0;\n        long lastDigit43 = 0;\n       \
    \ long lastDigit44 = 0;\n        long lastDigit45 = 0;\n        long lastDigit46\
    \ = 0;\n        long lastDigit47 = 0;\n        long lastDigit48 = 0;\n       \
    \ long lastDigit49 = 0;\n        long lastDigit50 = 0;\n        long lastDigit51\
    \ = 0;\n        long lastDigit52 = 0;\n        long lastDigit53 = 0;\n       \
    \ long lastDigit54 = 0;\n        long lastDigit55 = 0;\n        long lastDigit56\
    \ = 0;\n        long lastDigit57 = 0;\n        long lastDigit58 = 0;\n       \
    \ long lastDigit59 = 0;\n        long lastDigit60 = 0;\n        long lastDigit61\
    \ = 0;\n        long lastDigit62 = 0;\n        long lastDigit63 = 0;\n       \
    \ long lastDigit64 = 0;\n        long lastDigit65 = 0;\n        long lastDigit66\
    \ = 0;\n        long lastDigit67 = 0;\n        long lastDigit68 = 0;\n       \
    \ long lastDigit69 = 0;\n        long lastDigit70 = 0;\n        long lastDigit71\
    \ = 0;\n        long lastDigit72\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp477_z1qm.cs(91,25): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 !=\
    \ 0) {\n                result.Add(i);\n            }\n            sum = 0;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f141a5a5163b45d994e6214ea5207e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f141a5a5163b45d994e6214ea5207e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9949d1c84b6d4b8f9799885a589a79bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9949d1c84b6d4b8f9799885a589a79bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                result.Add(lastDigitSum);\n                lastDigitSum =\
    \ 0;\n                lastDigit = digit;\n            }\n            lastDigitSum\
    \ += i;\n        }\n        if (lastDigitSum > 0) {\n            result.Add(lastDigitSum);\n\
    \        }\n        return result.OrderBy(i => i).ToList();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8a2eeb8378d4a1ea519f323e3421fc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8a2eeb8378d4a1ea519f323e3421fc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ max = (long)Math.Pow(10, x.Count);\n        long min = sum / max;\n        long\
    \ sum2 = 0;\n        foreach (long i in x) {\n            sum2 += i;\n       \
    \ }\n        long sum3 = sum2 / max;\n        long sum4 = sum3 / max;\n      \
    \  long sum5 = sum4 / max;\n        long sum6 = sum5 / max;\n        long sum7\
    \ = sum6 / max;\n        long sum8 = sum7 / max;\n        long sum9 = sum8 / max;\n\
    \        long sum10 = sum9 / max;\n        long sum11 = sum10 / max;\n       \
    \ long sum12 = sum11 / max;\n        long sum13 = sum12 / max;\n        long sum14\
    \ = sum13 / max;\n        long sum15 = sum14 / max;\n        long sum16 = sum15\
    \ / max;\n        long sum17 = sum16 / max;\n        long sum18 = sum17 / max;\n\
    \        long sum19 = sum18 / max;\n        long sum20 = sum19 / max;\n      \
    \  long sum21 = sum20 / max;\n        long sum22 = sum21 / max;\n        long\
    \ sum23 = sum22 / max;\n        long sum24 = sum23 / max;\n        long sum25\
    \ = sum24 / max;\n        long sum26 = sum25 / max;\n        long sum27 = sum26\
    \ / max;\n        long sum28 = sum27 / max;\n        long sum29 = sum28 / max;\n\
    \        long sum30 = sum29 / max;\n        long sum31 = sum30 / max;\n      \
    \  long sum32 = sum31 / max;\n        long sum33 = sum32 / max;\n        long\
    \ sum34 = sum33 / max;\n        long sum35 = sum34 / max;\n        long sum36\
    \ = sum35 / max;\n        long sum37 = sum36 / max;\n        long sum38 = sum37\
    \ / max;\n        long sum39 = sum38 / max;\n        long sum40 = sum39 / max;\n\
    \        long sum41 = sum40 / max;\n        long sum42 = sum41 / max;\n      \
    \  long sum43 = sum42 / max;\n        long sum44 = sum\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpze81tk8z.cs(70,25): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9949d1c84b6d4b8f9799885a589a79bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9949d1c84b6d4b8f9799885a589a79bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = sum / 10;\n        bool isEven\
    \ = true;\n        foreach (long i in x) {\n            if (i % 10 != lastDigit)\
    \ {\n                isEven = false;\n                break;\n            }\n\
    \        }\n        if (isEven) {\n            result.Add(lastDigitSum);\n   \
    \     }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5e35cb5ccdd4dc5a6d12160b5a6571a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5e35cb5ccdd4dc5a6d12160b5a6571a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = 0;\n        long temp3 = 0;\n        long\
    \ temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7\
    \ = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10\
    \ = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvjnw_tnt.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remain = sum;\n        long temp = 0;\n        long temp2 = 0;\n        long\
    \ temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6\
    \ = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 =\
    \ 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12\
    \ = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15\
    \ = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18\
    \ = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21\
    \ = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24\
    \ = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27\
    \ = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30\
    \ = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33\
    \ = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36\
    \ = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39\
    \ = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42\
    \ = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45\
    \ = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48\
    \ = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51\
    \ = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54\
    \ = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57\
    \ = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60\
    \ = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63\
    \ = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66\
    \ = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69\
    \ = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72\
    \ = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75\
    \ = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78\
    \ = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyc4zpwld.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \            digit += i;\n        }\n        long lastDigit = sum / 10;\n    \
    \    long lastDigitSum = sum % 10;\n        bool isEven = true;\n        foreach\
    \ (long i in x) {\n            if (i % 2 == 0) {\n                isEven = false;\n\
    \            }\n            if (isEven) {\n                digit += i;\n     \
    \           sum += i;\n            }\n        }\n        if (lastDigit == lastDigitSum)\
    \ {\n            result.Add(lastDigit);\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3034a3999dd04e34bc0ec81ce703b95c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3034a3999dd04e34bc0ec81ce703b95c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            foreach (long\
    \ i in x) {\n                if (i % 10 == 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        } else {\n            foreach (long\
    \ i in x) {\n                if (i % 10 != 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long currentDigit = 0;\n   \
    \     long currentDigitCount = 0;\n        long sum = 0;\n        foreach (long\
    \ i in x) {\n            currentDigit = i;\n            currentDigitCount = 1;\n\
    \            while (currentDigit > 0) {\n                currentDigitCount++;\n\
    \                currentDigit = currentDigit / 10;\n            }\n          \
    \  if (currentDigitCount % 2 == 0) {\n                lastDigit = i;\n       \
    \         lastDigitCount = currentDigitCount;\n            }\n            sum\
    \ += i;\n        }\n        if (sum % 10 != 0) {\n            result.Add(lastDigit);\n\
    \            result.Add(lastDigit + 1);\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <390db1ee259e4ffcadbc8915687785d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <390db1ee259e4ffcadbc8915687785d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 !=\
    \ 0) {\n                result.Add(i);\n            }\n            sum = 0;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f141a5a5163b45d994e6214ea5207e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f141a5a5163b45d994e6214ea5207e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long last = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            if\
    \ (i % 2 == 0) {\n                last = i;\n                lastDigit = i % 10;\n\
    \            }\n            else {\n                if (lastDigit == 0) {\n  \
    \                  result.Add(last);\n                }\n                lastDigit\
    \ = 0;\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b63876ecae44b6cbcb7a92a82048726>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b63876ecae44b6cbcb7a92a82048726>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 !=\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <455e2acb68c84c03909cd7ae2482b7cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <455e2acb68c84c03909cd7ae2482b7cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long max = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        long temp = 0;\n        long temp2 = 0;\n        foreach (long\
    \ i in x) {\n            temp += i;\n            temp2 = temp % 10;\n        \
    \    if (temp2 % 2 == 0) {\n                result.Add(i);\n            }\n  \
    \      }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0399b850a0c2458e8db4a6e511f7c5eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0399b850a0c2458e8db4a6e511f7c5eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        long temp2 = 0;\n        long sum2 = 0;\n    \
    \    foreach (long i in x) {\n            temp = i;\n            while (temp >\
    \ 0) {\n                sum = temp % 10;\n                temp2 = temp / 10;\n\
    \                sum2 = sum + temp2;\n                if (sum2 % 2 == 0) {\n \
    \                   result.Add(sum2);\n                }\n                sum\
    \ = 0;\n                temp2 = temp / 10;\n            }\n        }\n       \
    \ return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793185
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(temp);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7634e7979a02400193b56f67a23c61f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7634e7979a02400193b56f67a23c61f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i;\n            if (lastDigitSum > lastDigit)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d5f624a038f457b8a1eb32da4ae1625>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d5f624a038f457b8a1eb32da4ae1625>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp = temp / 10;\n    \
    \            count++;\n            }\n            if (count % 2 == 0) {\n    \
    \            result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e10aa9f2ae1040cfb497231083c7ccbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e10aa9f2ae1040cfb497231083c7ccbc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long max = 0;\n        foreach (long i in x) {\n            digit = i\
    \ % 10;\n            if (digit > max) {\n                max = digit;\n      \
    \      }\n        }\n        long maxDigit = max;\n        long temp = 0;\n  \
    \      foreach (long i in x) {\n            digit = i % 10;\n            if (digit\
    \ == maxDigit) {\n                result.Add(i);\n            }\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <816575e4222f4f98beec3c84c5e5429d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <816575e4222f4f98beec3c84c5e5429d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \            if (sum > 10) {\n                digit = sum / 10;\n            \
    \    sum = sum % 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52743772e1c4193b7a4c6a40985effd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d52743772e1c4193b7a4c6a40985effd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                lastDigit = i;\n               \
    \ lastDigitCount = 1;\n            } else {\n                if (lastDigitCount\
    \ > 0) {\n                    result.Add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n            }\n        }\n        if (lastDigitCount\
    \ > 0) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <912c08be478a4be88018743960798aeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <912c08be478a4be88018743960798aeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        foreach (long i in x)\
    \ {\n            temp = i;\n            while (temp > 0) {\n                sum\
    \ += temp % 10;\n                temp /= 10;\n                count++;\n     \
    \       }\n            if (sum % 2 != 0) {\n                result.Add(i);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc70a0cb20704a5a90de6f3788ffaa8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc70a0cb20704a5a90de6f3788ffaa8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9bde496c2bb84ea1a003c8ea77c76eb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        long lastDigit = sum / 10;\n        long lastDigitSum\
    \ = 0;\n        long lastDigitRemainder = 0;\n        long lastDigitSum2 = 0;\n\
    \        long lastDigitRemainder2 = 0;\n        long lastDigitSum3 = 0;\n    \
    \    long lastDigitRemainder3 = 0;\n        long lastDigitSum4 = 0;\n        long\
    \ lastDigitRemainder4 = 0;\n        long lastDigitSum5 = 0;\n        long lastDigitRemainder5\
    \ = 0;\n        long lastDigitSum6 = 0;\n        long lastDigitRemainder6 = 0;\n\
    \        long lastDigitSum7 = 0;\n        long lastDigitRemainder7 = 0;\n    \
    \    long lastDigitSum8 = 0;\n        long lastDigitRemainder8 = 0;\n        long\
    \ lastDigitSum9 = 0;\n        long lastDigitRemainder9 = 0;\n        long lastDigitSum10\
    \ = 0;\n        long lastDigitRemainder10 = 0;\n        long lastDigitSum11 =\
    \ 0;\n        long lastDigitRemainder11 = 0;\n        long lastDigitSum12 = 0;\n\
    \        long lastDigitRemainder12 = 0;\n        long lastDigitSum13 = 0;\n  \
    \      long lastDigitRemainder13 = 0;\n        long lastDigitSum14 = 0;\n    \
    \    long lastDigitRemainder14 = 0;\n        long lastDigitSum15 = 0;\n      \
    \  long lastDigitRemainder15 = 0;\n        long lastDigitSum16 = 0;\n        long\
    \ lastDigitRemainder16 = 0;\n        long lastDigitSum17 = 0;\n        long lastDigitRemainder17\
    \ = 0;\n        long lastDigitSum18 = 0;\n        long lastDigitRemainder18 =\
    \ 0;\n        long lastDigitSum19 = 0;\n        long lastDigitRemainder19 = 0;\n\
    \        long lastDigitSum20 = 0;\n        long lastDigitRemainder20 = 0;\n  \
    \      long lastDigitSum21 = 0;\n        long lastDigitRemainder21 = 0;\n    \
    \    long lastDigitSum22 = 0;\n        long lastDigitRemainder22 = 0;\n      \
    \  long lastDigitSum23 = 0;\n        long lastDigitRemainder23 = 0;\n        long\
    \ lastDigitSum24 = 0;\n        long lastDigitRemainder24 = 0;\n        long lastDigitSum25\
    \ = 0;\n        long lastDigitRemainder25 = 0;\n        long lastDigitSum26 =\
    \ 0;\n        long lastDigitRemainder26 = 0;\n        long lastDigitSum27 = 0;\n\
    \        long lastDigitRemainder27 = 0;\n        long lastDigitSum28 = 0;\n  \
    \      long lastDigitRemainder28 = 0;\n        long \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0akn7d_y.cs(81,13): error CS1001: Identifier expected

    /tmp/tmp0akn7d_y.cs(81,13): error CS1002: ; expected

    '
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu5vhy8q_.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ maxSum = sum;\n        long maxSumIndex = 0;\n        long maxSumDigit = 0;\n\
    \        long maxSumDigitIndex = 0;\n        long maxSumDigitIndex2 = 0;\n   \
    \     long maxSumDigitIndex3 = 0;\n        long maxSumDigitIndex4 = 0;\n     \
    \   long maxSumDigitIndex5 = 0;\n        long maxSumDigitIndex6 = 0;\n       \
    \ long maxSumDigitIndex7 = 0;\n        long maxSumDigitIndex8 = 0;\n        long\
    \ maxSumDigitIndex9 = 0;\n        long maxSumDigitIndex10 = 0;\n        long maxSumDigitIndex11\
    \ = 0;\n        long maxSumDigitIndex12 = 0;\n        long maxSumDigitIndex13\
    \ = 0;\n        long maxSumDigitIndex14 = 0;\n        long maxSumDigitIndex15\
    \ = 0;\n        long maxSumDigitIndex16 = 0;\n        long maxSumDigitIndex17\
    \ = 0;\n        long maxSumDigitIndex18 = 0;\n        long maxSumDigitIndex19\
    \ = 0;\n        long maxSumDigitIndex20 = 0;\n        long maxSumDigitIndex21\
    \ = 0;\n        long maxSumDigitIndex22 = 0;\n        long maxSumDigitIndex23\
    \ = 0;\n        long maxSumDigitIndex24 = 0;\n        long maxSumDigitIndex25\
    \ = 0;\n        long maxSumDigitIndex26 = 0;\n        long maxSumDigitIndex27\
    \ = 0;\n        long maxSumDigitIndex28 = 0;\n        long maxSumDigitIndex29\
    \ = 0;\n        long maxSumDigitIndex30 = 0;\n        long maxSumDigitIndex31\
    \ = 0;\n        long maxSumDigitIndex32 = 0;\n        long maxSumDigitIndex33\
    \ = 0;\n        long maxSumDigitIndex34 = 0;\n        long maxSumDigitIndex35\
    \ = 0;\n        long maxSumDigitIndex36 = 0;\n        long maxSumDigitIndex37\
    \ = 0;\n        long maxSumDigitIndex38 = 0;\n        long maxSumDigitIndex39\
    \ = 0;\n        long maxSumDigitIndex40 = 0;\n        long maxSumDigitIndex41\
    \ = 0;\n        long maxSumDigitIndex42 = 0;\n        long maxSumDigitIndex43\
    \ = 0;\n        long maxSumDigitIndex44 = 0;\n        long maxSumDigitIndex45\
    \ = 0;\n        long maxSumDigitIndex46 = 0;\n        long maxSumDigitIndex47\
    \ = 0;\n        long maxSumDigitIndex48 = 0;\n        long maxSumDigitIndex49\
    \ = 0;\n        long maxSumDigitIndex50 = 0;\n        long maxSumDigitIndex51\
    \ = 0;\n        long maxSumDigitIndex52 = 0;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0hspswcc.cs(24,14): warning CS0219: The variable ''maxSumIndex'' is assigned
    but its value is never used

    /tmp/tmp0hspswcc.cs(25,14): warning CS0219: The variable ''maxSumDigit'' is assigned
    but its value is never used

    /tmp/tmp0hspswcc.cs(26,14): warning CS0219: The variable ''maxSumDigitIndex''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(27,14): warning CS0219: The variable ''maxSumDigitIndex2''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(28,14): warning CS0219: The variable ''maxSumDigitIndex3''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(29,14): warning CS0219: The variable ''maxSumDigitIndex4''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(30,14): warning CS0219: The variable ''maxSumDigitIndex5''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(31,14): warning CS0219: The variable ''maxSumDigitIndex6''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(32,14): warning CS0219: The variable ''maxSumDigitIndex7''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(33,14): warning CS0219: The variable ''maxSumDigitIndex8''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(34,14): warning CS0219: The variable ''maxSumDigitIndex9''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(35,14): warning CS0219: The variable ''maxSumDigitIndex10''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(36,14): warning CS0219: The variable ''maxSumDigitIndex11''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(37,14): warning CS0219: The variable ''maxSumDigitIndex12''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(38,14): warning CS0219: The variable ''maxSumDigitIndex13''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(39,14): warning CS0219: The variable ''maxSumDigitIndex14''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(40,14): warning CS0219: The variable '
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ mod = sum % 10;\n        long lastDigit = sum / 10;\n        long lastDigitSum\
    \ = 0;\n        long lastDigitSum2 = 0;\n        long lastDigitSum3 = 0;\n   \
    \     long lastDigitSum4 = 0;\n        long lastDigitSum5 = 0;\n        long lastDigitSum6\
    \ = 0;\n        long lastDigitSum7 = 0;\n        long lastDigitSum8 = 0;\n   \
    \     long lastDigitSum9 = 0;\n        long lastDigitSum10 = 0;\n        long\
    \ lastDigitSum11 = 0;\n        long lastDigitSum12 = 0;\n        long lastDigitSum13\
    \ = 0;\n        long lastDigitSum14 = 0;\n        long lastDigitSum15 = 0;\n \
    \       long lastDigitSum16 = 0;\n        long lastDigitSum17 = 0;\n        long\
    \ lastDigitSum18 = 0;\n        long lastDigitSum19 = 0;\n        long lastDigitSum20\
    \ = 0;\n        long lastDigitSum21 = 0;\n        long lastDigitSum22 = 0;\n \
    \       long lastDigitSum23 = 0;\n        long lastDigitSum24 = 0;\n        long\
    \ lastDigitSum25 = 0;\n        long lastDigitSum26 = 0;\n        long lastDigitSum27\
    \ = 0;\n        long lastDigitSum28 = 0;\n        long lastDigitSum29 = 0;\n \
    \       long lastDigitSum30 = 0;\n        long lastDigitSum31 = 0;\n        long\
    \ lastDigitSum32 = 0;\n        long lastDigitSum33 = 0;\n        long lastDigitSum34\
    \ = 0;\n        long lastDigitSum35 = 0;\n        long lastDigitSum36 = 0;\n \
    \       long lastDigitSum37 = 0;\n        long lastDigitSum38 = 0;\n        long\
    \ lastDigitSum39 = 0;\n        long lastDigitSum40 = 0;\n        long lastDigitSum41\
    \ = 0;\n        long lastDigitSum42 = 0;\n        long lastDigitSum43 = 0;\n \
    \       long lastDigitSum44 = 0;\n        long lastDigitSum45 = 0;\n        long\
    \ lastDigitSum46 = 0;\n        long lastDigitSum47 = 0;\n        long lastDigitSum48\
    \ = 0;\n        long lastDigitSum49 = 0;\n        long lastDigitSum50 = 0;\n \
    \       long lastDigitSum51 = 0;\n        long lastDigitSum52 = 0;\n        long\
    \ lastDigitSum53 = 0;\n        long lastDigitSum54 = 0;\n        long lastDigitSum55\
    \ = 0;\n        long lastDigitSum56 = 0;\n        long lastDigitSum57 = 0;\n \
    \       long lastDigitSum58 = 0;\n        long lastDigitSum59 = 0;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpydzz43s9.cs(84,13): error CS1001: Identifier expected

    /tmp/tmpydzz43s9.cs(84,13): error CS1002: ; expected

    '
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long count = 0;\n        foreach (long i in x) {\n\
    \            temp = i;\n            while (temp > 0) {\n                sum +=\
    \ temp % 10;\n                temp = temp / 10;\n            }\n            if\
    \ (sum % 2 == 0) {\n                result.Add(i);\n                count++;\n\
    \            }\n        }\n        if (count > 0) {\n            result.Sort();\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c161a6bad64e04b4cc1eb70c79cd7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c161a6bad64e04b4cc1eb70c79cd7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb9cd8d459894b22bd414882700fee5d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb9cd8d459894b22bd414882700fee5d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            sum\
    \ += i;\n            if (sum > 10) {\n                lastDigit = sum % 10;\n\
    \                sum = sum / 10;\n            }\n            if (sum % 2 == 0)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f56ef8ee6d324e78a2ab43286dfe3ea8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f56ef8ee6d324e78a2ab43286dfe3ea8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        long lastDigit = sum / 10;\n        long lastDigitSum\
    \ = 0;\n        long lastDigitRemainder = 0;\n        foreach (long i in x) {\n\
    \            lastDigitSum += i;\n            lastDigitRemainder = lastDigitSum\
    \ % 10;\n            if (lastDigitRemainder == 0) {\n                result.Add(lastDigit);\n\
    \                lastDigitSum = lastDigitSum / 10;\n                lastDigitRemainder\
    \ = lastDigitSum % 10;\n            }\n        }\n        if (lastDigitRemainder\
    \ != 0) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e274ad82035b4382a1e3373099f74490>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e274ad82035b4382a1e3373099f74490>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = 0;\n        long temp3 = 0;\n        long\
    \ temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7\
    \ = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10\
    \ = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvjnw_tnt.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long sum2 = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \            sum2 += i;\n        }\n        long lastDigit = sum % 10;\n     \
    \   long lastDigit2 = sum2 % 10;\n        long lastDigit3 = sum % 10;\n      \
    \  long lastDigit4 = sum2 % 10;\n        if (lastDigit == lastDigit2 && lastDigit\
    \ == lastDigit3 && lastDigit == lastDigit4) {\n            result.Add(lastDigit);\n\
    \        }\n        if (lastDigit2 == lastDigit3 && lastDigit2 == lastDigit4)\
    \ {\n            result.Add(lastDigit2);\n        }\n        if (lastDigit3 ==\
    \ lastDigit4) {\n            result.Add(lastDigit3);\n        }\n        if (lastDigit4\
    \ != 0) {\n            result.Add(lastDigit4);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ba18f1602754917b6ded2edcf21fa8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ba18f1602754917b6ded2edcf21fa8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\n\
    \                    result.Add(temp);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e2bd013b0104518923d1851518737e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e2bd013b0104518923d1851518737e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6e8614cc78634905ae15f66a60bc93b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum = sum * 10;\n          \
    \      sum = sum + temp % 10;\n                temp = temp / 10;\n           \
    \ }\n            if (sum % 2 != 0) {\n                result.Add(i);\n       \
    \     }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d2e065396fb468ab0461496850d3f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d2e065396fb468ab0461496850d3f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp = temp / 10;\n    \
    \            count++;\n            }\n            if (count % 2 == 0) {\n    \
    \            result.Add(i);\n            }\n            count = 0;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12cd6d4a8daa4d6e99aca87382e5c591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12cd6d4a8daa4d6e99aca87382e5c591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8432d8e760641bea12f0e2e9fff7667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8432d8e760641bea12f0e2e9fff7667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remain = sum % 10;\n        long sum2 = sum / 10;\n        long remain2 = sum2\
    \ % 10;\n        long sum3 = sum2 / 10;\n        long remain3 = sum3 % 10;\n \
    \       long sum4 = sum3 / 10;\n        long remain4 = sum4 % 10;\n        long\
    \ sum5 = sum4 / 10;\n        long remain5 = sum5 % 10;\n        long sum6 = sum5\
    \ / 10;\n        long remain6 = sum6 % 10;\n        long sum7 = sum6 / 10;\n \
    \       long remain7 = sum7 % 10;\n        long sum8 = sum7 / 10;\n        long\
    \ remain8 = sum8 % 10;\n        long sum9 = sum8 / 10;\n        long remain9 =\
    \ sum9 % 10;\n        long sum10 = sum9 / 10;\n        long remain10 = sum10 %\
    \ 10;\n        long sum11 = sum10 / 10;\n        long remain11 = sum11 % 10;\n\
    \        long sum12 = sum11 / 10;\n        long remain12 = sum12 % 10;\n     \
    \   long sum13 = sum12 / 10;\n        long remain13 = sum13 % 10;\n        long\
    \ sum14 = sum13 / 10;\n        long remain14 = sum14 % 10;\n        long sum15\
    \ = sum14 / 10;\n        long remain15 = sum15 % 10;\n        long sum16 = sum15\
    \ / 10;\n        long remain16 = sum16 % 10;\n        long sum17 = sum16 / 10;\n\
    \        long remain17 = sum17 % 10;\n        long sum18 = sum17 / 10;\n     \
    \   long remain18 = sum18 % 10;\n        long sum19 = sum18 / 10;\n        long\
    \ remain19 = sum19 % 10;\n        long sum20 = sum19 / 10;\n        long remain20\
    \ = sum20 % 10;\n        long sum21 = sum20 / 10;\n        long remain21 = sum21\
    \ % 10;\n        long sum22 = sum21 / 10;\n        long remain22 = sum22 % 10;\n\
    \        long sum23 = sum22 / 10;\n        long remain23 = sum23 % 10;\n     \
    \   long sum24 = sum23 / 10;\n        long remain24 = sum24 % 10;\n        long\
    \ sum25 = sum24 / 10;\n        long remain25 = sum25 % 10;\n        long sum26\
    \ = sum25 / 10;\n        long remain26 = sum26 % 10;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxjz__cf0.cs(17,30): error CS0161: ''Problem.UniqueDigits(List<long>)'':
    not all code paths return a value

    '
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            foreach (long\
    \ i in x) {\n                if (i % 10 == 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        } else {\n            foreach (long\
    \ i in x) {\n                if (i % 10 != 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5deb0128f2b94d4da4d5146a8eb390b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0)\n          \
    \      result.Add(i);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <51e7b85daee44d369860efb39419e769>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <51e7b85daee44d369860efb39419e769>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            foreach (long\
    \ i in x) {\n                if (i % 10 == 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        } else {\n            foreach (long\
    \ i in x) {\n                if (i % 10 != 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082cabc9bf8842f4adf0251d985f2ef8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            digit =\
    \ i % 10;\n            if (digit == 0) {\n                count++;\n         \
    \   }\n            else {\n                if (count > 0) {\n                \
    \    result.Add(digit);\n                }\n                count = 1;\n     \
    \       }\n        }\n        if (count > 0) {\n            result.Add(digit);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d84288e6b9b4afc924f45d28e3f0cf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d84288e6b9b4afc924f45d28e3f0cf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79c8dd6fa2d3419db2388b39adfaa90f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79c8dd6fa2d3419db2388b39adfaa90f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 != 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04d009cdfaa349219b28fc6fc4909879>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c89181d529c44e2fa3dd1d06e4a12917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = sum;\n        long temp2 = sum;\n        long temp3 = sum;\n        long\
    \ temp4 = sum;\n        long temp5 = sum;\n        long temp6 = sum;\n       \
    \ long temp7 = sum;\n        long temp8 = sum;\n        long temp9 = sum;\n  \
    \      long temp10 = sum;\n        long temp11 = sum;\n        long temp12 = sum;\n\
    \        long temp13 = sum;\n        long temp14 = sum;\n        long temp15 =\
    \ sum;\n        long temp16 = sum;\n        long temp17 = sum;\n        long temp18\
    \ = sum;\n        long temp19 = sum;\n        long temp20 = sum;\n        long\
    \ temp21 = sum;\n        long temp22 = sum;\n        long temp23 = sum;\n    \
    \    long temp24 = sum;\n        long temp25 = sum;\n        long temp26 = sum;\n\
    \        long temp27 = sum;\n        long temp28 = sum;\n        long temp29 =\
    \ sum;\n        long temp30 = sum;\n        long temp31 = sum;\n        long temp32\
    \ = sum;\n        long temp33 = sum;\n        long temp34 = sum;\n        long\
    \ temp35 = sum;\n        long temp36 = sum;\n        long temp37 = sum;\n    \
    \    long temp38 = sum;\n        long temp39 = sum;\n        long temp40 = sum;\n\
    \        long temp41 = sum;\n        long temp42 = sum;\n        long temp43 =\
    \ sum;\n        long temp44 = sum;\n        long temp45 = sum;\n        long temp46\
    \ = sum;\n        long temp47 = sum;\n        long temp48 = sum;\n        long\
    \ temp49 = sum;\n        long temp50 = sum;\n        long temp51 = sum;\n    \
    \    long temp52 = sum;\n        long temp53 = sum;\n        long temp54 = sum;\n\
    \        long temp55 = sum;\n        long temp56 = sum;\n        long temp57 =\
    \ sum;\n        long temp58 = sum;\n        long temp59 = sum;\n        long temp60\
    \ = sum;\n        long temp61 = sum;\n        long temp62 = sum;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5eyhdhtb.cs(85,13): error CS1001: Identifier expected

    /tmp/tmp5eyhdhtb.cs(85,13): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            digit = i\
    \ % 10;\n            sum += digit;\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ maxSum = sum;\n        long maxSumIndex = 0;\n        long maxSumDigit = 0;\n\
    \        long maxSumDigitIndex = 0;\n        long maxSumDigitIndex2 = 0;\n   \
    \     long maxSumDigitIndex3 = 0;\n        long maxSumDigitIndex4 = 0;\n     \
    \   long maxSumDigitIndex5 = 0;\n        long maxSumDigitIndex6 = 0;\n       \
    \ long maxSumDigitIndex7 = 0;\n        long maxSumDigitIndex8 = 0;\n        long\
    \ maxSumDigitIndex9 = 0;\n        long maxSumDigitIndex10 = 0;\n        long maxSumDigitIndex11\
    \ = 0;\n        long maxSumDigitIndex12 = 0;\n        long maxSumDigitIndex13\
    \ = 0;\n        long maxSumDigitIndex14 = 0;\n        long maxSumDigitIndex15\
    \ = 0;\n        long maxSumDigitIndex16 = 0;\n        long maxSumDigitIndex17\
    \ = 0;\n        long maxSumDigitIndex18 = 0;\n        long maxSumDigitIndex19\
    \ = 0;\n        long maxSumDigitIndex20 = 0;\n        long maxSumDigitIndex21\
    \ = 0;\n        long maxSumDigitIndex22 = 0;\n        long maxSumDigitIndex23\
    \ = 0;\n        long maxSumDigitIndex24 = 0;\n        long maxSumDigitIndex25\
    \ = 0;\n        long maxSumDigitIndex26 = 0;\n        long maxSumDigitIndex27\
    \ = 0;\n        long maxSumDigitIndex28 = 0;\n        long maxSumDigitIndex29\
    \ = 0;\n        long maxSumDigitIndex30 = 0;\n        long maxSumDigitIndex31\
    \ = 0;\n        long maxSumDigitIndex32 = 0;\n        long maxSumDigitIndex33\
    \ = 0;\n        long maxSumDigitIndex34 = 0;\n        long maxSumDigitIndex35\
    \ = 0;\n        long maxSumDigitIndex36 = 0;\n        long maxSumDigitIndex37\
    \ = 0;\n        long maxSumDigitIndex38 = 0;\n        long maxSumDigitIndex39\
    \ = 0;\n        long maxSumDigitIndex40 = 0;\n        long maxSumDigitIndex41\
    \ = 0;\n        long maxSumDigitIndex42 = 0;\n        long maxSumDigitIndex43\
    \ = 0;\n        long maxSumDigitIndex44 = 0;\n        long maxSumDigitIndex45\
    \ = 0;\n        long maxSumDigitIndex46 = 0;\n        long maxSumDigitIndex47\
    \ = 0;\n        long maxSumDigitIndex48 = 0;\n        long maxSumDigitIndex49\
    \ = 0;\n        long maxSumDigitIndex50 = 0;\n        long maxSumDigitIndex51\
    \ = 0;\n        long maxSumDigitIndex52 = 0;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0hspswcc.cs(24,14): warning CS0219: The variable ''maxSumIndex'' is assigned
    but its value is never used

    /tmp/tmp0hspswcc.cs(25,14): warning CS0219: The variable ''maxSumDigit'' is assigned
    but its value is never used

    /tmp/tmp0hspswcc.cs(26,14): warning CS0219: The variable ''maxSumDigitIndex''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(27,14): warning CS0219: The variable ''maxSumDigitIndex2''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(28,14): warning CS0219: The variable ''maxSumDigitIndex3''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(29,14): warning CS0219: The variable ''maxSumDigitIndex4''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(30,14): warning CS0219: The variable ''maxSumDigitIndex5''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(31,14): warning CS0219: The variable ''maxSumDigitIndex6''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(32,14): warning CS0219: The variable ''maxSumDigitIndex7''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(33,14): warning CS0219: The variable ''maxSumDigitIndex8''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(34,14): warning CS0219: The variable ''maxSumDigitIndex9''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(35,14): warning CS0219: The variable ''maxSumDigitIndex10''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(36,14): warning CS0219: The variable ''maxSumDigitIndex11''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(37,14): warning CS0219: The variable ''maxSumDigitIndex12''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(38,14): warning CS0219: The variable ''maxSumDigitIndex13''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(39,14): warning CS0219: The variable ''maxSumDigitIndex14''
    is assigned but its value is never used

    /tmp/tmp0hspswcc.cs(40,14): warning CS0219: The variable '
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23b2e7abe65c44e3a0d60d5c4aebb406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23b2e7abe65c44e3a0d60d5c4aebb406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cbc873a457af4e32b6f5a9d947fdda48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            int count\
    \ = 0;\n            foreach (long i in x) {\n                if (i % 10 == 0)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count == 0) {\n                result.Add(sum);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dcf811f6ccc4421c807bb6f7c1a50720>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dcf811f6ccc4421c807bb6f7c1a50720>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long digit = 0;\n        foreach (long i in x) {\n            sum +=\
    \ i;\n            digit += i;\n            if (sum % 2 == 0) {\n             \
    \   result.Add(i);\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <820d5a34f4bf48c4bcca807ded3e3ecc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <820d5a34f4bf48c4bcca807ded3e3ecc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                if (temp % 2 == 0) {\n                    result.Add(temp);\n\
    \                    break;\n                }\n                temp = (temp /\
    \ 2);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp;\n        long temp2;\n        long temp3;\n        long temp4;\n     \
    \   long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfdm5ww3d.cs(23,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(24,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(25,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(26,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(27,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(28,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(29,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(30,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(31,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(32,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(33,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(34,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(35,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(36,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(37,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(38,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(39,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(40,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(41,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(42,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmpfdm5ww3d.cs(43,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            digit = i\
    \ % 10;\n            sum += digit;\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <599d06139c1549468f6fb92ec3c02be9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ max = (long)Math.Pow(10, x.Count);\n        long min = sum / max;\n        long\
    \ mid = sum % max;\n        long lastDigit = mid;\n        long lastDigitSum =\
    \ 0;\n        foreach (long i in x) {\n            long digit = i % max;\n   \
    \         if (digit == 0) {\n                lastDigitSum = 0;\n            }\
    \ else {\n                lastDigitSum += digit;\n            }\n            if\
    \ (lastDigitSum > mid) {\n                result.Add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8bbe993cb3ae4ba28bf7b68fff6b8a4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8bbe993cb3ae4ba28bf7b68fff6b8a4d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long sum2 = 0;\n        foreach (long i in x) {\n\
    \            temp = i;\n            while (temp > 0) {\n                sum +=\
    \ temp % 10;\n                temp = (temp / 10).ToString().Length;\n        \
    \    }\n            sum2 = sum;\n            while (sum2 > 0) {\n            \
    \    sum2 -= sum % 10;\n                sum = (sum / 10).ToString().Length;\n\
    \            }\n            if (sum2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793186
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7bbb8bc75b04118a4d19d29476e733b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp = temp / 10;\n    \
    \            count++;\n            }\n            if (count % 2 == 0) {\n    \
    \            result.Add(i);\n            }\n            count = 0;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12cd6d4a8daa4d6e99aca87382e5c591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12cd6d4a8daa4d6e99aca87382e5c591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long digit = 0;\n        foreach (long i in x) {\n            sum +=\
    \ i;\n            digit = sum % 10;\n            if (digit % 2 == 0) {\n     \
    \           result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ee6e22c44844ffab06a154d2004d9af>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ee6e22c44844ffab06a154d2004d9af>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                if (temp % 2 == 0) {\n                    result.Add(temp);\n\
    \                    break;\n                }\n                temp = (temp /\
    \ 2);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17edfc361c4c4f9a91add0826d847206>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n    \
    \    long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long\
    \ sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11\
    \ = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 =\
    \ 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n\
    \        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n \
    \       long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n  \
    \      long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n   \
    \     long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n    \
    \    long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n     \
    \   long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n      \
    \  long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n       \
    \ long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long\
    \ sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45\
    \ = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 =\
    \ 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n\
    \        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n \
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n  \
    \      long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n   \
    \     long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n    \
    \    long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n     \
    \   long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n      \
    \  long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n       \
    \ long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long\
    \ sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79\
    \ = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 =\
    \ 0;\n        long sum83 = 0;\n        long sum84 = 0;\n        long sum\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp003twaye.cs(103,17): error CS1002: ; expected

    '
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long digit;\n        foreach (long i in x) {\n \
    \           temp = i;\n            while (temp > 0) {\n                digit =\
    \ temp % 10;\n                sum += digit;\n                temp /= 10;\n   \
    \         }\n            if (sum % 2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76676bc5f38c44b2aa99954105d4678e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76676bc5f38c44b2aa99954105d4678e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu5vhy8q_.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmpu5vhy8q_.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        foreach (long i in x)\
    \ {\n            temp = i;\n            while (temp > 0) {\n                sum\
    \ += temp % 10;\n                temp = temp / 10;\n            }\n          \
    \  if (sum % 2 == 0) {\n                result.Add(i);\n            }\n      \
    \      sum = 0;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e370d96e2bdd4e10a4f455c876b58535>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e370d96e2bdd4e10a4f455c876b58535>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 !=\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <455e2acb68c84c03909cd7ae2482b7cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <455e2acb68c84c03909cd7ae2482b7cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        long lastDigit = sum / 10;\n        if (lastDigit\
    \ % 2 == 0) {\n            result.Add(lastDigit);\n        }\n        if (remainder\
    \ % 2 == 0) {\n            result.Add(remainder);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b597d49c1778429281a2613c8f79eb5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b597d49c1778429281a2613c8f79eb5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            foreach (long\
    \ i in x) {\n                if (i % 10 == 0) {\n                    result.Add(i);\n\
    \                }\n            }\n        } else {\n            int count = 0;\n\
    \            foreach (long i in x) {\n                if (i % 10 == 0) {\n   \
    \                 result.Add(i);\n                    count++;\n             \
    \   }\n            }\n            if (count > 0) {\n                result.Add(remainder);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e7121f335ce4a2ba8030deb52bae099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e7121f335ce4a2ba8030deb52bae099>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31beebf798ef495d83b60186868e0552>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f5da853ae1a4959b1f65d83b35811a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_i3w7oyf.cs(104,20): error CS1002: ; expected

    '
  timestamp: 1659793181
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b2e885937e548d4bcb2a8bba0e04bd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <570bec03c8f942088f9962823f712cb7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793180
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptq5k9ctq.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793179
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <97eac7387b0f4c5e875dc24a2c919991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <97eac7387b0f4c5e875dc24a2c919991>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793182

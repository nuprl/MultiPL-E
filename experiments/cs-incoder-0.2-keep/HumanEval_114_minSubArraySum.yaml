name: HumanEval_114_minSubArraySum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n    // of nums.\n    // Example\n    // minSubArraySum([2,\
  \ 3, 4, 1, 2, 4]) == 1\n    // minSubArraySum([-1, -2, -3]) == -6\n    public static\
  \ long Minsubarraysum(List<long> nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\
  \ == (1L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)-1L, (long)-2L, (long)-3L, (long)2L, (long)-10L}))) == (-14L));\n\
  \    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-9999999999999999L})))\
  \ == (-9999999999999999L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)0L, (long)10L, (long)20L, (long)1000000L}))) == (0L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L})))\
  \ == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)10L, (long)11L, (long)13L, (long)8L, (long)3L, (long)4L})))\
  \ == (3L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-33L, (long)32L, (long)-1L, (long)0L, (long)-2L}))) == (-33L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-10L}))) == (-10L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)7L}))) == (7L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)1L, (long)-1L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long minSum = nums.Min();\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long min = nums.Min();\n\
    \        long max = nums.Max();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return min + max;", "    \
    \    long sum = 0;\n        long min = long.MaxValue;\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long min\
    \ = long.MaxValue;\n        long sum = 0;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long minSum = nums.Min();\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = nums[0];\n        long max = nums[0];\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < min) {\n    \
    \            min = sum;\n            }\n            if (sum > max) {\n       \
    \         max = sum;\n            }\n        }\n        return min == max ? 0\
    \ : min - max;", "        long sum = 0;\n        long min = long.MaxValue;\n \
    \       long max = 0;\n        foreach (long i in nums) {\n            sum +=\
    \ i;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = long.MinValue;\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > max) {\n                max = sum;\n   \
    \         }\n        }\n        return min == long.MaxValue ? max : min;", " \
    \       long sum = 0;\n        long minSum = nums[0];\n        long maxSum = nums[0];\n\
    \        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        long maxSum = nums.Max();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n            if (sum > maxSum) {\n       \
    \         maxSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        return\
    \ sum - min - max;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        foreach (long num in nums) {\n   \
    \         sum += num;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n            if (sum > maxSum) {\n                maxSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            min =\
    \ Math.Min(min, sum);\n            max = Math.Max(max, sum);\n        }\n    \
    \    return sum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n        }\n      \
    \  return min;", "        long sum = 0;\n        long minSum = nums.Min();\n \
    \       foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long sum = 0;\n        long minSum = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = nums.Min();\n\
    \        long max = nums.Max();\n        foreach (long num in nums) {\n      \
    \      sum += num;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > max) {\n                max = sum;\n   \
    \         }\n        }\n        return min + max;", "        long sum = 0;\n \
    \       long minSum = nums.Min();\n        long maxSum = nums.Max();\n       \
    \ foreach (long num in nums) {\n            sum += num;\n            if (sum <\
    \ minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        long sumOfSubArray\
    \ = 0;\n        foreach (long num in nums) {\n            sum += num;\n      \
    \      sumOfSubArray += num;\n            if (sumOfSubArray < minSum) {\n    \
    \            minSum = sumOfSubArray;\n            }\n        }\n        return\
    \ minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n      \
    \  foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        return min;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        return\
    \ min == long.MaxValue ? max : min;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        return\
    \ sum - min - max;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n        }\n      \
    \  return min;", "        long sum = 0;\n        long minSum = int.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long minSum = nums.Min();\n        long sum\
    \ = 0;\n        foreach (long n in nums) {\n            sum += n;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n            }\n       \
    \ }\n        return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = 0;\n        foreach (long i in nums) {\n            sum +=\
    \ i;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        return min + max;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = long.MaxValue;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (sum < minSum) {\n       \
    \         minSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums[0];\n        for (int i = 0; i <\
    \ nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n        }\n        return min;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        long maxSum =\
    \ nums.Max();\n        foreach (long n in nums) {\n            sum += n;\n   \
    \         if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        long maxSum = nums.Max();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n            if (sum > maxSum) {\n       \
    \         maxSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        long\
    \ mid = (min + max) / 2;\n        long leftsum = sum - mid;\n        long rightsum\
    \ = sum + mid;\n        if (leftsum < rightsum) {\n            sum = leftsum;\n\
    \        } else {\n            sum = rightsum;\n        }\n        return sum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (var\
    \ item in nums) {\n            sum += item;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return min\
    \ == long.MaxValue ? max : min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums[0];\n        long minSumIndex = 0;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n                minSumIndex = n;\n            }\n        }\n       \
    \ return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n            if (sum > maxSum) {\n                maxSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = long.MaxValue;\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < min) {\n                min = sum;\n \
    \           }\n        }\n        return min;", "        long sum = 0;\n     \
    \   long min = long.MaxValue;\n        foreach (long n in nums) {\n          \
    \  sum += n;\n            if (sum < min) {\n                min = sum;\n     \
    \       }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ minSum = nums.Min();\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long minSum = nums.Min();\n        long maxSum\
    \ = nums.Max();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = int.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long sum = 0;\n        long min = nums[0];\n\
    \        long max = nums[0];\n        foreach (long n in nums) {\n           \
    \ sum += n;\n            if (sum < min) {\n                min = sum;\n      \
    \      }\n            if (sum > max) {\n                max = sum;\n         \
    \   }\n        }\n        return max;", "        long sum = 0;\n        long minSum\
    \ = int.MaxValue;\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n            if (sum > maxSum) {\n                maxSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (n < min) min = n;\n     \
    \       if (n > max) max = n;\n        }\n        long mid = sum / 2;\n      \
    \  long mid2 = sum / 2;\n        long mid3 = sum / 2;\n        long mid4 = sum\
    \ / 2;\n        long mid5 = sum / 2;\n        long mid6 = sum / 2;\n        long\
    \ mid7 = sum / 2;\n        long mid8 = sum / 2;\n        long mid9 = sum / 2;\n\
    \        long mid10 = sum / 2;\n        long mid11 = sum / 2;\n        long mid12\
    \ = sum / 2;\n        long mid13 = sum / 2;\n        long mid14 = sum / 2;\n \
    \       long mid15 = sum / 2;\n        long mid16 = sum / 2;\n        long mid17\
    \ = sum / 2;\n        long mid18 = sum / 2;\n        long mid19 = sum / 2;\n \
    \       long mid20 = sum / 2;\n        long mid21 = sum / 2;\n        long mid22\
    \ = sum / 2;\n        long mid23 = sum / 2;\n        long mid24 = sum / 2;\n \
    \       long mid25 = sum / 2;\n        long mid26 = sum / 2;\n        long mid27\
    \ = sum / 2;\n        long mid28 = sum / 2;\n        long mid29 = sum / 2;\n \
    \       long mid30 = sum / 2;\n        long mid31 = sum / 2;\n        long mid32\
    \ = sum / 2;\n        long mid33 = sum / 2;\n        long mid34 = sum / 2;\n \
    \       long mid35 = sum / 2;\n        long mid36 = sum / 2;\n        long mid37\
    \ = sum / 2;\n        long mid38 = sum / 2;\n        long mid39 = sum / 2;\n \
    \       long mid40 = sum / 2;\n        long mid41 = sum / 2;\n        long mid42\
    \ = sum / 2;\n        long mid43 = sum / 2;\n        long mid44 = sum / 2;\n \
    \       long mid45 = sum / 2;\n        long mid46 = sum / 2;\n        long mid47\
    \ = sum / 2;\n        long mid48 = sum / 2;\n        long mid49 = sum / 2;\n \
    \       long mid50 = sum / 2;\n        long mid51 = sum / 2;\n        long mid52\
    \ = sum / 2;\n        long mid53 = sum / 2;", "        long sum = 0;\n       \
    \ long minSum = nums.Min();\n        foreach (long n in nums) {\n            sum\
    \ += n;\n            if (sum < minSum) {\n                minSum = sum;\n    \
    \        }\n        }\n        return minSum;", "        long sum = 0;\n     \
    \   long minSum = nums.Min();\n        foreach (long n in nums) {\n          \
    \  sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = long.MaxValue;\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < min) {\n                min = sum;\n \
    \           }\n        }\n        return min;", "        long sum = 0;\n     \
    \   long minSum = nums.Min();\n        foreach (long n in nums) {\n          \
    \  sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = nums[0];\n        long max = nums[0];\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return min + max;", "    \
    \    long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        return\
    \ sum - min + max;", "        long sum = 0;\n        long minSum = nums[0];\n\
    \        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (n < min) min = n;\n     \
    \       if (n > max) max = n;\n        }\n        long mid = sum / 2;\n      \
    \  long sum2 = sum - mid;\n        if (sum2 > 0) return minsubarraysum2(nums,\
    \ mid, sum2);\n        return minsubarraysum3(nums, mid, sum);", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        return\
    \ min == long.MaxValue ? max : min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = nums[0];\n        long max = nums[0];\n        foreach (long num in nums)\
    \ {\n            sum += num;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long num in nums) {\n       \
    \     sum += num;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums[0];\n        long max = nums[0];\n        for\
    \ (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n            if\
    \ (sum > max) {\n                max = sum;\n            }\n        }\n      \
    \  return min + max;", "        long minSum = nums.Min();\n        long maxSum\
    \ = nums.Max();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum > maxSum) {\n                maxSum\
    \ = sum;\n            }\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums[0];\n        long\
    \ maxSum = nums[0];\n        foreach (long num in nums) {\n            sum +=\
    \ num;\n            if (sum < minSum) {\n                minSum = sum;\n     \
    \       }\n            if (sum > maxSum) {\n                maxSum = sum;\n  \
    \          }\n        }\n        return minSum;", "        long sum = 0;\n   \
    \     long minSum = nums.Min();\n        foreach (long n in nums) {\n        \
    \    sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long min = long.MaxValue;\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < min) {\n                min = sum;\n \
    \           }\n        }\n        return min;", "        long sum = 0;\n     \
    \   long min = long.MaxValue;\n        foreach (long n in nums) {\n          \
    \  sum += n;\n            if (sum < min) {\n                min = sum;\n     \
    \       }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ minSum = nums[0];\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        long\
    \ maxSum = nums.Max();\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n            if (sum > maxSum) {\n                maxSum = sum;\n    \
    \        }\n        }\n        return minSum;", "        long sum = 0;\n     \
    \   long min = nums[0];\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long minSum = nums.Min();\n       \
    \ long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = int.MaxValue;\n        long minSumIndex = 0;\n        foreach (long num in\
    \ nums) {\n            sum += num;\n            if (sum < minSum) {\n        \
    \        minSum = sum;\n                minSumIndex = num;\n            }\n  \
    \      }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        long\
    \ maxSum = nums.Max();\n        long sumOfSubArray = maxSum - minSum;\n      \
    \  foreach (long num in nums) {\n            sum += num;\n            if (sumOfSubArray\
    \ < sum) {\n                sumOfSubArray = sum;\n            }\n        }\n \
    \       return sumOfSubArray;", "        long minSum = nums.Min();\n        long\
    \ sum = 0;\n        long minSumIndex = 0;\n        foreach (long num in nums)\
    \ {\n            sum += num;\n            if (sum < minSum) {\n              \
    \  minSum = sum;\n                minSumIndex = num;\n            }\n        }\n\
    \        return minSumIndex;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Min();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        long maxSum =\
    \ nums.Max();\n        foreach (long n in nums) {\n            sum += n;\n   \
    \         if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long minSum = nums.Min();\n        long\
    \ sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n      \
    \      if (sum < minSum) {\n                minSum = sum;\n            }\n   \
    \     }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        long maxSum = nums.Max();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n            if (sum > maxSum) {\n       \
    \         maxSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long sum = 0;\n        long minSum = nums[0];\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums[0];\n        long minSumIndex\
    \ = 0;\n        foreach (long n in nums) {\n            sum += n;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = n;\n            }\n        }\n        return minSum;", "        long sum =\
    \ 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        long\
    \ maxSum = nums.Max();\n        foreach (long num in nums) {\n            sum\
    \ += num;\n            if (sum < minSum)\n                minSum = sum;\n    \
    \        if (sum > maxSum)\n                maxSum = sum;\n        }\n       \
    \ return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums[0];\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n \
    \       foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n           \
    \ if (sum > maxSum) {\n                maxSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (n < min) min = n;\n            if (n > max) max = n;\n \
    \       }\n        long mid = sum / 2;\n        long sumOfSubarraySum = 0;\n \
    \       long sumOfSubarraySumOfSubarraySum = 0;\n        long sumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ = 0;\n        foreach (long n in nums) {\n            sumOfSubarraySum += n;\n\
    \            sumOfSubarraySumOfSubarraySum += sumOfSubarraySum;\n            sumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ += sumOfSubarraySumOfSubarraySum;\n        }\n        long subarraySum = sumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ - sumOfSubarraySum;\n        long subarraySumOfSubarraySum = sumOfSubarraySumOfSubarraySum\
    \ - sumOfSubarraySumOfSubarraySum;\n        long subarraySumOfSubarraySumOfSubarraySum\
    \ = sumOfSubarraySumOfSubarraySum - sumOfSubarraySumOfSubarraySumOfSubarraySum;\n\
    \        long subarraySumOfSubarraySumOfSubarraySumOfSubarraySum = sumOfSubarraySumOfSubarraySum\
    \ - sumOfSubarraySumOfSubarraySumOfSubarraySum;\n        long subarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ = sumOfSubarraySumOfSubarraySum - sumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum;\n\
    \        long subarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ = sumOfSubarraySumOfSubarraySum - sumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum;\n\
    \        long subarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ = sumOfSubarraySumOfSubarraySum - sumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum;\n\
    \        long subarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySumOfSubarraySum\
    \ = sum", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n \
    \       foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums[0];\n        long\
    \ minSumIndex = 0;\n        long minSumIndex2 = 0;\n        long minSumIndex3\
    \ = 0;\n        foreach (long i in nums) {\n            sum += i;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = i;\n            }\n            if (sum < minSum + minSumIndex2) {\n      \
    \          minSumIndex2 = sum;\n            }\n            if (sum < minSum +\
    \ minSumIndex3) {\n                minSumIndex3 = sum;\n            }\n      \
    \  }\n        return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n        }\n      \
    \  return min;", "        long sum = 0;\n        long minSum = nums.Min();\n \
    \       foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = int.MaxValue;\n       \
    \ foreach (long n in nums) {\n            sum += n;\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        foreach\
    \ (long i in nums) {\n            sum += i;\n            if (sum < min) {\n  \
    \              min = sum;\n            }\n        }\n        return min;", " \
    \       long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long minSum = int.MaxValue;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ i in nums) {\n            sum += i;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long i in nums) {\n            sum += i;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n        }\n        return min\
    \ == long.MaxValue ? long.MinValue : max;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (n < min) min = n;\n            if (n > max) max = n;\n \
    \       }\n        long mid = sum / 2;\n        long mid2 = sum / 2;\n       \
    \ long mid3 = sum / 2;\n        long mid4 = sum / 2;\n        long mid5 = sum\
    \ / 2;\n        long mid6 = sum / 2;\n        long mid7 = sum / 2;\n        long\
    \ mid8 = sum / 2;\n        long mid9 = sum / 2;\n        long mid10 = sum / 2;\n\
    \        long mid11 = sum / 2;\n        long mid12 = sum / 2;\n        long mid13\
    \ = sum / 2;\n        long mid14 = sum / 2;\n        long mid15 = sum / 2;\n \
    \       long mid16 = sum / 2;\n        long mid17 = sum / 2;\n        long mid18\
    \ = sum / 2;\n        long mid19 = sum / 2;\n        long mid20 = sum / 2;\n \
    \       long mid21 = sum / 2;\n        long mid22 = sum / 2;\n        long mid23\
    \ = sum / 2;\n        long mid24 = sum / 2;\n        long mid25 = sum / 2;\n \
    \       long mid26 = sum / 2;\n        long mid27 = sum / 2;\n        long mid28\
    \ = sum / 2;\n        long mid29 = sum / 2;\n        long mid30 = sum / 2;\n \
    \       long mid31 = sum / 2;\n        long mid32 = sum / 2;\n        long mid33\
    \ = sum / 2;\n        long mid34 = sum / 2;\n        long mid35 = sum / 2;\n \
    \       long mid36 = sum / 2;\n        long mid37 = sum / 2;\n        long mid38\
    \ = sum / 2;\n        long mid39 = sum / 2;\n        long mid40 = sum / 2;\n \
    \       long mid41 = sum / 2;\n        long mid42 = sum / 2;\n        long mid43\
    \ = sum / 2;\n        long mid44 = sum / 2;\n        long mid45 = sum / 2;\n \
    \       long mid46 = sum / 2;\n        long mid47 = sum / 2;\n        long mid48\
    \ = sum / 2;\n        long mid49 = sum / 2;\n        long mid50 = sum / 2;\n \
    \       long mid51 = sum / 2;\n        long mid52 = sum / 2;\n        long mid53\
    \ = sum / 2;", "        long sum = 0;\n        long min = long.MaxValue;\n   \
    \     foreach (long n in nums) {\n            sum += n;\n            if (sum <\
    \ min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Sum();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < min) {\n    \
    \            min = sum;\n            }\n        }\n        return min;", "   \
    \     long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;"]
stop_tokens:
- "\n    }\n"

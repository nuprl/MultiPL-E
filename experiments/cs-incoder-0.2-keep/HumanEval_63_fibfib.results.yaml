language: cs
name: HumanEval_63_fibfib
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib1 + fibfib5;\n        long fibfib7 = fibfib3 + fibfib6;\n\
    \        long fibfib8 = fibfib7 + fibfib8;\n        long fibfib9 = fibfib8 + fibfib9;\n\
    \        long fibfib10 = fibfib9 + fibfib10;\n        long fibfib11 = fibfib10\
    \ + fibfib11;\n        long fibfib12 = fibfib11 + fibfib12;\n        long fibfib13\
    \ = fibfib12 + fibfib13;\n        long fibfib14 = fibfib13 + fibfib14;\n     \
    \   long fibfib15 = fibfib14 + fibfib15;\n        long fibfib16 = fibfib15 + fibfib16;\n\
    \        long fibfib17 = fibfib16 + fibfib17;\n        long fibfib18 = fibfib17\
    \ + fibfib18;\n        long fibfib19 = fibfib18 + fibfib19;\n        long fibfib20\
    \ = fibfib19 + fibfib20;\n        long fibfib21 = fibfib20 + fibfib21;\n     \
    \   long fibfib22 = fibfib21 + fibfib22;\n        long fibfib23 = fibfib22 + fibfib23;\n\
    \        long fibfib24 = fibfib23 + fibfib24;\n        long fibfib25 = fibfib24\
    \ + fibfib25;\n        long fibfib26 = fibfib25 + fibfib26;\n        long fibfib27\
    \ = fibfib26 + fibfib27;\n        long fibfib28 = fibfib27 + fibfib28;\n     \
    \   long fibfib29 = fibfib28 + fibfib29;\n        long fibfib30 = fibfib29 + fibfib30;\n\
    \        long fibfib31 = fibfib30 + fibfib31;\n        long fibfib32 = fibfib31\
    \ + fibfib32;\n        long fibfib33 = fibfib32 + fibfib33;\n        long fibfib34\
    \ = fibfib33 + fibfib34;\n        long fibfib35 = fibfib34 + fibfib35;\n     \
    \   long fibfib36 = fibfib35 + fibfib36;\n        long fibfib37 = fibfib36 + fibfib37;\n\
    \        long fibfib\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_1z3quy.cs(60,20): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n\
    \        return fibfib;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = fibfib + Fibfib(n - 1) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        if\
    \ (n == 4) return 2;\n        if (n == 5) return 3;\n        if (n == 6) return\
    \ 5;\n        if (n == 7) return 8;\n        if (n == 8) return 13;\n        if\
    \ (n == 9) return 21;\n        if (n == 10) return 34;\n        if (n == 11) return\
    \ 55;\n        if (n == 12) return 89;\n        if (n == 13) return 144;\n   \
    \     if (n == 14) return 233;\n        if (n == 15) return 377;\n        if (n\
    \ == 16) return 610;\n        if (n == 17) return 987;\n        if (n == 18) return\
    \ 1569;\n        if (n == 19) return 2584;\n        if (n == 20) return 4181;\n\
    \        if (n == 21) return 6765;\n        if (n == 22) return 10923;\n     \
    \   if (n == 23) return 17710;\n        if (n == 24) return 28657;\n        if\
    \ (n == 25) return 46368;\n        if (n == 26) return 75025;\n        if (n ==\
    \ 27) return 121396;\n        if (n == 28) return 196418;\n        if (n == 29)\
    \ return 317811;\n        if (n == 30) return 514229;\n        if (n == 31) return\
    \ 832047;\n        if (n == 32) return 1346269;\n        if (n == 33) return 2178309;\n\
    \        if (n == 34) return 3524578;\n        if (n == 35) return 5702887;\n\
    \        if (n == 36) return 9227465;\n        if (n == 37) return 14930352;\n\
    \        if (n == 38) return 24157817;\n        if (n == 39) return 390881695;\n\
    \        if (n == 40) return 590296937;\n        if (n == 41) return 769766877;\n\
    \        if (n == 42) return 1025083951;\n        if (n == 43) return 1548008719;\n\
    \        if (n == 44) return 2504730781;\n        if (n == 45) return 4032287760;\n\
    \        if (n == 46) return 5606618554;\n        if (n == 47) return 7408409253;\n\
    \        if (n == 48) return 10758075577;\n        if (n == 49) return 15921470121;\n\
    \        if (n == 50) return 25195388797;\n        if (n == 51) return 40485739513;\n\
    \        if (n == 52) return 56058293777;\n        if (n == 53) return 74085626113;\n\
    \        if (n == 54) return 107580755777;\n        if (n == 55) return 159214701217;\n\
    \        if (n == 56) return 251953887971;\n        if (n == 57) return 40485739513;\n\
    \        if (n == 58) return 56058293777\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpre6rftpo.cs(80,40): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n\
    \        long fibfib2 = fibfib1;\n        long fibfib3 = fibfib2;\n        long\
    \ fibfib4 = fibfib3;\n        long fibfib5 = fibfib4;\n        long fibfib6 =\
    \ fibfib5;\n        long fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n\
    \        long fibfib9 = fibfib8;\n        long fibfib10 = fibfib9;\n        long\
    \ fibfib11 = fibfib10;\n        long fibfib12 = fibfib11;\n        long fibfib13\
    \ = fibfib12;\n        long fibfib14 = fibfib13;\n        long fibfib15 = fibfib14;\n\
    \        long fibfib16 = fibfib15;\n        long fibfib17 = fibfib16;\n      \
    \  long fibfib18 = fibfib17;\n        long fibfib19 = fibfib18;\n        long\
    \ fibfib20 = fibfib19;\n        long fibfib21 = fibfib20;\n        long fibfib22\
    \ = fibfib21;\n        long fibfib23 = fibfib22;\n        long fibfib24 = fibfib23;\n\
    \        long fibfib25 = fibfib24;\n        long fibfib26 = fibfib25;\n      \
    \  long fibfib27 = fibfib26;\n        long fibfib28 = fibfib27;\n        long\
    \ fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n        long fibfib31\
    \ = fibfib30;\n        long fibfib32 = fibfib31;\n        long fibfib33 = fibfib32;\n\
    \        long fibfib34 = fibfib33;\n        long fibfib35 = fibfib34;\n      \
    \  long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n        long\
    \ fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long fibfib40\
    \ = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42 = fibfib41;\n\
    \        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n      \
    \  long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long\
    \ fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49\
    \ = fibfib48;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkch63fwp.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n\
    \        long fibfib2 = Fibfib(n - 2);\n        long fibfib3 = Fibfib(n - 3);\n\
    \        fibfib = (fibfib1 + fibfib2 + fibfib3);\n        return fibfib;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib1 + fibfib5;\n        long fibfib7 = fibfib6 + fibfib4;\n\
    \        long fibfib8 = fibfib7 + fibfib6;\n        long fibfib9 = fibfib8 + fibfib8;\n\
    \        long fibfib10 = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10\
    \ + fibfib10;\n        long fibfib12 = fibfib11 + fibfib11;\n        long fibfib13\
    \ = fibfib12 + fibfib12;\n        long fibfib14 = fibfib13 + fibfib13;\n     \
    \   long fibfib15 = fibfib14 + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n\
    \        long fibfib17 = fibfib16 + fibfib16;\n        long fibfib18 = fibfib17\
    \ + fibfib17;\n        long fibfib19 = fibfib18 + fibfib18;\n        long fibfib20\
    \ = fibfib19 + fibfib19;\n        long fibfib21 = fibfib20 + fibfib20;\n     \
    \   long fibfib22 = fibfib21 + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n\
    \        long fibfib24 = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24\
    \ + fibfib24;\n        long fibfib26 = fibfib25 + fibfib25;\n        long fibfib27\
    \ = fibfib26 + fibfib26;\n        long fibfib28 = fibfib27 + fibfib27;\n     \
    \   long fibfib29 = fibfib28 + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n\
    \        long fibfib31 = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31\
    \ + fibfib31;\n        long fibfib33 = fibfib32 + fibfib32;\n        long fibfib34\
    \ = fibfib33 + fibfib33;\n        long fibfib35 = fibfib34 + fibfib34;\n     \
    \   long fibfib36 = fibfib35 + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36;\n\
    \        long fibfib\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4cjy5dp5.cs(60,20): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc59a498a.cs(25,1514): error CS1026: ) expected

    /tmp/tmpc59a498a.cs(25,1514): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 3) {\n            return 0;\n      \
    \  }\n        long fibfib = (long) Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuy0kkodv.cs(25,1514): error CS1026: ) expected

    /tmp/tmpuy0kkodv.cs(25,1514): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n <= 3) {\n            fibfib = (fibfib * (fibfibfib - 1)) / 2;\n\
    \        }\n        if (n <= 5) {\n            fibfib = (fibfib * (fibfib - 2))\
    \ / 2;\n        }\n        if (n <= 8) {\n            fibfib = (fibfib * (fib\
    \ - 3)) / 2;\n        }\n        return fibfib;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsct507jk.cs(33,33): error CS0103: The name ''fibfibfib'' does not exist
    in the current context

    /tmp/tmpsct507jk.cs(39,33): error CS0103: The name ''fib'' does not exist in the
    current context

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else {\n   \
    \         fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n\
    \        return fibfib;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmpsily8l.cs(33,31): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,47): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,63): error CS0149: Method name expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 1;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 3) {\n            return n;\n      \
    \  }\n        long fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n      \
    \  long fibfib2 = Fibfib(n - 2);\n        long fibfib3 = Fibfib(n - 3);\n    \
    \    fibfib = (fibfib1 + fibfib2 + fibfib3);\n        return fibfib;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64d3439b22194c799cd284e8b0aafb19>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64d3439b22194c799cd284e8b0aafb19>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = (long) Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt7rufrz_.cs(25,1514): error CS1026: ) expected

    /tmp/tmpt7rufrz_.cs(25,1514): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n\
    \        long fibfib2 = fibfib1;\n        long fibfib3 = fibfib2;\n        long\
    \ fibfib4 = fibfib3;\n        long fibfib5 = fibfib4;\n        long fibfib6 =\
    \ fibfib5;\n        long fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n\
    \        long fibfib9 = fibfib8;\n        long fibfib10 = fibfib9;\n        long\
    \ fibfib11 = fibfib10;\n        long fibfib12 = fibfib11;\n        long fibfib13\
    \ = fibfib12;\n        long fibfib14 = fibfib13;\n        long fibfib15 = fibfib14;\n\
    \        long fibfib16 = fibfib15;\n        long fibfib17 = fibfib16;\n      \
    \  long fibfib18 = fibfib17;\n        long fibfib19 = fibfib18;\n        long\
    \ fibfib20 = fibfib19;\n        long fibfib21 = fibfib20;\n        long fibfib22\
    \ = fibfib21;\n        long fibfib23 = fibfib22;\n        long fibfib24 = fibfib23;\n\
    \        long fibfib25 = fibfib24;\n        long fibfib26 = fibfib25;\n      \
    \  long fibfib27 = fibfib26;\n        long fibfib28 = fibfib27;\n        long\
    \ fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n        long fibfib31\
    \ = fibfib30;\n        long fibfib32 = fibfib31;\n        long fibfib33 = fibfib32;\n\
    \        long fibfib34 = fibfib33;\n        long fibfib35 = fibfib34;\n      \
    \  long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n        long\
    \ fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long fibfib40\
    \ = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42 = fibfib41;\n\
    \        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n      \
    \  long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long\
    \ fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49\
    \ = fibfib48;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkch63fwp.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib1 + fibfib5;\n        long fibfib7 = fibfib6 + fibfib4;\n\
    \        long fibfib8 = fibfib7 + fibfib6;\n        long fibfib9 = fibfib8 + fibfib7;\n\
    \        long fibfib10 = fibfib9 + fibfib8;\n        long fibfib11 = fibfib10\
    \ + fibfib9;\n        long fibfib12 = fibfib11 + fibfib10;\n        long fibfib13\
    \ = fibfib12 + fibfib11;\n        long fibfib14 = fibfib13 + fibfib12;\n     \
    \   long fibfib15 = fibfib14 + fibfib13;\n        long fibfib16 = fibfib15 + fibfib14;\n\
    \        long fibfib17 = fibfib16 + fibfib15;\n        long fibfib18 = fibfib17\
    \ + fibfib16;\n        long fibfib19 = fibfib18 + fibfib17;\n        long fibfib20\
    \ = fibfib19 + fibfib18;\n        long fibfib21 = fibfib20 + fibfib19;\n     \
    \   long fibfib22 = fibfib21 + fibfib20;\n        long fibfib23 = fibfib22 + fibfib21;\n\
    \        long fibfib24 = fibfib23 + fibfib22;\n        long fibfib25 = fibfib24\
    \ + fibfib23;\n        long fibfib26 = fibfib25 + fibfib24;\n        long fibfib27\
    \ = fibfib26 + fibfib25;\n        long fibfib28 = fibfib27 + fibfib26;\n     \
    \   long fibfib29 = fibfib28 + fibfib27;\n        long fibfib30 = fibfib29 + fibfib28;\n\
    \        long fibfib31 = fibfib30 + fibfib29;\n        long fibfib32 = fibfib31\
    \ + fibfib30;\n        long fibfib33 = fibfib32 + fibfib31;\n        long fibfib34\
    \ = fibfib33 + fibfib32;\n        long fibfib35 = fibfib34 + fibfib33;\n     \
    \   long fibfib36 = fibfib35 + fibfib34;\n        long fibfib37 = fibfib36 + fibfib35;\n\
    \        long fibfib38\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoixu4083.cs(60,22): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 0;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = (fibfib + Fibfib(n - 1)) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = 0;\n        fibfib += Fibfib(n - 1);\n     \
    \   fibfib += Fibfib(n - 2);\n        fibfib += Fibfib(n - 3);\n        return\
    \ fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib3 + fibfib4;\n        long fibfib7 = fibfibfib5 + fibfib6;\n\
    \        long fibfib8 = fibfib7 + fibfib8;\n        long fibfib9 = fibfib8 + fibfib9;\n\
    \        long fibfib10 = fibfib9 + fibfib10;\n        long fibfib11 = fibfib10\
    \ + fibfib11;\n        long fibfib12 = fibfib11 + fibfib12;\n        long fibfib13\
    \ = fibfib12 + fibfib13;\n        long fibfib14 = fibfib13 + fibfib14;\n     \
    \   long fibfib15 = fibfib14 + fibfib15;\n        long fibfib16 = fibfib15 + fibfib16;\n\
    \        long fibfib17 = fibfib16 + fibfib17;\n        long fibfib18 = fibfib17\
    \ + fibfib18;\n        long fibfib19 = fibfib18 + fibfib19;\n        long fibfib20\
    \ = fibfib19 + fibfib20;\n        long fibfib21 = fibfib20 + fibfib21;\n     \
    \   long fibfib22 = fibfib21 + fibfib22;\n        long fibfib23 = fibfib22 + fibfib23;\n\
    \        long fibfib24 = fibfib23 + fibfib24;\n        long fibfib25 = fibfib24\
    \ + fibfib25;\n        long fibfib26 = fibfib25 + fibfib26;\n        long fibfib27\
    \ = fibfib26 + fibfib27;\n        long fibfib28 = fibfib27 + fibfib28;\n     \
    \   long fibfib29 = fibfib28 + fibfib29;\n        long fibfib30 = fibfib29 + fibfib30;\n\
    \        long fibfib31 = fibfib30 + fibfib31;\n        long fibfib32 = fibfib31\
    \ + fibfib32;\n        long fibfib33 = fibfib32 + fibfib33;\n        long fibfib34\
    \ = fibfib33 + fibfib34;\n        long fibfib35 = fibfib34 + fibfib35;\n     \
    \   long fibfib36 = fibfib35 + fibfib36;\n        long fibfib37 = fibfib36 + fibfib37;\n\
    \        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxhhwqbtr.cs(60,13): error CS1001: Identifier expected

    /tmp/tmpxhhwqbtr.cs(60,13): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n\
    \        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long fibfib4 =\
    \ 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long fibfib7\
    \ = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long fibfib10\
    \ = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long fibfib13\
    \ = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long fibfib16\
    \ = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long fibfib19\
    \ = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long fibfib22\
    \ = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long fibfib25\
    \ = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long fibfib28\
    \ = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long fibfib31\
    \ = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long fibfib34\
    \ = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long fibfib37\
    \ = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long fibfib40\
    \ = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long fibfib43\
    \ = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long fibfib46\
    \ = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long fibfib49\
    \ = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long fibfib52\
    \ = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long fibfib55\
    \ = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long fibfib58\
    \ = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long fibfib61\
    \ = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long fibfib64\
    \ = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long fibfib67\
    \ = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long fibfib70\
    \ = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long fibfib73\
    \ = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok0go5q5.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = (fibfib + Fibfib(n - 1)) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        if\
    \ (n == 4) return 2;\n        if (n == 5) return 3;\n        if (n == 6) return\
    \ 5;\n        if (n == 7) return 8;\n        if (n == 8) return 13;\n        if\
    \ (n == 9) return 21;\n        if (n == 10) return 34;\n        if (n == 11) return\
    \ 55;\n        if (n == 12) return 89;\n        if (n == 13) return 144;\n   \
    \     if (n == 14) return 233;\n        if (n == 15) return 377;\n        if (n\
    \ == 16) return 610;\n        if (n == 17) return 987;\n        if (n == 18) return\
    \ 1569;\n        if (n == 19) return 2584;\n        if (n == 20) return 4181;\n\
    \        if (n == 21) return 6765;\n        if (n == 22) return 10923;\n     \
    \   if (n == 23) return 17711;\n        if (n == 24) return 28657;\n        if\
    \ (n == 25) return 46368;\n        if (n == 26) return 75025;\n        if (n ==\
    \ 27) return 121393;\n        if (n == 28) return 196418;\n        if (n == 29)\
    \ return 317811;\n        if (n == 30) return 514229;\n        if (n == 31) return\
    \ 832047;\n        if (n == 32) return 1346269;\n        if (n == 33) return 2178309;\n\
    \        if (n == 34) return 3524578;\n        if (n == 35) return 5702887;\n\
    \        if (n == 36) return 9227465;\n        if (n == 37) return 14930352;\n\
    \        if (n == 38) return 24157817;\n        if (n == 39) return 390881695;\n\
    \        if (n == 40) return 63245986;\n        if (n == 41) return 126954513;\n\
    \        if (n == 42) return 196634841;\n        if (n == 43) return 317672337;\n\
    \        if (n == 44) return 51422919;\n        if (n == 45) return 83204767;\n\
    \        if (n == 46) return 134626915;\n        if (n == 47) return 217830957;\n\
    \        if (n == 48) return 352457725;\n        if (n == 49) return 570288729;\n\
    \        if (n == 50) return 922746577;\n        if (n == 51) return 1493035233;\n\
    \        if (n == 52) return 2415781669;\n        if (n == 53) return 3908816943;\n\
    \        if (n == 54) return 6324598699;\n        if (n == 55) return 12695451399;\n\
    \        if (n == 56) return 19663484159;\n        if (n == 57) return 31767233539;\n\
    \        if (n == 58) return 5142291899;\n        if (n == 59) return 832047769;\n\
    \        if (n == 60\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2acfrfqf.cs(82,20): error CS1026: ) expected

    /tmp/tmp2acfrfqf.cs(82,20): error CS1525: Invalid expression term ''}''

    /tmp/tmp2acfrfqf.cs(82,20): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08cac819f63d4eb98b89fa2a247371e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08cac819f63d4eb98b89fa2a247371e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + Fibfib(n - 1) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08cac819f63d4eb98b89fa2a247371e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08cac819f63d4eb98b89fa2a247371e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        } else if (n == 1) {\n            fibfib = 0;\n\
    \        } else if (n == 2) {\n            fibfib = 1;\n        } else if (n >=\
    \ 3) {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n\
    \        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0)\n     \
    \       return fibfib;\n        if (n == 1)\n            return fibfib;\n    \
    \    if (n == 2)\n            return 1;\n        if (n == 3)\n            return\
    \ 2;\n        if (n == 4)\n            return 3;\n        if (n == 5)\n      \
    \      return 5;\n        if (n == 6)\n            return 8;\n        if (n ==\
    \ 7)\n            return 13;\n        if (n == 8)\n            return 21;\n  \
    \      if (n == 9)\n            return 34;\n        if (n == 10)\n           \
    \ return 55;\n        if (n == 11)\n            return 89;\n        if (n == 12)\n\
    \            return 144;\n        if (n == 13)\n            return 233;\n    \
    \    if (n == 14)\n            return 377;\n        if (n == 15)\n           \
    \ return 610;\n        if (n == 16)\n            return 987;\n        if (n ==\
    \ 17)\n            return 1569;\n        if (n == 18)\n            return 2584;\n\
    \        if (n == 19)\n            return 4181;\n        if (n == 20)\n      \
    \      return 6765;\n        if (n == 21)\n            return 10923;\n       \
    \ if (n == 22)\n            return 17711;\n        if (n == 23)\n            return\
    \ 28657;\n        if (n == 24)\n            return 46368;\n        if (n == 25)\n\
    \            return 75025;\n        if (n == 26)\n            return 121396;\n\
    \        if (n == 27)\n            return 196418;\n        if (n == 28)\n    \
    \        return 317811;\n        if (n == 29)\n            return 514229;\n  \
    \      if (n == 30)\n            return 832047;\n        if (n == 31)\n      \
    \      return 1346269;\n        if (n == 32)\n            return 2178309;\n  \
    \      if (n == 33)\n            return 3524578;\n        if (n == 34)\n     \
    \       return 5702887;\n        if (n == 35)\n            return 9498577;\n \
    \       if (n == 36)\n            return 1597151;\n        if (n == 37)\n    \
    \        return 2516583;\n        if (n == 38)\n            return 4053217;\n\
    \        if (n == 39)\n            return 6345976;\n        if (n == 40)\n   \
    \         return 10233423;\n        if (n == 41)\n            return 165580141;\n\
    \        if (n == 42)\n            return 26791429;\n        if (n == 43)\n  \
    \          return 43349447;\n        if (n == 44)\n            return 70140878;\n\
    \        if (n == 45)\n            return 113490317;\n        if (n == 46)\n \
    \           return 1836311903;\n        if (n == 47)\n            return 2971215073;\n\
    \        if (n == 48)\n            return 4807526976;\n        if (n == 49)\n\
    \            return 743053466;\n        if (n == 50)\n            return 11766903046;\n\
    \        if (n == 51)\n            return 17592186044;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzlq188k_.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long a = Fibfib(n - 1);\n        long b = Fibfib(n - 2);\n\
    \        long c = Fibfib(n - 3);\n        return a + b + c;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        if (n == 0) {\n\
    \            fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n\
    \        if (n >= 3) {\n            fibfib3 = fibfibfib1 + fibfib2;\n        \
    \    fibfib2 = fibfib1;\n            fibfib1 = fibfib3;\n        }\n        return\
    \ fibfib3;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc9avffst.cs(36,23): error CS0103: The name ''fibfibfib1'' does not exist
    in the current context

    /tmp/tmpc9avffst.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    '
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n\
    \        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long fibfib4 =\
    \ 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long fibfib7\
    \ = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long fibfib10\
    \ = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long fibfib13\
    \ = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long fibfib16\
    \ = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long fibfib19\
    \ = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long fibfib22\
    \ = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long fibfib25\
    \ = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long fibfib28\
    \ = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long fibfib31\
    \ = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long fibfib34\
    \ = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long fibfib37\
    \ = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long fibfib40\
    \ = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long fibfib43\
    \ = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long fibfib46\
    \ = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long fibfib49\
    \ = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long fibfib52\
    \ = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long fibfib55\
    \ = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long fibfib58\
    \ = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long fibfib61\
    \ = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long fibfib64\
    \ = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long fibfib67\
    \ = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long fibfib70\
    \ = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long fibfib73\
    \ = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok0go5q5.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 3) return 0;\n        if (n == 2) return\
    \ 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4674837c67d94834b4f1d9200e69a719>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4674837c67d94834b4f1d9200e69a719>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = fibfib + Fibfib(n - 1) + Fibfib(n\
    \ - 2);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c406454c8534077b2472407770b6c35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c406454c8534077b2472407770b6c35>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n\
    \        long fibfib2 = Fibfib(n - 2);\n        long fibfib3 = Fibfib(n - 3);\n\
    \        fibfib = (fibfib1 + fibfib2 + fibfib3);\n        return fibfib;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long a = Fibfib(n-1);\n        long b = Fibfib(n-2);\n   \
    \     long c = Fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5 =\
    \ 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8\
    \ = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11\
    \ = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14\
    \ = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17\
    \ = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20\
    \ = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23\
    \ = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26\
    \ = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29\
    \ = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32\
    \ = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35\
    \ = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38\
    \ = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41\
    \ = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44\
    \ = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47\
    \ = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50\
    \ = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53\
    \ = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56\
    \ = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59\
    \ = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62\
    \ = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65\
    \ = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68\
    \ = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71\
    \ = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n        long fibfib74\
    \ = 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj5v24kv.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpsj5v24kv.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 1;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 0) return 0;\n        if (n <= 2) return\
    \ 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3aacda99f50474c9f468f321af537d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3aacda99f50474c9f468f321af537d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0)\n     \
    \       return fibfib;\n        if (n == 1)\n            return fibfib;\n    \
    \    if (n == 2)\n            return fibfib;\n        if (n <= 3)\n          \
    \  return fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        else\n\
    \            return fibfib + Fibfib(n - 3) + Fibfib(n - 2) + Fibfib(n - 1);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaea962f0e4a4f8bb78642facacbc2d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eaea962f0e4a4f8bb78642facacbc2d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993dc9f94a2047f099e2e4151e81a805>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993dc9f94a2047f099e2e4151e81a805>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n\
    \ - 2);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8gmb3azg.cs(33,31): error CS0149: Method name expected

    /tmp/tmp8gmb3azg.cs(33,47): error CS0149: Method name expected

    '
  timestamp: 1659800095
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long a = Fibfib(n-1);\n        long b = Fibfib(n-2);\n   \
    \     long c = Fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmpsily8l.cs(33,31): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,47): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,63): error CS0149: Method name expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0)\n     \
    \       fibfib = 0;\n        else if (n == 1)\n            fibfib = 0;\n     \
    \   else if (n == 2)\n            fibfib = 1;\n        else\n            fibfib\
    \ = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return fibfib;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long a = Fibfib(n-1);\n        long b = Fibfib(n-2);\n   \
    \     long c = Fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        if\
    \ (n == 4) return 2;\n        if (n == 5) return 3;\n        if (n == 6) return\
    \ 5;\n        if (n == 7) return 8;\n        if (n == 8) return 13;\n        if\
    \ (n == 9) return 21;\n        if (n == 10) return 34;\n        if (n == 11) return\
    \ 55;\n        if (n == 12) return 89;\n        if (n == 13) return 144;\n   \
    \     if (n == 14) return 233;\n        if (n == 15) return 377;\n        if (n\
    \ == 16) return 610;\n        if (n == 17) return 987;\n        if (n == 18) return\
    \ 1569;\n        if (n == 19) return 2584;\n        if (n == 20) return 4181;\n\
    \        if (n == 21) return 6765;\n        if (n == 22) return 10923;\n     \
    \   if (n == 23) return 17710;\n        if (n == 24) return 28657;\n        if\
    \ (n == 25) return 46368;\n        if (n == 26) return 75025;\n        if (n ==\
    \ 27) return 121393;\n        if (n == 28) return 196418;\n        if (n == 29)\
    \ return 317811;\n        if (n == 30) return 514229;\n        if (n == 31) return\
    \ 832047;\n        if (n == 32) return 1346269;\n        if (n == 33) return 2178309;\n\
    \        if (n == 34) return 3524578;\n        if (n == 35) return 5702887;\n\
    \        if (n == 36) return 9227465;\n        if (n == 37) return 14930352;\n\
    \        if (n == 38) return 24157817;\n        if (n == 39) return 390881695;\n\
    \        if (n == 40) return 59029694;\n        if (n == 41) return 76922565;\n\
    \        if (n == 42) return 102508394;\n        if (n == 43) return 154800991;\n\
    \        if (n == 44) return 25047303;\n        if (n == 45) return 41084041;\n\
    \        if (n == 46) return 6765279;\n        if (n == 47) return 100957953;\n\
    \        if (n == 48) return 161514151;\n        if (n == 49) return 259690949;\n\
    \        if (n == 50) return 421990217;\n        if (n == 51) return 636306087;\n\
    \        if (n == 52) return 1055526059;\n        if (n == 53) return 1684275393;\n\
    \        if (n == 54) return 2616393193;\n        if (n == 55) return 4334944373;\n\
    \        if (n == 56) return 6557470319;\n        if (n == 57) return 9082667109;\n\
    \        if (n == 58) return 14356452879;\n        if (n == 59) return 21004291669;\n\
    \        if (n == 60) return \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpey6btit4.cs(82,28): error CS1525: Invalid expression term ''}''

    /tmp/tmpey6btit4.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmpsily8l.cs(33,31): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,47): error CS0149: Method name expected

    /tmp/tmpmpsily8l.cs(33,63): error CS0149: Method name expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n\
    \        long fibfib2 = Fibfib(n - 2);\n        long fibfib3 = Fibfib(n - 3);\n\
    \        fibfib = fibfib1 + fibfib2 + fibfib3;\n        return fibfib;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800101
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        if (n == 3) return 1;\n        if\
    \ (n == 4) return 2;\n        if (n == 5) return 3;\n        if (n == 6) return\
    \ 5;\n        if (n == 7) return 8;\n        if (n == 8) return 13;\n        if\
    \ (n == 9) return 21;\n        if (n == 10) return 34;\n        if (n == 11) return\
    \ 55;\n        if (n == 12) return 89;\n        if (n == 13) return 144;\n   \
    \     if (n == 14) return 233;\n        if (n == 15) return 377;\n        if (n\
    \ == 16) return 610;\n        if (n == 17) return 987;\n        if (n == 18) return\
    \ 1569;\n        if (n == 19) return 2584;\n        if (n == 20) return 4181;\n\
    \        if (n == 21) return 6765;\n        if (n == 22) return 10923;\n     \
    \   if (n == 23) return 17710;\n        if (n == 24) return 28657;\n        if\
    \ (n == 25) return 46368;\n        if (n == 26) return 75025;\n        if (n ==\
    \ 27) return 121393;\n        if (n == 28) return 196418;\n        if (n == 29)\
    \ return 317811;\n        if (n == 30) return 514229;\n        if (n == 31) return\
    \ 832047;\n        if (n == 32) return 1346269;\n        if (n == 33) return 2178309;\n\
    \        if (n == 34) return 3524578;\n        if (n == 35) return 5702887;\n\
    \        if (n == 36) return 9227465;\n        if (n == 37) return 14930352;\n\
    \        if (n == 38) return 24157817;\n        if (n == 39) return 390881695;\n\
    \        if (n == 40) return 63245986;\n        if (n == 41) return 1269545649;\n\
    \        if (n == 42) return 2516589337;\n        if (n == 43) return 509419641;\n\
    \        if (n == 44) return 7842276243;\n        if (n == 45) return 11343364571;\n\
    \        if (n == 46) return 174908897471;\n        if (n == 47) return 218922994663;\n\
    \        if (n == 48) return 322564655518;\n        if (n == 49) return 430584824893;\n\
    \        if (n == 50) return 564509566653;\n        if (n == 51) return 740856950684;\n\
    \        if (n == 52) return 1039521484677;\n        if (n == 53) return 1548344966135;\n\
    \        if (n == 54) return 2036300957343;\n        if (n == 55) return 308062660154;\n\
    \        if (n == 56) return 415078626513;\n        if (n == 57) return 516723315489;\n\
    \        if (n == \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmposx3l0oc.cs(80,17): error CS1525: Invalid expression term ''}''

    /tmp/tmposx3l0oc.cs(80,17): error CS1026: ) expected

    /tmp/tmposx3l0oc.cs(80,17): error CS1002: ; expected

    '
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        if (n == 0) {\n\
    \            fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 1;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib3 = fibfib1 + fibfib2;\n            fibfib2\
    \ = fibfib1;\n            fibfib1 = fibfib3;\n            fibfib = fibfib1 + fibfib2;\n\
    \        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9572bfcdbf374793a5d6d2a72c4502a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9572bfcdbf374793a5d6d2a72c4502a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = fibfib + Fibfib(n - 1) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n\
    \        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long fibfib4 =\
    \ 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long fibfib7\
    \ = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long fibfib10\
    \ = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long fibfib13\
    \ = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long fibfib16\
    \ = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long fibfib19\
    \ = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long fibfib22\
    \ = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long fibfib25\
    \ = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long fibfib28\
    \ = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long fibfib31\
    \ = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long fibfib34\
    \ = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long fibfib37\
    \ = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long fibfib40\
    \ = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long fibfib43\
    \ = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long fibfib46\
    \ = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long fibfib49\
    \ = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long fibfib52\
    \ = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long fibfib55\
    \ = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long fibfib58\
    \ = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long fibfib61\
    \ = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long fibfib64\
    \ = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long fibfib67\
    \ = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long fibfib70\
    \ = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long fibfib73\
    \ = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok0go5q5.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 1;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a915c3089d78462eb769512057755956>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n\
    \        long fibfib2 = fibfib1;\n        long fibfib3 = fibfib2;\n        long\
    \ fibfib4 = fibfib3;\n        long fibfib5 = fibfib4;\n        long fibfib6 =\
    \ fibfib5;\n        long fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n\
    \        long fibfib9 = fibfib8;\n        long fibfib10 = fibfib9;\n        long\
    \ fibfib11 = fibfib10;\n        long fibfib12 = fibfib11;\n        long fibfib13\
    \ = fibfib12;\n        long fibfib14 = fibfib13;\n        long fibfib15 = fibfib14;\n\
    \        long fibfib16 = fibfib15;\n        long fibfib17 = fibfib16;\n      \
    \  long fibfib18 = fibfib17;\n        long fibfib19 = fibfib18;\n        long\
    \ fibfib20 = fibfib19;\n        long fibfib21 = fibfib20;\n        long fibfib22\
    \ = fibfib21;\n        long fibfib23 = fibfib22;\n        long fibfib24 = fibfib23;\n\
    \        long fibfib25 = fibfib24;\n        long fibfib26 = fibfib25;\n      \
    \  long fibfib27 = fibfib26;\n        long fibfib28 = fibfib27;\n        long\
    \ fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n        long fibfib31\
    \ = fibfib30;\n        long fibfib32 = fibfib31;\n        long fibfib33 = fibfib32;\n\
    \        long fibfib34 = fibfib33;\n        long fibfib35 = fibfib34;\n      \
    \  long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n        long\
    \ fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long fibfib40\
    \ = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42 = fibfib41;\n\
    \        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n      \
    \  long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long\
    \ fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49\
    \ = fibfib48;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkch63fwp.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n\
    \        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long fibfib4 =\
    \ 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long fibfib7\
    \ = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long fibfib10\
    \ = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long fibfib13\
    \ = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long fibfib16\
    \ = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long fibfib19\
    \ = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long fibfib22\
    \ = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long fibfib25\
    \ = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long fibfib28\
    \ = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long fibfib31\
    \ = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long fibfib34\
    \ = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long fibfib37\
    \ = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long fibfib40\
    \ = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long fibfib43\
    \ = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long fibfib46\
    \ = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long fibfib49\
    \ = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long fibfib52\
    \ = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long fibfib55\
    \ = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long fibfib58\
    \ = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long fibfib61\
    \ = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long fibfib64\
    \ = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long fibfib67\
    \ = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long fibfib70\
    \ = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long fibfib73\
    \ = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok0go5q5.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1)\n            return 0;\n\
    \        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        if (n == 1) {\n            fibfib =\
    \ 0;\n        }\n        if (n == 2) {\n            fibfib = 1;\n        }\n \
    \       if (n >= 3) {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n\
    \ - 2);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8gmb3azg.cs(33,31): error CS0149: Method name expected

    /tmp/tmp8gmb3azg.cs(33,47): error CS0149: Method name expected

    '
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 1;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b7038fa0a514c999b82ff7a5dd58fa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib7\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7a68qps7.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 1;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n - 1) + Fibfib(n\
    \ - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d520994837941ff93b9d990a0fbff54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d520994837941ff93b9d990a0fbff54>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) {\n            return 0;\n      \
    \  }\n        if (n == 1) {\n            return 1;\n        }\n        if (n ==\
    \ 2) {\n            return 1;\n        }\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8ecc8df2f3d14d28b02d55bbaf073c59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        if (n == 2) {\n            return 1;\n        }\n        return\
    \ Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n\
    \        long fibfib2 = 0;\n        long fibfib3 = 0;\n        long fibfib4 =\
    \ 0;\n        long fibfib5 = 0;\n        long fibfib6 = 0;\n        long fibfib7\
    \ = 0;\n        long fibfib8 = 0;\n        long fibfib9 = 0;\n        long fibfib10\
    \ = 0;\n        long fibfib11 = 0;\n        long fibfib12 = 0;\n        long fibfib13\
    \ = 0;\n        long fibfib14 = 0;\n        long fibfib15 = 0;\n        long fibfib16\
    \ = 0;\n        long fibfib17 = 0;\n        long fibfib18 = 0;\n        long fibfib19\
    \ = 0;\n        long fibfib20 = 0;\n        long fibfib21 = 0;\n        long fibfib22\
    \ = 0;\n        long fibfib23 = 0;\n        long fibfib24 = 0;\n        long fibfib25\
    \ = 0;\n        long fibfib26 = 0;\n        long fibfib27 = 0;\n        long fibfib28\
    \ = 0;\n        long fibfib29 = 0;\n        long fibfib30 = 0;\n        long fibfib31\
    \ = 0;\n        long fibfib32 = 0;\n        long fibfib33 = 0;\n        long fibfib34\
    \ = 0;\n        long fibfib35 = 0;\n        long fibfib36 = 0;\n        long fibfib37\
    \ = 0;\n        long fibfib38 = 0;\n        long fibfib39 = 0;\n        long fibfib40\
    \ = 0;\n        long fibfib41 = 0;\n        long fibfib42 = 0;\n        long fibfib43\
    \ = 0;\n        long fibfib44 = 0;\n        long fibfib45 = 0;\n        long fibfib46\
    \ = 0;\n        long fibfib47 = 0;\n        long fibfib48 = 0;\n        long fibfib49\
    \ = 0;\n        long fibfib50 = 0;\n        long fibfib51 = 0;\n        long fibfib52\
    \ = 0;\n        long fibfib53 = 0;\n        long fibfib54 = 0;\n        long fibfib55\
    \ = 0;\n        long fibfib56 = 0;\n        long fibfib57 = 0;\n        long fibfib58\
    \ = 0;\n        long fibfib59 = 0;\n        long fibfib60 = 0;\n        long fibfib61\
    \ = 0;\n        long fibfib62 = 0;\n        long fibfib63 = 0;\n        long fibfib64\
    \ = 0;\n        long fibfib65 = 0;\n        long fibfib66 = 0;\n        long fibfib67\
    \ = 0;\n        long fibfib68 = 0;\n        long fibfib69 = 0;\n        long fibfib70\
    \ = 0;\n        long fibfib71 = 0;\n        long fibfib72 = 0;\n        long fibfib73\
    \ = 0;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok0go5q5.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpok0go5q5.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n <= 1)\n            return 0;\n        else\n\
    \            return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993dc9f94a2047f099e2e4151e81a805>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993dc9f94a2047f099e2e4151e81a805>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0)\n            return 0;\n        if\
    \ (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n\
    \        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47aed26eb71a498ba6d744a07294077a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib7\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7a68qps7.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n\
    \        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n        long\
    \ fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long fibfib11\
    \ = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13 = fibfib10;\n\
    \        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n      \
    \  long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n        long\
    \ fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long fibfib20\
    \ = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22 = fibfib19;\n\
    \        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n      \
    \  long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n        long\
    \ fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long fibfib29\
    \ = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31 = fibfib28;\n\
    \        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n      \
    \  long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n        long\
    \ fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long fibfib38\
    \ = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40 = fibfib37;\n\
    \        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n      \
    \  long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long\
    \ fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47\
    \ = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n\
    \        long fibfib50 = fibfib\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) ==\
    \ (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ikkoy81.cs(72,31): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0) return 0;\n        if (n == 1) return\
    \ 0;\n        if (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2)\
    \ + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0)\n     \
    \       fibfib = 0;\n        else if (n == 1)\n            fibfib = 0;\n     \
    \   else if (n == 2)\n            fibfib = 1;\n        else\n            fibfib\
    \ = fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return fibfib;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ fibfib1 + fibfib2;\n        long fibfib5 = fibfib3 + fibfib4;\n        long\
    \ fibfib6 = fibfibfib1 + fibfib5;\n        long fibfib7 = fibfib3 + fibfib6;\n\
    \        long fibfib8 = fibfib7 + fibfib8;\n        long fibfib9 = fibfib8 + fibfib9;\n\
    \        long fibfib10 = fibfib9 + fibfib10;\n        long fibfib11 = fibfib10\
    \ + fibfib11;\n        long fibfib12 = fibfib11 + fibfib12;\n        long fibfib13\
    \ = fibfib12 + fibfib13;\n        long fibfib14 = fibfib13 + fibfib14;\n     \
    \   long fibfib15 = fibfib14 + fibfib15;\n        long fibfib16 = fibfib15 + fibfib16;\n\
    \        long fibfib17 = fibfib16 + fibfib17;\n        long fibfib18 = fibfib17\
    \ + fibfib18;\n        long fibfib19 = fibfib18 + fibfib19;\n        long fibfib20\
    \ = fibfib19 + fibfib20;\n        long fibfib21 = fibfib20 + fibfib21;\n     \
    \   long fibfib22 = fibfib21 + fibfib22;\n        long fibfib23 = fibfib22 + fibfib23;\n\
    \        long fibfib24 = fibfib23 + fibfib24;\n        long fibfib25 = fibfib24\
    \ + fibfib25;\n        long fibfib26 = fibfib25 + fibfib26;\n        long fibfib27\
    \ = fibfib26 + fibfib27;\n        long fibfib28 = fibfib27 + fibfib28;\n     \
    \   long fibfib29 = fibfib28 + fibfib29;\n        long fibfib30 = fibfib29 + fibfib30;\n\
    \        long fibfib31 = fibfib30 + fibfib31;\n        long fibfib32 = fibfib31\
    \ + fibfib32;\n        long fibfib33 = fibfib32 + fibfib33;\n        long fibfib34\
    \ = fibfib33 + fibfib34;\n        long fibfib35 = fibfib34 + fibfib35;\n     \
    \   long fibfib36 = fibfib35 + fibfib36;\n        long fibfib37 = fibfib36 + fibfib37;\n\
    \        long fibfib\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n\
    \    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n\
    \    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) ==\
    \ (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_1z3quy.cs(60,20): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n\
    \        long fibfib2 = 1;\n        long fibfib3 = 1;\n        long fibfib4 =\
    \ 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n        long fibfib7\
    \ = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n        long fibfib10\
    \ = 1;\n        long fibfib11 = 1;\n        long fibfib12 = 1;\n        long fibfib13\
    \ = 1;\n        long fibfib14 = 1;\n        long fibfib15 = 1;\n        long fibfib16\
    \ = 1;\n        long fibfib17 = 1;\n        long fibfib18 = 1;\n        long fibfib19\
    \ = 1;\n        long fibfib20 = 1;\n        long fibfib21 = 1;\n        long fibfib22\
    \ = 1;\n        long fibfib23 = 1;\n        long fibfib24 = 1;\n        long fibfib25\
    \ = 1;\n        long fibfib26 = 1;\n        long fibfib27 = 1;\n        long fibfib28\
    \ = 1;\n        long fibfib29 = 1;\n        long fibfib30 = 1;\n        long fibfib31\
    \ = 1;\n        long fibfib32 = 1;\n        long fibfib33 = 1;\n        long fibfib34\
    \ = 1;\n        long fibfib35 = 1;\n        long fibfib36 = 1;\n        long fibfib37\
    \ = 1;\n        long fibfib38 = 1;\n        long fibfib39 = 1;\n        long fibfib40\
    \ = 1;\n        long fibfib41 = 1;\n        long fibfib42 = 1;\n        long fibfib43\
    \ = 1;\n        long fibfib44 = 1;\n        long fibfib45 = 1;\n        long fibfib46\
    \ = 1;\n        long fibfib47 = 1;\n        long fibfib48 = 1;\n        long fibfib49\
    \ = 1;\n        long fibfib50 = 1;\n        long fibfib51 = 1;\n        long fibfib52\
    \ = 1;\n        long fibfib53 = 1;\n        long fibfib54 = 1;\n        long fibfib55\
    \ = 1;\n        long fibfib56 = 1;\n        long fibfib57 = 1;\n        long fibfib58\
    \ = 1;\n        long fibfib59 = 1;\n        long fibfib60 = 1;\n        long fibfib61\
    \ = 1;\n        long fibfib62 = 1;\n        long fibfib63 = 1;\n        long fibfib64\
    \ = 1;\n        long fibfib65 = 1;\n        long fibfib66 = 1;\n        long fibfib67\
    \ = 1;\n        long fibfib68 = 1;\n        long fibfib69 = 1;\n        long fibfib70\
    \ = 1;\n        long fibfib71 = 1;\n        long fibfib72 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n\
    \    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n\
    \    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n\
    \    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L)) ==\
    \ (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w_85aag.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmp_w_85aag.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        long fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n\
    \        long fibfib2 = Fibfib(n - 2);\n        long fibfib3 = Fibfib(n - 3);\n\
    \        fibfib = fibfib1 + fibfib2 + fibfib3;\n        return fibfib;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        if (n == 0) {\n   \
    \         fibfib = 0;\n        }\n        else if (n == 1) {\n            fibfib\
    \ = 0;\n        }\n        else if (n == 2) {\n            fibfib = 1;\n     \
    \   }\n        else {\n            fibfib = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))\
    \ == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))\
    \ == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))\
    \ == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800094
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        if (n == 0 || n == 1) {\n            return 0;\n\
    \        }\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==\
    \ (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800100
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib(1)\n    // 0\n   \
    \ // >>> fibfib(5)\n    // 4\n    // >>> fibfib(8)\n    // 24\n    public static\
    \ long Fibfib(long n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n\
    \        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n \
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n       \
    \ if (n == 2) {\n            fibfib = 1;\n        }\n        if (n >= 3) {\n \
    \           fibfib2 = Fibfib(n - 1);\n            fibfib3 = Fibfib(n - 2);\n \
    \           fibfib = fibfib2 + fibfib3;\n        }\n        return fibfib;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))\
    \ == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))\
    \ == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))\
    \ == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))\
    \ == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6fe78169f53403fb499d13956868a38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6fe78169f53403fb499d13956868a38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800095

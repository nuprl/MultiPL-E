name: HumanEval_104_unique_digits
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a list of positive integers x. return a sorted list of\
  \ all \n    // elements that hasn't any even digit.\n    // Note: Returned list\
  \ should be sorted in increasing order.\n    // For example:\n    // >>> unique_digits([15,\
  \ 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152, 323, 1422, 10])\n\
  \    // []\n    public static List<long> UniqueDigits(List<long> x) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
  \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
  \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
  \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
  \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
  \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
  \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long temp =\
    \ 0;\n        long sum = 0;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            while (temp > 0) {\n                sum = sum + temp % 10;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 ==\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long sum =\
    \ 0;\n        long temp = 0;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            while (temp > 0) {\n                sum += temp % 10;\n  \
    \              temp /= 10;\n            }\n            if (sum % 2 == 0) {\n \
    \               result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long sum = 0;\n        long\
    \ max = 0;\n        foreach (long i in x) {\n            sum += i;\n         \
    \   if (sum > max) {\n                max = sum;\n            }\n        }\n \
    \       long count = 0;\n        long sum2 = 0;\n        foreach (long i in x)\
    \ {\n            sum2 += i;\n            if (sum2 > max) {\n                count++;\n\
    \            }\n        }\n        if (count == 0) {\n            return result;\n\
    \        }\n        long max2 = max;\n        long sum3 = 0;\n        foreach\
    \ (long i in x) {\n            sum3 += i;\n            if (sum3 > max2) {\n  \
    \              max2 = sum3;\n            }\n        }\n        long count2 = 0;\n\
    \        long sum4 = 0;\n        foreach (long i in x) {\n            sum4 +=\
    \ i;\n            if (sum4 > max2) {\n                count2++;\n            }\n\
    \        }\n        long max3 = max2;\n        long sum5 = 0;\n        foreach\
    \ (long i in x) {\n            sum5 += i;\n            if (sum5 > max3) {\n  \
    \              max3 = sum5;\n            }\n        }\n        long count3 = 0;\n\
    \        long sum6 = 0;\n        foreach (long i in x) {\n            sum6 +=\
    \ i;\n            if (sum6 > max3) {\n                count3++;\n            }\n\
    \        }\n        long max4 = max3;\n        long sum7 = 0;\n        foreach\
    \ (long i in x) {\n            sum7 += i;\n            if (sum7 > max4) {\n  \
    \              max4 = sum7;\n            }\n        }\n        long count4 = 0;\n\
    \        long sum8 = 0;\n        foreach (long i in x) {\n            sum8 +=\
    \ i;\n            if (sum8 > max4) {\n                count4++;\n            }\n\
    \        }\n        long max5 = max4;\n        long sum9 = 0;\n        foreach\
    \ (long i in x) {\n            sum9 += i;\n            if (sum9 > max5) {\n  \
    \              max5 = sum9;\n            }\n        }\n        long count5 = 0;\n\
    \        long sum10 = 0;\n        foreach (long i in x) {\n            sum10 +=\
    \ i;\n            if (sum10 > max5) {\n                count5++;\n           \
    \ }\n        }\n        long max6 = max5;\n        long sum11 = 0;\n        foreach\
    \ (long i in x) {\n            sum11 += i;\n            if (sum11 > max6) {\n\
    \                max6 = sum11;\n            }\n        }\n        long count6\
    \ = 0;\n        long sum12 = 0;\n        foreach (long i in x) {\n           \
    \ sum12 += i;\n            if (sum12 > max6) {\n                count6++;\n  \
    \          }\n        }\n        long max7 = max6;\n        long sum13 = 0;\n",
  "        List<long> result = new List<long>();\n        long temp = 0;\n       \
    \ long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n    \
    \        while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n   \
    \             temp /= 10;\n            }\n            if (sum % 2 == 0) {\n  \
    \              result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long sum = 0;\n        foreach\
    \ (long i in x) {\n            sum += i;\n        }\n        long lastDigit =\
    \ sum % 10;\n        long lastDigitSum = 0;\n        long lastDigitSum2 = 0;\n\
    \        foreach (long i in x) {\n            long digit = i % 10;\n         \
    \   if (digit != lastDigit) {\n                lastDigitSum = lastDigitSum2;\n\
    \                lastDigitSum2 = 0;\n                result.Add(lastDigitSum);\n\
    \            }\n            lastDigitSum2 += i;\n        }\n        if (lastDigitSum2\
    \ != 0) {\n            result.Add(lastDigitSum2);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long temp = 0;\n       \
    \ long count = 0;\n        long sum = 0;\n        foreach (long i in x) {\n  \
    \          temp = i;\n            while (temp > 0) {\n                temp = temp\
    \ / 10;\n                count++;\n            }\n            sum = sum + temp;\n\
    \            if (sum % 2 == 0) {\n                result.Add(i);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                temp = temp / 10;\n         \
    \       if (temp % 2 == 0) {\n                    result.Add(i);\n           \
    \         break;\n                }\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long temp\
    \ = 0;\n        long sum = 0;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            while (temp != 0) {\n                sum += temp % 10;\n \
    \               temp /= 10;\n            }\n            if (sum % 2 != 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long sum = 0;\n        foreach\
    \ (long i in x) {\n            sum += i;\n        }\n        long temp = sum;\n\
    \        while (temp != 0) {\n            temp = temp / 10;\n            result.Add(temp);\n\
    \        }\n        List<long> result = new List<long>();\n        foreach (long\
    \ i in x) {\n            long sum = 0;\n            foreach (long j in x) {\n\
    \                sum += j;\n            }\n            if (sum % i == 0) {\n \
    \               result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long temp = 0;\n       \
    \ long temp2 = 0;\n        foreach (long i in x) {\n            temp = i;\n  \
    \          while (temp > 0) {\n                temp2 = temp % 10;\n          \
    \      if (temp2 % 2 == 0) {\n                    result.Add(temp);\n        \
    \        }\n                temp = temp / 10;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ long temp = 0;\n        long sum = 0;\n        foreach (long i in x) {\n   \
    \         temp = i;\n            while (temp > 0) {\n                sum = sum\
    \ * 10 + temp % 10;\n                temp = temp / 10;\n            }\n      \
    \      if (sum % 2 == 0) {\n                result.Add(i);\n            }\n  \
    \          sum = 0;\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long temp = 0;\n        long sum = 0;\n       \
    \ foreach (long i in x) {\n            temp = i;\n            while (temp > 0)\
    \ {\n                sum = sum * 10 + temp % 10;\n                temp = temp\
    \ / 10;\n            }\n            if (sum % 2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long temp = 0;\n        long temp2 = 0;\n     \
    \   long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n      \
    \  long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n       \
    \ long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n      \
    \  long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n    \
    \    long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n  \
    \      long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84 = 0;\n        long temp", "        List<long> result = new\
    \ List<long>();\n        long temp = 0;\n        long temp2 = 0;\n        long\
    \ temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6\
    \ = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 =\
    \ 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12\
    \ = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15\
    \ = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18\
    \ = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21\
    \ = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24\
    \ = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27\
    \ = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30\
    \ = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33\
    \ = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36\
    \ = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39\
    \ = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42\
    \ = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45\
    \ = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48\
    \ = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51\
    \ = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54\
    \ = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57\
    \ = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60\
    \ = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63\
    \ = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66\
    \ = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69\
    \ = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72\
    \ = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75\
    \ = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78\
    \ = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81\
    \ = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        long temp84\
    \ = 0;\n        long temp", "        List<long> result = new List<long>();\n \
    \       long digit = 0;\n        long sum = 0;\n        foreach (long i in x)\
    \ {\n            digit = i % 10;\n            sum += digit;\n            if (sum\
    \ % 2 == 0) {\n                result.Add(i);\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n   \
    \         while (temp > 0) {\n                temp = temp / 10;\n            \
    \    if (temp % 2 != 0) {\n                    result.Add(i);\n              \
    \      break;\n                }\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long temp = 0;\n       \
    \ long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n    \
    \        while (temp > 0) {\n                sum = sum + temp % 10;\n        \
    \        temp = temp / 10;\n            }\n            if (sum % 2 == 0) {\n \
    \               result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long temp = 0;\n       \
    \ foreach (long i in x) {\n            temp = i;\n            while (temp > 0)\
    \ {\n                if (temp % 2 == 0) {\n                    result.Add(temp);\n\
    \                    break;\n                }\n                temp = (temp /\
    \ 2);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long temp = 0;\n        foreach (long i\
    \ in x) {\n            temp = i;\n            while (temp > 0) {\n           \
    \     temp = temp / 10;\n                if (temp % 2 == 0) {\n              \
    \      result.Add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long temp = 0;\n        foreach (long i in x) {\n   \
    \         temp = i;\n            while (temp > 0) {\n                temp = temp\
    \ / 10;\n                if (temp % 2 == 0) {\n                    result.Add(i);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_92_any_int
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true\
  \ if one of the numbers is equal to the sum of the other two, and all numbers are\
  \ integers.\n    // Returns false in any other cases.\n    // Examples\n    // any_int(5,\
  \ 2, 7) \u279E True\n    // any_int(3, 2, 2) \u279E False\n    // any_int(3, -2,\
  \ 1) \u279E True\n    // any_int(3.6, -2.2, 2) \u279E False\n    public static bool\
  \ AnyInt(float x, float y, float z) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
  \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
  \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==\
  \ (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
  \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
  \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)\
  \ == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n\
  \    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),\
  \ (float)4L, (float)7L) == (false));\n    }\n\n}\n"
completions: ["        float sum = x + y + z;\n        if (sum == (int)sum) {\n  \
    \          return true;\n        }\n        return false;", "        if (Math.Abs(x)\
    \ > Math.Abs(y) && Math.Abs(x) > Math.Abs(z)) {\n            return true;\n  \
    \      }\n        if (Math.Abs(y) > Math.Abs(x) && Math.Abs(y) > Math.Abs(z))\
    \ {\n            return true;\n        }\n        if (Math.Abs(z) > Math.Abs(x)\
    \ && Math.Abs(z) > Math.Abs(y)) {\n            return true;\n        }\n     \
    \   return false;", '        return Math.Abs(x - y + z) == Math.Abs(x + y + z);',
  "        float sum = x + y + z;\n        if (sum == (float)Math.Round(sum)) {\n\
    \            return true;\n        }\n        return false;", "        float sum\
    \ = (x + y + z);\n        return ((sum == x) || (sum == y) || (sum == z));", " \
    \       float sum = x + y + z;\n        if (sum == (float)Math.Round(sum)) {\n\
    \            return true;\n        }\n        return false;", '        return
    Math.Abs(x - y + z) == Math.Abs(x + y + z);', '        return Math.Abs(x - y +
    z) < 0.0001f;', "        float sum = (x + y + z);\n        if (sum == (float)Math.Round(sum))\
    \ {\n            return true;\n        }\n        return false;", '        return
    Math.Abs(x - y + z) < 0.0001f;', '        return Math.Abs(x - y) <= Math.Abs(x)
    && Math.Abs(x - z) <= Math.Abs(x) && Math.Abs(y - z) <= Math.Abs(x);', "     \
    \   float sum = x + y + z;\n        if (sum == (float)Math.Round(sum)) {\n   \
    \         return true;\n        }\n        return false;", '        return Math.Abs(x
    - y + z) <= 0.0001f;', '        return Math.Abs(x - y + z) < 0.0001f;', "    \
    \    float sum = (x + y + z);\n        if (sum == (float)Math.Round(sum)) {\n\
    \            return true;\n        }\n        return false;", "        float sum\
    \ = (x + y + z);\n        if (sum == (int)sum) {\n            return true;\n \
    \       }\n        return false;", '        return Math.Abs(x - y + z) < 0.0001f;',
  '        return Math.Abs(x - y + z) <= 0.0001f;', "        float sum = (x + y +\
    \ z);\n        if (sum == (float)Math.Round(sum)) {\n            return true;\n\
    \        }\n        return false;", '        return Math.Abs(x - y + z) == Math.Abs(x
    + y + z);']
stop_tokens:
- "\n    }\n"

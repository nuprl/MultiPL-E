name: HumanEval_157_right_angle_triangle
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given the lengths of the three sides of a triangle. Return True\
  \ if the three\n    // sides form a right-angled triangle, False otherwise.\n  \
  \  // A right-angled triangle is a triangle in which one angle is right angle or\
  \ \n    // 90 degree.\n    // Example:\n    // right_angle_triangle(3, 4, 5) ==\
  \ True\n    // right_angle_triangle(1, 2, 3) == False\n    public static bool RightAngleTriangle(long\
  \ a, long b, long c) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RightAngleTriangle((3L),\
  \ (4L), (5L)) == (true));\n    Debug.Assert(RightAngleTriangle((1L), (2L), (3L))\
  \ == (false));\n    Debug.Assert(RightAngleTriangle((10L), (6L), (8L)) == (true));\n\
  \    Debug.Assert(RightAngleTriangle((2L), (2L), (2L)) == (false));\n    Debug.Assert(RightAngleTriangle((7L),\
  \ (24L), (25L)) == (true));\n    Debug.Assert(RightAngleTriangle((10L), (5L), (7L))\
  \ == (false));\n    Debug.Assert(RightAngleTriangle((5L), (12L), (13L)) == (true));\n\
  \    Debug.Assert(RightAngleTriangle((15L), (8L), (17L)) == (true));\n    Debug.Assert(RightAngleTriangle((48L),\
  \ (55L), (73L)) == (true));\n    Debug.Assert(RightAngleTriangle((1L), (1L), (1L))\
  \ == (false));\n    Debug.Assert(RightAngleTriangle((2L), (2L), (10L)) == (false));\n\
  \    }\n\n}\n"
completions: ["        long d = b * b - 4 * a * c;\n        if (d < 0)\n         \
    \   return false;\n        long e = Math.Sqrt(d);\n        long f = (long) Math.Sqrt(a\
    \ * a);\n        long g = (long) Math.Sqrt(b * b);\n        long h = (long) Math.Sqrt(c\
    \ * c);\n        long i = (long) Math.Sqrt(a * a + b * b + c * c);\n        long\
    \ j = (long) Math.Sqrt(a * a + c * c);\n        long k = (long) Math.Sqrt(b *\
    \ b + c * c);\n        long l = (long) Math.Sqrt(a * a * b + b * b + c * c + d\
    \ * d);\n        long m = (long) Math.Sqrt(a * a * b + c * c + d * d);\n     \
    \   long n = (long) Math.Sqrt(a * a * c + b * b + c * c + d * d);\n        long\
    \ o = (long) Math.Sqrt(a * a * c + c * c + d * d);\n        long p = (long) Math.Sqrt(a\
    \ * a * b + b * b * c + c * c + d * d);\n        long q = (long) Math.Sqrt(a *\
    \ a * b + c * c * d + b * b * c + c * c + d * d);\n        long r = (long) Math.Sqrt(a\
    \ * a * b + b * b * c + c * c * d + b * b * c + c * c + d * d);\n        long\
    \ s = (long) Math.Sqrt(a * a * b + c * c * d + b * b * c + c * c * d + b * b *\
    \ c + c * c + d * d);\n        long t = (long) Math.Sqrt(a * a * b + b * b * c\
    \ + c * c * d + b * b * c + c * c * d + b * b * c + c * c + d * d);\n        long\
    \ u = (long) Math.Sqrt(a * a * b + c * c * d + b * b * c + c * c * d + b * b *\
    \ c + c * c * d + b * b * c + c * c + d * d);\n        long v = (long) Math.Sqrt(a\
    \ * a * b + b * b * c + c * c * d + b * b * c + c * c * d + b * b * c + c * c\
    \ * d + b * b * c + c * c + d * d);\n        long w = (long) Math.Sqrt(a * a *\
    \ b + c * c * d + b * b * c + c * c * d + b * b * c + c * c * d + b * b * ", " \
    \       long ab = a - b;\n        long ac = c - a;\n        long bc = b - c;\n\
    \        long abc = ab + bc;\n        long acb = ac - bc;\n        long abcb =\
    \ abc + acb;\n        long abcc = abc * abc;\n        long acbc = acb * acb;\n\
    \        long abccc = abcc * abcc;\n        long acbcb = acbc * acbc;\n      \
    \  long abcccb = abccc * abccc;\n        long acbcbc = acbcb * acbcb;\n      \
    \  long abcccbc = abcccb * abcccb;\n        long acbcbcb = acbcbc * acbcbc;\n\
    \        long abcccbcb = abcccbc * abcccbc;\n        long acbcbcbc = acbcbcb *\
    \ acbcbcb;\n        long abcccbcb = abcccbc * abcccbcb;\n        long acbcbcbc\
    \ = acbcbcb * acbcbcbc;\n        long abcccbcb = abcccbc * abcccbcb;\n       \
    \ long acbcbcbc = acbcbcb * acbcbcbc;\n        long abcccbcb = abcccbc * abcccbcb;\n\
    \        long acbcbcbc = acbcbcb * acbcbcbc;\n        long abcccbcb = abcccbc\
    \ * abcccbcb;\n        long acbcbcbc = acbcbcb * acbcbcbc;\n        long abcccbcb\
    \ = abcccbc * abcccbcb;\n        long acbcbcbc = acbcbcb * acbcbcbc;\n       \
    \ long abcccbcb = abcccbc * abcccbcb;\n        long acbcbcbc = acbcbcb * acbcbcbc;\n\
    \        long abcccbcb = abcccbc * abcccbcb;\n        long acbcbcbc = acbcbcb\
    \ * acbcbcbc;\n        long abcccbcb = abcccbc * abcccbcb;\n        long acbcbcbc\
    \ = acbcbcb * acbcbcbc;\n        long abcccbcb = abcccbc * abcccbcb;\n       \
    \ long acbcbcbc = acbcbcb * acbcbcb", "        long ab = a - b;\n        long\
    \ ac = a - c;\n        long bc = b - c;\n        long abc = ab + bc;\n       \
    \ long acb = ac - bc;\n        long abcb = abc + bc;\n        long acbc = acb\
    \ + abc;\n        long abcac = abcb + ac;\n        long acbca = acbc + abc;\n\
    \        long abcacb = abcac + acb;\n        long acbcab = acbca * 2;\n      \
    \  long abcacbc = abcacb * 2;\n        long acbcabc = acbcab * 2;\n        long\
    \ abcacbca = abcacbc * 2;\n        long acbcabca = acbcabc * 2;\n        long\
    \ abcacbcab = abcacbca * 2;\n        long acbcabcab = acbcabca * 2;\n        long\
    \ abcacbcabc = abcacbcab * 2;\n        long acbcabcabc = acbcabcab * 2;\n    \
    \    long abcacbcabca = abcacbcabc * 2;\n        long acbcabcabca = acbcabcabc\
    \ * 2;\n        long abcacbcabcab = abcacbcabca * 2;\n        long acbcabcabcab\
    \ = acbcabcabca * 2;\n        long abcacbcabcabc = abcacbcabcab * 2;\n       \
    \ long acbcabcabcabc = acbcabcabcab * 2;\n        long abcacbcabcabca = abcacbcabcabc\
    \ * 2;\n        long acbcabcabcabca = acbcabcabcabc * 2;\n        long abcacbcabcabcab\
    \ = abcacbcabcabca * 2;\n        long acbcabcabcabcab = acbcabcabcabca * 2;\n\
    \        long abcacbcabcabcabc = abcacbcabcabcab * 2;\n        long acbcabcabcabcabc\
    \ = acbcabcabcabcab * 2;\n        long abcacbcabcabcabca = abcacbcabcabcabc *\
    \ 2;\n        long acbcabcabcabcabca = acbcabcabcabcabc * 2;\n        long abcacbcabcabcabcab\
    \ = abcacbcabcabcabcab * 2;\n        long acbcabcabcabcabcab = acbcabcabcabcabcab\
    \ * 2;\n        long abcacbcabcabcabcabc = abcacbcabcab", "        long ab = a\
    \ - b;\n        long ac = a - c;\n        long bc = b - c;\n        long acb =\
    \ ac * bc;\n        long abc = ab * bc;\n        long acbc = acb * bc;\n     \
    \   long abbc = abb * bc;\n        long acbbc = acbb * bc;\n        long abbbc\
    \ = abbb * bc;\n        long acbbbc = acbbbc * bc;\n        long abbbbc = abbbbc\
    \ * bc;\n        long acbbbbc = acbbbbc * bc;\n        long abbbbbc = abbbbbc\
    \ * bc;\n        long acbbbbbc = acbbbbbc * bc;\n        long abbbbbbc = abbbbbbc\
    \ * bc;\n        long acbbbbbbc = acbbbbbbc * bc;\n        long abbbbbbbc = abbbbbbbc\
    \ * bc;\n        long acbbbbbbbc = acbbbbbbbc * bc;\n        long abbbbbbbbc =\
    \ abbbbbbbbc * bc;\n        long acbbbbbbbbc = acbbbbbbbbc * bc;\n        long\
    \ abbbbbbbbbc = abbbbbbbbbc * bc;\n        long acbbbbbbbbbc = acbbbbbbbbbc *\
    \ bc;\n        long abbbbbbbbbbc = abbbbbbbbbbc * bc;\n        long acbbbbbbbbbbc\
    \ = acbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbc = abbbbbbbbbbbc * bc;\n  \
    \      long acbbbbbbbbbbbc = acbbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbbc\
    \ = abbbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbbc = acbbbbbbbbbbbbc * bc;\n\
    \        long abbbbbbbbbbbbbc = abbbbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbbbc\
    \ = acbbbbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbbbbc = abbbbbbbbbbbbbbc *\
    \ bc;\n        long acbbbbbbbbbbbbbbc = acbbbbbbbbbbbbbbc * bc;\n        long\
    \ abbbbbbbbbbbbbbbc = abbbbbbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbbbbbc\
    \ = acbbbbbbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbbbbbbc = abbbbbbbbbbbbbbbbc\
    \ * bc;\n        long acbbbbbbbbbbbbbbbbc = acbbbbbbbbbbbbbbbbc * bc;\n      \
    \  long abbbbbbbbbbbbbbbbbc = abbbbb", "        long ab = a - b;\n        long\
    \ ac = a - c;\n        long bc = b - c;\n        long acb = ac * bc;\n       \
    \ long abc = ab * bc;\n        long acbc = acb * bc;\n        long abbc = abb\
    \ * bc;\n        long acbcbc = acbcb * bc;\n        long abcbc = abcb * bc;\n\
    \        long acbcbcb = acbcbcb * bc;\n        long abcbcbc = abcbcb * bc;\n \
    \       long acbcbcbc = acbcbcbc * bc;\n        long abcbcbcb = abcbcbcb * bc;\n\
    \        long acbcbcbcb = acbcbcbcb * bc;\n        long abcbcbcbc = abcbcbcbc\
    \ * bc;\n        long acbcbcbcbc = acbcbcbcbc * bc;\n        long abcbcbcbcb =\
    \ abcbcbcbcb * bc;\n        long acbcbcbcbc = acbcbcbcbc * bc;\n        long abcbcbcbcb\
    \ = abcbcbcbcb * bc;\n        long acbcbcbcbc = acbcbcbcbc * bc;\n        long\
    \ abcbcbcbcb = abcbcbcbcb * bc;\n        long acbcbcbcbc = acbcbcbcbc * bc;\n\
    \        long abcbcbcbcb = abcbcbcbcb * bc;\n        long acbcbcbcbc = acbcbcbcbc\
    \ * bc;\n        long abcbcbcbcb = abcbcbcbcb * bc;\n        long acbcbcbcbc =\
    \ acbcbcbcbc * bc;\n        long abcbcbcbcb = abcbcbcbcb * bc;\n        long acbcbcbcbc\
    \ = acbcbcbcbc * bc;\n        long abcbcbcbcb = abcbcbcbcb * bc;\n        long\
    \ acbcbcbcbc = acbcbcbcbc * bc;\n        long abcbcbcbcb = abcbcbcbcb * bc;\n\
    \        long acbcbcbcbc = acbcbcbcbc * bc;\n        long abcbcbcbcb = abcbcbcbcb\
    \ * bc;\n        long acbcbcbcbc = acbcbcbcbc * bc;\n        ", "        long\
    \ ab = a - b;\n        long ac = c - a;\n        long bc = b - c;\n        long\
    \ acb = ac * bc;\n        long abc = ab * bc;\n        long acbc = acb * bc;\n\
    \        long acbcab = acbc * abc;\n        long acbcabc = acbcab * abc;\n   \
    \     long acbcabcb = acbcabc * abc;\n        long acbcabcbc = acbcabcb * abc;\n\
    \        long acbcabcbcb = acbcabcbc * abc;\n        long acbcabcbcbc = acbcabcbcb\
    \ * abc;\n        long acbcabcbcbcb = acbcabcbcbc * abc;\n        long acbcabcbcbcbc\
    \ = acbcabcbcbcb * abc;\n        long acbcabcbcbcbcb = acbcabcbcbcbc * abc;\n\
    \        long acbcabcbcbcbcbc = acbcabcbcbcbcb * abc;\n        long acbcabcbcbcbcbcb\
    \ = acbcabcbcbcbcbc * abc;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbc *\
    \ abc;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcb * abc;\n        long\
    \ acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * abc;\n        long acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbc * abc;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb\
    \ * abc;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbc * abc;\n      \
    \  long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * abc;\n        long acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * abc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbc\
    \ * abc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * abc;\n  \
    \      long acbcabcbcbcbcbcbcbcb = acbcabcbcb", "        long ab = a - b;\n  \
    \      long ac = c - a;\n        long bc = b - c;\n        long abc = ab + bc;\n\
    \        long acb = ac - bc;\n        long abcb = abc * bc;\n        long acbc\
    \ = acb * c;\n        long acbcab = acb * abc;\n        long acbcabc = acbcab\
    \ * c;\n        long acbcabcb = acbcabc * b;\n        long acbcabcbc = acbcabcb\
    \ * c;\n        long acbcabcbcb = acbcabcbc * b;\n        long acbcabcbcbc = acbcabcbcb\
    \ * c;\n        long acbcabcbcbcb = acbcabcbcbc * b;\n        long acbcabcbcbcbc\
    \ = acbcabcbcbcb * c;\n        long acbcabcbcbcbcb = acbcabcbcbcbc * b;\n    \
    \    long acbcabcbcbcbcbc = acbcabcbcbcbcb * c;\n        long acbcabcbcbcbcbcb\
    \ = acbcabcbcbcbcbc * b;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcb *\
    \ c;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * b;\n        long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbc * c;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb\
    \ * b;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * c;\n        long\
    \ acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * b;\n        long acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * c;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * b;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * c;\n        long\
    \ acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * b;\n        long acbcabcbcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbcbc * c;\n        long ", "        long side1 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        long side2 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        long side3 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n   \
    \     long side4 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        long side5\
    \ = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2));\n        long side6 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        long side7 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        long side8 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n   \
    \     long side9 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        long side10\
    \ = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        long side11 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n        long side12 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        long side13 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n  \
    \      long side14 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        long\
    \ side15 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        long side16 =\
    \ Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        long side17 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n        long side18 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        long side19 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n  \
    \      long side20 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        long\
    \ side21 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        long side22 =\
    \ Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        long side23 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n        long side24 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        long side25 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n  \
    \      long side26 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        long\
    \ side27 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        long side28 =\
    \ Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        long side29 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n        long side30 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        ", "        long ab = a - b;\n        long ac = a - c;\n     \
    \   long bc = b - c;\n        long acb = ac * bc;\n        long abc = ab * bc;\n\
    \        long acbc = acb * bc;\n        long abbc = abb * bc;\n        long acbcbc\
    \ = acbcb * bc;\n        long abcbc = abcb * bc;\n        long acbcbcb = acbcbcb\
    \ * bc;\n        long abcbcbc = abcbcb * bc;\n        long acbcbcbc = acbcbcbc\
    \ * bc;\n        long abcbcbcbc = abcbcbcb * bc;\n        long acbcbcbcbc = acbcbcbcbc\
    \ * bc;\n        long abcbcbcbcbc = abcbcbcbcb * bc;\n        long acbcbcbcbcbc\
    \ = acbcbcbcbcbc * bc;\n        long abcbcbcbcbcbc = abcbcbcbcbc * bc;\n     \
    \   long acbcbcbcbcbcbc = acbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbc =\
    \ abcbcbcbcbcbc * bc;\n        long acbcbcbcbcbcbcbc = acbcbcbcbcbcbcbc * bc;\n\
    \        long abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbc * bc;\n        long acbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbc\
    \ * bc;\n        long acbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbc * bc;\n    \
    \    long abcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbc * bc;\n        long acbcbcbcbcbcbcbcbcbcbc\
    \ = acbcbcbcbcbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbcbcbc\
    \ * bc;\n        long acbcbcbcbcbcbcbcbcbcbcbc = acbcbcbcbcbcbcbcbcbcbcbc * bc;\n\
    \        long abcbcbcb", "        long ab = a - b;\n        long ac = c - a;\n\
    \        long bc = b - c;\n        long abc = ab + bc;\n        long acb = ac\
    \ - bc;\n        long abcb = abc * bc;\n        long acbc = acb * bc;\n      \
    \  long acbcab = acb * abc;\n        long acbcabc = acbcab * bc;\n        long\
    \ acbcabcb = acbcabc * bc;\n        long acbcabcbc = acbcabcb * bc;\n        long\
    \ acbcabcbcb = acbcabcbc * bc;\n        long acbcabcbcbc = acbcabcbcb * bc;\n\
    \        long acbcabcbcbcb = acbcabcbcbc * bc;\n        long acbcabcbcbcbc = acbcabcbcbcb\
    \ * bc;\n        long acbcabcbcbcbcb = acbcabcbcbcbc * bc;\n        long acbcabcbcbcbcbc\
    \ = acbcabcbcbcbcb * bc;\n        long acbcabcbcbcbcbcb = acbcabcbcbcbcbc * bc;\n\
    \        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb\
    \ * bc;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * bc;\n      \
    \  long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbc\
    \ * bc;\n        long acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * bc;\n  \
    \      long acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbcbc * bc;\n        long\
    \ acbcabcbcbcbcbcbcbcbcb = acbcabcbcbcbcbcb", "        long ab = a - b;\n    \
    \    long ac = c - a;\n        long bc = b - c;\n        long acb = ac * bc;\n\
    \        long abc = ab * bc;\n        long acbc = acb * bc;\n        long abcb\
    \ = abc * bc;\n        long abcab = abcab * bc;\n        long acbcab = acbcab\
    \ * bc;\n        long acbcabc = acbcabc * bc;\n        long acbcabcb = acbcabcb\
    \ * bc;\n        long acbcabcbc = acbcabcbc * bc;\n        long acbcabcbcb = acbcabcbcb\
    \ * bc;\n        long acbcabcbcbc = acbcabcbcbc * bc;\n        long acbcabcbcbcb\
    \ = acbcabcbcbcb * bc;\n        long acbcabcbcbcbc = acbcabcbcbcbc * bc;\n   \
    \     long acbcabcbcbcbcb = acbcabcbcbcbcb * bc;\n        long acbcabcbcbcbcbc\
    \ = acbcabcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb *\
    \ bc;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * bc;\n        long\
    \ acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * bc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * bc;\n    \
    \    long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb\
    \ * bc;\n        long acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * bc;\n  \
    \      long acbcabcbcbcbcb", "        long ab = a + b;\n        long ac = a +\
    \ c;\n        long bc = b + c;\n        long abc = ab + bc;\n        long acb\
    \ = ac + bc;\n        long abcb = abc + bc;\n        long acbc = acb + abc;\n\
    \        long abcba = abcc + abb;\n        long acbca = acbc + abc;\n        long\
    \ abcca = abcb + acb;\n        long acbcaa = acbca + abc;\n        long abccaa\
    \ = abccb + acb;\n        long acbcaaa = acbcca + abc;\n        long abccaaa =\
    \ abccba + acb;\n        long acbcaaaa = acbcca + abc;\n        long abccaaaa\
    \ = abccba + acb;\n        long acbcaaaaa = acbcca + abc;\n        long abccaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaa = acbcca + abc;\n        long abccaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaa = acbcca + abc;\n        long abccaaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaaa = acbcca + abc;\n        long abccaaaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaaaa = acbcca + abc;\n        long abccaaaaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaaaaa = acbcca + abc;\n        long abccaaaaaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaaaaaa = acbcca + abc;\n        long\
    \ abccaaaaaaaaaaa = abccba + acb;\n        long acbcaaaaaaaaaaaa = acbcca + abc;\n\
    \        long abccaaaaaaaaaaaa = abccba + acb;\n        long acbcaaaaaaaaaaaaa\
    \ = acbcca + abc;\n        long abccaaaaaaaaaaaaa = abccba + acb;\n        long\
    \ acbcaaaaaaaaaaaaaa = acbcca + abc;\n        long abccaaaaaaaaaaaaaa = abccba\
    \ + acb;\n        long acbcaaaaaaaaaaaaaaa = acbcca + abc;\n        long abccaaaaaaaaaaaaaaa\
    \ = abccba + acb;\n        long acbcaaaaaaaaaaaaaaaa = acbcca + abc;\n       \
    \ long abccaaaaaaaaaaaaaaaa = abccb", "        long d = b * b - 4 * a * c;\n \
    \       if (d < 0) {\n            return false;\n        }\n        long root\
    \ = (long)Math.Sqrt(d);\n        long root2 = root * root;\n        long root3\
    \ = root * root2;\n        long root4 = root * root3;\n        long root5 = root\
    \ * root4;\n        long root6 = root * root5;\n        long root7 = root * root6;\n\
    \        long root8 = root * root7;\n        long root9 = root * root8;\n    \
    \    long root10 = root * root9;\n        long root11 = root * root10;\n     \
    \   long root12 = root * root11;\n        long root13 = root * root12;\n     \
    \   long root14 = root * root13;\n        long root15 = root * root14;\n     \
    \   long root16 = root * root15;\n        long root17 = root * root16;\n     \
    \   long root18 = root * root17;\n        long root19 = root * root18;\n     \
    \   long root20 = root * root19;\n        long root21 = root * root20;\n     \
    \   long root22 = root * root21;\n        long root23 = root * root22;\n     \
    \   long root24 = root * root23;\n        long root25 = root * root24;\n     \
    \   long root26 = root * root25;\n        long root27 = root * root26;\n     \
    \   long root28 = root * root27;\n        long root29 = root * root28;\n     \
    \   long root30 = root * root29;\n        long root31 = root * root30;\n     \
    \   long root32 = root * root31;\n        long root33 = root * root32;\n     \
    \   long root34 = root * root33;\n        long root35 = root * root34;\n     \
    \   long root36 = root * root35;\n        long root37 = root * root36;\n     \
    \   long root38 = root * root37;\n        long root39 = root * root38;\n     \
    \   long root40 = root * root39;\n        long root41 = root * root40;\n     \
    \   long root42 = root * root41;\n        long root43 = root * root42;\n     \
    \   long root44 = root * root43;\n        long root45 = root * root44;\n     \
    \   long root46 = root * root45;\n        long root47 = root * root46;\n     \
    \   long root48 = ", "        long ab = a - b;\n        long ac = a - c;\n   \
    \     long bc = b - c;\n        long acb = ac * bc;\n        long abc = ab * bc;\n\
    \        long acbc = acb * bc;\n        long abbc = abb * bc;\n        long acbbc\
    \ = acbb * bc;\n        long abbbc = abbb * bc;\n        long acbbbc = acbbbc\
    \ * bc;\n        long abbbbc = abbbbc * bc;\n        long acbbbbc = acbbbbc *\
    \ bc;\n        long abbbbbc = abbbbbc * bc;\n        long acbbbbbc = acbbbbbc\
    \ * bc;\n        long abbbbbbc = abbbbbbc * bc;\n        long acbbbbbbc = acbbbbbbc\
    \ * bc;\n        long abbbbbbbc = abbbbbbbc * bc;\n        long acbbbbbbbc = acbbbbbbbc\
    \ * bc;\n        long abbbbbbbbc = abbbbbbbbc * bc;\n        long acbbbbbbbbc\
    \ = acbbbbbbbbc * bc;\n        long abbbbbbbbbc = abbbbbbbbbc * bc;\n        long\
    \ acbbbbbbbbbc = acbbbbbbbbbc * bc;\n        long abbbbbbbbbbc = abbbbbbbbbbc\
    \ * bc;\n        long acbbbbbbbbbbc = acbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbc\
    \ = abbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbc = acbbbbbbbbbbbc * bc;\n\
    \        long abbbbbbbbbbbbc = abbbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbbc\
    \ = acbbbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbbbc = abbbbbbbbbbbbbc * bc;\n\
    \        long acbbbbbbbbbbbbbc = acbbbbbbbbbbbbbc * bc;\n        long abbbbbbbbbbbbbbc\
    \ = abbbbbbbbbbbbbbc * bc;\n        long acbbbbbbbbbbbbbbc = acbbbbbbbbbbbbbbc\
    \ * bc;\n        long abbbbbbbbbbb", "        long ab = a - b;\n        long ac\
    \ = c - a;\n        long bc = b - c;\n        long abc = ab + bc;\n        long\
    \ acb = ac - bc;\n        long abcb = abc + bc;\n        long abcc = abc - bc;\n\
    \        long abcbc = abcb + c; // abcbc is abc minus bc\n        long abccb =\
    \ abcc * 2;\n        long abcbcb = abcbc + c; // abcbcb is abc minus bc\n    \
    \    long abcbcc = abcbcb + c; // abcbcc is abc minus bc\n        long abccbc\
    \ = abccb * 2;\n        long abccbcc = abccbc + c; // abccbcc is abc minus bc\n\
    \        long abcbccb = abcbcc + c; // abcbccb is abc minus bc\n        long abcbccc\
    \ = abcbccb + c; // abcbccc is abc minus bc\n        long abccbcb = abccbc * 2;\n\
    \        long abccbccb = abccbcc * 2;\n        long abcbccc = abcbccb * 2;\n \
    \       long abcbcccb = abcbccc * 2;\n        long abccbcb = abccbcc * 2;\n  \
    \      long abccbccb = abccbcc * 2;\n        long abcbccc = abcbccb * 2;\n   \
    \     long abcbcccb = abcbccc * 2;\n        long abccbcb = abccbcc * 2;\n    \
    \    long abccbccb = abccbcc * 2;\n        long abcbccc = abcbccb * 2;\n     \
    \   long abcbcccb = abcbccc * 2;\n        long abccbcb = abccbcc * 2;\n      \
    \  long abccbccb = abccbcc * 2;\n        long abcbccc = abcbccb * 2;\n       \
    \ long abcbcccb = abcbccc * 2;\n        long abccbcb = abccbcc * 2;\n        long\
    \ abccbccb = abccbcc * 2;\n        long abcbccc = abcbccb * 2;\n        long abcbcccb\
    \ = abcbccc * 2;\n        long abccbcb = abccbcc * 2;\n        long abccbccb =\
    \ abccbcc * 2;\n", "        long ab = a + b;\n        long ac = a + c;\n     \
    \   long bc = b + c;\n        long abc = ab + bc;\n        long acb = ac + bc;\n\
    \        long abcb = abc + bc;\n        long acbc = acb + abc;\n        long abcac\
    \ = abcb + ac;\n        long acbca = acbc + abc;\n        long abcacb = abcac\
    \ + acb;\n        long acbcab = acbca * 2;\n        long acbcabc = acbcab * 2;\n\
    \        long acbcabcb = acbcabcb * 2;\n        long acbcabcbc = acbcabcbc * 2;\n\
    \        long acbcabcbcb = acbcabcbcb * 2;\n        long acbcabcbcbc = acbcabcbcbc\
    \ * 2;\n        long acbcabcbcbcb = acbcabcbcbcb * 2;\n        long acbcabcbcbcbc\
    \ = acbcabcbcbcbc * 2;\n        long acbcabcbcbcbcb = acbcabcbcbcbcb * 2;\n  \
    \      long acbcabcbcbcbcbc = acbcabcbcbcbcbc * 2;\n        long acbcabcbcbcbcbc\
    \ = acbcabcbcbcbcbcb * 2;\n        long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb *\
    \ 2;\n        long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * 2;\n        long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbc * 2;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbcb\
    \ * 2;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * 2;\n        long\
    \ acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbcb * 2;\n        long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * 2;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb\
    \ * 2;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * 2;\n        long\
    \ acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb", "        long d = b * b - 4 * a\
    \ * c;\n        if (d < 0)\n            return false;\n        long e = Math.Sqrt(d);\n\
    \        long f = (long) Math.Sqrt(a * a);\n        long g = (long) Math.Sqrt(b\
    \ * b);\n        long h = (long) Math.Sqrt(c * c);\n        long i = (long) Math.Sqrt(a\
    \ * a + b * b);\n        long j = (long) Math.Sqrt(a * a + c * c);\n        long\
    \ k = (long) Math.Sqrt(b * b + c * c);\n        long l = (long) Math.Sqrt(a *\
    \ a + b * b + c * c);\n        long m = (long) Math.Sqrt(a * a + c * c + b * b\
    \ + c * c);\n        long n = (long) Math.Sqrt(a * a + b * b + c * c + a * a +\
    \ b * b + c * c + a * a + c * c + b * b + c * c + a * a + b * b + c * c + a *\
    \ a + c * c + b * b + c * c + a * a + b * b + c * c + a * a + c * c + b * b +\
    \ c * c + a * a + b * b + c * c + a * a + c * c + b * b + c * c + a * a + b *\
    \ b + c * c + a * a + c * c + b * b + c * c + a * a + b * b + c * c + a * a +\
    \ c * c + b * b + c * c + a * a + b * b + c * c + a * a + c * c + b * b + c *\
    \ c + a * a + b * b + c * c + a * a + c * c + b * b + c * c + a * a + b * b +\
    \ c * c + a * a + c * c + b * b + c * c + a * a + b * b + c * c + a * a + c *\
    \ c + b * b + c * c + a * a + b * b + c * c + a * a + c * c + b * b + c * c +\
    \ a * a + b * b + c * c + a * a + c * c + b * b + c * c + a * a + b * b + c *\
    \ c + a * a + c * c + b * b + c * c + a * a + b * b + c * c + a * a + c * c +\
    \ b * b + c * c + a * a + b * b + c * c + a * a + c * c + b * b + c * c + a *\
    \ a + b * b + c * c + a * a + c * ", "        long d = b * b - 4 * a * c;\n  \
    \      if (d < 0)\n            return false;\n        long root = (long)Math.Sqrt(d);\n\
    \        long t1 = (-b + root) / (2 * a);\n        long t2 = (-b - root) / (2\
    \ * a);\n        return t1 == t2;", "        long ab = a - b;\n        long ac\
    \ = c - a;\n        long bc = b - c;\n        long abc = ab + bc;\n        long\
    \ acb = ac - bc;\n        long abcc = abc * abc;\n        long acbc = acb * acb;\n\
    \        long acbcc = acbc * acbc;\n        long acbccc = acbcc * acbcc;\n   \
    \     long acbcccb = acbccc * acbcccb;\n        long acbcccbc = acbcccb * acbcccbc;\n\
    \        long acbcccbcb = acbcccbc * acbcccbcb;\n        long acbcccbcbb = acbcccbcb\
    \ * acbcccbcbb;\n        long acbcccbcbc = acbcccbcb * acbcccbcbc;\n        long\
    \ acbcccbcbcb = acbcccbcb * acbcccbcbcb;\n        long acbcccbcbcbb = acbcccbcb\
    \ * acbcccbcbcb;\n        long acbcccbcbcbc = acbcccbcb * acbcccbcbcb;\n     \
    \   long acbcccbcbcbc = acbcccbcb * acbcccbcbcbc;\n        long acbcccbcbcbcb\
    \ = acbcccbcb * acbcccbcbcbcb;\n        long acbcccbcbcbcbb = acbcccbcb * acbcccbcbcbcb;\n\
    \        long acbcccbcbcbcbc = acbcccbcb * acbcccbcbcbcbc;\n        long acbcccbcbcbcbcb\
    \ = acbcccbcb * acbcccbcbcbcbcb;\n        long acbcccbcbcbcbcbb = acbcccbcb *\
    \ acbcccbcbcbcbcb;\n        long acbcccbcbcbcbcbc = acbcccbcb * acbcccbcbcbcbcbc;\n\
    \        long acbcccbcbcbcbcbcb = acbcccbcb * acbcccbcbcbcbcbcb;\n        long\
    \ acbcccbcbcbcbcbcbb = acbcccbcb * acbcccbcbcbcbcbcb;\n        long acbcccbcbcbcbcbcbc\
    \ = acb", "        long d = b * b - 4 * a * c;\n        if (d < 0) {\n       \
    \     return false;\n        }\n        long root = (long)Math.Sqrt(d);\n    \
    \    long x = (long)((-b - root) / 2.0 * a);\n        long y = (long)((-b + root)\
    \ / 2.0 * a);\n        long z = (long)((-b + root) / 2.0 * a);\n        if (Math.Abs(x\
    \ - y) < Math.Abs(x - z) && Math.Abs(x - z) < Math.Abs(y - z)) {\n           \
    \ return true;\n        }\n        return false;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_102_choose_num
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // choose_num(12, 15) = 14\n    // choose_num(13, 12) = -1\n\
  \    public static long ChooseNum(long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ChooseNum((12L),\
  \ (15L)) == (14L));\n    Debug.Assert(ChooseNum((13L), (12L)) == (-1L));\n    Debug.Assert(ChooseNum((33L),\
  \ (12354L)) == (12354L));\n    Debug.Assert(ChooseNum((5234L), (5233L)) == (-1L));\n\
  \    Debug.Assert(ChooseNum((6L), (29L)) == (28L));\n    Debug.Assert(ChooseNum((27L),\
  \ (10L)) == (-1L));\n    Debug.Assert(ChooseNum((7L), (7L)) == (-1L));\n    Debug.Assert(ChooseNum((546L),\
  \ (546L)) == (546L));\n    }\n\n}\n"
completions: ["        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y %\
    \ 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest = odd;\n\
    \        long even2 = even / 2;\n        long odd2 = odd / 2;\n        long even3\
    \ = even2 / 2;\n        long odd3 = odd2 / 2;\n        long even4 = even3 / 2;\n\
    \        long odd4 = odd3 / 2;\n        long even5 = even4 / 2;\n        long\
    \ odd5 = odd4 / 2;\n        long even6 = even5 / 2;\n        long odd6 = odd5\
    \ / 2;\n        long even7 = even6 / 2;\n        long odd7 = odd6 / 2;\n     \
    \   long even8 = even7 / 2;\n        long odd8 = odd7 / 2;\n        long even9\
    \ = even8 / 2;\n        long odd9 = odd8 / 2;\n        long even10 = even9 / 2;\n\
    \        long odd10 = odd9 / 2;\n        long even11 = even10 / 2;\n        long\
    \ odd11 = odd10 / 2;\n        long even12 = even11 / 2;\n        long odd12 =\
    \ odd11 / 2;\n        long even13 = even12 / 2;\n        long odd13 = odd12 /\
    \ 2;\n        long even14 = even13 / 2;\n        long odd14 = odd13 / 2;\n   \
    \     long even15 = even14 / 2;\n        long odd15 = odd14 / 2;\n        long\
    \ even16 = even15 / 2;\n        long odd16 = odd15 / 2;\n        long even17 =\
    \ even16 / 2;\n        long odd17 = odd16 / 2;\n        long even18 = even17 /\
    \ 2;\n        long odd18 = odd17 / 2;\n        long even19 = even18 / 2;\n   \
    \     long odd19 = odd18 / 2;\n        long even20 = even19 / 2;\n        long\
    \ odd20 = odd19 / 2;\n        long even21 = even20 / 2;\n        long odd21 =\
    \ odd20 / 2;\n        long even22 = even21 / 2;\n        long odd22 = odd21 /\
    \ 2;\n        long even23 = even22 / 2;\n        long odd23 = odd22 / 2;\n   \
    \     long even24 = even23 / 2;\n        long odd24 = odd23 / 2;\n        long\
    \ even25 = even24 / 2;\n        long odd25 = odd24 / 2;\n        long even26 =\
    \ even25 / 2;\n        long odd26 = odd25 / 2;", "        long even = x % 2 ==\
    \ 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long result\
    \ = even;\n        while (even < odd) {\n            long mid = (even + odd) /\
    \ 2;\n            if (mid % 2 == 0) {\n                result = mid;\n       \
    \         break;\n            }\n            if (mid % 2 == 1) {\n           \
    \     even = mid;\n            } else {\n                odd = mid;\n        \
    \    }\n        }\n        return result;", "        long even = x % 2 == 0 ?\
    \ x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n\
    \        if (even > odd) {\n            biggest = odd;\n        }\n        long\
    \ temp;\n        while (true) {\n            temp = biggest;\n            if (temp\
    \ % 2 == 0) {\n                biggest = temp / 2;\n            } else {\n   \
    \             biggest = temp / 2 + 1;\n            }\n            if (biggest\
    \ < x || biggest > y) {\n                return temp;\n            }\n       \
    \ }", "        if (x < 0 || y < 0 || x > y || y == 0) {\n            return -1;\n\
    \        }\n        long even = 0;\n        long odd = 0;\n        long biggest\
    \ = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 =\
    \ 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n\
    \        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n \
    \       long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;",
  "        long even = x % 2 == 0 ? x : x - 2;\n        long odd = y % 2 == 0 ? y\
    \ : y - 2;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   bool evenBigger = false;\n        bool oddBigger = false;\n        bool evenSmaller\
    \ = false;\n        bool oddSmaller = false;\n        while (even < odd) {\n \
    \           if (even % 2 == 0) {\n                if (even > biggest) {\n    \
    \                biggest = even;\n                }\n                evenBigger\
    \ = true;\n            } else {\n                if (even < smallest) {\n    \
    \                smallest = even;\n                }\n                evenSmaller\
    \ = true;\n            }\n            even = even + 2;\n            odd = odd\
    \ + 2;\n        }\n        while (odd < even) {\n            if (odd % 2 == 0)\
    \ {\n                if (odd > biggest) {\n                    biggest = odd;\n\
    \                }\n                oddBigger = true;\n            } else {\n\
    \                if (odd < smallest) {\n                    smallest = odd;\n\
    \                }\n                oddSmaller = true;\n            }\n      \
    \      even = even - 2;\n            odd = odd - 2;\n        }\n        if (evenBigger\
    \ && oddBigger) {\n            return biggest;\n        } else if (evenSmaller\
    \ && oddSmaller) {\n            return smallest;\n        } else {\n         \
    \   return -1;\n        }", "        long even = 0;\n        long odd = 0;\n \
    \       long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2\
    \ = range / 2;\n        long range3 = range / 3;\n        long range4 = range\
    \ / 4;\n        long range5 = range / 5;\n        long range6 = range / 6;\n \
    \       long range7 = range / 7;\n        long range8 = range / 8;\n        long\
    \ range9 = range / 9;\n        long range10 = range / 10;\n        long range11\
    \ = range / 11;\n        long range12 = range / 12;\n        long range13 = range\
    \ / 13;\n        long range14 = range / 14;\n        long range15 = range / 15;\n\
    \        long range16 = range / 16;\n        long range17 = range / 17;\n    \
    \    long range18 = range / 18;\n        long range19 = range / 19;\n        long\
    \ range20 = range / 20;\n        long range21 = range / 21;\n        long range22\
    \ = range / 22;\n        long range23 = range / 23;\n        long range24 = range\
    \ / 24;\n        long range25 = range / 25;\n        long range26 = range / 26;\n\
    \        long range27 = range / 27;\n        long range28 = range / 28;\n    \
    \    long range29 = range / 29;\n        long range30 = range / 30;\n        long\
    \ range31 = range / 31;\n        long range32 = range / 32;\n        long range33\
    \ = range / 33;\n        long range34 = range / 34;\n        long range35 = range\
    \ / 35;\n        long range36 = range / 36;\n        long range37 = range / 37;\n\
    \        long range38 = range / 38;\n        long range39 = range / 39;\n    \
    \    long range40 = range / 40;\n        long range41 = range / 41;\n        long\
    \ range42 = range / 42;\n        long range43 = range / 43;\n        long range44\
    \ = range / 44;\n        long range45 = range / 45;\n        long range46 = range\
    \ / 46;\n        long range47 = range / 47;\n        long range48 = range / 48;\n\
    \        long range49 = range / 49;\n        long range50 = range / 50;\n    \
    \    long range51 = range / 51;\n        long range52 = range / 52;\n        long\
    \ range", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        long temp;\n        while (even < odd) {\n            temp =\
    \ (even + odd) / 2;\n            if (temp % 2 == 0) {\n                even =\
    \ temp;\n            } else {\n                odd = temp;\n            }\n  \
    \          if (even > biggest) {\n                biggest = even;\n          \
    \  }\n        }\n        return biggest;", "        long result = -1;\n      \
    \  if (x >= y) {\n            while (x < y) {\n                long mid = (x +\
    \ y) / 2;\n                if (IsEven(mid)) {\n                    x = mid;\n\
    \                } else {\n                    y = mid;\n                }\n \
    \           }\n            if (IsEven(x)) {\n                result = x;\n   \
    \         } else {\n                result = y;\n            }\n        } else\
    \ {\n            while (x > y) {\n                long mid = (x + y) / 2;\n  \
    \              if (IsEven(mid)) {\n                    y = mid;\n            \
    \    } else {\n                    x = mid;\n                }\n            }\n\
    \            if (IsEven(y)) {\n                result = y;\n            } else\
    \ {\n                result = x;\n            }\n        }\n        return result;",
  "        long even = x & 1;\n        long odd = x >> 1;\n        long evenodd =\
    \ even + odd;\n        if (evenodd > y) {\n            return -1;\n        }\n\
    \        long result = evenodd - y;\n        if (result < 0) {\n            return\
    \ -1;\n        }\n        return result;", "        long even = x % 2 == 0 ? x\
    \ : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long biggest =\
    \ even;\n        long biggestOdd = odd;\n        long biggestEven = even;\n  \
    \      long biggestOddEven = even;\n        long biggestEvenOdd = odd;\n     \
    \   long biggestOddEvenOdd = odd;\n        long biggestEvenOddEven = even;\n \
    \       long biggestOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEven = odd;\n        long\
    \ biggestEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n     \
    \   long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n     \
    \   long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n   \
    \     long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenO", "        if (x > y) {\n\
    \            long temp = x;\n            x = y;\n            y = temp;\n     \
    \   }\n        long even = x;\n        long odd = y;\n        long biggest = -1;\n\
    \        while (even > 0 && odd > 0) {\n            if (even % 2 == 0 && odd %\
    \ 2 == 0) {\n                biggest = even;\n                even = even / 2;\n\
    \                odd = odd / 2;\n            } else if (even % 2 == 0 && odd %\
    \ 2 != 0) {\n                biggest = even;\n                even = even / 2;\n\
    \            } else if (even % 2 != 0 && odd % 2 == 0) {\n                biggest\
    \ = odd;\n                odd = odd / 2;\n            } else {\n             \
    \   biggest = odd;\n                odd = odd / 2;\n            }\n        }\n\
    \        return biggest;", "        long xx = x;\n        long yy = y;\n     \
    \   long xy = x * y;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx", "        long result = -1;\n        if (x >= y) {\n \
    \           while (x < y) {\n                if (x % 2 == 0) {\n             \
    \       result = x;\n                    break;\n                }\n         \
    \       x += 2;\n            }\n        } else {\n            while (y < x) {\n\
    \                if (y % 2 == 0) {\n                    result = y;\n        \
    \            break;\n                }\n                y += 2;\n            }\n\
    \        }\n        return result;", "        long result = -1;\n        long\
    \ even = 0;\n        long odd = 0;\n        long temp;\n        long range;\n\
    \        long evenRange;\n        long oddRange;\n        long tempEven;\n   \
    \     long tempOdd;\n        long tempRange;\n        long tempEvenRange;\n  \
    \      long tempOddRange;\n        long tempRange2;\n        long tempEvenRange2;\n\
    \        long tempOddRange2;\n        long tempRange3;\n        long tempEvenRange3;\n\
    \        long tempOddRange3;\n        long tempRange4;\n        long tempEvenRange4;\n\
    \        long tempOddRange4;\n        long tempRange5;\n        long tempEvenRange5;\n\
    \        long tempOddRange5;\n        long tempRange6;\n        long tempEvenRange6;\n\
    \        long tempOddRange6;\n        long tempRange7;\n        long tempEvenRange7;\n\
    \        long tempOddRange7;\n        long tempRange8;\n        long tempEvenRange8;\n\
    \        long tempOddRange8;\n        long tempRange9;\n        long tempEvenRange9;\n\
    \        long tempOddRange9;\n        long tempRange10;\n        long tempEvenRange10;\n\
    \        long tempOddRange10;\n        long tempRange11;\n        long tempEvenRange11;\n\
    \        long tempOddRange11;\n        long tempRange12;\n        long tempEvenRange12;\n\
    \        long tempOddRange12;\n        long tempRange13;\n        long tempEvenRange13;\n\
    \        long tempOddRange13;\n        long tempRange14;\n        long tempEvenRange14;\n\
    \        long tempOddRange14;\n        long tempRange15;\n        long tempEvenRange15;\n\
    \        long tempOddRange15;\n        long tempRange16;\n        long tempEvenRange16;\n\
    \        long tempOddRange16;\n        long tempRange17;\n        long tempEvenRange17;\n\
    \        long tempOddRange17;\n        long tempRange18;\n        long tempEvenRange18;\n\
    \        long tempOddRange18;\n        long tempRange19;\n        long tempEvenRange19;\n\
    \        long tempOddRange19;\n        long tempRange20;\n        long tempEvenRange20;\n\
    \        long tempOddRange20;\n        long tempRange21;\n        long tempEvenRange21;\n\
    \        long tempOddRange21;\n        long tempRange22;\n        long ", "  \
    \      long result = -1;\n        if (x >= y) {\n            while (x <= y) {\n\
    \                if (x % 2 == 0) {\n                    result = x;\n        \
    \            break;\n                }\n                x += 2;\n            }\n\
    \        } else {\n            while (y <= x) {\n                if (y % 2 ==\
    \ 0) {\n                    result = y;\n                    break;\n        \
    \        }\n                y += 2;\n            }\n        }\n        return\
    \ result;", "        long result = -1;\n        long xx = x;\n        long yy\
    \ = y;\n        long xy = x * y;\n        long xx = xx * xx;\n        long yy\
    \ = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n       \
    \ long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long ", "        long result = -1;\n        long xx = x;\n  \
    \      long yy = y;\n        long xy = x * y;\n        long xx = xx * xx;\n  \
    \      long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx *\
    \ xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx\
    \ = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n       \
    \ long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long ", "        long even = x % 2 == 0 ? x :\
    \ x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n\
    \        if (odd > even) {\n            biggest = odd;\n        }\n        if\
    \ (biggest > x) {\n            biggest = x;\n        }\n        if (biggest <\
    \ y) {\n            biggest = y;\n        }\n        return biggest;", "     \
    \   long result = -1;\n        if (x >= y) {\n            while (x != y) {\n \
    \               if (x % 2 == 0) {\n                    result = x;\n         \
    \           x = x / 2;\n                } else {\n                    x = x *\
    \ 3 + 1;\n                }\n            }\n        } else {\n            while\
    \ (y != x) {\n                if (y % 2 == 0) {\n                    result =\
    \ y;\n                    y = y / 2;\n                } else {\n             \
    \       y = y * 3 + 1;\n                }\n            }\n        }\n        return\
    \ result;", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y\
    \ % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n     \
    \   long range2 = (long)(Math.Sqrt(range));\n        long range3 = (long)Math.Ceiling(range2);\n\
    \        long range4 = (long)Math.Floor(range2);\n        long range5 = (long)Math.Round(range2);\n\
    \        long range6 = (long)Math.Truncate(range2);\n        long range7 = (long)Math.Abs(range2);\n\
    \        long range8 = (long)Math.Pow(range, 2);\n        long range9 = (long)Math.Pow(range,\
    \ 3);\n        long range10 = (long)Math.Pow(range, 4);\n        long range11\
    \ = (long)Math.Pow(range, 5);\n        long range12 = (long)Math.Pow(range, 6);\n\
    \        long range13 = (long)Math.Pow(range, 7);\n        long range14 = (long)Math.Pow(range,\
    \ 8);\n        long range15 = (long)Math.Pow(range, 9);\n        long range16\
    \ = (long)Math.Pow(range, 10);\n        long range17 = (long)Math.Pow(range, 11);\n\
    \        long range18 = (long)Math.Pow(range, 12);\n        long range19 = (long)Math.Pow(range,\
    \ 13);\n        long range20 = (long)Math.Pow(range, 14);\n        long range21\
    \ = (long)(Math.Pow(range, 15));\n        long range22 = (long)Math.Pow(range,\
    \ 16);\n        long range23 = (long)Math.Pow(range, 17);\n        long range24\
    \ = (long)Math.Pow(range, 18);\n        long range25 = (long)Math.Pow(range, 19);\n\
    \        long range26 = (long)Math.Pow(range, 20);\n        long range27 = (long)Math.Pow(range,\
    \ 21);\n        long range28 = (long)Math.Pow(range, 22);\n        long range29\
    \ = (long)Math.Pow(range, 23);\n        long range30 = (long)Math.Pow(range, 24);\n\
    \        long range31 = (long)(Math.Pow(range, 25));\n        long range32 = (long)Math.Pow(range,\
    \ 26);\n        long range33 = (long)Math.Pow(range, 27);\n        long range34\
    \ = (long)Math.Pow(range, 28);\n        long range35 = (long)Math.Pow(range, 29);\n\
    \        long range36 = (long)Math.Pow(range, 30);\n        long range37 = (long)Math.Pow(range,\
    \ 31);\n        long range"]
stop_tokens:
- "\n    }\n"

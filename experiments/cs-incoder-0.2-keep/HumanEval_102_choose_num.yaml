name: HumanEval_102_choose_num
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // choose_num(12, 15) = 14\n    // choose_num(13, 12) = -1\n\
  \    public static long ChooseNum(long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ChooseNum((12L),\
  \ (15L)) == (14L));\n    Debug.Assert(ChooseNum((13L), (12L)) == (-1L));\n    Debug.Assert(ChooseNum((33L),\
  \ (12354L)) == (12354L));\n    Debug.Assert(ChooseNum((5234L), (5233L)) == (-1L));\n\
  \    Debug.Assert(ChooseNum((6L), (29L)) == (28L));\n    Debug.Assert(ChooseNum((27L),\
  \ (10L)) == (-1L));\n    Debug.Assert(ChooseNum((7L), (7L)) == (-1L));\n    Debug.Assert(ChooseNum((546L),\
  \ (546L)) == (546L));\n    }\n\n}\n"
completions: ["        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y %\
    \ 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest = odd;\n\
    \        long even2 = even / 2;\n        long odd2 = odd / 2;\n        long even3\
    \ = even2 / 2;\n        long odd3 = odd2 / 2;\n        long even4 = even3 / 2;\n\
    \        long odd4 = odd3 / 2;\n        long even5 = even4 / 2;\n        long\
    \ odd5 = odd4 / 2;\n        long even6 = even5 / 2;\n        long odd6 = odd5\
    \ / 2;\n        long even7 = even6 / 2;\n        long odd7 = odd6 / 2;\n     \
    \   long even8 = even7 / 2;\n        long odd8 = odd7 / 2;\n        long even9\
    \ = even8 / 2;\n        long odd9 = odd8 / 2;\n        long even10 = even9 / 2;\n\
    \        long odd10 = odd9 / 2;\n        long even11 = even10 / 2;\n        long\
    \ odd11 = odd10 / 2;\n        long even12 = even11 / 2;\n        long odd12 =\
    \ odd11 / 2;\n        long even13 = even12 / 2;\n        long odd13 = odd12 /\
    \ 2;\n        long even14 = even13 / 2;\n        long odd14 = odd13 / 2;\n   \
    \     long even15 = even14 / 2;\n        long odd15 = odd14 / 2;\n        long\
    \ even16 = even15 / 2;\n        long odd16 = odd15 / 2;\n        long even17 =\
    \ even16 / 2;\n        long odd17 = odd16 / 2;\n        long even18 = even17 /\
    \ 2;\n        long odd18 = odd17 / 2;\n        long even19 = even18 / 2;\n   \
    \     long odd19 = odd18 / 2;\n        long even20 = even19 / 2;\n        long\
    \ odd20 = odd19 / 2;\n        long even21 = even20 / 2;\n        long odd21 =\
    \ odd20 / 2;\n        long even22 = even21 / 2;\n        long odd22 = odd21 /\
    \ 2;\n        long even23 = even22 / 2;\n        long odd23 = odd22 / 2;\n   \
    \     long even24 = even23 / 2;\n        long odd24 = odd23 / 2;\n        long\
    \ even25 = even24 / 2;\n        long odd25 = odd24 / 2;\n        long even26 =\
    \ even25 / 2;\n        long odd26 = odd25 / 2;", "        long even = x % 2 ==\
    \ 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long result\
    \ = even;\n        while (even < odd) {\n            long mid = (even + odd) /\
    \ 2;\n            if (mid % 2 == 0) {\n                result = mid;\n       \
    \         break;\n            }\n            if (mid % 2 == 1) {\n           \
    \     even = mid;\n            } else {\n                odd = mid;\n        \
    \    }\n        }\n        return result;", "        long even = x % 2 == 0 ?\
    \ x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n\
    \        if (even > odd) {\n            biggest = odd;\n        }\n        long\
    \ temp;\n        while (true) {\n            temp = biggest;\n            if (temp\
    \ % 2 == 0) {\n                biggest = temp / 2;\n            } else {\n   \
    \             biggest = temp / 2 + 1;\n            }\n            if (biggest\
    \ < x || biggest > y) {\n                return temp;\n            }\n       \
    \ }", "        if (x < 0 || y < 0 || x > y || y == 0) {\n            return -1;\n\
    \        }\n        long even = 0;\n        long odd = 0;\n        long biggest\
    \ = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 =\
    \ 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n\
    \        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n \
    \       long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;",
  "        long even = x % 2 == 0 ? x : x - 2;\n        long odd = y % 2 == 0 ? y\
    \ : y - 2;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   bool evenBigger = false;\n        bool oddBigger = false;\n        bool evenSmaller\
    \ = false;\n        bool oddSmaller = false;\n        while (even < odd) {\n \
    \           if (even % 2 == 0) {\n                if (even > biggest) {\n    \
    \                biggest = even;\n                }\n                evenBigger\
    \ = true;\n            } else {\n                if (even < smallest) {\n    \
    \                smallest = even;\n                }\n                evenSmaller\
    \ = true;\n            }\n            even = even + 2;\n            odd = odd\
    \ + 2;\n        }\n        while (odd < even) {\n            if (odd % 2 == 0)\
    \ {\n                if (odd > biggest) {\n                    biggest = odd;\n\
    \                }\n                oddBigger = true;\n            } else {\n\
    \                if (odd < smallest) {\n                    smallest = odd;\n\
    \                }\n                oddSmaller = true;\n            }\n      \
    \      even = even - 2;\n            odd = odd - 2;\n        }\n        if (evenBigger\
    \ && oddBigger) {\n            return biggest;\n        } else if (evenSmaller\
    \ && oddSmaller) {\n            return smallest;\n        } else {\n         \
    \   return -1;\n        }", "        long even = 0;\n        long odd = 0;\n \
    \       long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2\
    \ = range / 2;\n        long range3 = range / 3;\n        long range4 = range\
    \ / 4;\n        long range5 = range / 5;\n        long range6 = range / 6;\n \
    \       long range7 = range / 7;\n        long range8 = range / 8;\n        long\
    \ range9 = range / 9;\n        long range10 = range / 10;\n        long range11\
    \ = range / 11;\n        long range12 = range / 12;\n        long range13 = range\
    \ / 13;\n        long range14 = range / 14;\n        long range15 = range / 15;\n\
    \        long range16 = range / 16;\n        long range17 = range / 17;\n    \
    \    long range18 = range / 18;\n        long range19 = range / 19;\n        long\
    \ range20 = range / 20;\n        long range21 = range / 21;\n        long range22\
    \ = range / 22;\n        long range23 = range / 23;\n        long range24 = range\
    \ / 24;\n        long range25 = range / 25;\n        long range26 = range / 26;\n\
    \        long range27 = range / 27;\n        long range28 = range / 28;\n    \
    \    long range29 = range / 29;\n        long range30 = range / 30;\n        long\
    \ range31 = range / 31;\n        long range32 = range / 32;\n        long range33\
    \ = range / 33;\n        long range34 = range / 34;\n        long range35 = range\
    \ / 35;\n        long range36 = range / 36;\n        long range37 = range / 37;\n\
    \        long range38 = range / 38;\n        long range39 = range / 39;\n    \
    \    long range40 = range / 40;\n        long range41 = range / 41;\n        long\
    \ range42 = range / 42;\n        long range43 = range / 43;\n        long range44\
    \ = range / 44;\n        long range45 = range / 45;\n        long range46 = range\
    \ / 46;\n        long range47 = range / 47;\n        long range48 = range / 48;\n\
    \        long range49 = range / 49;\n        long range50 = range / 50;\n    \
    \    long range51 = range / 51;\n        long range52 = range / 52;\n        long\
    \ range", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        long temp;\n        while (even < odd) {\n            temp =\
    \ (even + odd) / 2;\n            if (temp % 2 == 0) {\n                even =\
    \ temp;\n            } else {\n                odd = temp;\n            }\n  \
    \          if (even > biggest) {\n                biggest = even;\n          \
    \  }\n        }\n        return biggest;", "        long result = -1;\n      \
    \  if (x >= y) {\n            while (x < y) {\n                long mid = (x +\
    \ y) / 2;\n                if (IsEven(mid)) {\n                    x = mid;\n\
    \                } else {\n                    y = mid;\n                }\n \
    \           }\n            if (IsEven(x)) {\n                result = x;\n   \
    \         } else {\n                result = y;\n            }\n        } else\
    \ {\n            while (x > y) {\n                long mid = (x + y) / 2;\n  \
    \              if (IsEven(mid)) {\n                    y = mid;\n            \
    \    } else {\n                    x = mid;\n                }\n            }\n\
    \            if (IsEven(y)) {\n                result = y;\n            } else\
    \ {\n                result = x;\n            }\n        }\n        return result;",
  "        long even = x & 1;\n        long odd = x >> 1;\n        long evenodd =\
    \ even + odd;\n        if (evenodd > y) {\n            return -1;\n        }\n\
    \        long result = evenodd - y;\n        if (result < 0) {\n            return\
    \ -1;\n        }\n        return result;", "        long even = x % 2 == 0 ? x\
    \ : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long biggest =\
    \ even;\n        long biggestOdd = odd;\n        long biggestEven = even;\n  \
    \      long biggestOddEven = even;\n        long biggestEvenOdd = odd;\n     \
    \   long biggestOddEvenOdd = odd;\n        long biggestEvenOddEven = even;\n \
    \       long biggestOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEven = odd;\n        long\
    \ biggestEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n     \
    \   long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n     \
    \   long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n   \
    \     long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenO", "        if (x > y) {\n\
    \            long temp = x;\n            x = y;\n            y = temp;\n     \
    \   }\n        long even = x;\n        long odd = y;\n        long biggest = -1;\n\
    \        while (even > 0 && odd > 0) {\n            if (even % 2 == 0 && odd %\
    \ 2 == 0) {\n                biggest = even;\n                even = even / 2;\n\
    \                odd = odd / 2;\n            } else if (even % 2 == 0 && odd %\
    \ 2 != 0) {\n                biggest = even;\n                even = even / 2;\n\
    \            } else if (even % 2 != 0 && odd % 2 == 0) {\n                biggest\
    \ = odd;\n                odd = odd / 2;\n            } else {\n             \
    \   biggest = odd;\n                odd = odd / 2;\n            }\n        }\n\
    \        return biggest;", "        long xx = x;\n        long yy = y;\n     \
    \   long xy = x * y;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx", "        long result = -1;\n        if (x >= y) {\n \
    \           while (x < y) {\n                if (x % 2 == 0) {\n             \
    \       result = x;\n                    break;\n                }\n         \
    \       x += 2;\n            }\n        } else {\n            while (y < x) {\n\
    \                if (y % 2 == 0) {\n                    result = y;\n        \
    \            break;\n                }\n                y += 2;\n            }\n\
    \        }\n        return result;", "        long result = -1;\n        long\
    \ even = 0;\n        long odd = 0;\n        long temp;\n        long range;\n\
    \        long evenRange;\n        long oddRange;\n        long tempEven;\n   \
    \     long tempOdd;\n        long tempRange;\n        long tempEvenRange;\n  \
    \      long tempOddRange;\n        long tempRange2;\n        long tempEvenRange2;\n\
    \        long tempOddRange2;\n        long tempRange3;\n        long tempEvenRange3;\n\
    \        long tempOddRange3;\n        long tempRange4;\n        long tempEvenRange4;\n\
    \        long tempOddRange4;\n        long tempRange5;\n        long tempEvenRange5;\n\
    \        long tempOddRange5;\n        long tempRange6;\n        long tempEvenRange6;\n\
    \        long tempOddRange6;\n        long tempRange7;\n        long tempEvenRange7;\n\
    \        long tempOddRange7;\n        long tempRange8;\n        long tempEvenRange8;\n\
    \        long tempOddRange8;\n        long tempRange9;\n        long tempEvenRange9;\n\
    \        long tempOddRange9;\n        long tempRange10;\n        long tempEvenRange10;\n\
    \        long tempOddRange10;\n        long tempRange11;\n        long tempEvenRange11;\n\
    \        long tempOddRange11;\n        long tempRange12;\n        long tempEvenRange12;\n\
    \        long tempOddRange12;\n        long tempRange13;\n        long tempEvenRange13;\n\
    \        long tempOddRange13;\n        long tempRange14;\n        long tempEvenRange14;\n\
    \        long tempOddRange14;\n        long tempRange15;\n        long tempEvenRange15;\n\
    \        long tempOddRange15;\n        long tempRange16;\n        long tempEvenRange16;\n\
    \        long tempOddRange16;\n        long tempRange17;\n        long tempEvenRange17;\n\
    \        long tempOddRange17;\n        long tempRange18;\n        long tempEvenRange18;\n\
    \        long tempOddRange18;\n        long tempRange19;\n        long tempEvenRange19;\n\
    \        long tempOddRange19;\n        long tempRange20;\n        long tempEvenRange20;\n\
    \        long tempOddRange20;\n        long tempRange21;\n        long tempEvenRange21;\n\
    \        long tempOddRange21;\n        long tempRange22;\n        long ", "  \
    \      long result = -1;\n        if (x >= y) {\n            while (x <= y) {\n\
    \                if (x % 2 == 0) {\n                    result = x;\n        \
    \            break;\n                }\n                x += 2;\n            }\n\
    \        } else {\n            while (y <= x) {\n                if (y % 2 ==\
    \ 0) {\n                    result = y;\n                    break;\n        \
    \        }\n                y += 2;\n            }\n        }\n        return\
    \ result;", "        long result = -1;\n        long xx = x;\n        long yy\
    \ = y;\n        long xy = x * y;\n        long xx = xx * xx;\n        long yy\
    \ = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n       \
    \ long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long ", "        long result = -1;\n        long xx = x;\n  \
    \      long yy = y;\n        long xy = x * y;\n        long xx = xx * xx;\n  \
    \      long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx *\
    \ xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx\
    \ = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n       \
    \ long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long ", "        long even = x % 2 == 0 ? x :\
    \ x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n\
    \        if (odd > even) {\n            biggest = odd;\n        }\n        if\
    \ (biggest > x) {\n            biggest = x;\n        }\n        if (biggest <\
    \ y) {\n            biggest = y;\n        }\n        return biggest;", "     \
    \   long result = -1;\n        if (x >= y) {\n            while (x != y) {\n \
    \               if (x % 2 == 0) {\n                    result = x;\n         \
    \           x = x / 2;\n                } else {\n                    x = x *\
    \ 3 + 1;\n                }\n            }\n        } else {\n            while\
    \ (y != x) {\n                if (y % 2 == 0) {\n                    result =\
    \ y;\n                    y = y / 2;\n                } else {\n             \
    \       y = y * 3 + 1;\n                }\n            }\n        }\n        return\
    \ result;", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y\
    \ % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n     \
    \   long range2 = (long)(Math.Sqrt(range));\n        long range3 = (long)Math.Ceiling(range2);\n\
    \        long range4 = (long)Math.Floor(range2);\n        long range5 = (long)Math.Round(range2);\n\
    \        long range6 = (long)Math.Truncate(range2);\n        long range7 = (long)Math.Abs(range2);\n\
    \        long range8 = (long)Math.Pow(range, 2);\n        long range9 = (long)Math.Pow(range,\
    \ 3);\n        long range10 = (long)Math.Pow(range, 4);\n        long range11\
    \ = (long)Math.Pow(range, 5);\n        long range12 = (long)Math.Pow(range, 6);\n\
    \        long range13 = (long)Math.Pow(range, 7);\n        long range14 = (long)Math.Pow(range,\
    \ 8);\n        long range15 = (long)Math.Pow(range, 9);\n        long range16\
    \ = (long)Math.Pow(range, 10);\n        long range17 = (long)Math.Pow(range, 11);\n\
    \        long range18 = (long)Math.Pow(range, 12);\n        long range19 = (long)Math.Pow(range,\
    \ 13);\n        long range20 = (long)Math.Pow(range, 14);\n        long range21\
    \ = (long)(Math.Pow(range, 15));\n        long range22 = (long)Math.Pow(range,\
    \ 16);\n        long range23 = (long)Math.Pow(range, 17);\n        long range24\
    \ = (long)Math.Pow(range, 18);\n        long range25 = (long)Math.Pow(range, 19);\n\
    \        long range26 = (long)Math.Pow(range, 20);\n        long range27 = (long)Math.Pow(range,\
    \ 21);\n        long range28 = (long)Math.Pow(range, 22);\n        long range29\
    \ = (long)Math.Pow(range, 23);\n        long range30 = (long)Math.Pow(range, 24);\n\
    \        long range31 = (long)(Math.Pow(range, 25));\n        long range32 = (long)Math.Pow(range,\
    \ 26);\n        long range33 = (long)Math.Pow(range, 27);\n        long range34\
    \ = (long)Math.Pow(range, 28);\n        long range35 = (long)Math.Pow(range, 29);\n\
    \        long range36 = (long)Math.Pow(range, 30);\n        long range37 = (long)Math.Pow(range,\
    \ 31);\n        long range", "        long even = x % 2 == 0 ? x : x + 1;\n  \
    \      long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n    \
    \    long smallest = odd;\n        bool evenFound = false;\n        bool oddFound\
    \ = false;\n        while (even < odd) {\n            if (even % 2 == 0) {\n \
    \               evenFound = true;\n                biggest = even;\n         \
    \   }\n            else {\n                evenFound = false;\n              \
    \  biggest = even + 1;\n            }\n            while (odd % 2 == 0) {\n  \
    \              oddFound = true;\n                smallest = odd;\n           \
    \ }\n            else {\n                oddFound = false;\n                smallest\
    \ = odd - 1;\n            }\n            if (evenFound && oddFound) {\n      \
    \          break;\n            }\n            even = biggest;\n            odd\
    \ = smallest;\n        }\n        return biggest;", "        long result = -1;\n\
    \        long xMinusY = x - y;\n        long yMinusX = y - x;\n        long xMinusXMinusY\
    \ = xMinusY - xMinusY;\n        long yMinusYMinusX = yMinusX - yMinusX;\n    \
    \    long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n        long yMinusYMinusXMinusX\
    \ = yMinusYMinusX - yMinusYMinusX;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long yMinusYMinusXMinusXMinusY = yMinusYMinusXMinusX\
    \ - yMinusYMinusXMinusX;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long yMinusYMinusXMinusXMinusXMinusY =\
    \ yMinusYMinusXMinusXMinusY - yMinusYMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusY;\n     \
    \   long yMinusYMinusXMinusXMinusXMinusXMinusY = yMinusYMinusXMinusXMinusXMinusY\
    \ - yMinusYMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusXMinusXMinusXMinusXMinusXMinusY = yMinusYMinusXMinusXMinusXMin",
  "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y\
    \ : y + 1;\n        long biggest = even;\n        if (odd > biggest) {\n     \
    \       biggest = odd;\n        }\n        if (even > biggest) {\n           \
    \ biggest = even;\n        }\n        return biggest;", "        long even = x\
    \ % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long mid = (even + odd)\
    \ / 2;\n        long even2 = even / 2;\n        long odd2 = odd / 2;\n       \
    \ long biggest2 = even2;\n        long smallest2 = odd2;\n        long mid2 =\
    \ (even + odd) / 2;\n        long even3 = even / 2;\n        long odd3 = odd /\
    \ 2;\n        long biggest3 = even3;\n        long smallest3 = odd3;\n       \
    \ long mid3 = (even + odd) / 2;\n        long even4 = even / 2;\n        long\
    \ odd4 = odd / 2;\n        long biggest4 = even4;\n        long smallest4 = odd4;\n\
    \        long mid4 = (even + odd) / 2;\n        long even5 = even / 2;\n     \
    \   long odd5 = odd / 2;\n        long biggest5 = even5;\n        long smallest5\
    \ = odd5;\n        long mid5 = (even + odd) / 2;\n        long even6 = even /\
    \ 2;\n        long odd6 = odd / 2;\n        long biggest6 = even6;\n        long\
    \ smallest6 = odd6;\n        long mid6 = (even + odd) / 2;\n        long even7\
    \ = even / 2;\n        long odd7 = odd / 2;\n        long biggest7 = even7;\n\
    \        long smallest7 = odd7;\n        long mid7 = (even + odd) / 2;\n     \
    \   long even8 = even / 2;\n        long odd8 = odd / 2;\n        long biggest8\
    \ = even8;\n        long smallest8 = odd8;\n        long mid8 = (even + odd) /\
    \ 2;\n        long even9 = even / 2;\n        long odd9 = odd / 2;\n        long\
    \ biggest9 = even9;\n        long smallest9 = odd9;\n        long mid9 = (even\
    \ + odd) / 2;\n        long even10 = even / 2;\n        long odd10 = odd / 2;\n\
    \        long biggest10 = even10;\n        long smallest10 = odd10;\n        long\
    \ mid10 = (even + odd) / 2;\n        long even11 = even / 2;\n        long odd11\
    \ = odd / 2;\n        long biggest11 = even11;\n        long smallest11 = odd11;\n\
    \        long mid11 = (even + odd) / 2;\n        long even12 = even / 2;\n   \
    \     long odd12 = odd / 2;\n        long biggest12 = even12;\n        long smallest12\
    \ = odd12;\n        long ", "        long even = x % 2 == 0 ? x : x + 1;\n   \
    \     long odd = y % 2 == 0 ? y : y + 1;\n        long evenodd = even % 2 == 0\
    \ ? even : even + 1;\n        long evenodd2 = odd % 2 == 0 ? odd : odd + 1;\n\
    \        long evenodd3 = evenodd % 2 == 0 ? evenodd : evenodd + 1;\n        long\
    \ evenodd4 = evenodd3 % 2 == 0 ? evenodd3 : evenodd3 + 1;\n        long evenodd5\
    \ = evenodd4 % 2 == 0 ? evenodd4 : evenodd4 + 1;\n        long evenodd6 = evenodd5\
    \ % 2 == 0 ? evenodd5 : evenodd5 + 1;\n        long evenodd7 = evenodd6 % 2 ==\
    \ 0 ? evenodd6 : evenodd6 + 1;\n        long evenodd8 = evenodd7 % 2 == 0 ? evenodd7\
    \ : evenodd7 + 1;\n        long evenodd9 = evenodd8 % 2 == 0 ? evenodd8 : evenodd8\
    \ + 1;\n        long evenodd10 = evenodd9 % 2 == 0 ? evenodd9 : evenodd9 + 1;\n\
    \        long evenodd11 = evenodd10 % 2 == 0 ? evenodd10 : evenodd10 + 1;\n  \
    \      long evenodd12 = evenodd11 % 2 == 0 ? evenodd11 : evenodd11 + 1;\n    \
    \    long evenodd13 = evenodd12 % 2 == 0 ? evenodd12 : evenodd12 + 1;\n      \
    \  long evenodd14 = evenodd13 % 2 == 0 ? evenodd13 : evenodd13 + 1;\n        long\
    \ evenodd15 = evenodd14 % 2 == 0 ? evenodd14 : evenodd14 + 1;\n        long evenodd16\
    \ = evenodd15 % 2 == 0 ? evenodd15 : evenodd15 + 1;\n        long evenodd17 =\
    \ evenodd16 % 2 == 0 ? evenodd16 : evenodd16 + 1;\n        long evenodd18 = evenodd17\
    \ % 2 == 0 ? evenodd17 : evenodd17 + 1;\n        long evenodd19 = evenodd18 %\
    \ 2 == 0 ? evenodd18 : evenodd18 + 1;\n        long evenodd20 = evenodd19 % 2\
    \ == 0 ? evenodd19 : evenodd19 + 1;\n        long evenodd21 = evenodd20 % 2 ==\
    \ 0 ? evenodd20 : evenodd20 + 1;\n        long evenodd22 = evenodd21 % 2 == 0\
    \ ? evenodd21 : evenodd21 + 1;\n        long evenodd23 = evenodd22 % 2 == 0 ?\
    \ evenodd22 : evenodd22 + 1;\n        long evenodd24 = evenodd23 % 2 == 0 ? evenodd23\
    \ : evenodd23 + 1;\n        long evenodd25 = evenodd", "        long even = x\
    \ % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = biggest;\n        long y = even;\n        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        long x = ", "        long even = x % 2 == 0 ? x : x + 1;\n        long\
    \ odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        long biggestEven = even;\n        long smallestOdd = odd;\n\
    \        long biggestOdd = odd;\n        long biggestEvenOdd = even;\n       \
    \ long smallestEvenOdd = odd;\n        long biggestEvenEven = even;\n        long\
    \ smallestEvenEven = even;\n        long biggestEvenEvenOdd = even;\n        long\
    \ smallestEvenEvenOdd = odd;\n        long biggestEvenEvenEven = even;\n     \
    \   long smallestEvenEvenEven = even;\n        long biggestEvenEvenEvenOdd = even;\n\
    \        long smallestEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        ", "     \
    \   long xx = x;\n        long yy = y;\n        long xy = x * y;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx", "        long\
    \ even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n\
    \        long biggest = even;\n        long smallest = odd;\n        bool evenFound\
    \ = false;\n        bool oddFound = false;\n        while (even < odd) {\n   \
    \         if (even % 2 == 0) {\n                evenFound = true;\n          \
    \      biggest = even;\n            }\n            else {\n                evenFound\
    \ = false;\n                biggest = even + 1;\n            }\n            if\
    \ (odd % 2 == 0) {\n                oddFound = true;\n                smallest\
    \ = odd;\n            }\n            else {\n                oddFound = false;\n\
    \                smallest = odd - 1;\n            }\n            if (evenFound\
    \ && oddFound) {\n                break;\n            }\n        }\n        return\
    \ biggest;", "        long z = x - y;\n        long a = z / 2;\n        long b\
    \ = z % 2;\n        long c = x - a;\n        long d = y - b;\n        long e =\
    \ x - c;\n        long f = y - d;\n        long g = x - e;\n        long h = y\
    \ - f;\n        long i = x - g;\n        long j = y - h;\n        long k = x -\
    \ i;\n        long l = y - j;\n        long m = x - k;\n        long n = y - l;\n\
    \        long o = x - m;\n        long p = y - n;\n        long q = x - o;\n \
    \       long r = y - p;\n        long s = x - q;\n        long t = y - r;\n  \
    \      long u = x - s;\n        long v = y - t;\n        long w = x - u;\n   \
    \     long x = y - v;\n        long y = x - w;\n        long z = x - x;\n    \
    \    long a = x - y;\n        long b = y - z;\n        long c = x - a;\n     \
    \   long d = y - b;\n        long e = x - c;\n        long f = y - d;\n      \
    \  long g = x - e;\n        long h = y - f;\n        long i = x - g;\n       \
    \ long j = y - h;\n        long k = x - i;\n        long l = y - j;\n        long\
    \ m = x - k;\n        long n = y - l;\n        long o = x - m;\n        long p\
    \ = y - n;\n        long q = x - o;\n        long r = y - p;\n        long s =\
    \ x - q;\n        long t = y - r;\n        long u = x - s;\n        long v = y\
    \ - t;\n        long w = x - u;\n        long x = y - v;\n        long y = x -\
    \ w;\n        long z = x - x;\n        long a = x - y;\n        long b = y - z;\n\
    \        long c = x - a;\n        long d = y - b;\n        long e = x - c;\n \
    \       long f = y - d;\n        long g = x - e;\n        long h = y - f;\n  \
    \      long i = x - g;\n        long j = y - h;\n        long k = x - i;\n   \
    \     long l = y - j;\n        long m = x - k;\n        long n = y - l;\n    \
    \    long o = x - m;\n        long p = y - n;\n        long q = x - o;\n     \
    \   long r = y - p;\n        long s = x - q;\n        long t = y - r;\n      \
    \  long u = x - s;\n        long v = y - t;\n        long w = x - u;\n       \
    \ long x = y - v;\n        long y = x - w;\n        long z = x - x;\n        long\
    \ a = x - y;\n        long b = y - z;\n        long c = x - a;\n", "        long\
    \ result = -1;\n        long xMinusY = x - y;\n        long yMinusX = y - x;\n\
    \        long xMinusXMinusY = xMinusY - xMinusY;\n        long yMinusYMinusX =\
    \ yMinusX - yMinusX;\n        long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n\
    \        long yMinusYMinusYMinusX = yMinusYMinusX - yMinusYMinusX;\n        long\
    \ xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY - xMinusXMinusXMinusY;\n   \
    \     long yMinusYMinusYMinusXMinusY = yMinusYMinusYMinusX - yMinusYMinusYMinusX;\n\
    \        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusYMinusXMinusY = yMinusYMinusYMinusYMinusX - yMinusYMinusYMinusYMinusX;\n\
    \        long xMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusYMinusYMinusXMinusY\
    \ = yMinusYMinusYMinusYMinusYMinusX - yMinusYMinusYMinusYMinusYMinusX;\n     \
    \   long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusYMinusYMinusYMinusXMinusY\
    \ = yMinusYMinusYMinusYMinusYMinusYMinusX - ", "        long even = x % 2 == 0\
    \ ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        while (biggest < even) {\n            biggest = biggest + biggest;\n\
    \        }\n        return biggest;", "        long even = 0;\n        long odd\
    \ = 0;\n        long biggest = 0;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp", "        long even = x;\n        long odd = y;\n        long\
    \ biggest = -1;\n        long eveneven = even;\n        long evenodd = odd;\n\
    \        long oddeven = odd;\n        long oddodd = even;\n        long evenevenodd\
    \ = even;\n        long evenoddeven = even;\n        long evenoddodd = odd;\n\
    \        long oddevenevenodd = odd;\n        long oddoddevenodd = even;\n    \
    \    long evenevenevenodd = even;\n        long evenevenodd = odd;\n        long\
    \ evenoddevenodd = even;\n        long evenoddodd = odd;\n        long oddevenevenodd\
    \ = even;\n        long oddoddevenodd = even;\n        long evenevenevenodd =\
    \ even;\n        long evenevenodd = odd;\n        long evenoddevenodd = even;\n\
    \        long evenoddodd = odd;\n        long oddevenevenodd = even;\n       \
    \ long oddoddevenodd = even;\n        long evenevenevenodd = even;\n        long\
    \ evenevenodd = odd;\n        long evenoddevenodd = even;\n        long evenoddodd\
    \ = odd;\n        long oddevenevenodd = even;\n        long oddoddevenodd = even;\n\
    \        long evenevenevenodd = even;\n        long evenevenodd = odd;\n     \
    \   long evenoddevenodd = even;\n        long evenoddodd = odd;\n        long\
    \ oddevenevenodd = even;\n        long oddoddevenodd = even;\n        long evenevenevenodd\
    \ = even;\n        long evenevenodd = odd;\n        long evenoddevenodd = even;\n\
    \        long evenoddodd = odd;\n        long oddevenevenodd = even;\n       \
    \ long oddoddevenodd = even;\n        long evenevenevenodd = even;\n        long\
    \ evenevenodd = odd;\n        long evenoddevenodd = even;\n        long evenoddodd\
    \ = odd;\n        long oddevenevenodd = even;\n        long oddoddevenodd = even;\n\
    \        long evenevenevenodd = even;\n        long evenevenodd = odd;\n     \
    \   long evenoddevenodd = even;\n        long evenoddodd = odd;\n        long\
    \ oddevenevenodd = even;\n        long evenevenevenodd = even;\n        long evenevenodd\
    \ = odd;", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y\
    \ % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        long range = (biggest - smallest) + 1;\n        long evenRange\
    \ = even;\n        long oddRange = odd;\n        long biggestEven = even;\n  \
    \      long biggestOdd = odd;\n        long smallestEven = even;\n        long\
    \ smallestOdd = odd;\n        long rangeEven = even;\n        long rangeOdd =\
    \ odd;\n        long biggestEvenRange = evenRange;\n        long biggestOddRange\
    \ = oddRange;\n        long smallestEvenRange = evenRange;\n        long smallestOddRange\
    \ = oddRange;\n        long rangeEvenRange = evenRange;\n        long rangeOddRange\
    \ = oddRange;\n        long biggestEvenRangeEven = evenRange;\n        long biggestOddRangeEven\
    \ = oddRange;\n        long smallestEvenRangeEven = evenRange;\n        long smallestOddRangeEven\
    \ = oddRange;\n        long rangeEvenRangeEven = evenRange;\n        long rangeOddRangeEven\
    \ = oddRange;\n        long biggestEvenRangeOdd = evenRange;\n        long biggestOddRangeOdd\
    \ = oddRange;\n        long smallestEvenRangeOdd = evenRange;\n        long smallestOddRangeOdd\
    \ = oddRange;\n        long rangeEvenRangeOdd = evenRange;\n        long rangeOddRangeOdd\
    \ = oddRange;\n        long biggestEvenRangeEvenRange = evenRange;\n        long\
    \ biggestOddRangeEvenRange = oddRange;\n        long smallestEvenRangeEvenRange\
    \ = evenRange;\n        long smallestOddRangeEvenRange = oddRange;\n        long\
    \ rangeEvenRangeEvenRange = evenRange;\n        long rangeOddRangeEvenRange =\
    \ oddRange;\n        long biggestEvenRangeOddRange = evenRange;\n        long\
    \ biggestOddRangeOddRange = oddRange;\n        long smallestEvenRangeOddRange\
    \ = evenRange;\n        long smallestOddRangeOddRange = oddRange;\n        long\
    \ rangeEvenRangeOddRange = evenRange;\n        long rangeOddRangeOddRange = oddRange;\n\
    \        long biggestEvenRangeEven", "        long even = x % 2 == 0 ? x : x +\
    \ 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long result = -1;\n\
    \        while (even < odd) {\n            long mid = even + (odd - even) / 2;\n\
    \            if (mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if (even < odd) {\n\
    \                result = even;\n                break;\n            }\n     \
    \   }\n        return result;", "        long even = x % 2 == 0 ? x : -1;\n  \
    \      long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n       \
    \ if (even > odd) {\n            biggest = odd;\n        }\n        long min =\
    \ even;\n        if (even < odd) {\n            min = odd;\n        }\n      \
    \  long max = even;\n        if (even > odd) {\n            max = odd;\n     \
    \   }\n        long mid = biggest;\n        while (min < max) {\n            mid\
    \ = (min + max) / 2;\n            if (mid % 2 == 0) {\n                biggest\
    \ = mid;\n            } else {\n                min = mid;\n            }\n  \
    \      }\n        return biggest;", "        long result = -1;\n        if (x\
    \ >= y) {\n            long temp = x;\n            x = y;\n            y = temp;\n\
    \        }\n        if (x % 2 == 0) {\n            long temp1 = x;\n         \
    \   while (temp1 % 2 == 0) {\n                temp1 /= 2;\n            }\n   \
    \         if (temp1 < y) {\n                result = temp1;\n            }\n \
    \       }\n        if (y % 2 == 0) {\n            long temp2 = y;\n          \
    \  while (temp2 % 2 == 0) {\n                temp2 /= 2;\n            }\n    \
    \        if (temp2 < x) {\n                result = temp2;\n            }\n  \
    \      }\n        return result;", "        if (x < 0 || y < 0 || x > y || y >\
    \ x) throw new ArgumentOutOfRangeException();\n        long even = x % 2 == 0\
    \ ? x : x - y;\n        long odd = y % 2 == 0 ? y : y - x;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = even;\n        } else\
    \ {\n            biggest = odd;\n        }\n        while (biggest < x || biggest\
    \ > y) {\n            if (biggest % 2 == 0) {\n                biggest = biggest\
    \ + 1;\n            } else {\n                biggest = biggest - 1;\n       \
    \     }\n        }\n        return biggest;", "        long even = x % 2 == 0\
    \ ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest\
    \ = even;\n        long smallest = odd;\n        long range = (long)Math.Max(Math.Abs(x),\
    \ Math.Abs(y));\n        long range2 = range / 2;\n        long range3 = range\
    \ / 3;\n        long range4 = range / 4;\n        long range5 = range / 5;\n \
    \       long range6 = range / 6;\n        long range7 = range / 7;\n        long\
    \ range8 = range / 8;\n        long range9 = range / 9;\n        long range10\
    \ = range / 10;\n        long range11 = range / 11;\n        long range12 = range\
    \ / 12;\n        long range13 = range / 13;\n        long range14 = range / 14;\n\
    \        long range15 = range / 15;\n        long range16 = range / 16;\n    \
    \    long range17 = range / 17;\n        long range18 = range / 18;\n        long\
    \ range19 = range / 19;\n        long range20 = range / 20;\n        long range21\
    \ = range / 21;\n        long range22 = range / 22;\n        long range23 = range\
    \ / 23;\n        long range24 = range / 24;\n        long range25 = range / 25;\n\
    \        long range26 = range / 26;\n        long range27 = range / 27;\n    \
    \    long range28 = range / 28;\n        long range29 = range / 29;\n        long\
    \ range30 = range / 30;\n        long range31 = range / 31;\n        long range32\
    \ = range / 32;\n        long range33 = range / 33;\n        long range34 = range\
    \ / 34;\n        long range35 = range / 35;\n        long range36 = range / 36;\n\
    \        long range37 = range / 37;\n        long range38 = range / 38;\n    \
    \    long range39 = range / 39;\n        long range40 = range / 40;\n        long\
    \ range41 = range / 41;\n        long range42 = range / 42;\n        long range43\
    \ = range / 43;\n        long range44 = range / 44;\n        long range45 = range\
    \ / 45;\n        long range46 = range / 46;\n        long range47 = range / 47;\n\
    \        long range48 = range / 48;\n        long range49 = range / 49;\n    \
    \    long range50", "        long even = x % 2 == 0 ? x : -1;\n        long odd\
    \ = y % 2 == 0 ? y : -1;\n        long biggest = even;\n        if (even > odd)\
    \ {\n            biggest = odd;\n        }\n        long temp = 0;\n        long\
    \ temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5\
    \ = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 =\
    \ 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =\
    \ 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14\
    \ = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17\
    \ = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20\
    \ = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23\
    \ = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26\
    \ = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29\
    \ = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32\
    \ = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35\
    \ = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38\
    \ = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41\
    \ = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44\
    \ = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47\
    \ = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50\
    \ = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53\
    \ = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56\
    \ = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59\
    \ = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62\
    \ = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65\
    \ = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68\
    \ = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71\
    \ = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74\
    \ = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77\
    \ = 0;\n        long temp78 = 0;\n        long temp79", "        if (x > y) {\n\
    \            long temp = x;\n            x = y;\n            y = temp;\n     \
    \   }\n        long ans = -1;\n        long even = 1;\n        long odd = 1;\n\
    \        while (even <= y) {\n            ans = even;\n            even = even\
    \ + odd;\n            odd = even + odd;\n        }\n        if (ans == -1) {\n\
    \            return -1;\n        }\n        return ans;", "        long even =\
    \ x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n      \
    \  long biggest = even;\n        long smallest = odd;\n        long range = (biggest\
    \ - smallest) + 1;\n        long evenRange = even;\n        long oddRange = odd;\n\
    \        long biggestEven = even;\n        long biggestOdd = odd;\n        long\
    \ smallestEven = even;\n        long smallestOdd = odd;\n        long rangeEven\
    \ = even;\n        long rangeOdd = odd;\n        long biggestEvenRange = evenRange;\n\
    \        long biggestOddRange = oddRange;\n        long smallestEvenRange = evenRange;\n\
    \        long smallestOddRange = oddRange;\n        long rangeEvenRange = evenRange;\n\
    \        long rangeOddRange = oddRange;\n        long biggestEvenRangeEven = evenRange;\n\
    \        long biggestOddRangeEven = oddRange;\n        long smallestEvenRangeEven\
    \ = evenRange;\n        long smallestOddRangeEven = oddRange;\n        long rangeEvenRangeEven\
    \ = evenRange;\n        long rangeOddRangeEven = oddRange;\n        long biggestEvenRangeOdd\
    \ = evenRange;\n        long biggestOddRangeOdd = oddRange;\n        long smallestEvenRangeOdd\
    \ = evenRange;\n        long smallestOddRangeOdd = oddRange;\n        long rangeEvenRangeOdd\
    \ = evenRange;\n        long rangeOddRangeOdd = oddRange;\n        long biggestEvenRangeEvenRange\
    \ = evenRange;\n        long biggestOddRangeEvenRange = oddRange;\n        long\
    \ smallestEvenRangeEvenRange = evenRange;\n        long smallestOddRangeEvenRange\
    \ = oddRange;\n        long rangeEvenRangeEvenRange = evenRange;\n        long\
    \ rangeOddRangeEvenRange = oddRange;\n        long biggestEvenRangeOddRange =\
    \ evenRange;\n        long biggestOddRangeOddRange = oddRange;\n        long smallestEvenRangeOddRange\
    \ = evenRange;\n        long smallestOddRangeOddRange = oddRange;\n        long\
    \ rangeEvenRangeOddRange = evenRange;\n        long rangeOddRangeOddRange = oddRange;\n\
    \        long biggestEvenRangeEven", "        long even = x % 2 == 0;\n      \
    \  long even2 = y % 2 == 0;\n        if (even && even2) {\n            long biggest\
    \ = x;\n            while (true) {\n                long next = (biggest + y)\
    \ / 2;\n                if (next > y) break;\n                if (next % 2 ==\
    \ 0) {\n                    biggest = next;\n                } else {\n      \
    \              break;\n                }\n            }\n            return biggest;\n\
    \        } else if (even) {\n            return -1;\n        } else {\n      \
    \      return -1;\n        }", "        if (x < 0 || y < 0 || x > y || x == y)\n\
    \            return -1;\n        long even = x % 2 == 0 ? x : x - y;\n       \
    \ long odd = y % 2 == 0 ? y : y - x;\n        long biggest = even;\n        if\
    \ (even > odd)\n            biggest = even;\n        else\n            biggest\
    \ = odd;\n        while (biggest < x || biggest > y) {\n            biggest =\
    \ even;\n            if (even > odd)\n                biggest = even;\n      \
    \      else\n                biggest = odd;\n        }\n        return biggest;",
  "        long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        if (biggest > x) {\n            biggest = x;\n  \
    \      }\n        if (biggest < y) {\n            biggest = y;\n        }\n  \
    \      return biggest;", "        long even = x % 2 == 0 ? x : x - 1;\n      \
    \  long odd = y % 2 == 0 ? y : y - 1;\n        long result = even + odd;\n   \
    \     if (result > x) result = x;\n        if (result < y) result = y;\n     \
    \   return result;", "        long result = -1;\n        if (x > y) {\n      \
    \      long temp = x;\n            x = y;\n            y = temp;\n        }\n\
    \        long xx = x;\n        long yy = y;\n        long xy = x * y;\n      \
    \  long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long ",
  "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y\
    \ : y + 1;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2\
    \ = (long)(Math.Sqrt(range) + 1);\n        long range3 = (long)(Math.Sqrt(range2)\
    \ + 1);\n        long range4 = (long)(Math.Sqrt(range3) + 1);\n        long range5\
    \ = (long)(Math.Sqrt(range4) + 1);\n        long range6 = (long)(Math.Sqrt(range5)\
    \ + 1);\n        long range7 = (long)(Math.Sqrt(range6) + 1);\n        long range8\
    \ = (long)(Math.Sqrt(range7) + 1);\n        long range9 = (long)(Math.Sqrt(range8)\
    \ + 1);\n        long range10 = (long)(Math.Sqrt(range9) + 1);\n        long range11\
    \ = (long)(Math.Sqrt(range10) + 1);\n        long range12 = (long)(Math.Sqrt(range11)\
    \ + 1);\n        long range13 = (long)(Math.Sqrt(range12) + 1);\n        long\
    \ range14 = (long)(Math.Sqrt(range13) + 1);\n        long range15 = (long)(Math.Sqrt(range14)\
    \ + 1);\n        long range16 = (long)(Math.Sqrt(range15) + 1);\n        long\
    \ range17 = (long)(Math.Sqrt(range16) + 1);\n        long range18 = (long)(Math.Sqrt(range17)\
    \ + 1);\n        long range19 = (long)(Math.Sqrt(range18) + 1);\n        long\
    \ range20 = (long)(Math.Sqrt(range19) + 1);\n        long range21 = (long)(Math.Sqrt(range20)\
    \ + 1);\n        long range22 = (long)(Math.Sqrt(range21) + 1);\n        long\
    \ range23 = (long)(Math.Sqrt(range22) + 1);\n        long range24 = (long)(Math.Sqrt(range23)\
    \ + 1);\n        long range25 = (long)(Math.Sqrt(range24) + 1);\n        long\
    \ range26 = (long)(Math.Sqrt(range25) + 1);\n        long range27 = (long)(Math.Sqrt(range26)\
    \ + 1);\n        long range28 = (long)(Math.Sqrt(range27) + 1);\n        long\
    \ range29 = (long)(Math.Sqrt(range28) + 1);\n        long range30 = (long)(Math.Sqrt(range29)\
    \ + 1);\n        long range31 = (long)(Math.Sqrt(range30) + 1);\n        long\
    \ range32 = (long)(", "        long even = x % 2 == 0 ? x : x + 1;\n        long\
    \ odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while (even < odd) {\n            biggest = even;\n        \
    \    smallest = odd;\n            if (even % 2 == 0 && odd % 2 == 0) {\n     \
    \           biggest = even;\n                smallest = odd;\n            }\n\
    \            else if (even % 2 == 0 && odd % 2 != 0) {\n                biggest\
    \ = even;\n                smallest = odd - 1;\n            }\n            else\
    \ if (even % 2 != 0 && odd % 2 == 0) {\n                biggest = even - 1;\n\
    \                smallest = odd;\n            }\n            else if (even % 2\
    \ != 0 && odd % 2 != 0) {\n                biggest = even - 1;\n             \
    \   smallest = odd - 1;\n            }\n            even = biggest;\n        \
    \    odd = smallest;\n        }\n        return biggest;", "        long even\
    \ = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n    \
    \    long max = even;\n        long min = odd;\n        while (even < odd) {\n\
    \            long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n \
    \               even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n            if (even > max) {\n                max = even;\n \
    \           }\n            if (odd < min) {\n                min = odd;\n    \
    \        }\n        }\n        return max;", "        long result = -1;\n    \
    \    long even = x;\n        long odd = y;\n        long biggest = x;\n      \
    \  long smallest = y;\n        long temp;\n        while (even > 0 && odd > 0)\
    \ {\n            temp = (even % 2 == 1) ? (even - 1) : (even + 1);\n         \
    \   temp = (odd % 2 == 1) ? (odd - 1) : (odd + 1);\n            if (temp > biggest)\
    \ {\n                biggest = temp;\n            }\n            if (temp < smallest)\
    \ {\n                smallest = temp;\n            }\n            even /= 2;\n\
    \            odd /= 2;\n        }\n        if (biggest > smallest) {\n       \
    \     result = biggest;\n        }\n        return result;", "        long even\
    \ = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n    \
    \    long biggest = even;\n        long smallest = odd;\n        while (even <\
    \ odd) {\n            biggest = even;\n            smallest = odd;\n         \
    \   long mid = even + (odd - even) / 2;\n            if (mid % 2 == 0) {\n   \
    \             even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n        }\n        return biggest;", "        long even = x %\
    \ 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even < odd) {\n            biggest = even;\n        }\n\
    \        else {\n            biggest = odd;\n        }\n        long biggestEven\
    \ = biggest % 2 == 0 ? biggest : -1;\n        long biggestOdd = biggest % 2 ==\
    \ 1 ? biggest : -1;\n        long biggestEvenOdd = biggestEven % 2 == 1 ? biggestEven\
    \ : -1;\n        long biggestEvenOddOdd = biggestEvenOdd % 2 == 1 ? biggestEvenOdd\
    \ : -1;\n        long biggestEvenOddEvenOdd = biggestEvenOddOdd % 2 == 1 ? biggestEvenOddOdd\
    \ : -1;\n        long biggestEvenOddEvenOddOdd = biggestEvenOddEvenOdd % 2 ==\
    \ 1 ? biggestEvenOddEvenOdd : -1;\n        long biggestEvenOddEvenOddEvenOdd =\
    \ biggestEvenOddEvenOddOdd % 2 == 1 ? biggestEvenOddEvenOddOdd : -1;\n       \
    \ long biggestEvenOddEvenOddEvenOddOdd = biggestEvenOddEvenOddEvenOddOdd % 2 ==\
    \ 1 ? biggestEvenOddEvenOddEvenOddOdd : -1;\n        long biggestEvenOddEvenOddEvenOddEvenOdd\
    \ = biggestEvenOddEvenOddEvenOddOdd % 2 == 1 ? biggestEvenOddEvenOddEvenOddOdd\
    \ : -1;\n        long biggestEvenOddEvenOddEvenOddEvenOddOdd = biggestEvenOddEvenOddEvenOddEvenOddOdd\
    \ % 2 == 1 ? biggestEvenOddEvenOddEvenOddEvenOddOdd : -1;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = biggestEvenOddEvenOddEvenOddEvenOddEvenOddOdd % 2 == 1 ? biggestEvenOddEvenOddEvenOddEvenOddEvenOddOdd\
    \ : -1;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddOdd\
    \ % 2 == 1 ? biggestEvenOdd", "        long even = x % 2 == 0 ? x : x - 1;\n \
    \       long odd = y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n   \
    \     if (even > odd) {\n            biggest = odd;\n        }\n        long temp;\n\
    \        while (true) {\n            temp = biggest;\n            biggest = even\
    \ % biggest;\n            even = odd % temp;\n            odd = temp;\n      \
    \      if (biggest == even) {\n                return biggest;\n            }\n\
    \        }", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd =\
    \ y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while (even < odd) {\n            biggest = even;\n        \
    \    smallest = odd;\n            if (even > odd) {\n                biggest =\
    \ even + 1;\n                smallest = odd - 1;\n            }\n            long\
    \ temp = (biggest + smallest) / 2;\n            if (temp % 2 == 0) {\n       \
    \         even = temp;\n            } else {\n                odd = temp;\n  \
    \          }\n        }\n        return biggest;", "        if (x < 0 || y < 0\
    \ || x > y || y > Int64.MaxValue) {\n            return -1;\n        }\n     \
    \   long even = 0;\n        long odd = 1;\n        long biggest = -1;\n      \
    \  while (even < y) {\n            while (odd < x) {\n                biggest\
    \ = even;\n                even = even + odd;\n                odd = odd + odd;\n\
    \            }\n            while (even < x) {\n                biggest = even;\n\
    \                even = even + odd;\n            }\n            while (odd < y)\
    \ {\n                biggest = odd;\n                odd = odd + odd;\n      \
    \      }\n        }\n        return biggest;", "        long even = x % 2 == 0\
    \ ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n\
    \        if (even > odd) {\n            biggest = odd;\n        }\n        long\
    \ temp;\n        while (true) {\n            temp = biggest;\n            if (temp\
    \ % 2 == 0) {\n                biggest = temp / 2;\n            } else {\n   \
    \             biggest = temp / 2 + 1;\n            }\n            if (biggest\
    \ < x || biggest > y) {\n                return temp;\n            }\n       \
    \ }", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 ==\
    \ 0 ? y : y + 1;\n        long biggest = even;\n        long smallest = odd;\n\
    \        bool evenFound = false;\n        bool oddFound = false;\n        while\
    \ (even < odd) {\n            if (even % 2 == 0) {\n                evenFound\
    \ = true;\n                biggest = even;\n            } else {\n           \
    \     evenFound = false;\n                biggest = even + 1;\n            }\n\
    \            if (odd % 2 == 0) {\n                oddFound = true;\n         \
    \       smallest = odd;\n            } else {\n                oddFound = false;\n\
    \                smallest = odd - 1;\n            }\n            if (evenFound\
    \ && oddFound) {\n                break;\n            }\n            even = even\
    \ + 1;\n            odd = odd - 1;\n        }\n        return biggest;", "   \
    \     long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        long limit = biggest;\n        while (even < odd)\
    \ {\n            even = even + 2;\n            odd = odd + 2;\n            if\
    \ (even > odd) {\n                even = even - 2;\n                odd = odd\
    \ - 2;\n                if (even > odd) {\n                    even = even - 2;\n\
    \                    odd = odd - 2;\n                    if (even > odd) {\n \
    \                       even = even - 2;\n                        odd = odd -\
    \ 2;\n                        if (even > odd) {\n                            even\
    \ = even - 2;\n                            odd = odd - 2;\n                  \
    \          if (even > odd) {\n                                even = even - 2;\n\
    \                                odd = odd - 2;\n                            \
    \    if (even > odd) {\n                                    even = even - 2;\n\
    \                                    odd = odd - 2;\n                        \
    \            if (even > odd) {\n                                        even =\
    \ even - 2;\n                                        odd = odd - 2;\n        \
    \                                if (even > odd) {\n                         \
    \                   even = even - 2;\n                                       \
    \     odd = odd - 2;\n                                            if (even > odd)\
    \ {\n                                                even = even - 2;\n      \
    \                                          odd = odd - 2;\n                  \
    \                              if (even > odd) {\n                           \
    \                         even = even - 2;\n                                 \
    \                   odd = odd - 2;\n                                         \
    \           if (even > odd) {\n                                              \
    \          even = even - 2;\n                                                \
    \        odd = odd - 2;\n                                                    }\n\
    \                                                }\n                         \
    \                   }\n                                        }\n           \
    \                         }\n                                }\n             \
    \               }\n                        }\n                    }\n        \
    \        }\n            }\n            limit = limit + 2;\n        }\n       \
    \ return limit;", "        long even = x % 2 == 0;\n        long even2 = y % 2\
    \ == 0;\n        long even3 = x % 3 == 0;\n        long even4 = y % 3 == 0;\n\
    \        long even5 = x % 5 == 0;\n        long even6 = y % 5 == 0;\n        long\
    \ even7 = x % 7 == 0;\n        long even8 = y % 7 == 0;\n        long even9 =\
    \ x % 9 == 0;\n        long even10 = y % 9 == 0;\n        long even11 = x % 11\
    \ == 0;\n        long even12 = y % 11 == 0;\n        long even13 = x % 13 == 0;\n\
    \        long even14 = y % 13 == 0;\n        long even15 = x % 15 == 0;\n    \
    \    long even16 = y % 15 == 0;\n        long even17 = x % 17 == 0;\n        long\
    \ even18 = y % 17 == 0;\n        long even19 = x % 19 == 0;\n        long even20\
    \ = y % 19 == 0;\n        long even21 = x % 21 == 0;\n        long even22 = y\
    \ % 21 == 0;\n        long even23 = x % 23 == 0;\n        long even24 = y % 23\
    \ == 0;\n        long even25 = x % 25 == 0;\n        long even26 = y % 25 == 0;\n\
    \        long even27 = x % 27 == 0;\n        long even28 = y % 27 == 0;\n    \
    \    long even29 = x % 29 == 0;\n        long even30 = y % 29 == 0;\n        long\
    \ even31 = x % 31 == 0;\n        long even32 = y % 31 == 0;\n        long even33\
    \ = x % 33 == 0;\n        long even34 = y % 33 == 0;\n        long even35 = x\
    \ % 35 == 0;\n        long even36 = y % 35 == 0;\n        long even37 = x % 37\
    \ == 0;\n        long even38 = y % 37 == 0;\n        long even39 = x % 39 == 0;\n\
    \        long even40 = y % 39 == 0;\n        long even41 = x % 41 == 0;\n    \
    \    long even42 = y % 41 == 0;\n        long even43 = x % 43 == 0;\n        long\
    \ even44 = y % 43 == 0;\n        long even45 = x % 45 == 0;\n        long even46\
    \ = y % 45 == 0;\n        long even47 = x % 47 == 0;\n        long even48 = y\
    \ % 47 == 0;\n", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd\
    \ = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while (even < odd) {\n            biggest = even;\n        \
    \    smallest = odd;\n            even = even + 2;\n            odd = odd - 2;\n\
    \            if (even < odd) {\n                biggest = even;\n            \
    \    smallest = odd;\n            }\n        }\n        if (biggest > x && biggest\
    \ > y) {\n            return biggest;\n        }\n        if (smallest < x &&\
    \ smallest < y) {\n            return smallest;\n        }\n        return -1;",
  "        long even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y\
    \ : y - 1;\n        long biggest = even;\n        if (odd > even) {\n        \
    \    biggest = odd;\n        }\n        return biggest;", "        long even =\
    \ 0;\n        long odd = 0;\n        long biggest = -1;\n        long temp;\n\
    \        long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;",
  "        long maxEven = -1;\n        long even = x;\n        long odd = y;\n   \
    \     long temp;\n        while (even < odd) {\n            temp = even;\n   \
    \         even = odd - (even % odd);\n            odd = temp;\n            if\
    \ (even > maxEven) {\n                maxEven = even;\n            }\n       \
    \ }\n        return maxEven;", "        long even = x % 2 == 0 ? x : -1;\n   \
    \     long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n        if\
    \ (even > odd) {\n            biggest = odd;\n        }\n        long counter\
    \ = 0;\n        long limit = biggest;\n        while (counter < limit) {\n   \
    \         long temp = biggest;\n            biggest = even > odd ? even : odd;\n\
    \            even = temp % 2 == 0 ? temp : -1;\n            odd = biggest % 2\
    \ == 0 ? biggest : -1;\n            counter++;\n        }\n        return biggest;",
  "        long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     long temp;\n        while (even < odd) {\n            temp = even;\n   \
    \         even = odd % temp;\n            odd = temp;\n            if (even >\
    \ biggest) {\n                biggest = even;\n            }\n        }\n    \
    \    return biggest;", "        long even = x % 2 == 0 ? x : x - 1;\n        long\
    \ odd = y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n        long biggestOdd\
    \ = odd;\n        long biggestEven = even;\n        long biggestOddEven = even;\n\
    \        long biggestOddEvenOdd = odd;\n        long biggestOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOdd = odd;\n      \
    \  long biggestOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n  \
    \      long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        long even = x;\n        long odd = y;\n        long biggest = even;\n \
    \       long smallest = odd;\n        long mid = biggest;\n        while (even\
    \ > 0 && odd > 0) {\n            if (even % 2 == 0 && odd % 2 == 0) {\n      \
    \          biggest = even;\n                smallest = odd;\n            } else\
    \ if (even % 2 == 0 && odd % 2 != 0) {\n                biggest = even;\n    \
    \            mid = biggest;\n                while (odd % 2 == 0) {\n        \
    \            mid = mid * 2;\n                    odd /= 2;\n                }\n\
    \                mid = mid * 2;\n                even /= 2;\n            } else\
    \ if (even % 2 != 0 && odd % 2 == 0) {\n                biggest = odd;\n     \
    \           mid = biggest;\n                while (even % 2 == 0) {\n        \
    \            mid = mid * 2;\n                    even /= 2;\n                }\n\
    \                mid = mid * 2;\n                odd /= 2;\n            } else\
    \ if (even % 2 != 0 && odd % 2 != 0) {\n                biggest = even;\n    \
    \            mid = biggest;\n                while (odd % 2 == 0) {\n        \
    \            mid = mid * 2;\n                    odd /= 2;\n                }\n\
    \                mid = mid * 2;\n                even /= 2;\n            }\n \
    \       }\n        return biggest;", "        long even = x;\n        long odd\
    \ = y;\n        long biggest = -1;\n        while (even < odd) {\n           \
    \ long temp = even;\n            even = odd % even;\n            odd = temp %\
    \ odd;\n            if (even > biggest) {\n                biggest = even;\n \
    \           }\n        }\n        return biggest;", "        long z = Math.Min(x,\
    \ y);\n        long a = Math.Max(x, y);\n        long b = Math.Max(z, a);\n  \
    \      long c = Math.Min(z, a);\n        long d = Math.Min(b, c);\n        long\
    \ e = Math.Max(b, c);\n        long f = Math.Max(d, e);\n        long g = Math.Min(d,\
    \ e);\n        long h = Math.Min(f, g);\n        long i = Math.Max(f, g);\n  \
    \      long j = Math.Max(i, h);\n        long k = Math.Min(i, h);\n        long\
    \ l = Math.Max(j, k);\n        long m = Math.Min(j, k);\n        long n = Math.Min(l,\
    \ m);\n        long o = Math.Max(l, m);\n        long p = Math.Max(n, o);\n  \
    \      long q = Math.Min(n, o);\n        long r = Math.Max(p, q);\n        long\
    \ s = Math.Min(p, q);\n        long t = Math.Max(r, s);\n        long u = Math.Min(r,\
    \ s);\n        long v = Math.Max(t, u);\n        long w = Math.Min(t, u);\n  \
    \      long x = Math.Max(v, w);\n        long y = Math.Min(v, w);\n        long\
    \ z = Math.Max(x, y);\n        long a = Math.Max(x, y);\n        long b = Math.Max(z,\
    \ a);\n        long c = Math.Min(z, a);\n        long d = Math.Min(b, c);\n  \
    \      long e = Math.Max(b, c);\n        long f = Math.Max(d, e);\n        long\
    \ g = Math.Min(d, e);\n        long h = Math.Min(f, g);\n        long i = Math.Max(f,\
    \ g);\n        long j = Math.Max(i, h);\n        long k = Math.Min(i, h);\n  \
    \      long l = Math.Max(j, k);\n        long m = Math.Min(j, k);\n        long\
    \ n = Math.Min(l, m);\n        long o = Math.Max(l, m);\n        long p = Math.Max(n,\
    \ o);\n        long q = Math.Min(n, o);\n        long r = Math.Max(p, q);\n  \
    \      long s = Math.Min(p, q);\n        long t = Math.Max(r, s);\n        long\
    \ u = Math.Min(r, s);\n        long v = Math.Max(t, u);\n        long w = Math.Min(t,\
    \ u);\n        long x = Math.Max(v, w);\n        long y = Math.Min(v, w);\n  \
    \      long z = Math.Max(x, y);\n        long a = Math.Max(x, y);\n        long\
    \ b = Math.Max(z, a);\n        long c = Math.Min(z, a);\n        long d = Math.Min(b,\
    \ c);\n        long e = Math.Max", "        long even = x;\n        long odd =\
    \ y;\n        long biggest = -1;\n        long temp;\n        while (even < odd)\
    \ {\n            temp = (even + odd) / 2;\n            if (temp % 2 == 0) {\n\
    \                even = temp;\n            } else {\n                odd = temp;\n\
    \            }\n            if (even > biggest) {\n                biggest = even;\n\
    \            }\n        }\n        return biggest;", "        long even = x %\
    \ 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long eveneven = even\
    \ % 2 == 0 ? even : even + 1;\n        long evenodd = even % 2 == 0 ? odd : odd\
    \ + 1;\n        long oddodd = odd % 2 == 0 ? even : odd + 1;\n        long eveneveneven\
    \ = eveneven % 2 == 0 ? eveneven : eveneven;\n        long evenevenodd = eveneven\
    \ % 2 == 0 ? evenodd : evenodd;\n        long evenoddodd = evenodd % 2 == 0 ?\
    \ eveneven : evenodd;\n        long oddoddeven = oddodd % 2 == 0 ? odd : even;\n\
    \        long oddoddodd = oddodd % 2 == 0 ? odd : odd;\n        long eveneveneveneven\
    \ = eveneveneven % 2 == 0 ? eveneveneven : eveneveneven;\n        long evenevenevenodd\
    \ = eveneveneven % 2 == 0 ? evenevenodd : evenevenodd;\n        long evenevenoddodd\
    \ = evenevenodd % 2 == 0 ? eveneveneven : evenevenodd;\n        long evenoddoddeven\
    \ = evenoddeven % 2 == 0 ? evenodd : eveneven;\n        long evenoddoddodd = evenoddeven\
    \ % 2 == 0 ? evenodd : evenodd;\n        long oddoddeveneven = oddoddeven % 2\
    \ == 0 ? odd : eveneven;\n        long oddoddevenodd = oddoddeven % 2 == 0 ? odd\
    \ : evenodd;\n        long eveneveneveneveneven = eveneveneveneven % 2 == 0 ?\
    \ eveneveneveneven : eveneveneveneven;\n        long evenevenevenevenodd = eveneveneveneven\
    \ % 2 == 0 ? evenevenevenodd : evenevenevenodd;\n        long evenevenevenoddodd\
    \ = evenevenevenodd % 2 == 0 ? eveneveneveneven : evenevenoddodd;\n        long\
    \ evenevenoddoddeven = evenevenoddeven % 2 == 0 ? evenevenodd : evenoddoddeven;\n\
    \        long evenoddoddeven = evenoddeven % 2 == 0 ? odd : eveneven;\n      \
    \  long evenoddevenodd = evenoddeven % 2 == 0 ? odd : evenodd;\n        long oddoddeveneven\
    \ = oddoddeven % 2 == 0 ? odd : eveneven;\n        long oddoddevenodd = oddoddeven\
    \ % 2 == 0 ? odd : evenodd;\n        long eveneveneveneveneven = eveneveneveneven\
    \ % 2 == 0 ? eveneveneveneven ", "        if (x < 0 || y < 0)\n            return\
    \ -1;\n        if (x > y)\n            return ChooseNum(y, x);\n        if (x\
    \ % 2 == 0)\n            return x;\n        if (y % 2 == 0)\n            return\
    \ y;\n        long a = x % y;\n        long b = y % x;\n        if ((a > 0 &&\
    \ b > 0) || (a < 0 && b < 0))\n            return ChooseNum(y, x);\n        if\
    \ (a > b)\n            return ChooseNum(y, x);\n        return ChooseNum(x, y);",
  "        long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        if (biggest > x && biggest > y) {\n            biggest\
    \ = x;\n        }\n        if (biggest < x && biggest < y) {\n            biggest\
    \ = y;\n        }\n        return biggest;", "        long even = x % 2 == 0 ?\
    \ x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest\
    \ = even;\n        if (odd > biggest) {\n            biggest = odd;\n        }\n\
    \        while (biggest < even) {\n            biggest = biggest + biggest;\n\
    \        }\n        return biggest;", "        long result = -1;\n        long\
    \ xMinusY = x - y;\n        long yMinusX = y - x;\n        long xMinusXMinusY\
    \ = xMinusY - xMinusY;\n        long yMinusXMinusY = yMinusX - yMinusX;\n    \
    \    long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n        long yMinusXMinusXMinusY\
    \ = yMinusXMinusY - yMinusXMinusY;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long yMinusXMinusXMinusXMinusY = yMinusXMinusXMinusY\
    \ - yMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long yMinusXMinusXMinusXMinusXMinusY =\
    \ yMinusXMinusXMinusXMinusY - yMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusY;\n     \
    \   long yMinusXMinusXMinusXMinusXMinusXMinusY = yMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - yMinusXMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusXMinusXMinusXMinusXMinusXMinusXMinusY = yMinusXMinusXMinusXMin",
  "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y\
    \ : y + 1;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   long range = (long)Math.Abs(x - y);\n        long range2 = range / 2;\n  \
    \      long range3 = range / 3;\n        long range4 = range / 4;\n        long\
    \ range5 = range / 5;\n        long range6 = range / 6;\n        long range7 =\
    \ range / 7;\n        long range8 = range / 8;\n        long range9 = range /\
    \ 9;\n        long range10 = range / 10;\n        long range11 = range / 11;\n\
    \        long range12 = range / 12;\n        long range13 = range / 13;\n    \
    \    long range14 = range / 14;\n        long range15 = range / 15;\n        long\
    \ range16 = range / 16;\n        long range17 = range / 17;\n        long range18\
    \ = range / 18;\n        long range19 = range / 19;\n        long range20 = range\
    \ / 20;\n        long range21 = range / 21;\n        long range22 = range / 22;\n\
    \        long range23 = range / 23;\n        long range24 = range / 24;\n    \
    \    long range25 = range / 25;\n        long range26 = range / 26;\n        long\
    \ range27 = range / 27;\n        long range28 = range / 28;\n        long range29\
    \ = range / 29;\n        long range30 = range / 30;\n        long range31 = range\
    \ / 31;\n        long range32 = range / 32;\n        long range33 = range / 33;\n\
    \        long range34 = range / 34;\n        long range35 = range / 35;\n    \
    \    long range36 = range / 36;\n        long range37 = range / 37;\n        long\
    \ range38 = range / 38;\n        long range39 = range / 39;\n        long range40\
    \ = range / 40;\n        long range41 = range / 41;\n        long range42 = range\
    \ / 42;\n        long range43 = range / 43;\n        long range44 = range / 44;\n\
    \        long range45 = range / 45;\n        long range46 = range / 46;\n    \
    \    long range47 = range / 47;\n        long range48 = range / 48;\n        long\
    \ range49 = range / 49;\n        long range50 = range / 50;\n        ", "    \
    \    long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y :\
    \ y + 1;\n        long biggest = even;\n        long smallest = odd;\n       \
    \ long biggestEven = even;\n        long smallestOdd = odd;\n        long biggestOdd\
    \ = odd;\n        long biggestEvenOdd = even;\n        long smallestEvenOdd =\
    \ odd;\n        long biggestEvenEven = even;\n        long smallestEvenEven =\
    \ even;\n        long biggestEvenEvenOdd = even;\n        long smallestEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEven = even;\n        long smallestEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenEvenOdd = even;\n        long smallestEvenEvenEvenEvenEvenOdd\
    \ = odd;\n        long biggestEvenEvenEvenEvenEvenEven = even;\n        long smallestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long biggestEvenEvenEvenEvenEvenEvenOdd = even;\n        long\
    \ smallestEvenEvenEvenEvenEvenOdd = odd;", "        long result = -1;\n      \
    \  if (x >= y) {\n            while (x <= y) {\n                if (x % 2 == 0)\
    \ {\n                    result = x;\n                    break;\n           \
    \     }\n                x += 2;\n            }\n        } else {\n          \
    \  while (y <= x) {\n                if (y % 2 == 0) {\n                    result\
    \ = y;\n                    break;\n                }\n                y += 2;\n\
    \            }\n        }\n        return result;", "        long even = x;\n\
    \        long odd = y;\n        long biggest = -1;\n        while (even < odd)\
    \ {\n            long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n\
    \                even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n            if (even > biggest) {\n                biggest = even;\n\
    \            } else if (odd > biggest) {\n                biggest = odd;\n   \
    \         }\n        }\n        return biggest;", "        if (x < 0 || y < 0\
    \ || x > y || y > Int64.MaxValue) {\n            return -1;\n        }\n     \
    \   long xx = x;\n        long yy = y;\n        long xy = x * y;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = y",
  "        long even = x % 2 == 0;\n        long odd = y % 2 == 0;\n        if (even\
    \ && odd) {\n            return x;\n        }\n        if (even && !odd) {\n \
    \           return y;\n        }\n        if (!even && odd) {\n            return\
    \ x;\n        }\n        return -1;", "        long even = x % 2 == 0 ? x : x\
    \ + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n\
    \        if (even > odd) {\n            biggest = odd;\n        }\n        long\
    \ result = biggest;\n        do {\n            biggest = biggest + biggest;\n\
    \        } while (biggest < even);\n        return result;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        while (even > 0 && odd > 0) {\n            long mid = (even\
    \ + odd) / 2;\n            if (mid % 2 == 0) {\n                even = mid;\n\
    \            } else {\n                odd = mid;\n            }\n           \
    \ if (even > biggest) {\n                biggest = even;\n            }\n    \
    \        if (odd < smallest) {\n                smallest = odd;\n            }\n\
    \        }\n        return biggest;", "        long max = -1;\n        long min\
    \ = 1;\n        long mid;\n        long even;\n        long odd;\n        long\
    \ eveneven;\n        long evenodd;\n        long oddeven;\n        long oddodd;\n\
    \        long eveneveneven;\n        long evenevenodd;\n        long evenoddeven;\n\
    \        long evenoddodd;\n        long oddeveneven;\n        long oddevenodd;\n\
    \        long oddoddeven;\n        long oddoddodd;\n        long eveneveneveneven;\n\
    \        long evenevenevenodd;\n        long evenevenoddeven;\n        long evenevenoddodd;\n\
    \        long evenoddeveneven;\n        long evenoddevenodd;\n        long evenoddoddeven;\n\
    \        long evenoddoddodd;\n        long oddeveneveneveneven;\n        long\
    \ oddevenevenodd;\n        long oddevenoddeven;\n        long oddevenoddodd;\n\
    \        long oddoddeveneveneven;\n        long oddoddevenodd;\n        long oddoddoddeven;\n\
    \        long oddoddoddeven;\n        long oddoddoddodd;\n        long eveneveneveneveneven;\n\
    \        long evenevenevenodd;\n        long evenevenoddeven;\n        long evenevenoddodd;\n\
    \        long evenoddeveneveneven;\n        long evenoddeveneven;\n        long\
    \ evenoddevenodd;\n        long evenoddoddeven;\n        long evenoddoddeven;\n\
    \        long evenoddoddodd;\n        long oddeveneveneveneveneven;\n        long\
    \ oddevenevenevenodd;\n        long oddevenevenoddeven;\n        long oddevenoddeven;\n\
    \        long oddoddeveneven;\n        long oddoddeveneven;\n        long oddoddoddeven;\n\
    \        long oddoddoddeven;\n        long oddoddoddeven;\n        long oddoddoddodd;\n\
    \        long eveneveneveneveneven;\n        long evenevenevenodd;\n        long\
    \ evenevenoddeven;\n        long evenevenodd;\n        long evenoddeveneven;\n\
    \        long evenoddeveneven;\n        long evenoddevenodd;\n        long evenoddoddeven;\n\
    \        long evenoddoddeven;\n        long evenoddoddodd;\n        long oddeveneveneveneveneven;\n\
    \        long oddevenevenevenodd;\n        long oddeven", "        if (x < 0 ||\
    \ y < 0 || x > y || y > Int64.MaxValue) {\n            return -1;\n        }\n\
    \        long even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ?\
    \ y : y - 1;\n        long biggest = even;\n        long biggestOdd = odd;\n \
    \       long biggestEven = even;\n        long biggestOddEven = even;\n      \
    \  long biggestOddEvenOdd = odd;\n        long biggestEvenOdd = even;\n      \
    \  long biggestEvenOddEven = even;\n        long biggestEvenOddEvenOdd = odd;\n\
    \        long biggestEvenOddEvenOddEven = even;\n        long biggestEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEven = even;\n        long\
    \ biggestEvenOddEvenOddEvenOddEvenOdd = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n  \
    \      long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long\
    \ biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        long xx = x;\n        long yy = y;\n        long xy = x * y;\n        long\
    \ xx = xx * x;\n        long yy = yy * y;\n        long xy = xy * x;\n       \
    \ long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n  \
    \      long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n\
    \        long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy *\
    \ y;\n        long xx = xx * y;\n        long yy = yy * y;\n        long xy =\
    \ xy * y;\n        long xx = xx * y;\n        long yy = yy * y;\n        long\
    \ xy = xy * y;\n        long xx = xx * y;\n        long yy = yy * y;\n       \
    \ long xy = xy * y;\n        long xx = xx * y;\n        long yy = yy * y;\n  \
    \      long xy = xy * y;\n        long xx = xx * y;\n        long yy = yy * y;\n\
    \        long xy = xy * y;\n        long xx = xx * y;\n        long yy = yy *\
    \ y;\n        long xy = xy * y;\n        long xx = xx * y;\n        long yy =\
    \ yy * y;\n        long xy = xy * y;\n        long xx = xx * y;\n        long\
    \ yy = yy * y;\n        long xy = xy * y;\n        long xx = xx * y;\n       \
    \ long yy = yy * y;\n        long xy = xy * y;\n        long xx = xx * y;\n  \
    \      long yy = yy * y;\n        long xy = xy * y;\n        long xx = xx * y;\n\
    \        long yy = yy * y;\n        long xy = xy * y;\n        long xx = xx *\
    \ y;\n        long yy = yy * y;\n        long xy = xy * y;\n        long xx =\
    \ xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n        long\
    \ xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n       \
    \ long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n  \
    \      long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * y;\n\
    \        long xx = xx * y;\n        long yy = y", "        long even = x % 2 ==\
    \ 0;\n        long odd = x % 2 != 0;\n        long even2 = y % 2 == 0;\n     \
    \   long odd2 = y % 2 != 0;\n        long even3 = x % 3 == 0;\n        long odd3\
    \ = x % 3 != 0;\n        long even4 = y % 3 == 0;\n        long odd4 = y % 3 !=\
    \ 0;\n        long even5 = x % 5 == 0;\n        long odd5 = x % 5 != 0;\n    \
    \    long even6 = y % 5 == 0;\n        long odd6 = y % 5 != 0;\n        long even7\
    \ = x % 7 == 0;\n        long odd7 = x % 7 != 0;\n        long even8 = y % 7 ==\
    \ 0;\n        long odd8 = y % 7 != 0;\n        long even9 = x % 9 == 0;\n    \
    \    long odd9 = x % 9 != 0;\n        long even10 = y % 9 == 0;\n        long\
    \ odd10 = y % 9 != 0;\n        long even11 = x % 11 == 0;\n        long odd11\
    \ = x % 11 != 0;\n        long even12 = y % 11 == 0;\n        long odd12 = y %\
    \ 11 != 0;\n        long even13 = x % 13 == 0;\n        long odd13 = x % 13 !=\
    \ 0;\n        long even14 = y % 13 == 0;\n        long odd14 = y % 13 != 0;\n\
    \        long even15 = x % 15 == 0;\n        long odd15 = x % 15 != 0;\n     \
    \   long even16 = y % 15 == 0;\n        long odd16 = y % 15 != 0;\n        long\
    \ even17 = x % 17 == 0;\n        long odd17 = x % 17 != 0;\n        long even18\
    \ = y % 17 == 0;\n        long odd18 = y % 17 != 0;\n        long even19 = x %\
    \ 19 == 0;\n        long odd19 = x % 19 != 0;\n        long even20 = y % 19 ==\
    \ 0;\n        long odd20 = y % 19 != 0;\n        long even21 = x % 21 == 0;\n\
    \        long odd21 = x % 21 != 0;\n        long even22 = y % 21 == 0;\n     \
    \   long odd22 = y % 21 != 0;\n        long even23 = x % 23 == 0;\n        long\
    \ odd23 = x % 23 != 0;\n        long even24 = y % 23 == 0;\n        long odd24\
    \ = y % 23 != 0;\n        long even25 = x % 25 == 0;\n        ", "        long\
    \ even = x;\n        long odd = y;\n        long biggest = -1;\n        while\
    \ (even < odd) {\n            biggest = even;\n            even += 2;\n      \
    \      odd -= 2;\n        }\n        if (biggest == -1) {\n            biggest\
    \ = odd;\n        }\n        return biggest;", "        long max_num = -1;\n \
    \       long min_num = x;\n        long max_even = x;\n        long min_even =\
    \ y;\n        long max_odd = y;\n        long min_odd = x;\n        long max_odd_even\
    \ = x;\n        long min_odd_even = y;\n        long max_odd_odd = x;\n      \
    \  long min_odd_odd = y;\n        long max_odd_odd_even = x;\n        long min_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd = x;\n        long min_odd_odd_odd = y;\n\
    \        long max_odd_odd_odd_even = x;\n        long min_odd_odd_odd_even = y;\n\
    \        long max_odd_odd_odd_odd = x;\n        long min_odd_odd_odd_odd = y;\n\
    \        long max_odd_odd_odd_odd_even = x;\n        long min_odd_odd_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd_odd_odd = x;\n        long min_odd_odd_odd_odd_odd\
    \ = y;\n        long max_odd_odd_odd_odd_odd_even = x;\n        long min_odd_odd_odd_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd = x;\n        long min_odd_odd_odd_odd_odd_odd\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd_even = x;\n        long min_odd_odd_odd_odd_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd_odd = x;\n        long min_odd_odd_odd_odd_odd_odd_odd\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd_odd_even = x;\n        long min_odd_odd_odd_odd_odd_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd_odd = x;\n        long min_odd_odd_odd_odd_odd_odd_odd\
    \ = y;\n        long max_odd_odd_odd_odd_odd_odd_odd_even = x;\n        long min_odd_odd_odd_odd_odd_odd_odd_even\
    \ = y;\n        long max_odd_odd_odd_odd_odd_od", "        long z = Math.Max(x,\
    \ y);\n        long a = Math.Min(x, y);\n        long b = Math.Max(x - a, y -\
    \ a);\n        long c = Math.Min(x - a, y - a);\n        long d = Math.Max(x -\
    \ a, y - a);\n        long e = Math.Min(x - a, y - a);\n        long f = Math.Max(x\
    \ - a, y - a);\n        long g = Math.Min(x - a, y - a);\n        long h = Math.Max(x\
    \ - a, y - a);\n        long i = Math.Min(x - a, y - a);\n        long j = Math.Max(x\
    \ - a, y - a);\n        long k = Math.Min(x - a, y - a);\n        long l = Math.Max(x\
    \ - a, y - a);\n        long m = Math.Min(x - a, y - a);\n        long n = Math.Max(x\
    \ - a, y - a);\n        long o = Math.Min(x - a, y - a);\n        long p = Math.Max(x\
    \ - a, y - a);\n        long q = Math.Min(x - a, y - a);\n        long r = Math.Max(x\
    \ - a, y - a);\n        long s = Math.Min(x - a, y - a);\n        long t = Math.Max(x\
    \ - a, y - a);\n        long u = Math.Min(x - a, y - a);\n        long v = Math.Max(x\
    \ - a, y - a);\n        long w = Math.Min(x - a, y - a);\n        long x = Math.Max(x\
    \ - a, y - a);\n        long y = Math.Min(x - a, y - a);\n        long z = Math.Max(x\
    \ - a, y - a);\n        long a = Math.Min(x - a, y - a);\n        long b = Math.Max(x\
    \ - a, y - a);\n        long c = Math.Min(x - a, y - a);\n        long d = Math.Max(x\
    \ - a, y - a);\n        long e = Math.Min(x - a, y - a);\n        long f = Math.Max(x\
    \ - a, y - a);\n        long g = Math.Min(x - a, y - a);\n        long h = Math.Max(x\
    \ - a, y - a);\n        long i = Math.Min(x - a, y - a);\n        long j = Math.Max(x\
    \ - a, y - a);\n        long k = Math.Min(x - a, y - a);\n        long l = Math.Max(x\
    \ - a, y - a);\n        long m = Math.Min(x - a, y - a);\n        long n = Math.Max(x\
    \ - a, y - a);\n        long o = Math.Min(x - a, y - a);\n        long p = Math.Max(x\
    \ - a, y - a);\n        long q = Math.Min(x - a, y - a);\n        long r = Math.Max(x\
    \ - a, y - a);\n        long s = Math.Min(x - a, y - a);\n        long t = Math.Max(x\
    \ - a, y - a);\n        ", "        long even = x % 2 == 0 ? x : x + 1;\n    \
    \    long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n      \
    \  long biggestOdd = odd;\n        long biggestEven = even;\n        long biggestOddEven\
    \ = even;\n        long biggestOddEvenOdd = odd;\n        long biggestOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOdd = odd;\n      \
    \  long biggestOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n  \
    \      long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        long even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y\
    \ : y - 1;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   bool evenInRange = true;\n        bool oddInRange = true;\n        long rangeStart\
    \ = 0;\n        long rangeEnd = 0;\n        long rangeLength = 0;\n        while\
    \ (even < odd) {\n            if (even % 2 == 0) {\n                evenInRange\
    \ = false;\n                rangeStart = even;\n                rangeEnd = even\
    \ + 1;\n                rangeLength = 1;\n            } else {\n             \
    \   oddInRange = false;\n                rangeStart = even + 1;\n            \
    \    rangeEnd = odd;\n                rangeLength = 2;\n            }\n      \
    \      even = rangeEnd;\n            odd = rangeStart;\n            if (even >\
    \ odd) {\n                biggest = rangeEnd;\n                smallest = rangeStart;\n\
    \            } else {\n                biggest = rangeStart;\n               \
    \ smallest = rangeEnd;\n            }\n        }\n        if (evenInRange && oddInRange)\
    \ {\n            rangeLength = 2;\n        }\n        if (even > odd) {\n    \
    \        rangeLength = 1;\n        }\n        if (rangeLength == 1) {\n      \
    \      biggest = rangeEnd;\n            smallest = rangeStart;\n        }\n  \
    \      if (rangeLength == 2) {\n            biggest = rangeStart;\n          \
    \  smallest = rangeEnd;\n        }\n        return biggest;", "        long even\
    \ = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n    \
    \    long biggest = even;\n        long smallest = odd;\n        long temp;\n\
    \        while (even < odd) {\n            temp = even;\n            even = odd\
    \ + (even + odd) / 2;\n            odd = temp;\n        }\n        while (even\
    \ > biggest) {\n            biggest = even;\n            even = odd + (even +\
    \ odd) / 2;\n            odd = biggest;\n        }\n        while (odd < smallest)\
    \ {\n            smallest = odd;\n            even = odd + (even + odd) / 2;\n\
    \            odd = smallest;\n        }\n        if (even > biggest && even >\
    \ smallest && even > y) {\n            return even;\n        }\n        if (even\
    \ < biggest && even < smallest && even < y) {\n            return -1;\n      \
    \  }\n        if (odd > biggest && odd > smallest && odd > y) {\n            return\
    \ odd;\n        }\n        if (odd < biggest && odd < smallest && odd < y) {\n\
    \            return -1;\n        }\n        return -1;", "        long even =\
    \ x;\n        long odd = y;\n        long biggest = -1;\n        while (even <\
    \ odd) {\n            long mid = (even + odd) / 2;\n            if (mid % 2 ==\
    \ 0) {\n                even = mid;\n            } else {\n                odd\
    \ = mid;\n            }\n            if (even > biggest) {\n                biggest\
    \ = even;\n            }\n            if (odd > biggest) {\n                biggest\
    \ = odd;\n            }\n        }\n        return biggest;", "        long result\
    \ = -1;\n        if (x >= y) {\n            while (x < y) {\n                long\
    \ mid = x + (y - x) / 2;\n                if (mid % 2 == 0) {\n              \
    \      result = mid;\n                    break;\n                }\n        \
    \        else if (mid > y) {\n                    x = mid;\n                }\n\
    \                else {\n                    y = mid;\n                }\n   \
    \         }\n        }\n        else {\n            while (y < x) {\n        \
    \        long mid = x + (y - x) / 2;\n                if (mid % 2 == 0) {\n  \
    \                  result = mid;\n                    break;\n               \
    \ }\n                else if (mid > x) {\n                    x = mid;\n     \
    \           }\n                else {\n                    y = mid;\n        \
    \        }\n            }\n        }\n        return result;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = -1;\n        while (even\
    \ < odd) {\n            long mid = (even + odd) / 2;\n            if (mid % 2\
    \ == 0) {\n                even = mid;\n            } else {\n               \
    \ odd = mid;\n            }\n            if (even > biggest) {\n             \
    \   biggest = even;\n            }\n            if (odd > biggest) {\n       \
    \         biggest = odd;\n            }\n        }\n        return biggest;",
  "        long even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y\
    \ : y - 1;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2\
    \ = range / 2;\n        long range3 = range / 3;\n        long range4 = range\
    \ / 4;\n        long range5 = range / 5;\n        long range6 = range / 6;\n \
    \       long range7 = range / 7;\n        long range8 = range / 8;\n        long\
    \ range9 = range / 9;\n        long range10 = range / 10;\n        long range11\
    \ = range / 11;\n        long range12 = range / 12;\n        long range13 = range\
    \ / 13;\n        long range14 = range / 14;\n        long range15 = range / 15;\n\
    \        long range16 = range / 16;\n        long range17 = range / 17;\n    \
    \    long range18 = range / 18;\n        long range19 = range / 19;\n        long\
    \ range20 = range / 20;\n        long range21 = range / 21;\n        long range22\
    \ = range / 22;\n        long range23 = range / 23;\n        long range24 = range\
    \ / 24;\n        long range25 = range / 25;\n        long range26 = range / 26;\n\
    \        long range27 = range / 27;\n        long range28 = range / 28;\n    \
    \    long range29 = range / 29;\n        long range30 = range / 30;\n        long\
    \ range31 = range / 31;\n        long range32 = range / 32;\n        long range33\
    \ = range / 33;\n        long range34 = range / 34;\n        long range35 = range\
    \ / 35;\n        long range36 = range / 36;\n        long range37 = range / 37;\n\
    \        long range38 = range / 38;\n        long range39 = range / 39;\n    \
    \    long range40 = range / 40;\n        long range41 = range / 41;\n        long\
    \ range42 = range / 42;\n        long range43 = range / 43;\n        long range44\
    \ = range / 44;\n        long range45 = range / 45;\n        long range46 = range\
    \ / 46;\n        long range47 = range / 47;\n        long range48 = range / 48;\n\
    \        long range49 = range / 49;\n        long range50", "        long maxEven\
    \ = -1;\n        long minEven = -1;\n        long minNum = x;\n        long maxNum\
    \ = y;\n        long num;\n        do {\n            num = minNum;\n         \
    \   while (num < maxNum) {\n                if (num % 2 == 0) {\n            \
    \        num += 2;\n                    if (num > maxEven) {\n               \
    \         maxEven = num;\n                    }\n                    if (num <\
    \ minEven) {\n                        minEven = num;\n                    }\n\
    \                }\n                else {\n                    num -= 2;\n  \
    \                  if (num < minEven) {\n                        minEven = num;\n\
    \                    }\n                    if (num > maxEven) {\n           \
    \             maxEven = num;\n                    }\n                }\n     \
    \       }\n            minNum = num;\n        } while (num < maxNum);\n      \
    \  return maxEven;", "        long even = 0;\n        long odd = 0;\n        long\
    \ biggest = -1;\n        long temp = 0;\n        long range = (long)Math.Abs(x\
    \ - y);\n        long remainder;\n        long temp2;\n        long temp3;\n \
    \       long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n", "        long even =\
    \ 0;\n        long odd = 1;\n        long biggest = -1;\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        ", "        long even = x % 2 == 0 ? x : -1;\n\
    \        long odd = y % 2 == 0 ? y : -1;\n        long result = -1;\n        if\
    \ (even < 0 && odd < 0) {\n            return -1;\n        }\n        if (even\
    \ < 0 && odd > 0) {\n            return even;\n        }\n        if (even > 0\
    \ && odd < 0) {\n            return odd;\n        }\n        if (even > 0 && odd\
    \ > 0) {\n            result = even;\n        }\n        return result;", "  \
    \      long even = x;\n        long odd = y;\n        long biggest = -1;\n   \
    \     while (even < odd) {\n            if (even % 2 == 0) {\n               \
    \ even++;\n            } else {\n                odd--;\n            }\n     \
    \       if (even > odd) {\n                biggest = even;\n                break;\n\
    \            }\n        }\n        return biggest;", "        long result = -1;\n\
    \        if (x >= y) {\n            while (x != 0) {\n                if (x %\
    \ 2 == 0) {\n                    result = x;\n                    break;\n   \
    \             }\n                x /= 2;\n            }\n        } else {\n  \
    \          while (y != 0) {\n                if (y % 2 == 0) {\n             \
    \       result = y;\n                    break;\n                }\n         \
    \       y /= 2;\n            }\n        }\n        return result;", "        long\
    \ result = -1;\n        long even = x % 2 == 0 ? x : x + 1;\n        long odd\
    \ = y % 2 == 0 ? y : y + 1;\n        if (even > odd) {\n            while (even\
    \ > odd) {\n                even -= 2;\n                odd += 2;\n          \
    \  }\n            result = even;\n        } else {\n            while (even <\
    \ odd) {\n                even += 2;\n                odd -= 2;\n            }\n\
    \            result = odd;\n        }\n        return result;", "        long\
    \ even = 0;\n        long odd = 0;\n        long range = (long)Math.Max(x, y);\n\
    \        long range2 = (long)Math.Min(x, y);\n        long range3 = (long)Math.Max(x\
    \ - 1, y);\n        long range4 = (long)Math.Min(x - 1, y);\n        long range5\
    \ = (long)Math.Max(x - 1, y - 1);\n        long range6 = (long)Math.Min(x - 1,\
    \ y - 1);\n        long range7 = (long)Math.Max(x - 1, y - 2);\n        long range8\
    \ = (long)Math.Min(x - 1, y - 2);\n        long range9 = (long)Math.Max(x - 2,\
    \ y - 1);\n        long range10 = (long)Math.Min(x - 2, y - 1);\n        long\
    \ range11 = (long)Math.Max(x - 2, y - 2);\n        long range12 = (long)Math.Min(x\
    \ - 2, y - 2);\n        long range13 = (long)Math.Max(x - 3, y - 2);\n       \
    \ long range14 = (long)Math.Min(x - 3, y - 2);\n        long range15 = (long)Math.Max(x\
    \ - 3, y - 3);\n        long range16 = (long)Math.Min(x - 3, y - 3);\n       \
    \ long range17 = (long)Math.Max(x - 4, y - 3);\n        long range18 = (long)Math.Min(x\
    \ - 4, y - 3);\n        long range19 = (long)Math.Max(x - 4, y - 4);\n       \
    \ long range20 = (long)Math.Min(x - 4, y - 4);\n        long range21 = (long)Math.Max(x\
    \ - 5, y - 4);\n        long range22 = (long)Math.Min(x - 5, y - 4);\n       \
    \ long range23 = (long)Math.Max(x - 5, y - 5);\n        long range24 = (long)Math.Min(x\
    \ - 5, y - 5);\n        long range25 = (long)Math.Max(x - 5, y - 6);\n       \
    \ long range26 = (long)Math.Min(x - 5, y - 6);\n        long range27 = (long)Math.Max(x\
    \ - 5, y - 7);\n        long range28 = (long)Math.Min(x - 5, y - 7);\n       \
    \ long range29 = (long)Math.Max(x - 6, y - 7);\n        long range30 = (long)Math.Min(x\
    \ - 6, y - 7);\n        long range31 = (long)Math.Max(x - 6, y - 8);\n       \
    \ long range32 = (long)Math.Min(x - 6, y - 8);\n        long range33 = (long)Math.Max(x\
    \ - 6, y - 9);\n        long range34 = (long)Math.Min(x - 6, y - 9);\n       \
    \ long range35 = (long)Math.Max(x - 7, y - 9);\n        long range36 = (long)Math.Min(x\
    \ - 7, y - 9);\n        long range37 = (long)", "        long result = -1;\n \
    \       long xMinusY = x - y;\n        long yMinusX = y - x;\n        long xMinusXMinusY\
    \ = xMinusY - xMinusY;\n        long yMinusYMinusX = yMinusX - yMinusX;\n    \
    \    long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n        long yMinusYMinusYMinusX\
    \ = yMinusYMinusX - yMinusYMinusX;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusY = yMinusYMinusXMinusY\
    \ - yMinusYMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusY =\
    \ yMinusYMinusXMinusYMinusX - yMinusYMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusY;\n     \
    \   long yMinusYMinusYMinusXMinusXMinusXMinusYMinusY = yMinusYMinusXMinusYMinusXMinusY\
    \ - yMinusYMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusXMinusXMinusXMinusXMinusXMinusY = yMinusYMinusXMinusYMinusXMin",
  "        long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        if (biggest < x || biggest < y) {\n            biggest\
    \ = -1;\n        }\n        return biggest;", "        long result = -1;\n   \
    \     long even = 0;\n        long odd = 0;\n        long temp = 0;\n        long\
    \ temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5\
    \ = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 =\
    \ 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =\
    \ 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14\
    \ = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17\
    \ = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20\
    \ = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23\
    \ = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26\
    \ = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29\
    \ = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32\
    \ = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35\
    \ = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38\
    \ = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41\
    \ = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44\
    \ = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47\
    \ = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50\
    \ = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53\
    \ = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56\
    \ = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59\
    \ = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62\
    \ = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65\
    \ = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68\
    \ = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71\
    \ = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74\
    \ = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77\
    \ = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80\
    \ = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83\
    \ = 0;\n        long temp84", "        long even = x % 2 == 0 ? x : x - 1;\n \
    \       long odd = y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n   \
    \     long smallest = odd;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n\
    \        long range2 = (long)(Math.Sqrt(range));\n        long range3 = (long)Math.Ceiling(range2);\n\
    \        long range4 = (long)Math.Floor(range2);\n        long range5 = (long)Math.Round(range2);\n\
    \        long range6 = (long)Math.Truncate(range2);\n        long range7 = (long)Math.Abs(range2);\n\
    \        long range8 = (long)Math.Pow(range, 2);\n        long range9 = (long)Math.Pow(range,\
    \ 3);\n        long range10 = (long)Math.Pow(range, 4);\n        long range11\
    \ = (long)Math.Pow(range, 5);\n        long range12 = (long)Math.Pow(range, 6);\n\
    \        long range13 = (long)Math.Pow(range, 7);\n        long range14 = (long)Math.Pow(range,\
    \ 8);\n        long range15 = (long)Math.Pow(range, 9);\n        long range16\
    \ = (long)Math.Pow(range, 10);\n        long range17 = (long)Math.Pow(range, 11);\n\
    \        long range18 = (long)Math.Pow(range, 12);\n        long range19 = (long)Math.Pow(range,\
    \ 13);\n        long range20 = (long)Math.Pow(range, 14);\n        long range21\
    \ = (long)(Math.Pow(range, 15));\n        long range22 = (long)Math.Pow(range,\
    \ 16);\n        long range23 = (long)Math.Pow(range, 17);\n        long range24\
    \ = (long)Math.Pow(range, 18);\n        long range25 = (long)Math.Pow(range, 19);\n\
    \        long range26 = (long)Math.Pow(range, 20);\n        long range27 = (long)Math.Pow(range,\
    \ 21);\n        long range28 = (long)Math.Pow(range, 22);\n        long range29\
    \ = (long)Math.Pow(range, 23);\n        long range30 = (long)Math.Pow(range, 24);\n\
    \        long range31 = (long)Math.Pow(range, 25);\n        long range32 = (long)Math.Pow(range,\
    \ 26);\n        long range33 = (long)Math.Pow(range, 27);\n        long range34\
    \ = (long)Math.Pow(range, 28);\n        long range35 = (long)Math.Pow(range, 29);\n\
    \        long range36 = (long)Math.Pow(range, 30);\n        long range37 = (long)Math.Pow(range,\
    \ 31);\n        long range", "        long result = -1;\n        long even = 1;\n\
    \        long odd = 0;\n        long maxEven = x;\n        long maxOdd = y;\n\
    \        while (even < maxEven && odd < maxOdd) {\n            if (even % 2 ==\
    \ 0 && odd % 2 == 0) {\n                result = even;\n                even++;\n\
    \                odd++;\n            } else if (even % 2 == 0 && odd % 2 != 0)\
    \ {\n                result = even;\n                even++;\n            } else\
    \ if (even % 2 != 0 && odd % 2 == 0) {\n                result = odd;\n      \
    \          odd++;\n            } else {\n                result = odd;\n     \
    \           odd++;\n            }\n        }\n        return result;", "     \
    \   long even = x;\n        long odd = y;\n        long biggest = -1;\n      \
    \  while (even < odd) {\n            long mid = (even + odd) / 2;\n          \
    \  if (mid % 2 == 0) {\n                even = mid;\n            } else {\n  \
    \              odd = mid;\n            }\n            if (even > biggest) {\n\
    \                biggest = even;\n            }\n            if (odd > biggest)\
    \ {\n                biggest = odd;\n            }\n        }\n        return\
    \ biggest;", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd =\
    \ y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n   \
    \     long range2 = (long)(Math.Sqrt(range));\n        long range3 = (long)(Math.Sqrt(range2));\n\
    \        long range4 = (long)(Math.Sqrt(range3));\n        long range5 = (long)(Math.Sqrt(range4));\n\
    \        long range6 = (long)(Math.Sqrt(range5));\n        long range7 = (long)(Math.Sqrt(range6));\n\
    \        long range8 = (long)(Math.Sqrt(range7));\n        long range9 = (long)(Math.Sqrt(range8));\n\
    \        long range10 = (long)(Math.Sqrt(range9));\n        long range11 = (long)(Math.Sqrt(range10));\n\
    \        long range12 = (long)(Math.Sqrt(range11));\n        long range13 = (long)(Math.Sqrt(range12));\n\
    \        long range14 = (long)(Math.Sqrt(range13));\n        long range15 = (long)(Math.Sqrt(range14));\n\
    \        long range16 = (long)(Math.Sqrt(range15));\n        long range17 = (long)(Math.Sqrt(range16));\n\
    \        long range18 = (long)(Math.Sqrt(range17));\n        long range19 = (long)(Math.Sqrt(range18));\n\
    \        long range20 = (long)(Math.Sqrt(range19));\n        long range21 = (long)(Math.Sqrt(range20));\n\
    \        long range22 = (long)(Math.Sqrt(range21));\n        long range23 = (long)(Math.Sqrt(range22));\n\
    \        long range24 = (long)(Math.Sqrt(range23));\n        long range25 = (long)(Math.Sqrt(range24));\n\
    \        long range26 = (long)(Math.Sqrt(range25));\n        long range27 = (long)(Math.Sqrt(range26));\n\
    \        long range28 = (long)(Math.Sqrt(range27));\n        long range29 = (long)(Math.Sqrt(range28));\n\
    \        long range30 = (long)(Math.Sqrt(range29));\n        long range31 = (long)(Math.Sqrt(range30));\n\
    \        long range32 = (long)(Math.Sqrt(range31));\n        long range33 = (long)(Math.Sqrt(range32));\n\
    \        long range34 = (long)(Math.", "        long even = 0;\n        long odd\
    \ = 1;\n        long biggest = -1;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        ", "        long even = x % 2 == 0;\n        long odd = y % 2 == 0;\n\
    \        if (even && odd) {\n            return x;\n        }\n        if (even\
    \ && !odd) {\n            return y;\n        }\n        if (!even && odd) {\n\
    \            return x;\n        }\n        return -1;", "        long even = x\
    \ % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long range = (biggest\
    \ - smallest);\n        long evenRange = range / 2;\n        long oddRange = range\
    \ - evenRange;\n        long biggestEven = even;\n        long biggestOdd = odd;\n\
    \        long smallestEven = even;\n        long smallestOdd = odd;\n        long\
    \ evenSmall = even;\n        long evenBig = even;\n        long oddSmall = odd;\n\
    \        long oddBig = odd;\n        long evenSmallEven = even;\n        long\
    \ evenSmallOdd = odd;\n        long oddSmallEven = even;\n        long oddSmallOdd\
    \ = odd;\n        long evenBigEven = even;\n        long evenBigOdd = odd;\n \
    \       long oddBigEven = even;\n        long oddBigOdd = odd;\n        long evenRangeEven\
    \ = evenRange;\n        long evenRangeOdd = oddRange;\n        long oddRangeEven\
    \ = evenRange;\n        long oddRangeOdd = oddRange;\n        long evenSmallEven\
    \ = evenSmall;\n        long evenSmallOdd = oddSmall;\n        long oddSmallEven\
    \ = evenSmall;\n        long oddSmallOdd = oddSmall;\n        long evenBigEven\
    \ = evenBig;\n        long evenBigOdd = oddBig;\n        long oddBigEven = evenBig;\n\
    \        long oddBigOdd = oddBig;\n        long evenRangeEven = evenRangeEven;\n\
    \        long evenRangeOdd = oddRangeEven;\n        long oddRangeEven = evenRangeEven;\n\
    \        long oddRangeOdd = oddRangeEven;\n        long evenSmallEven = evenSmallEven;\n\
    \        long evenSmallOdd = oddSmallEven;\n        long oddSmallEven = evenSmallEven;\n\
    \        long oddSmallOdd = oddSmallEven;\n        long evenBigEven = evenBigEven;\n\
    \        long evenBigOdd = oddBigEven;\n        long oddBigEven = evenBigEven;\n\
    \        long oddBigOdd = oddBigEven;\n        long evenRangeOddEven = evenRangeOdd;\n\
    \        long evenRangeOddOdd = oddRangeOdd;\n        long odd", "        long\
    \ even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n\
    \        long biggest = even;\n        long smallest = odd;\n        long range\
    \ = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2 = range / 2;\n\
    \        long range3 = range / 3;\n        long range4 = range / 4;\n        long\
    \ range5 = range / 5;\n        long range6 = range / 6;\n        long range7 =\
    \ range / 7;\n        long range8 = range / 8;\n        long range9 = range /\
    \ 9;\n        long range10 = range / 10;\n        long range11 = range / 11;\n\
    \        long range12 = range / 12;\n        long range13 = range / 13;\n    \
    \    long range14 = range / 14;\n        long range15 = range / 15;\n        long\
    \ range16 = range / 16;\n        long range17 = range / 17;\n        long range18\
    \ = range / 18;\n        long range19 = range / 19;\n        long range20 = range\
    \ / 20;\n        long range21 = range / 21;\n        long range22 = range / 22;\n\
    \        long range23 = range / 23;\n        long range24 = range / 24;\n    \
    \    long range25 = range / 25;\n        long range26 = range / 26;\n        long\
    \ range27 = range / 27;\n        long range28 = range / 28;\n        long range29\
    \ = range / 29;\n        long range30 = range / 30;\n        long range31 = range\
    \ / 31;\n        long range32 = range / 32;\n        long range33 = range / 33;\n\
    \        long range34 = range / 34;\n        long range35 = range / 35;\n    \
    \    long range36 = range / 36;\n        long range37 = range / 37;\n        long\
    \ range38 = range / 38;\n        long range39 = range / 39;\n        long range40\
    \ = range / 40;\n        long range41 = range / 41;\n        long range42 = range\
    \ / 42;\n        long range43 = range / 43;\n        long range44 = range / 44;\n\
    \        long range45 = range / 45;\n        long range46 = range / 46;\n    \
    \    long range47 = range / 47;\n        long range48 = range / 48;\n        long\
    \ range49 = range / 49;\n        long range50", "        long even = x;\n    \
    \    long odd = y;\n        long biggest = -1;\n        while (even < odd) {\n\
    \            long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n \
    \               even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n            if (even > biggest) {\n                biggest = even;\n\
    \            }\n            if (odd > biggest) {\n                biggest = odd;\n\
    \            }\n        }\n        return biggest;", "        long result = -1;\n\
    \        long xMinusY = x - y;\n        long yMinusX = y - x;\n        if (xMinusY\
    \ % 2 == 0) {\n            result = x;\n        }\n        if (yMinusX % 2 ==\
    \ 0) {\n            result = y;\n        }\n        return result;", "       \
    \ long z = (x + y) / 2;\n        long a = x - z;\n        long b = y - z;\n  \
    \      long c = x + y;\n        long d = (a + b) / 2;\n        long e = (a + b)\
    \ % 2;\n        long f = b - a;\n        long g = (c + d) / 2;\n        long h\
    \ = (c + d) % 2;\n        long i = (c + d) - g;\n        long j = (e + f) / 2;\n\
    \        long k = (e + f) % 2;\n        long l = (e + f) - j;\n        long m\
    \ = (g + h) / 2;\n        long n = (g + h) % 2;\n        long o = (g + h) - m;\n\
    \        long p = (i + j) / 2;\n        long q = (i + j) % 2;\n        long r\
    \ = (i + j) - p;\n        long s = (m + n) / 2;\n        long t = (m + n) % 2;\n\
    \        long u = (m + n) - t;\n        long v = (o + p) / 2;\n        long w\
    \ = (o + p) % 2;\n        long x = (o + p) - v;\n        long y = (q + r) / 2;\n\
    \        long z = (q + r) % 2;\n        long a1 = (s + t) / 2;\n        long b1\
    \ = (s + t) % 2;\n        long c1 = (u + w) / 2;\n        long d1 = (u + w) %\
    \ 2;\n        long e1 = (x + y) / 2;\n        long f1 = (x + y) % 2;\n       \
    \ long g1 = (y + z) / 2;\n        long h1 = (y + z) % 2;\n        long i1 = (y\
    \ + z) - g1;\n        long j1 = (y + z) - h1;\n        long k1 = (y + z) - i1;\n\
    \        long l1 = (y + z) - j1;\n        long m1 = (y + z) - k1;\n        long\
    \ n1 = (y + z) - l1;\n        long o1 = (y + z) - m1;\n        long p1 = (y +\
    \ z) - n1;\n        long q1 = (y + z) - o1;\n        long r1 = (y + z) - p1;\n\
    \        long s1 = (y + z) - q1;\n        long t1 = (y + z) - r1;\n        long\
    \ u1 = (y + z) - s1;\n        long v1 = (y + z) - t1;\n        long w1 = (y +\
    \ z) - u1;\n        long x1 = (y + z) - v1;\n        long y1 = (y + z) - w1;\n\
    \        long z1 = (y + z) - ", "        long even = x % 2 == 0 ? x : -1;\n  \
    \      long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n       \
    \ if (even > odd) {\n            biggest = odd;\n        }\n        return biggest;",
  "        long even = x % 2 == 0 ? x : x - 2;\n        long odd = y % 2 == 0 ? y\
    \ : y - 2;\n        long biggest = even;\n        if (odd > biggest) {\n     \
    \       biggest = odd;\n        }\n        if (biggest > x) {\n            biggest\
    \ = x;\n        }\n        if (biggest < y) {\n            biggest = y;\n    \
    \    }\n        return biggest;", "        long max = 0;\n        long min = x;\n\
    \        long mid = x;\n        long mid2 = y;\n        long mid3 = y;\n     \
    \   long mid4 = y;\n        long mid5 = y;\n        long mid6 = y;\n        long\
    \ mid7 = y;\n        long mid8 = y;\n        long mid9 = y;\n        long mid10\
    \ = y;\n        long mid11 = y;\n        long mid12 = y;\n        long mid13 =\
    \ y;\n        long mid14 = y;\n        long mid15 = y;\n        long mid16 = y;\n\
    \        long mid17 = y;\n        long mid18 = y;\n        long mid19 = y;\n \
    \       long mid20 = y;\n        long mid21 = y;\n        long mid22 = y;\n  \
    \      long mid23 = y;\n        long mid24 = y;\n        long mid25 = y;\n   \
    \     long mid26 = y;\n        long mid27 = y;\n        long mid28 = y;\n    \
    \    long mid29 = y;\n        long mid30 = y;\n        long mid31 = y;\n     \
    \   long mid32 = y;\n        long mid33 = y;\n        long mid34 = y;\n      \
    \  long mid35 = y;\n        long mid36 = y;\n        long mid37 = y;\n       \
    \ long mid38 = y;\n        long mid39 = y;\n        long mid40 = y;\n        long\
    \ mid41 = y;\n        long mid42 = y;\n        long mid43 = y;\n        long mid44\
    \ = y;\n        long mid45 = y;\n        long mid46 = y;\n        long mid47 =\
    \ y;\n        long mid48 = y;\n        long mid49 = y;\n        long mid50 = y;\n\
    \        long mid51 = y;\n        long mid52 = y;\n        long mid53 = y;\n \
    \       long mid54 = y;\n        long mid55 = y;\n        long mid56 = y;\n  \
    \      long mid57 = y;\n        long mid58 = y;\n        long mid59 = y;\n   \
    \     long mid60 = y;\n        long mid61 = y;\n        long mid62 = y;\n    \
    \    long mid63 = y;\n        long mid64 = y;\n        long mid65 = y;\n     \
    \   long mid66 = y;\n        long mid67 = y;\n        long mid68 = y;\n      \
    \  long mid69 = y;\n        long mid70 = y;\n        long mid71 = y;\n       \
    \ long mid72 = y;\n        long mid73 = y;\n        long mid", "        long max\
    \ = 0;\n        long min = (long)Math.Abs(x) + 1;\n        long mid = (long)Math.Abs(y)\
    \ + 1;\n        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long\
    \ mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 /\
    \ 2;\n        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long\
    \ mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10\
    \ / 2;\n        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n   \
    \     long mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16\
    \ = mid15 / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 /\
    \ 2;\n        long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n     \
    \   long mid21 = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23\
    \ = mid22 / 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 /\
    \ 2;\n        long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n     \
    \   long mid28 = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30\
    \ = mid29 / 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 /\
    \ 2;\n        long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n     \
    \   long mid35 = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37\
    \ = mid36 / 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 /\
    \ 2;\n        long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n     \
    \   long mid42 = mid41 / 2;\n        long mid43 = mid42 / 2;\n        long mid44\
    \ = mid43 / 2;\n        long mid45 = mid44 / 2;\n        long mid46 = mid45 /\
    \ 2;\n        long mid47 = mid46 / 2;\n        long mid48 = mid47 / 2;\n     \
    \   long mid49 = mid48 / 2;\n        long mid50 = mid49 / 2;\n        long mid5",
  "        long even = 0;\n        long odd = 0;\n        long biggest = 0;\n    \
    \    long smallest = 0;\n        long range = (long)Math.Abs(x - y);\n       \
    \ long range2 = range / 2;\n        long range3 = range2 / 2;\n        long range4\
    \ = range3 / 2;\n        long range5 = range4 / 2;\n        long range6 = range5\
    \ / 2;\n        long range7 = range6 / 2;\n        long range8 = range7 / 2;\n\
    \        long range9 = range8 / 2;\n        long range10 = range9 / 2;\n     \
    \   long range11 = range10 / 2;\n        long range12 = range11 / 2;\n       \
    \ long range13 = range12 / 2;\n        long range14 = range13 / 2;\n        long\
    \ range15 = range14 / 2;\n        long range16 = range15 / 2;\n        long range17\
    \ = range16 / 2;\n        long range18 = range17 / 2;\n        long range19 =\
    \ range18 / 2;\n        long range20 = range19 / 2;\n        long range21 = range20\
    \ / 2;\n        long range22 = range21 / 2;\n        long range23 = range22 /\
    \ 2;\n        long range24 = range23 / 2;\n        long range25 = range24 / 2;\n\
    \        long range26 = range25 / 2;\n        long range27 = range26 / 2;\n  \
    \      long range28 = range27 / 2;\n        long range29 = range28 / 2;\n    \
    \    long range30 = range29 / 2;\n        long range31 = range30 / 2;\n      \
    \  long range32 = range31 / 2;\n        long range33 = range32 / 2;\n        long\
    \ range34 = range33 / 2;\n        long range35 = range34 / 2;\n        long range36\
    \ = range35 / 2;\n        long range37 = range36 / 2;\n        long range38 =\
    \ range37 / 2;\n        long range39 = range38 / 2;\n        long range40 = range39\
    \ / 2;\n        long range41 = range40 / 2;\n        long range42 = range41 /\
    \ 2;\n        long range43 = range42 / 2;\n        long range44 = range43 / 2;\n\
    \        long range45 = range44 / 2;\n        long range46 = range45 / 2;\n  \
    \      long range47 = range46 / 2;\n        long range48 = range47 / 2;\n    \
    \    long range49 = range48 / 2;\n        long range50 = range49 / 2;\n      \
    \  ", "        long z = Math.Max(x, y);\n        long a = Math.Min(x, y);\n  \
    \      long b = Math.Max(x - a, y - a);\n        long c = Math.Max(x - b, y -\
    \ b);\n        long d = Math.Max(x - c, y - c);\n        long e = Math.Max(x -\
    \ d, y - d);\n        long f = Math.Max(x - e, y - e);\n        long g = Math.Max(x\
    \ - f, y - f);\n        long h = Math.Max(x - g, y - g);\n        long i = Math.Max(x\
    \ - h, y - h);\n        long j = Math.Max(x - i, y - i);\n        long k = Math.Max(x\
    \ - j, y - j);\n        long l = Math.Max(x - k, y - k);\n        long m = Math.Max(x\
    \ - l, y - l);\n        long n = Math.Max(x - m, y - m);\n        long o = Math.Max(x\
    \ - n, y - n);\n        long p = Math.Max(x - o, y - o);\n        long q = Math.Max(x\
    \ - p, y - p);\n        long r = Math.Max(x - q, y - q);\n        long s = Math.Max(x\
    \ - r, y - r);\n        long t = Math.Max(x - s, y - s);\n        long u = Math.Max(x\
    \ - t, y - t);\n        long v = Math.Max(x - u, y - u);\n        long w = Math.Max(x\
    \ - v, y - v);\n        long x = Math.Max(x - w, y - w);\n        long y = Math.Max(x\
    \ - x, y - x);\n        long z = Math.Max(x - y, y - y);\n        long a = Math.Min(z,\
    \ x);\n        long b = Math.Min(a, y);\n        long c = Math.Min(b, z);\n  \
    \      long d = Math.Min(c, a);\n        long e = Math.Min(d, b);\n        long\
    \ f = Math.Min(e, c);\n        long g = Math.Min(f, d);\n        long h = Math.Min(g,\
    \ e);\n        long i = Math.Min(h, f);\n        long j = Math.Min(i, g);\n  \
    \      long k = Math.Min(j, h);\n        long l = Math.Min(k, i);\n        long\
    \ m = Math.Min(l, j);\n        long n = Math.Min(m, k);\n        long o = Math.Min(n,\
    \ l);\n        long p = Math.Min(o, m);\n        long q = Math.Min(p, o);\n  \
    \      long r = Math.Min(q, p);\n        long s = Math.Min(r, q);\n        long\
    \ t = Math.Min(s, r);\n        long u = Math.Min(t, s);\n        long v = Math.Min(u,\
    \ t);\n        long w = Math.Min(v, u);\n        long x = Math.Min(", "      \
    \  long even = x & 1;\n        long odd = x >> 1;\n        long evenodd = even\
    \ + odd;\n        long result = evenodd - ((evenodd >> 1) & 1);\n        if (result\
    \ < y) {\n            return -1;\n        }\n        return result;", "      \
    \  long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y\
    \ + 1;\n        long biggest = even;\n        long smallest = odd;\n        while\
    \ (even < odd) {\n            biggest = even;\n            smallest = odd;\n \
    \           if (even % 2 == 0) {\n                even = even + 1;\n         \
    \   } else {\n                odd = odd + 1;\n            }\n        }\n     \
    \   if (biggest < smallest) {\n            return -1;\n        }\n        return\
    \ biggest;", "        if (x >= y) {\n            return -1;\n        }\n     \
    \   long even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y\
    \ - 1;\n        long evenodd = even + odd;\n        if (evenodd > y) {\n     \
    \       return -1;\n        }\n        long result = evenodd / 2;\n        if\
    \ (result > y) {\n            return -1;\n        }\n        return result;",
  "        long result = -1;\n        if (x >= y) {\n            long temp = x;\n\
    \            x = y;\n            y = temp;\n        }\n        if (x % 2 == 0)\
    \ {\n            while (x % 2 == 0) {\n                x /= 2;\n             \
    \   y /= 2;\n            }\n        }\n        if (y % 2 == 0) {\n           \
    \ while (y % 2 == 0) {\n                y /= 2;\n                x /= 2;\n   \
    \         }\n        }\n        if (x > y) {\n            long temp = x;\n   \
    \         x = y;\n            y = temp;\n        }\n        while (x <= y) {\n\
    \            if (x % 2 == 0) {\n                x /= 2;\n            }\n     \
    \       if (y % 2 == 0) {\n                y /= 2;\n            }\n          \
    \  if (x > y) {\n                long temp = x;\n                x = y;\n    \
    \            y = temp;\n            }\n            if (x == y) {\n           \
    \     result = x;\n                break;\n            }\n        }\n        return\
    \ result;", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd = y\
    \ % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest =\
    \ odd;\n        while (even < odd) {\n            biggest = even;\n          \
    \  smallest = odd;\n            even = even + 2;\n            odd = odd + 2;\n\
    \            if (even > odd) {\n                biggest = even;\n            \
    \    smallest = odd;\n            }\n        }\n        return biggest;", "  \
    \      long maxEven = -1;\n        long minEven = -1;\n        long minOdd = -1;\n\
    \        long maxOdd = -1;\n        long even = -1;\n        long odd = 0;\n \
    \       long temp;\n        long temp2;\n        long temp3;\n        long temp4;\n\
    \        long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;", "        long even = x % 2 == 0 ? x : -1;\n        long odd = y %\
    \ 2 == 0 ? y : -1;\n        long biggest = even;\n        if (even > odd) {\n\
    \            biggest = odd;\n        }\n        long smallest = even;\n      \
    \  if (even < odd) {\n            smallest = odd;\n        }\n        long range\
    \ = (biggest - smallest);\n        long range2 = range / 2;\n        long range3\
    \ = range / 3;\n        long range4 = range / 4;\n        long range5 = range\
    \ / 5;\n        long range6 = range / 6;\n        long range7 = range / 7;\n \
    \       long range8 = range / 8;\n        long range9 = range / 9;\n        long\
    \ range10 = range / 10;\n        long range11 = range / 11;\n        long range12\
    \ = range / 12;\n        long range13 = range / 13;\n        long range14 = range\
    \ / 14;\n        long range15 = range / 15;\n        long range16 = range / 16;\n\
    \        long range17 = range / 17;\n        long range18 = range / 18;\n    \
    \    long range19 = range / 19;\n        long range20 = range / 20;\n        long\
    \ range21 = range / 21;\n        long range22 = range / 22;\n        long range23\
    \ = range / 23;\n        long range24 = range / 24;\n        long range25 = range\
    \ / 25;\n        long range26 = range / 26;\n        long range27 = range / 27;\n\
    \        long range28 = range / 28;\n        long range29 = range / 29;\n    \
    \    long range30 = range / 30;\n        long range31 = range / 31;\n        long\
    \ range32 = range / 32;\n        long range33 = range / 33;\n        long range34\
    \ = range / 34;\n        long range35 = range / 35;\n        long range36 = range\
    \ / 36;\n        long range37 = range / 37;\n        long range38 = range / 38;\n\
    \        long range39 = range / 39;\n        long range40 = range / 40;\n    \
    \    long range41 = range / 41;\n        long range42 = range / 42;\n        long\
    \ range43 = range / 43;\n        long range44 = range / 44;\n        long range45\
    \ = range / 45;\n        long range46 = range / 46;\n        long range47 = range\
    \ / 47;\n        long range48", "        long even = x;\n        long odd = y;\n\
    \        long biggest = -1;\n        while (even < odd) {\n            if (even\
    \ % 2 == 0 && odd % 2 == 0) {\n                biggest = even;\n             \
    \   break;\n            }\n            if (even % 2 == 0 && odd % 2 != 0) {\n\
    \                biggest = odd;\n                break;\n            }\n     \
    \       if (even % 2 != 0 && odd % 2 == 0) {\n                biggest = even;\n\
    \                break;\n            }\n            if (even % 2 != 0 && odd %\
    \ 2 != 0) {\n                biggest = odd;\n                break;\n        \
    \    }\n            even++;\n            odd++;\n        }\n        return biggest;",
  "        long z = 0;\n        long a = Math.Min(x, y);\n        long b = Math.Max(x,\
    \ y);\n        long c = Math.Max(a, b);\n        long d = Math.Min(a, b);\n  \
    \      long e = Math.Max(d, c);\n        long f = Math.Min(d, c);\n        long\
    \ g = Math.Max(e, f);\n        long h = Math.Min(e, f);\n        long i = Math.Max(g,\
    \ h);\n        long j = Math.Min(g, h);\n        long k = Math.Max(i, j);\n  \
    \      long l = Math.Min(i, j);\n        long m = Math.Max(l, k);\n        long\
    \ n = Math.Min(l, k);\n        long o = Math.Max(m, n);\n        long p = Math.Min(m,\
    \ n);\n        long q = Math.Max(o, p);\n        long r = Math.Min(o, p);\n  \
    \      long s = Math.Max(q, r);\n        long t = Math.Min(q, r);\n        long\
    \ u = Math.Max(s, t);\n        long v = Math.Min(s, t);\n        long w = Math.Max(u,\
    \ v);\n        long x = Math.Min(u, v);\n        long y = Math.Max(w, x);\n  \
    \      long z = Math.Min(w, x);\n        long a = Math.Max(y, z);\n        long\
    \ b = Math.Min(y, z);\n        long c = Math.Max(a, b);\n        long d = Math.Min(a,\
    \ b);\n        long e = Math.Max(d, c);\n        long f = Math.Min(d, c);\n  \
    \      long g = Math.Max(e, f);\n        long h = Math.Min(e, f);\n        long\
    \ i = Math.Max(g, h);\n        long j = Math.Min(g, h);\n        long k = Math.Max(i,\
    \ j);\n        long l = Math.Min(i, j);\n        long m = Math.Max(l, k);\n  \
    \      long n = Math.Min(l, k);\n        long o = Math.Max(m, n);\n        long\
    \ p = Math.Min(m, n);\n        long q = Math.Max(o, p);\n        long r = Math.Min(o,\
    \ p);\n        long s = Math.Max(q, r);\n        long t = Math.Min(q, r);\n  \
    \      long u = Math.Max(s, t);\n        long v = Math.Min(s, t);\n        long\
    \ w = Math.Max(u, v);\n        long x = Math.Min(u, v);\n        long y = Math.Max(w,\
    \ x);\n        long z = Math.Min(w, x);\n        long a = Math.Max(y, z);\n  \
    \      long b = Math.Min(y, z);\n        long c = Math.Max(a, b);\n        long\
    \ d = Math.Min(a, b);\n        long e = Math.Max(d, c);", "        long even =\
    \ x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n      \
    \  long biggest = even;\n        long smallest = odd;\n        while (even < odd)\
    \ {\n            biggest = even;\n            smallest = odd;\n            if\
    \ (even % 2 == 0 && odd % 2 == 0) {\n                biggest = even;\n       \
    \         smallest = odd;\n            } else if (even % 2 == 0 && odd % 2 !=\
    \ 0) {\n                biggest = even;\n            } else if (even % 2 != 0\
    \ && odd % 2 == 0) {\n                biggest = odd;\n            } else if (even\
    \ % 2 != 0 && odd % 2 != 0) {\n                biggest = even;\n             \
    \   smallest = odd;\n            }\n            even = biggest;\n            odd\
    \ = smallest;\n        }\n        return biggest;", "        long even = x % 2\
    \ == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        while (even < odd) {\n\
    \            biggest = even;\n            smallest = odd;\n            if (even\
    \ % 2 == 0) {\n                even = even + 1;\n            } else {\n      \
    \          odd = odd + 1;\n            }\n        }\n        if (biggest < smallest)\
    \ {\n            return -1;\n        }\n        return biggest;", "        long\
    \ even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        long even2 = even / 2;\n        long odd2 = odd /\
    \ 2;\n        long even3 = even2 / 2;\n        long odd3 = odd2 / 2;\n       \
    \ long even4 = even3 / 2;\n        long odd4 = odd3 / 2;\n        long even5 =\
    \ even4 / 2;\n        long odd5 = odd4 / 2;\n        long even6 = even5 / 2;\n\
    \        long odd6 = odd5 / 2;\n        long even7 = even6 / 2;\n        long\
    \ odd7 = odd6 / 2;\n        long even8 = even7 / 2;\n        long odd8 = odd7\
    \ / 2;\n        long even9 = even8 / 2;\n        long odd9 = odd8 / 2;\n     \
    \   long even10 = even9 / 2;\n        long odd10 = odd9 / 2;\n        long even11\
    \ = even10 / 2;\n        long odd11 = odd10 / 2;\n        long even12 = even11\
    \ / 2;\n        long odd12 = odd11 / 2;\n        long even13 = even12 / 2;\n \
    \       long odd13 = odd12 / 2;\n        long even14 = even13 / 2;\n        long\
    \ odd14 = odd13 / 2;\n        long even15 = even14 / 2;\n        long odd15 =\
    \ odd14 / 2;\n        long even16 = even15 / 2;\n        long odd16 = odd15 /\
    \ 2;\n        long even17 = even16 / 2;\n        long odd17 = odd16 / 2;\n   \
    \     long even18 = even17 / 2;\n        long odd18 = odd17 / 2;\n        long\
    \ even19 = even18 / 2;\n        long odd19 = odd18 / 2;\n        long even20 =\
    \ even19 / 2;\n        long odd20 = odd19 / 2;\n        long even21 = even20 /\
    \ 2;\n        long odd21 = odd20 / 2;\n        long even22 = even21 / 2;\n   \
    \     long odd22 = odd21 / 2;\n        long even23 = even22 / 2;\n        long\
    \ odd23 = odd22 / 2;\n        long even24 = even23 / 2;\n        long odd24 =\
    \ odd23 / 2;\n        long even25 = even24 / 2;\n        long odd25 = odd24 /\
    \ 2;\n        long even26 = even25 / 2;\n        ", "        long even = x % 2\
    \ == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long even2 = even / 2;\n\
    \        long odd2 = odd / 2;\n        long even3 = even * 2;\n        long odd3\
    \ = odd * 2;\n        long even4 = even * 3;\n        long odd4 = odd * 3;\n \
    \       long even5 = even * 4;\n        long odd5 = odd * 4;\n        long even6\
    \ = even * 5;\n        long odd6 = odd * 5;\n        long even7 = even * 6;\n\
    \        long odd7 = odd * 6;\n        long even8 = even * 7;\n        long odd8\
    \ = odd * 7;\n        long even9 = even * 8;\n        long odd9 = odd * 8;\n \
    \       long even10 = even * 9;\n        long odd10 = odd * 9;\n        long even11\
    \ = even * 10;\n        long odd11 = odd * 10;\n        long even12 = even * 11;\n\
    \        long odd12 = odd * 11;\n        long even13 = even * 12;\n        long\
    \ odd13 = odd * 12;\n        long even14 = even * 13;\n        long odd14 = odd\
    \ * 13;\n        long even15 = even * 14;\n        long odd15 = odd * 14;\n  \
    \      long even16 = even * 15;\n        long odd16 = odd * 15;\n        long\
    \ even17 = even * 16;\n        long odd17 = odd * 16;\n        long even18 = even\
    \ * 17;\n        long odd18 = odd * 17;\n        long even19 = even * 18;\n  \
    \      long odd19 = odd * 18;\n        long even20 = even * 19;\n        long\
    \ odd20 = odd * 19;\n        long even21 = even * 20;\n        long odd21 = odd\
    \ * 20;\n        long even22 = even * 21;\n        long odd22 = odd * 21;\n  \
    \      long even23 = even * 22;\n        long odd23 = odd * 22;\n        long\
    \ even24 = even * 23;\n        long odd24 = odd * 23;\n        long even25 = even\
    \ * 24;\n        long odd25 = odd * 24;\n        long even26 = even * 25;\n  \
    \      long odd26 = odd * 25;\n        long even27 = even * 26;\n        long\
    \ odd27 = odd * 26;\n        long even28 = even * 27;", "        long even = 0;\n\
    \        long odd = 0;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n\
    \        long diff = (long)Math.Max(Math.Abs(x - y), Math.Abs(x - range));\n \
    \       long max = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long min = (long)Math.Max(Math.Abs(x - y), Math.Abs(y - range));\n  \
    \      long mid = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid1 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid2 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid3 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid4 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid5 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid6 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid7 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid8 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid9 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid10 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid11 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid12 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid13 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid14 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid15 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid16 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid17 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid18 = (long)Math.Max(Math.Abs(x - range), Math.Abs(y - range));\n\
    \        long mid19 = (long)Math.", "        long even = x % 2 == 0 ? x : x -\
    \ 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long result = even +\
    \ odd;\n        if (result > x || result < y) {\n            return -1;\n    \
    \    }\n        return result;", "        long even = x % 2 == 0 ? x : x + 1;\n\
    \        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n  \
    \      long smallest = odd;\n        long range = (long)Math.Max(Math.Abs(x),\
    \ Math.Abs(y));\n        long range2 = range / 2;\n        long range3 = range\
    \ / 3;\n        long range4 = range / 4;\n        long range5 = range / 5;\n \
    \       long range6 = range / 6;\n        long range7 = range / 7;\n        long\
    \ range8 = range / 8;\n        long range9 = range / 9;\n        long range10\
    \ = range / 10;\n        long range11 = range / 11;\n        long range12 = range\
    \ / 12;\n        long range13 = range / 13;\n        long range14 = range / 14;\n\
    \        long range15 = range / 15;\n        long range16 = range / 16;\n    \
    \    long range17 = range / 17;\n        long range18 = range / 18;\n        long\
    \ range19 = range / 19;\n        long range20 = range / 20;\n        long range21\
    \ = range / 21;\n        long range22 = range / 22;\n        long range23 = range\
    \ / 23;\n        long range24 = range / 24;\n        long range25 = range / 25;\n\
    \        long range26 = range / 26;\n        long range27 = range / 27;\n    \
    \    long range28 = range / 28;\n        long range29 = range / 29;\n        long\
    \ range30 = range / 30;\n        long range31 = range / 31;\n        long range32\
    \ = range / 32;\n        long range33 = range / 33;\n        long range34 = range\
    \ / 34;\n        long range35 = range / 35;\n        long range36 = range / 36;\n\
    \        long range37 = range / 37;\n        long range38 = range / 38;\n    \
    \    long range39 = range / 39;\n        long range40 = range / 40;\n        long\
    \ range41 = range / 41;\n        long range42 = range / 42;\n        long range43\
    \ = range / 43;\n        long range44 = range / 44;\n        long range45 = range\
    \ / 45;\n        long range46 = range / 46;\n        long range47 = range / 47;\n\
    \        long range48 = range / 48;\n        long range49 = range / 49;\n    \
    \    long range50", "        long even = 0;\n        long odd = 0;\n        long\
    \ range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long range2 = range\
    \ / 2;\n        long range3 = range2 / 2;\n        long range4 = range3 / 2;\n\
    \        long range5 = range4 / 2;\n        long range6 = range5 / 2;\n      \
    \  long range7 = range6 / 2;\n        long range8 = range7 / 2;\n        long\
    \ range9 = range8 / 2;\n        long range10 = range9 / 2;\n        long range11\
    \ = range10 / 2;\n        long range12 = range11 / 2;\n        long range13 =\
    \ range12 / 2;\n        long range14 = range13 / 2;\n        long range15 = range14\
    \ / 2;\n        long range16 = range15 / 2;\n        long range17 = range16 /\
    \ 2;\n        long range18 = range17 / 2;\n        long range19 = range18 / 2;\n\
    \        long range20 = range19 / 2;\n        long range21 = range20 / 2;\n  \
    \      long range22 = range21 / 2;\n        long range23 = range22 / 2;\n    \
    \    long range24 = range23 / 2;\n        long range25 = range24 / 2;\n      \
    \  long range26 = range25 / 2;\n        long range27 = range26 / 2;\n        long\
    \ range28 = range27 / 2;\n        long range29 = range28 / 2;\n        long range30\
    \ = range29 / 2;\n        long range31 = range30 / 2;\n        long range32 =\
    \ range31 / 2;\n        long range33 = range32 / 2;\n        long range34 = range33\
    \ / 2;\n        long range35 = range34 / 2;\n        long range36 = range35 /\
    \ 2;\n        long range37 = range36 / 2;\n        long range38 = range37 / 2;\n\
    \        long range39 = range38 / 2;\n        long range40 = range39 / 2;\n  \
    \      long range41 = range40 / 2;\n        long range42 = range41 / 2;\n    \
    \    long range43 = range42 / 2;\n        long range44 = range43 / 2;\n      \
    \  long range45 = range44 / 2;\n        long range46 = range45 / 2;\n        long\
    \ range47 = range46 / 2;\n        long range48 = range47 / 2;\n        long range49\
    \ = range48 / 2;\n        long range50 = range49 / 2;\n        long range51 =\
    \ range", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = even;\n        long smallest = odd;\n        long eveneven = even;\n     \
    \   long evenodd = odd;\n        long oddeven = even;\n        long oddodd = odd;\n\
    \        long eveneveneven = eveneven;\n        long evenevenodd = evenodd;\n\
    \        long evenoddeven = oddeven;\n        long evenoddodd = oddodd;\n    \
    \    long oddeveneveneven = eveneveneven;\n        long oddevenevenodd = evenoddeven;\n\
    \        long oddevenoddeven = evenevenodd;\n        long oddoddeveneven = oddeveneveneven;\n\
    \        long oddoddeveneven = evenoddeveneven;\n        long oddoddeveneven =\
    \ oddevenevenodd;\n        long oddoddevenodd = evenoddoddeven;\n        long\
    \ oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = oddeveneveneven;\n\
    \        long oddoddoddeven = evenoddeveneven;\n        long oddoddoddeven = oddevenevenodd;\n\
    \        long oddoddoddeven = evenevenodd;\n        long oddoddoddeven = ", " \
    \       long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y\
    \ : y + 1;\n        long biggest = even;\n        long smallest = odd;\n     \
    \   long mid = biggest;\n        while (even < odd) {\n            mid = (even\
    \ + odd) / 2;\n            if (mid % 2 == 0) {\n                even = mid;\n\
    \            } else {\n                odd = mid;\n            }\n           \
    \ if (even > biggest) {\n                biggest = even;\n            }\n    \
    \        if (odd < smallest) {\n                smallest = odd;\n            }\n\
    \        }\n        return biggest;", "        long even = x;\n        long odd\
    \ = y;\n        long biggest = even;\n        long smallest = odd;\n        bool\
    \ evenFound = false;\n        bool oddFound = false;\n        do {\n         \
    \   if (even % 2 == 0) {\n                evenFound = true;\n                biggest\
    \ = even;\n            }\n            else {\n                oddFound = true;\n\
    \                smallest = odd;\n            }\n            even = even / 2;\n\
    \            odd = odd / 2;\n        } while (even > 0 && odd > 0);\n        if\
    \ (evenFound && oddFound) {\n            return biggest;\n        }\n        else\
    \ if (evenFound) {\n            return -1;\n        }\n        else if (oddFound)\
    \ {\n            return -1;\n        }\n        else {\n            return -1;\n\
    \        }", "        long even = x % 2 == 0 ? x : x + 1;\n        long odd =\
    \ y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        long range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n   \
    \     long range2 = (long)(Math.Sqrt(range) + 1);\n        long range3 = (long)Math.Sqrt(range);\n\
    \        long range4 = (long)Math.Sqrt(range2);\n        long range5 = (long)Math.Sqrt(range3);\n\
    \        long range6 = (long)Math.Sqrt(range4);\n        long range7 = (long)Math.Sqrt(range5);\n\
    \        long range8 = (long)Math.Sqrt(range6);\n        long range9 = (long)Math.Sqrt(range7);\n\
    \        long range10 = (long)Math.Sqrt(range8);\n        long range11 = (long)Math.Sqrt(range9);\n\
    \        long range12 = (long)Math.Sqrt(range10);\n        long range13 = (long)Math.Sqrt(range11);\n\
    \        long range14 = (long)Math.Sqrt(range12);\n        long range15 = (long)Math.Sqrt(range13);\n\
    \        long range16 = (long)Math.Sqrt(range14);\n        long range17 = (long)Math.Sqrt(range15);\n\
    \        long range18 = (long)Math.Sqrt(range16);\n        long range19 = (long)Math.Sqrt(range17);\n\
    \        long range20 = (long)Math.Sqrt(range18);\n        long range21 = (long)Math.Sqrt(range19);\n\
    \        long range22 = (long)Math.Sqrt(range20);\n        long range23 = (long)Math.Sqrt(range21);\n\
    \        long range24 = (long)Math.Sqrt(range22);\n        long range25 = (long)Math.Sqrt(range23);\n\
    \        long range26 = (long)Math.Sqrt(range24);\n        long range27 = (long)Math.Sqrt(range25);\n\
    \        long range28 = (long)Math.Sqrt(range26);\n        long range29 = (long)Math.Sqrt(range27);\n\
    \        long range30 = (long)Math.Sqrt(range28);\n        long range31 = (long)Math.Sqrt(range29);\n\
    \        long range32 = (long)Math.Sqrt(range30);\n        long range33 = (long)Math.Sqrt(range31);\n\
    \        long range34 = (long)Math.Sqrt(range32);\n        long range35 = (long)Math.Sqrt(",
  "        long result = -1;\n        long xx = x;\n        long yy = y;\n       \
    \ long xy = x * y;\n        long xx = xx * xx;\n        long yy = yy * yy;\n \
    \       long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy *\
    \ yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy\
    \ = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n       \
    \ long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long ", "        long even = x % 2 == 0 ? x : x - 1;\n        long odd =\
    \ y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n        long biggestOdd\
    \ = odd;\n        long biggestEven = even;\n        long biggestOddEven = even;\n\
    \        long biggestOddEvenOdd = odd;\n        long biggestOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOdd = odd;\n        long biggestOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOdd = odd;\n      \
    \  long biggestOddEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n  \
    \      long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = odd;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = odd;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO",
  "        long result = -1;\n        long xMinusY = x - y;\n        long yMinusX\
    \ = y - x;\n        long xMinusXMinusY = xMinusY - xMinusY;\n        long yMinusYMinusX\
    \ = yMinusX - yMinusX;\n        long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n\
    \        long yMinusYMinusYMinusX = yMinusYMinusX - yMinusYMinusX;\n        long\
    \ xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY - xMinusXMinusXMinusY;\n   \
    \     long yMinusYMinusYMinusXMinusY = yMinusYMinusXMinusY - yMinusYMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusXMinusXMinusY = yMinusYMinusXMinusYMinusX - yMinusYMinusXMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusXMinusYMinusY\
    \ = yMinusYMinusXMinusYMinusXMinusY - yMinusYMinusXMinusXMinusXMinusY;\n     \
    \   long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = yMinusYMinusXMinusYMinusXMin", "        long result = -1;\n        long even\
    \ = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n    \
    \    if (even > odd) {\n            while (even > odd) {\n                even\
    \ -= 2;\n                odd += 2;\n            }\n            result = even;\n\
    \        } else {\n            while (even < odd) {\n                even += 2;\n\
    \                odd -= 2;\n            }\n            result = odd;\n       \
    \ }\n        return result;", "        long even = x;\n        long odd = y;\n\
    \        long biggest = -1;\n        while (even < odd) {\n            long mid\
    \ = (even + odd) / 2;\n            if (mid % 2 == 0) {\n                even =\
    \ mid;\n            } else {\n                odd = mid;\n            }\n    \
    \        if (even > biggest) {\n                biggest = even;\n            }\n\
    \        }\n        return biggest;", "        long even = x % 2 == 0 ? x : x\
    \ + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n\
    \        long smallest = odd;\n        long mid = biggest;\n        while (even\
    \ < odd) {\n            mid = (even + odd) / 2;\n            if (mid % 2 == 0)\
    \ {\n                even = mid;\n            } else {\n                odd =\
    \ mid;\n            }\n            if (even < odd) {\n                biggest\
    \ = even;\n                smallest = odd;\n            } else {\n           \
    \     biggest = odd;\n                smallest = even;\n            }\n      \
    \  }\n        if (biggest > smallest) {\n            return biggest;\n       \
    \ } else {\n            return -1;\n        }", "        long max = -1;\n    \
    \    long min = x;\n        long mid = x / 2;\n        while (min < y) {\n   \
    \         if (min + 1 == mid) {\n                max = mid;\n                break;\n\
    \            }\n            if (mid % 2 == 0) {\n                max = mid;\n\
    \                break;\n            }\n            mid = mid/2;\n           \
    \ min = min+1;\n        }\n        return max;", "        long even = x % 2 ==\
    \ 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest =\
    \ even;\n        if (even > odd) {\n            biggest = odd;\n        }\n  \
    \      long temp;\n        while (true) {\n            temp = biggest;\n     \
    \       biggest = even > odd ? even : odd;\n            if (biggest == temp) {\n\
    \                break;\n            }\n            even = temp;\n           \
    \ odd = temp;\n        }\n        return biggest;", "        long even = x % 2\
    \ == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        return biggest;", "        long even = x;\n        long odd = y;\n  \
    \      long biggest = -1;\n        while (even < odd) {\n            long mid\
    \ = (even + odd) / 2;\n            if (mid % 2 == 0) {\n                even =\
    \ mid;\n            } else {\n                odd = mid;\n            }\n    \
    \        if (even > biggest) {\n                biggest = even;\n            }\n\
    \            if (odd > biggest) {\n                biggest = odd;\n          \
    \  }\n        }\n        return biggest;", "        long even = x % 2 == 0 ? x\
    \ : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest =\
    \ even;\n        long biggestOdd = odd;\n        long biggestEven = even;\n  \
    \      long biggestOddEven = even;\n        long biggestEvenOdd = even;\n    \
    \    long biggestOddEvenOdd = odd;\n        long biggestEvenOddEven = even;\n\
    \        long biggestOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEven = odd;\n        long biggestEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEven = odd;\n        long\
    \ biggestEvenOddEvenOddEvenOddEvenOddEven = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n     \
    \   long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n     \
    \   long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = odd;\n   \
    \     long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven = even;\n\
    \        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = odd;\n        long biggestEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEven\
    \ = even;\n        long biggestOddEvenOddEvenOddEvenO", "        long result =\
    \ -1;\n        long xMinusY = x - y;\n        if (xMinusY % 2 == 0) {\n      \
    \      result = x;\n        }\n        else {\n            long yMinusX = y -\
    \ x;\n            if (yMinusX % 2 == 0) {\n                result = y;\n     \
    \       }\n            else {\n                long xMinusY = x - y;\n       \
    \         long yMinusX = y - x;\n                long xMinusY2 = xMinusY / 2;\n\
    \                long yMinusX2 = yMinusX / 2;\n                long xMinusY3 =\
    \ xMinusY * 3;\n                long yMinusX3 = yMinusX * 3;\n               \
    \ long xMinusY4 = xMinusY * 4;\n                long yMinusX4 = yMinusX * 4;\n\
    \                long xMinusY5 = xMinusY * 5;\n                long yMinusX5 =\
    \ yMinusX * 5;\n                long xMinusY6 = xMinusY * 6;\n               \
    \ long yMinusX6 = yMinusX * 6;\n                long xMinusY7 = xMinusY * 7;\n\
    \                long yMinusX7 = yMinusX * 7;\n                long xMinusY8 =\
    \ xMinusY * 8;\n                long yMinusX8 = yMinusX * 8;\n               \
    \ long xMinusY9 = xMinusY * 9;\n                long yMinusX9 = yMinusX * 9;\n\
    \                long xMinusY10 = xMinusY * 10;\n                long yMinusX10\
    \ = yMinusX * 10;\n                long xMinusY11 = xMinusY * 11;\n          \
    \      long yMinusX11 = yMinusX * 11;\n                long xMinusY12 = xMinusY\
    \ * 12;\n                long yMinusX12 = yMinusX * 12;\n                long\
    \ xMinusY13 = xMinusY * 13;\n                long yMinusX13 = yMinusX * 13;\n\
    \                long xMinusY14 = xMinusY * 14;\n                long yMinusX14\
    \ = yMinusX * 14;\n                long xMinusY15 = xMinusY * 15;\n          \
    \      long yMinusX15 = yMinusX * 15;\n                long xMinusY16 = xMinusY\
    \ * 16;\n                long yMinusX16 = yMinusX * 16;\n                long\
    \ xMinusY17 = xMinusY * 17;\n                ", "        long even = x % 2 ==\
    \ 0;\n        long odd = y % 2 == 0;\n        long biggest = -1;\n        if (even\
    \ && odd) {\n            biggest = x;\n        } else if (even && !odd) {\n  \
    \          biggest = y;\n        } else if (!even && odd) {\n            biggest\
    \ = y;\n        } else {\n            return -1;\n        }\n        long even2\
    \ = biggest % 2 == 0;\n        long odd2 = biggest % 2 == 1;\n        if (even2\
    \ && odd2) {\n            biggest = biggest / 2;\n        } else if (even2 &&\
    \ !odd2) {\n            biggest = biggest / 2 + 1;\n        } else if (!even2\
    \ && odd2) {\n            biggest = biggest / 2 + 1;\n        } else {\n     \
    \       return -1;\n        }\n        return biggest;", "        long even =\
    \ x % 2 == 0;\n        long odd = y % 2 == 0;\n        if (even && odd) {\n  \
    \          return x;\n        } else if (even) {\n            return y;\n    \
    \    } else if (odd) {\n            return -1;\n        } else {\n           \
    \ return -1;\n        }", "        long ans = -1;\n        if (x >= y) {\n   \
    \         ans = x;\n        }\n        else if (x <= y) {\n            ans = y;\n\
    \        }\n        else {\n            long mid = (x + y) / 2;\n            if\
    \ (mid % 2 == 0) {\n                ans = mid;\n            }\n            else\
    \ {\n                ans = ChooseNum(mid, y);\n            }\n        }\n    \
    \    return ans;", "        long even = 0;\n        long odd = 0;\n        long\
    \ range = (long)Math.Max(Math.Abs(x), Math.Abs(y));\n        long limit = (long)Math.Min(Math.Abs(x),\
    \ Math.Abs(y));\n        long temp;\n        while (even < limit) {\n        \
    \    temp = (long)Math.Floor((double)even / 2);\n            if (temp % 2 == 0)\
    \ {\n                even = temp;\n            } else {\n                odd =\
    \ temp;\n            }\n        }\n        if (even > limit) {\n            return\
    \ -1;\n        }\n        while (odd < range) {\n            temp = (long)Math.Floor((double)odd\
    \ / 2);\n            if (temp % 2 == 0) {\n                odd = temp;\n     \
    \       } else {\n                even = temp;\n            }\n        }\n   \
    \     if (odd > range) {\n            return -1;\n        }\n        return even;",
  "        long maxEven = -1;\n        long xMinusY = x - y;\n        long yMinusX\
    \ = y - x;\n        long xMinusXMinusY = xMinusX - yMinusY;\n        long xMinusXMinusYMinusX\
    \ = xMinusXMinusY - xMinusY;\n        long xMinusXMinusYMinusXMinusY = xMinusXMinusYMinusX\
    \ - xMinusY;\n        long xMinusXMinusYMinusXMinusYMinusX = xMinusXMinusYMinusXMinusY\
    \ - xMinusY - x;\n        long xMinusXMinusYMinusXMinusYMinusXMinusY = xMinusXMinusYMinusXMinusYMinusX\
    \ - xMinusY - x - y;\n        long xMinusXMinusYMinusXMinusYMinusXMinusYMinusX\
    \ = xMinusXMinusYMinusXMinusYMinusXMinusY - xMinusY - x - y - x;\n        long\
    \ xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusY = xMinusXMinusYMinusXMinusYMinusXMinusYMinusX\
    \ - xMinusY - x - y - x - y;\n        long xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusX\
    \ = xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusY - xMinusY - x - y - x -\
    \ y - x;\n        long xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusY\
    \ = xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusX - xMinusY - x - y\
    \ - x - y - x - y;\n        long xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusX\
    \ = xMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusYMinusXMinusY - xMin", " \
    \       long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y :\
    \ -1;\n        long biggest = even;\n        if (even < odd) {\n            biggest\
    \ = even;\n        } else {\n            biggest = odd;\n        }\n        long\
    \ temp;\n        while (true) {\n            temp = biggest;\n            biggest\
    \ = (biggest + biggest + 1) / 2;\n            if (biggest == temp) {\n       \
    \         return temp;\n            }\n        }", "        long even = x;\n \
    \       long odd = y;\n        long biggest = -1;\n        long even2 = even;\n\
    \        long odd2 = odd;\n        long biggest2 = -1;\n        long even3 = even2;\n\
    \        long odd3 = odd2;\n        long biggest3 = -1;\n        long even4 =\
    \ even3;\n        long odd4 = odd3;\n        long biggest4 = -1;\n        long\
    \ even5 = even4;\n        long odd5 = odd4;\n        long biggest5 = -1;\n   \
    \     long even6 = even5;\n        long odd6 = odd5;\n        long biggest6 =\
    \ -1;\n        long even7 = even6;\n        long odd7 = odd6;\n        long biggest7\
    \ = -1;\n        long even8 = even7;\n        long odd8 = odd7;\n        long\
    \ biggest8 = -1;\n        long even9 = even8;\n        long odd9 = odd8;\n   \
    \     long biggest9 = -1;\n        long even10 = even9;\n        long odd10 =\
    \ odd9;\n        long biggest10 = -1;\n        long even11 = even10;\n       \
    \ long odd11 = odd10;\n        long biggest11 = -1;\n        long even12 = even11;\n\
    \        long odd12 = odd11;\n        long biggest12 = -1;\n        long even13\
    \ = even12;\n        long odd13 = odd12;\n        long biggest13 = -1;\n     \
    \   long even14 = even13;\n        long odd14 = odd13;\n        long biggest14\
    \ = -1;\n        long even15 = even14;\n        long odd15 = odd14;\n        long\
    \ biggest15 = -1;\n        long even16 = even15;\n        long odd16 = odd15;\n\
    \        long biggest16 = -1;\n        long even17 = even16;\n        long odd17\
    \ = odd16;\n        long biggest17 = -1;\n        long even18 = even17;\n    \
    \    long odd18 = odd17;\n        long biggest18 = -1;\n        long even19 =\
    \ even18;\n        long odd19 = odd18;\n        long biggest19 = -1;\n       \
    \ long even20 = even19;\n        long odd20 = odd19;\n        long biggest20 =\
    \ -1;\n        long even21 = even20;\n        long odd21 = odd20;\n        long\
    \ biggest21 = -1;\n        long even22 = even21;\n        long odd22 = odd21;\n\
    \        long biggest22 = -1;\n        long even23 = even22;\n        long odd23\
    \ = ", "        long xx = x;\n        long yy = y;\n        long xy = x * y;\n\
    \        long xx = xx * x;\n        long yy = yy * y;\n        long xy = xy *\
    \ x;\n        long xx = xx * y;\n        long yy = yy * y;\n        long xy =\
    \ xy * y;\n        long xx = xx * x;\n        long yy = yy * y;\n        long\
    \ xy = xy * x;\n        long xx = xx * y;\n        long yy = yy * y;\n       \
    \ long xy = xy * y;\n        long xx = xx * x;\n        long yy = yy * y;\n  \
    \      long xy = xy * x;\n        long xx = xx * y;\n        long yy = yy * y;\n\
    \        long xy = xy * x;\n        long xx = xx * y;\n        long yy = yy *\
    \ y;\n        long xy = xy * x;\n        long xx = xx * y;\n        long yy =\
    \ yy * y;\n        long xy = xy * x;\n        long xx = xx * y;\n        long\
    \ yy = yy * y;\n        long xy = xy * x;\n        long xx = xx * y;\n       \
    \ long yy = yy * y;\n        long xy = xy * x;\n        long xx = xx * y;\n  \
    \      long yy = yy * y;\n        long xy = xy * x;\n        long xx = xx * y;\n\
    \        long yy = yy * y;\n        long xy = xy * x;\n        long xx = xx *\
    \ y;\n        long yy = yy * y;\n        long xy = xy * x;\n        long xx =\
    \ xx * y;\n        long yy = yy * y;\n        long xy = xy * x;\n        long\
    \ xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * x;\n       \
    \ long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * x;\n  \
    \      long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy * x;\n\
    \        long xx = xx * y;\n        long yy = yy * y;\n        long xy = xy *\
    \ x;\n        long xx = xx * y;\n        long yy = yy * y;\n        long xy =\
    \ xy * x;\n        long xx = xx * y;\n        long yy = yy * y;\n        long\
    \ xy = xy * x;\n        long xx = xx * y;\n        long yy = y", "        long\
    \ even = x % 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n\
    \        long biggest = even;\n        if (even > odd) {\n            biggest\
    \ = odd;\n        }\n        return biggest;", "        long result = -1;\n  \
    \      if (x >= y) {\n            while (x < y) {\n                if (x % 2 ==\
    \ 0) {\n                    result = x;\n                    break;\n        \
    \        }\n                x += 2;\n            }\n        } else {\n       \
    \     while (y < x) {\n                if (y % 2 == 0) {\n                   \
    \ result = y;\n                    break;\n                }\n               \
    \ y += 2;\n            }\n        }\n        return result;", "        long even\
    \ = 0;\n        long odd = 0;\n        long range = (long)Math.Max(x, y);\n  \
    \      long range2 = range + 1;\n        long range3 = range2 + 1;\n        long\
    \ range4 = range3 + 1;\n        long range5 = range4 + 1;\n        long range6\
    \ = range5 + 1;\n        long range7 = range6 + 1;\n        long range8 = range7\
    \ + 1;\n        long range9 = range8 + 1;\n        long range10 = range9 + 1;\n\
    \        long range11 = range10 + 1;\n        long range12 = range11 + 1;\n  \
    \      long range13 = range12 + 1;\n        long range14 = range13 + 1;\n    \
    \    long range15 = range14 + 1;\n        long range16 = range15 + 1;\n      \
    \  long range17 = range16 + 1;\n        long range18 = range17 + 1;\n        long\
    \ range19 = range18 + 1;\n        long range20 = range19 + 1;\n        long range21\
    \ = range20 + 1;\n        long range22 = range21 + 1;\n        long range23 =\
    \ range22 + 1;\n        long range24 = range23 + 1;\n        long range25 = range24\
    \ + 1;\n        long range26 = range25 + 1;\n        long range27 = range26 +\
    \ 1;\n        long range28 = range27 + 1;\n        long range29 = range28 + 1;\n\
    \        long range30 = range29 + 1;\n        long range31 = range30 + 1;\n  \
    \      long range32 = range31 + 1;\n        long range33 = range32 + 1;\n    \
    \    long range34 = range33 + 1;\n        long range35 = range34 + 1;\n      \
    \  long range36 = range35 + 1;\n        long range37 = range36 + 1;\n        long\
    \ range38 = range37 + 1;\n        long range39 = range38 + 1;\n        long range40\
    \ = range39 + 1;\n        long range41 = range40 + 1;\n        long range42 =\
    \ range41 + 1;\n        long range43 = range42 + 1;\n        long range44 = range43\
    \ + 1;\n        long range45 = range44 + 1;\n        long range46 = range45 +\
    \ 1;\n        long range47 = range46 + 1;\n        long range48 = range47 + 1;\n\
    \        long range49 = range48 + 1;\n        long range50 = range49 + 1;\n  \
    \      long range51 = range50 + 1;\n        long range52 = range51 + 1;\n    \
    \    long range53 = range52 + 1;\n        long range54 = range53 + 1;\n      \
    \  long range55 = range54 + 1;\n        long range56 = range55 + 1;\n        long\
    \ range57", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        while (even < odd) {\n            long mid = (even + odd) / 2;\n\
    \            if (mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if (even > biggest)\
    \ {\n                biggest = even;\n            }\n            if (odd > biggest)\
    \ {\n                biggest = odd;\n            }\n        }\n        return\
    \ biggest;", "        long even = 0;\n        long odd = 0;\n        long biggest\
    \ = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 =\
    \ 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n\
    \        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n \
    \       long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n        long temp83 = 0;\n        long temp", "   \
    \     long result = -1;\n        long even = 1;\n        long odd = 0;\n     \
    \   while (even <= y) {\n            odd = even + odd;\n            even = even\
    \ + even;\n        }\n        if (even > y) {\n            result = even;\n  \
    \      }\n        return result;", "        long z = (long)Math.Max(x, y);\n \
    \       long a = z / 2;\n        long b = z - a;\n        long c = a / 2;\n  \
    \      long d = a - c;\n        long e = b / 2;\n        long f = b - e;\n   \
    \     long g = e / 2;\n        long h = e - g;\n        long i = f / 2;\n    \
    \    long j = f - i;\n        long k = g / 2;\n        long l = g - k;\n     \
    \   long m = h / 2;\n        long n = h - m;\n        long o = i / 2;\n      \
    \  long p = i - o;\n        long q = k / 2;\n        long r = k - q;\n       \
    \ long s = l / 2;\n        long t = l - s;\n        long u = m / 2;\n        long\
    \ v = m - u;\n        long w = n / 2;\n        long x = n - w;\n        long y\
    \ = p / 2;\n        long z = p - y;\n        long aa = q / 2;\n        long ab\
    \ = q - aa;\n        long ac = s / 2;\n        long ad = s - ac;\n        long\
    \ ae = t / 2;\n        long af = t - ae;\n        long ag = u / 2;\n        long\
    \ ah = u - ag;\n        long ai = v / 2;\n        long aj = v - ai;\n        long\
    \ ak = w / 2;\n        long al = w - ak;\n        long am = x / 2;\n        long\
    \ an = x - am;\n        long ao = y / 2;\n        long ap = y - ao;\n        long\
    \ aq = z / 2;\n        long ar = z - aq;\n        long as = a / 2;\n        long\
    \ at = a - as;\n        long au = b / 2;\n        long av = b - au;\n        long\
    \ aw = c / 2;\n        long ax = c - aw;\n        long ay = d / 2;\n        long\
    \ az = d - ay;\n        long ax = e / 2;\n        long ay = e - ax;\n        long\
    \ az = f / 2;\n        long ax = f - az;\n        long ay = g / 2;\n        long\
    \ az = g - ay;\n        long ax = h / 2;\n        long ay = h - ax;\n        long\
    \ az = i / 2;\n        long ax = i - az;\n        long ay = j / 2;\n        long\
    \ az = j - ay;\n        long ax = k / 2;\n        long ay = k - ax;\n", "    \
    \    long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even < odd) {\n            biggest\
    \ = even;\n        }\n        else {\n            biggest = odd;\n        }\n\
    \        long counter = 0;\n        long temp = 0;\n        while (true) {\n \
    \           temp = biggest;\n            biggest = biggest / 2;\n            if\
    \ (biggest == 0) {\n                break;\n            }\n            if (biggest\
    \ % 2 == 0) {\n                counter++;\n            }\n        }\n        if\
    \ (counter == 1) {\n            return temp;\n        }\n        return -1;",
  "        long xx = x;\n        long yy = y;\n        long xy = x * y;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx * yy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx * yy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx\
    \ * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xx * yy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xx * yy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xx * yy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xx * yy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xx * yy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx * yy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx * yy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xx\
    \ * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xx * yy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xx * yy;\n        long xx = xx * xx", "        long\
    \ even = x;\n        long odd = y;\n        long biggest = even;\n        long\
    \ smallest = odd;\n        bool evenFound = false;\n        bool oddFound = false;\n\
    \        while (even < odd) {\n            if (even % 2 == 0) {\n            \
    \    evenFound = true;\n                even++;\n            }\n            else\
    \ {\n                oddFound = true;\n                odd++;\n            }\n\
    \        }\n        if (evenFound && oddFound) {\n            while (even < odd)\
    \ {\n                if (even % 2 == 0) {\n                    even++;\n     \
    \           }\n                else {\n                    odd++;\n          \
    \      }\n            }\n            while (even < odd) {\n                if\
    \ (even % 2 != 0) {\n                    biggest = even;\n                   \
    \ even++;\n                }\n                else {\n                    biggest\
    \ = odd;\n                    odd++;\n                }\n            }\n     \
    \   }\n        if (even > odd) {\n            biggest = even;\n        }\n   \
    \     else {\n            biggest = odd;\n        }\n        if (biggest < smallest)\
    \ {\n            biggest = smallest;\n        }\n        return biggest;", " \
    \       long ans = -1;\n        long xx = x;\n        long yy = y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n        long\
    \ xy = x * y;\n        long xx = ", "        long xx = x;\n        long yy = y;\n\
    \        long xy = x * y;\n        long xx = xx * xx;\n        long yy = yy *\
    \ yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy\
    \ = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n       \
    \ long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx", "        long even = x & 1;\n        long odd = y\
    \ & 1;\n        long biggest = x | y;\n        long smallest = x ^ y;\n      \
    \  long even_smallest = even ^ smallest;\n        long odd_smallest = odd ^ smallest;\n\
    \        long even_biggest = even ^ biggest;\n        long odd_biggest = odd ^\
    \ biggest;\n        long even_smallest_biggest = even ^ biggest ^ smallest;\n\
    \        long odd_smallest_biggest = odd ^ biggest ^ smallest;\n        long even_smallest_smallest\
    \ = even ^ smallest ^ smallest;\n        long odd_smallest_smallest = odd ^ smallest\
    \ ^ smallest;\n        long even_biggest_smallest = even ^ biggest ^ smallest;\n\
    \        long odd_biggest_smallest = odd ^ biggest ^ smallest;\n        long even_biggest_biggest\
    \ = even ^ biggest ^ biggest;\n        long odd_biggest_biggest = odd ^ biggest\
    \ ^ biggest;\n        long even_biggest_smallest_biggest = even ^ biggest ^ smallest\
    \ ^ biggest;\n        long odd_biggest_smallest_biggest = odd ^ biggest ^ smallest\
    \ ^ biggest;\n        long even_biggest_smallest_smallest = even ^ smallest ^\
    \ smallest ^ biggest;\n        long odd_biggest_smallest_smallest = odd ^ smallest\
    \ ^ smallest ^ biggest;\n        long even_smallest_biggest_biggest = even ^ smallest\
    \ ^ biggest ^ biggest;\n        long odd_smallest_biggest_biggest = odd ^ smallest\
    \ ^ biggest ^ biggest;\n        long even_smallest_biggest_smallest = even ^ smallest\
    \ ^ biggest ^ smallest;\n        long odd_smallest_biggest_smallest = odd ^ smallest\
    \ ^ biggest ^ smallest;\n        long even_smallest_smallest_biggest = even ^\
    \ smallest ^ smallest ^ biggest;\n        long odd_smallest_smallest_biggest =\
    \ odd ^ smallest ^ smallest ^ biggest;\n        long even_biggest_smallest_biggest\
    \ = even ^ smallest ^ biggest ^ biggest;\n        long odd_biggest_smallest_biggest\
    \ = odd ^ smallest ^ biggest ^ biggest;\n        long even_biggest_smallest_smallest\
    \ = even ^ smallest ^ smallest ^ biggest;\n        long odd_biggest_smallest_smallest\
    \ = odd ^ smallest ^ smallest ", "        long maxEven = -1;\n        long minEven\
    \ = -1;\n        long minNum = -1;\n        long maxNum = -1;\n        long evenNum\
    \ = -1;\n        long oddNum = -1;\n        long num = 0;\n        long temp =\
    \ 0;\n        bool even = false;\n        bool odd = false;\n        bool min\
    \ = false;\n        bool max = false;\n        bool minEven = false;\n       \
    \ bool maxEven = false;\n        bool minOdd = false;\n        bool maxOdd = false;\n\
    \        bool minNum = false;\n        bool maxNum = false;\n        bool evenNum\
    \ = false;\n        bool oddNum = false;\n        bool numEven = false;\n    \
    \    bool numOdd = false;\n        bool tempEven = false;\n        bool tempOdd\
    \ = false;\n        bool tempNum = false;\n        bool tempEvenNum = false;\n\
    \        bool tempOddNum = false;\n        bool tempNumEven = false;\n       \
    \ bool tempNumOdd = false;\n        bool tempEvenNumOdd = false;\n        bool\
    \ tempOddNumOdd = false;\n        bool tempEvenNumEven = false;\n        bool\
    \ tempOddNumEven = false;\n        bool tempEvenNumOddNum = false;\n        bool\
    \ tempOddNumEvenNum = false;\n        bool tempEvenNumEvenNum = false;\n     \
    \   bool tempOddNumEvenNum = false;\n        bool tempEvenNumOddNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumEvenNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumOddNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumEvenNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumOddNum = false;\n\
    \        bool tempEvenNumEvenNum = false;\n        bool tempOddNumEvenNum = false;\n\
    \        bool tempEvenNumOddNum = false;\n        bool tempEvenNumEvenNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumOddNum = false;\n\
    \        bool tempEvenNumEvenNum = false;\n        bool tempOddNumEvenNum = false;\n\
    \        bool tempEvenNumOddNum = false;\n        bool tempEvenNumEvenNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        bool tempEvenNumOddNum = false;\n\
    \        bool tempEvenNumEvenNum = false;\n        bool tempOddNumEvenNum = false;\n\
    \        bool tempEvenNumOddNum = false;\n        bool tempEvenNumEvenNum = false;\n\
    \        bool tempOddNumEvenNum = false;\n        ", "        long even = x %\
    \ 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n        long biggest\
    \ = even;\n        if (even > odd) {\n            biggest = odd;\n        }\n\
    \        if (biggest > x && biggest > y) {\n            return biggest;\n    \
    \    }\n        return -1;", "        long even = x & 1;\n        long odd = x\
    \ >> 1;\n        long evenodd = even | odd;\n        long result = evenodd < y\
    \ ? evenodd : -1;\n        return result;", "        long even = x;\n        long\
    \ odd = y;\n        long biggest = -1;\n        while (even < odd) {\n       \
    \     long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n        \
    \        even = mid;\n            } else {\n                odd = mid;\n     \
    \       }\n            if (even > biggest) {\n                biggest = even;\n\
    \            }\n        }\n        return biggest;", "        long even = x %\
    \ 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long range = (long)Math.Abs(x\
    \ - y);\n        long range2 = range / 2;\n        long range3 = range2 / 2;\n\
    \        long range4 = range3 / 2;\n        long range5 = range4 / 2;\n      \
    \  long range6 = range5 / 2;\n        long range7 = range6 / 2;\n        long\
    \ range8 = range7 / 2;\n        long range9 = range8 / 2;\n        long range10\
    \ = range9 / 2;\n        long range11 = range10 / 2;\n        long range12 = range11\
    \ / 2;\n        long range13 = range12 / 2;\n        long range14 = range13 /\
    \ 2;\n        long range15 = range14 / 2;\n        long range16 = range15 / 2;\n\
    \        long range17 = range16 / 2;\n        long range18 = range17 / 2;\n  \
    \      long range19 = range18 / 2;\n        long range20 = range19 / 2;\n    \
    \    long range21 = range20 / 2;\n        long range22 = range21 / 2;\n      \
    \  long range23 = range22 / 2;\n        long range24 = range23 / 2;\n        long\
    \ range25 = range24 / 2;\n        long range26 = range25 / 2;\n        long range27\
    \ = range26 / 2;\n        long range28 = range27 / 2;\n        long range29 =\
    \ range28 / 2;\n        long range30 = range29 / 2;\n        long range31 = range30\
    \ / 2;\n        long range32 = range31 / 2;\n        long range33 = range32 /\
    \ 2;\n        long range34 = range33 / 2;\n        long range35 = range34 / 2;\n\
    \        long range36 = range35 / 2;\n        long range37 = range36 / 2;\n  \
    \      long range38 = range37 / 2;\n        long range39 = range38 / 2;\n    \
    \    long range40 = range39 / 2;\n        long range41 = range40 / 2;\n      \
    \  long range42 = range41 / 2;\n        long range43 = range42 / 2;\n        long\
    \ range44 = range43 / 2;\n        long range45 = range44 / 2;\n        long range46\
    \ = range45 / 2;\n        long range47 = range46 / 2;\n        long range48 =\
    \ range47 / 2;\n        long range49", "        long xx = x;\n        long yy\
    \ = y;\n        long xy = x * y;\n        long xx = xx * xx;\n        long yy\
    \ = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n       \
    \ long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx", "        long even = x % 2 == 0 ? x : -1;\n\
    \        long odd = y % 2 == 0 ? y : -1;\n        long biggest = even;\n     \
    \   if (even > odd) {\n            biggest = odd;\n        }\n        long min\
    \ = Math.Min(x, y);\n        long max = Math.Max(x, y);\n        long range =\
    \ (max - min) / 2;\n        long mid = min + range;\n        long even2 = mid\
    \ % 2 == 0 ? mid : -1;\n        long odd2 = mid % 2 == 1 ? mid : -1;\n       \
    \ long biggest2 = even2;\n        if (even2 > odd2) {\n            biggest2 =\
    \ odd2;\n        }\n        long min2 = Math.Min(min, max);\n        long max2\
    \ = Math.Max(min, max);\n        long range2 = (max2 - min2) / 2;\n        long\
    \ mid2 = min2 + range2;\n        long even3 = mid2 % 2 == 0 ? mid2 : -1;\n   \
    \     long odd3 = mid2 % 2 == 1 ? mid2 : -1;\n        long biggest3 = even3;\n\
    \        if (even3 > odd3) {\n            biggest3 = odd3;\n        }\n      \
    \  long min3 = Math.Min(min, max);\n        long max3 = Math.Max(min, max);\n\
    \        long range3 = (max3 - min3) / 2;\n        long mid3 = min3 + range3;\n\
    \        long even4 = mid3 % 2 == 0 ? mid3 : -1;\n        long odd4 = mid3 % 2\
    \ == 1 ? mid3 : -1;\n        long biggest4 = even4;\n        if (even4 > odd4)\
    \ {\n            biggest4 = odd4;\n        }\n        long min4 = Math.Min(min,\
    \ max);\n        long max4 = Math.Max(min, max);\n        long range4 = (max4\
    \ - min4) / 2;\n        long mid4 = min4 + range4;\n        long even5 = mid4\
    \ % 2 == 0 ? mid4 : -1;\n        long odd5 = mid4 % 2 == 1 ? mid4 : -1;\n    \
    \    long biggest5 = even5;\n        if (even5 > odd5) {\n            biggest5\
    \ = odd5;\n        }\n        long min5 = Math.Min(min, max);\n        long max5\
    \ = Math.Max(min, max);\n        long range5 = (max5 - min5) / 2;\n        long\
    \ mid5 = min5 + range5;\n        long even6 = mid5 % 2 == 0 ? mid5 : -1;\n   \
    \     long odd6 = mid5 % 2 == 1 ? mid5 : -1;\n        long biggest6 = even6;\n\
    \        if (even6 > odd6) {\n            biggest6 = odd6;\n        }", "    \
    \    long even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n\
    \        long biggest = even;\n        if (even < odd) {\n            biggest\
    \ = even;\n        }\n        else {\n            biggest = odd;\n        }\n\
    \        return biggest;", "        long even = 0;\n        long odd = 0;\n  \
    \      long biggest = 0;\n        long smallest = x;\n        long range = (long)Math.Abs(x\
    \ - y);\n        long range2 = range / 2;\n        long range3 = range / 3;\n\
    \        long range4 = range / 4;\n        long range5 = range / 5;\n        long\
    \ range6 = range / 6;\n        long range7 = range / 7;\n        long range8 =\
    \ range / 8;\n        long range9 = range / 9;\n        long range10 = range /\
    \ 10;\n        long range11 = range / 11;\n        long range12 = range / 12;\n\
    \        long range13 = range / 13;\n        long range14 = range / 14;\n    \
    \    long range15 = range / 15;\n        long range16 = range / 16;\n        long\
    \ range17 = range / 17;\n        long range18 = range / 18;\n        long range19\
    \ = range / 19;\n        long range20 = range / 20;\n        long range21 = range\
    \ / 21;\n        long range22 = range / 22;\n        long range23 = range / 23;\n\
    \        long range24 = range / 24;\n        long range25 = range / 25;\n    \
    \    long range26 = range / 26;\n        long range27 = range / 27;\n        long\
    \ range28 = range / 28;\n        long range29 = range / 29;\n        long range30\
    \ = range / 30;\n        long range31 = range / 31;\n        long range32 = range\
    \ / 32;\n        long range33 = range / 33;\n        long range34 = range / 34;\n\
    \        long range35 = range / 35;\n        long range36 = range / 36;\n    \
    \    long range37 = range / 37;\n        long range38 = range / 38;\n        long\
    \ range39 = range / 39;\n        long range40 = range / 40;\n        long range41\
    \ = range / 41;\n        long range42 = range / 42;\n        long range43 = range\
    \ / 43;\n        long range44 = range / 44;\n        long range45 = range / 45;\n\
    \        long range46 = range / 46;\n        long range47 = range / 47;\n    \
    \    long range48 = range / 48;\n        long range49 = range / 49;\n        long\
    \ range50 = range / 50;\n        long range51 = range / 51;\n        long range52\
    \ = range / 5", "        long even = x % 2 == 0 ? x : x - 1;\n        long odd\
    \ = y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        long biggestEven = even;\n        long smallestOdd = odd;\n\
    \        long biggestOdd = odd;\n        long biggestEvenOdd = even;\n       \
    \ long smallestEvenOdd = odd;\n        long biggestEvenEven = even;\n        long\
    \ smallestEvenEven = even;\n        long biggestEvenEvenOdd = even;\n        long\
    \ smallestEvenEvenOdd = odd;\n        long biggestEvenEvenEven = even;\n     \
    \   long smallestEvenEvenEven = even;\n        long biggestEvenEvenEvenOdd = even;\n\
    \        long smallestEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        long biggestEvenEvenEvenEvenEvenEven\
    \ = even;\n        long smallestEvenEvenEvenEvenEven = even;\n        long biggestEvenEvenEvenEvenEvenOdd\
    \ = even;\n        long smallestEvenEvenEvenEvenOdd = odd;\n        ", "     \
    \   long even = x % 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y\
    \ + 1;\n        long biggest = even;\n        long smallest = odd;\n        while\
    \ (even < odd) {\n            biggest = even;\n            smallest = odd;\n \
    \           long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n  \
    \              even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n        }\n        if (even > odd) {\n            biggest = even;\n\
    \            smallest = odd;\n        }\n        return biggest;", "        long\
    \ even = x % 2 == 0 ? x : -1;\n        long odd = y % 2 == 0 ? y : -1;\n     \
    \   long biggest = even;\n        long smallest = odd;\n        if (even > odd)\
    \ {\n            biggest = even;\n            smallest = odd;\n        }\n   \
    \     long temp;\n        while (true) {\n            temp = biggest;\n      \
    \      biggest = smallest + 1;\n            smallest = temp - 1;\n           \
    \ if (biggest > smallest) {\n                break;\n            }\n        }\n\
    \        return biggest;", "        long maxEven = -1;\n        long even = x;\n\
    \        long odd = y;\n        long temp;\n        while (even < odd) {\n   \
    \         temp = even;\n            even = odd % even;\n            odd = temp\
    \ % odd;\n            if (even > maxEven) {\n                maxEven = even;\n\
    \            }\n        }\n        return maxEven;", "        long even = x %\
    \ 2 == 0 ? x : x - 1;\n        long odd = y % 2 == 0 ? y : y - 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        long mid = biggest;\n\
    \        bool even_in_range = false;\n        bool odd_in_range = false;\n   \
    \     while (even < odd) {\n            mid = (even + odd) / 2;\n            if\
    \ (mid % 2 == 0) {\n                even_in_range = true;\n                even\
    \ = mid;\n            } else {\n                odd_in_range = true;\n       \
    \         odd = mid;\n            }\n        }\n        if (even_in_range) {\n\
    \            biggest = even;\n        } else {\n            biggest = odd;\n \
    \       }\n        if (odd_in_range) {\n            smallest = odd;\n        }\
    \ else {\n            smallest = even;\n        }\n        if (biggest < smallest)\
    \ {\n            biggest = -1;\n        }\n        return biggest;", "       \
    \ long result = -1;\n        long xx = x;\n        long yy = y;\n        long\
    \ xy = x * y;\n        long xx = xx * x;\n        long yy = yy * y;\n        long\
    \ xy = xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n       \
    \ long xy = xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n  \
    \      long xy = xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n\
    \        long xy = xx * y;\n        long xx = xx * x;\n        long yy = yy *\
    \ y;\n        long xy = xx * y;\n        long xx = xx * x;\n        long yy =\
    \ yy * y;\n        long xy = xx * y;\n        long xx = xx * x;\n        long\
    \ yy = yy * y;\n        long xy = xx * y;\n        long xx = xx * x;\n       \
    \ long yy = yy * y;\n        long xy = xx * y;\n        long xx = xx * x;\n  \
    \      long yy = yy * y;\n        long xy = xx * y;\n        long xx = xx * x;\n\
    \        long yy = yy * y;\n        long xy = xx * y;\n        long xx = xx *\
    \ x;\n        long yy = yy * y;\n        long xy = xx * y;\n        long xx =\
    \ xx * x;\n        long yy = yy * y;\n        long xy = xx * y;\n        long\
    \ xx = xx * x;\n        long yy = yy * y;\n        long xy = xx * y;\n       \
    \ long xx = xx * x;\n        long yy = yy * y;\n        long xy = xx * y;\n  \
    \      long xx = xx * x;\n        long yy = yy * y;\n        long xy = xx * y;\n\
    \        long xx = xx * x;\n        long yy = yy * y;\n        long xy = xx *\
    \ y;\n        long xx = xx * x;\n        long yy = yy * y;\n        long xy =\
    \ xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n        long\
    \ xy = xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n       \
    \ long xy = xx * y;\n        long xx = xx * x;\n        long yy = yy * y;\n  \
    \      long xy = xx * y;\n        long xx = xx * x;\n", "        long maxEven\
    \ = -1;\n        long xMinusY = x - y;\n        long yMinusX = y - x;\n      \
    \  long xMinusXMinusY = xMinusY - xMinusY;\n        long yMinusYMinusX = yMinusX\
    \ - yMinusX;\n        long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n\
    \        long yMinusYMinusYMinusX = yMinusYMinusX - yMinusYMinusX;\n        long\
    \ xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY - xMinusXMinusXMinusY;\n   \
    \     long yMinusYMinusYMinusXMinusY = yMinusYMinusXMinusY - yMinusYMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusXMinusXMinusY = yMinusYMinusXMinusYMinusX - yMinusYMinusXMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusXMinusYMinusY\
    \ = yMinusYMinusXMinusYMinusXMinusY - yMinusYMinusXMinusXMinusXMinusY;\n     \
    \   long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusXMinusXMinusXMinusYMinusY\
    \ = yMinus", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        while (even < odd) {\n            biggest = even;\n         \
    \   even += 2;\n            odd -= 2;\n        }\n        if (biggest == -1) {\n\
    \            return -1;\n        }\n        return biggest;", "        long even\
    \ = x;\n        long odd = y;\n        long biggest = -1;\n        long temp;\n\
    \        while (even < odd) {\n            temp = (even + odd) / 2;\n        \
    \    if (temp % 2 == 0) {\n                even = temp;\n            } else {\n\
    \                odd = temp;\n            }\n            if (even > biggest) {\n\
    \                biggest = even;\n            }\n        }\n        return biggest;",
  "        long result = -1;\n        long xMinusY = x - y;\n        long yMinusX\
    \ = y - x;\n        long xMinusXMinusY = xMinusY - xMinusY;\n        long yMinusYMinusX\
    \ = yMinusX - yMinusX;\n        long xMinusXMinusXMinusY = xMinusXMinusY - xMinusXMinusY;\n\
    \        long yMinusYMinusXMinusY = yMinusYMinusX - yMinusYMinusX;\n        long\
    \ xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY - xMinusXMinusXMinusY;\n   \
    \     long yMinusYMinusXMinusXMinusY = yMinusYMinusXMinusY - yMinusYMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusXMinusXMinusXMinusY = yMinusYMinusXMinusXMinusXMinusY\
    \ - yMinusYMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusXMinusXMinusXMinusXMinusXMinusY = yMinusYMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - yMinusYMinusXMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long "]
stop_tokens:
- "\n    }\n"

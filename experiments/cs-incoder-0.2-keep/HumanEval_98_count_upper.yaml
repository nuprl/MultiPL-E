name: HumanEval_98_count_upper
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    // For example:\n    // count_upper('aBCdEf') returns 1\n    //\
  \ count_upper('abcdefg') returns 0\n    // count_upper('dBBE') returns 0\n    public\
  \ static long CountUpper(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountUpper((\"\
  aBCdEf\")) == (1L));\n    Debug.Assert(CountUpper((\"abcdefg\")) == (0L));\n   \
  \ Debug.Assert(CountUpper((\"dBBE\")) == (0L));\n    Debug.Assert(CountUpper((\"\
  B\")) == (0L));\n    Debug.Assert(CountUpper((\"U\")) == (1L));\n    Debug.Assert(CountUpper((\"\
  \")) == (0L));\n    Debug.Assert(CountUpper((\"EEEE\")) == (2L));\n    }\n\n}\n"
completions: ["        long count = 0;\n        foreach (char c in s) {\n        \
    \    if (char.IsUpper(c)) {\n                if (c != 'A' && c != 'a') {\n   \
    \                 count++;\n                }\n            }\n        }\n    \
    \    return count;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n                   \
    \ count++;\n                }\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (Char.IsUpper(c)) {\n                if (c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U')\n                    count++;\n   \
    \         }\n        }\n        return count;", "        long countUpper = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         countUpper += 1;\n            }\n        }\n        return countUpper;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                char c = s[i];\n                if (char.IsUpper(c))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long vowels = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                vowels++;\n      \
    \      }\n            if (char.IsUpper(c)) {\n                vowels++;\n    \
    \        }\n            if (char.IsUpper(c)) {\n                vowels++;\n  \
    \          }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c", "        long upperCount = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'a') {\n                    upperCount++;\n   \
    \             }\n            }\n        }\n        return upperCount;", "    \
    \    long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (i % 2 == 0) {\n                char c = s[i];\n                if (char.IsUpper(c))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          upperCount++;\n            }\n        }\n        return upperCount;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                count += c >= 'A' && c <= 'Z' ? 1 : 0;\n            }\n \
    \       }\n        return count;", "        long countUpper = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                   \
    \ countUpper++;\n                }\n            }\n        }\n        return countUpper;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n        }\n        return count;", " \
    \       long upperCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                upperCount++;\n            }\n        }\n\
    \        long evenCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n \
    \           if (i % 2 == 0) {\n                evenCount++;\n            }\n \
    \       }\n        return upperCount - (evenCount / 2);", "        long vowels\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c", " \
    \       long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n                if (c != 'A' && c != 'E' && c\
    \ != 'I' && c != 'O' && c != 'U') {\n                    vowels -= 2;\n      \
    \          }\n            }\n        }\n        return vowels;", "        long\
    \ count = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                count += 0;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n    \
    \            if (s[i] == 'A' || s[i] == 'a') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n               \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   foreach (char c in s) {\n            if (char.IsUpper(c)) {\n            \
    \    if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n       \
    \             count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        foreach (char c in s) {\n       \
    \     if (Char.IsUpper(c)) {\n                count += 1;\n            }\n   \
    \         if (count % 2 == 0) {\n                count += 1;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'a') {\n                    count++;\n                }\n      \
    \      }\n        }\n        return count;", "        long count = 0;\n      \
    \  for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n     \
    \           if (Char.IsUpper(s[i]))\n                    count++;\n          \
    \  }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                   \
    \ count++;\n                }\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'a') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (Char.IsUpper(s[i]))\n                    count++;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n              \
    \      vowels++;\n            }\n        }\n        return vowels;", "       \
    \ long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                  \
    \  count++;\n            }\n        }\n        return count;", "        long vowels\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c", " \
    \       long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n                if (c != 'A' && c != 'E' &&\
    \ c != 'I' && c != 'O' && c != 'U')\n                    count += 1;\n       \
    \     }\n        }\n        return count;", "        long vowels = 0;\n      \
    \  foreach (char c in s) {\n            if (char.IsUpper(c)) {\n             \
    \   vowels++;\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U') {\n                    vowels -= 2;\n                }\n      \
    \      }\n        }\n        return vowels;", "        long count = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n    \
    \            if (s[i] == 'A' || s[i] == 'a' || s[i] == 'E' || s[i] == 'e' || s[i]\
    \ == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] == 'o' || s[i] == 'U' || s[i] ==\
    \ 'u') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (s[i] == 'A' || s[i] == 'a' || s[i] == 'E' || s[i] == 'e' || s[i] == 'I' ||\
    \ s[i] == 'i' || s[i] == 'O' || s[i] == 'o' || s[i] == 'U' || s[i] == 'u') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long vowels = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                vowels++;\n      \
    \      }\n        }\n        long evenIndices = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    evenIndices++;\n            }\n        }\n        return\
    \ vowels - evenIndices;", "        long count = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                if (c != 'A' && c != 'a') {\n         \
    \           count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long vowels = 0;\n        foreach (char c in s) {\n      \
    \      if (char.IsUpper(c)) {\n                vowels++;\n            }\n    \
    \    }\n        return vowels % 2 == 0 ? vowels / 2 : vowels / 2 + 1;", "    \
    \    long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A'\
    \ && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n               \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\n\
    \                vowels++;\n            if (i % 2 == 0)\n                vowels\
    \ += (s[i] - 'A') % 2; // even indices\n        }\n        return vowels;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U')\n                    count++;\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     foreach (char c in s) {\n            if (char.IsUpper(c)) {\n          \
    \      count += 1;\n            }\n            if (count % 2 == 0) {\n       \
    \         count += 1;\n            }\n        }\n        return count;", "   \
    \     long countUpper = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                countUpper++;\n            }\n        }\n        long evenCountUpper\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (char.IsUpper(s[i]))\n                    evenCountUpper++;\n\
    \            }\n        }\n        return countUpper - evenCountUpper;", "   \
    \     long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long vowels = 0;\n        foreach (char\
    \ c in s) {\n            if (Char.IsUpper(c)) {\n                vowels++;\n \
    \               if (c != 'e') {\n                    vowels -= 2;\n          \
    \      }\n            }\n        }\n        return vowels;", "        long count\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U')\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n                    vowels++;\n        \
    \    }\n        }\n        return vowels;", "        long countUpper = 0;\n  \
    \      foreach (char c in s) {\n            if (char.IsUpper(c)) {\n         \
    \       countUpper++;\n            }\n        }\n        return countUpper;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a') {\n\
    \                    vowels++;\n                }\n                if (s[i] ==\
    \ 'E' || s[i] == 'e') {\n                    vowels++;\n                }\n  \
    \              if (s[i] == 'I' || s[i] == 'i') {\n                    vowels++;\n\
    \                }\n                if (s[i] == 'O' || s[i] == 'o') {\n      \
    \              vowels++;\n                }\n                if (s[i] == 'U' ||\
    \ s[i] == 'u') {\n                    vowels++;\n                }\n         \
    \   }\n        }\n        return vowels;", "        long vowels = 0;\n       \
    \ foreach (char c in s) {\n            if (char.IsUpper(c)) {\n              \
    \  vowels++;\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U')\n                    vowels -= 2;\n            }\n        }\n \
    \       return vowels;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (s[i] ==\
    \ 'A' || s[i] == 'a') {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     foreach (char c in s) {\n            if (char.IsUpper(c)) {\n          \
    \      if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n     \
    \               count++;\n                }\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        foreach (char c in s) {\n\
    \            if (char.IsUpper(c)) {\n                count += 1;\n           \
    \     if (c != 'A' && c != 'a' && c != 'E' && c != 'e' && c != 'I' && c != 'i'\
    \ && c != 'O' && c != 'o' && c != 'U' && c != 'u') {\n                    count\
    \ += 1;\n                }\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    vowels++;\n                }\n            }\n  \
    \      }\n        return vowels;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A'\
    \ && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n        }\n        long evenIndex\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                evenIndex++;\n            }\n            if (evenIndex % 2 ==\
    \ 0) {\n                vowels++;\n            }\n        }\n        return vowels;",
  "        long upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n  \
    \          if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n      \
    \              upperCount++;\n            }\n        }\n        return upperCount;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (char.IsUpper(s[i]))\n                    count++;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (s[i] ==\
    \ 'A' || s[i] == 'a') {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        long upperCount = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    upperCount++;\n\
    \            }\n        }\n        return upperCount;", "        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (Char.IsUpper(s[i]))\n                    count++;\n \
    \           }\n        }\n        return count;", "        long vowels = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         vowels++;\n                if (c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U') {\n                    vowels -= 2;\n                }\n\
    \            }\n        }\n        return vowels;", "        long count = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                count += 1;\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  count -= 1;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n                    vowels++;\n            }\n        }\n        return\
    \ vowels;", "        long count = 0;\n        foreach (char c in s) {\n      \
    \      if (char.IsUpper(c)) {\n                if (c != 'A' && c != 'E' && c !=\
    \ 'I' && c != 'O' && c != 'U') {\n                    count++;\n             \
    \   }\n            }\n        }\n        return count;", "        long count =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (Char.IsUpper(s[i]))\n                    count++;\n \
    \           }\n        }\n        return count;", "        long count = 0;\n \
    \       foreach (char c in s) {\n            if (char.IsUpper(c)) {\n        \
    \        if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n   \
    \                 count++;\n                }\n            }\n        }\n    \
    \    return count;", "        long countUpper = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c\
    \ != 'a') {\n                    countUpper++;\n                }\n          \
    \  }\n        }\n        return countUpper;", "        long vowels = 0;\n    \
    \    foreach (char c in s) {\n            if (char.IsUpper(c)) {\n           \
    \     if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n      \
    \              vowels++;\n                }\n            }\n        }\n      \
    \  return vowels;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n                if (c != 'A' && c != 'E' &&\
    \ c != 'I' && c != 'O' && c != 'U') {\n                    count += 1;\n     \
    \           }\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n                    count++;\n            }\n        }\n        return\
    \ count;", "        long countUpper = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    countUpper++;\n            }\n        }\n        return countUpper;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n               \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        foreach (char c in s) {\n            if (Char.IsUpper(c)) {\n       \
    \         count += 1;\n            }\n            if (count % 2 == 0) {\n    \
    \            count += 1;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n \
    \               }\n            }\n        }\n        return count;", "       \
    \ long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'a') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n                if (c != 'A' && c != 'E' &&\
    \ c != 'I' && c != 'O' && c != 'U')\n                    count += 1;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ foreach (char c in s) {\n            if (char.IsUpper(c)) {\n              \
    \  count += 1;\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U')\n                    count += 1;\n            }\n        }\n  \
    \      return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                count += 1;\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  count += 1;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (s[i] ==\
    \ 'A' || s[i] == 'a') {\n                    count++;\n                }\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n  \
    \              if (char.IsUpper(s[i]))\n                    count++;\n       \
    \     }\n        }\n        return count;", "        long vowels = 0;\n      \
    \  foreach (char c in s) {\n            if (char.IsUpper(c)) {\n             \
    \   vowels++;\n            }\n        }\n        long evenIndices = 0;\n     \
    \   foreach (char c in s) {\n            if (char.IsUpper(c)) {\n            \
    \    evenIndices++;\n            }\n            if (evenIndices % 2 == 0) {\n\
    \                vowels++;\n            }\n        }\n        return vowels;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n                    count++;\n    \
    \            }\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n                if (c != 'A' && c != 'E' &&\
    \ c != 'I' && c != 'O' && c != 'U') {\n                    count += 1;\n     \
    \           }\n            }\n        }\n        return count;", "        long\
    \ vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n        }\n        return vowels;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (char.IsUpper(s[i]))\n                    count++;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a' || s[i] ==\
    \ 'E' || s[i] == 'e' || s[i] == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] == 'o'\
    \ || s[i] == 'U' || s[i] == 'u') {\n                    count++;\n           \
    \     }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                count++;\n            }\n            if (count % 2 == 0) {\n\
    \                count += 2;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long countUpper = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a' || s[i]\
    \ == 'E' || s[i] == 'e' || s[i] == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] ==\
    \ 'o' || s[i] == 'U' || s[i] == 'u') {\n                    countUpper++;\n  \
    \              }\n            }\n        }\n        return countUpper;", "   \
    \     long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n            \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if\
    \ (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                  \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                count += 1;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ foreach (char c in s) {\n            if (char.IsUpper(c)) {\n              \
    \  count += 1;\n            }\n            if (char.IsUpper(c)) {\n          \
    \      count += 1;\n            }\n            if (char.IsUpper(c)) {\n      \
    \          count += 1;\n            }\n            if (char.IsUpper(c)) {\n  \
    \              count += 1;\n            }\n            if (char.IsUpper(c)) {\n\
    \                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a')\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n               \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   foreach (char c in s) {\n            if (char.IsUpper(c)) {\n            \
    \    count += 1;\n                if (c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U') {\n                    count += 1;\n                }\n   \
    \         }\n        }\n        return count;", "        long count = 0;\n   \
    \     foreach (char c in s) {\n            if (char.IsUpper(c)) {\n          \
    \      if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n     \
    \               count++;\n                }\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        foreach (char c in s) {\n\
    \            if (char.IsUpper(c)) {\n                if (c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n     \
    \           }\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   foreach (char c in s) {\n            if (char.IsUpper(c)) {\n            \
    \    count++;\n            }\n            if (count % 2 == 0) {\n            \
    \    count += 2;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i\
    \ % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long count = 0;\n     \
    \   for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n    \
    \            if (Char.IsUpper(s[i]))\n                    count++;\n         \
    \   }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                   \
    \ count++;\n                }\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long upper = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                upper++;\n            }\n        }\n        return upper;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count++;\n            }\n            if (count % 2 == 0)\
    \ {\n                count += (int)Char.GetNumericValue(c);\n            }\n \
    \       }\n        return count;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A'\
    \ && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n        }\n        long evenIndex\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                evenIndex++;\n            }\n            if (evenIndex % 2 ==\
    \ 0) {\n                vowels++;\n            }\n        }\n        return vowels;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a') {\n     \
    \               count++;\n                }\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        foreach (char c in s) {\n\
    \            if (Char.IsUpper(c)) {\n                count += 1;\n           \
    \ }\n            if (count % 2 == 0) {\n                count += 1;\n        \
    \    }\n        }\n        return count;", "        long vowels = 0;\n       \
    \ for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n      \
    \          if (s[i] == 'A' || s[i] == 'a' || s[i] == 'E' || s[i] == 'e' || s[i]\
    \ == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] == 'o' || s[i] == 'U' || s[i] ==\
    \ 'u') {\n                    vowels++;\n                }\n            }\n  \
    \      }\n        return vowels;", "        long count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n               \
    \ if (s[i] == 'A' || s[i] == 'a' || s[i] == 'E' || s[i] == 'e' || s[i] == 'I'\
    \ || s[i] == 'i' || s[i] == 'O' || s[i] == 'o' || s[i] == 'U' || s[i] == 'u')\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long vowels = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                vowels +=\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u');\n\
    \            }\n        }\n        return vowels;", "        long count = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  count++;\n                }\n            }\n        }\n   \
    \     return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (char.IsUpper(c)) {\n                count += 1;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ foreach (char c in s) {\n            if (char.IsUpper(c)) {\n              \
    \  if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n         \
    \           count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] ==\
    \ 'a') {\n                    vowels++;\n                }\n            }\n  \
    \      }\n        return vowels;", "        long count = 0;\n        for (int\
    \ i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n               \
    \ if (Char.IsUpper(s[i]))\n                    count++;\n            }\n     \
    \   }\n        return count;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A'\
    \ && c != 'a') {\n                    count++;\n                }\n          \
    \  }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                   \
    \ count++;\n                }\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'a') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          count++;\n            }\n        }\n        return count;", "     \
    \   long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n              \
    \      count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (Char.IsUpper(s[i]))\n                    count++;\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long countUpper = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'a') {\n                    countUpper++;\n                }\n \
    \           }\n        }\n        return countUpper;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (s[i] == 'A' || s[i] == 'a') {\n                    vowels++;\n\
    \                }\n            }\n        }\n        return vowels;", "     \
    \   long count = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long vowels = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (Char.IsUpper(s[i]))\n                    vowels++;\n            }\n       \
    \ }\n        return vowels;", "        long count = 0;\n        for (int i = 0;\
    \ i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n        }\n        return count;", " \
    \       long countUpper = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                countUpper++;\n            }\n        }\n\
    \        return countUpper;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (char.IsUpper(c)) {\n                count += 1;\n\
    \                if (c != 'A' && c != 'a') {\n                    count += 1;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n          \
    \  if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n              \
    \      vowels++;\n            }\n        }\n        return vowels;", "       \
    \ long countUpper = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                countUpper += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        foreach (char\
    \ c in s) {\n            if (Char.IsUpper(c)) {\n                count += c >=\
    \ 'A' && c <= 'Z' ? 1 : 0;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n           \
    \ if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n               \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (Char.IsUpper(s[i]))\n\
    \                vowels++;\n            if (i % 2 == 0)\n                vowels\
    \ += (s[i] - 'A') % 2; // even\n        }\n        return vowels;", "        long\
    \ vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c))\
    \ {\n                vowels++;\n            }\n            if (char.IsUpper(c",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n                    count++;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a' || s[i]\
    \ == 'E' || s[i] == 'e' || s[i] == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] ==\
    \ 'o' || s[i] == 'U' || s[i] == 'u') {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;", "        long vowels = 0;\n    \
    \    foreach (char c in s) {\n            if (char.IsUpper(c)) {\n           \
    \     vowels++;\n                if (c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U')\n                    vowels -= 2;\n            }\n        }\n\
    \        return vowels;", "        long count = 0;\n        for (int i = 0; i\
    \ < s.Length; i++) {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long countUpper = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'a') {\n                    countUpper++;\n                }\n \
    \           }\n        }\n        return countUpper;", "        long upperCount\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                if (c != 'A' && c != 'a') {\n                    upperCount++;\n\
    \                }\n            }\n        }\n        return upperCount;", " \
    \       long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                count += 1;\n                if (c != 'A'\
    \ && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    count\
    \ += 1;\n                }\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i] == 'a' || s[i]\
    \ == 'E' || s[i] == 'e' || s[i] == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] ==\
    \ 'o' || s[i] == 'U' || s[i] == 'u') {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (Char.IsUpper(s[i]))\n                    count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    count++;\n     \
    \       }\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

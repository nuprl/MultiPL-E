name: HumanEval_98_count_upper
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    // For example:\n    // count_upper('aBCdEf') returns 1\n    //\
  \ count_upper('abcdefg') returns 0\n    // count_upper('dBBE') returns 0\n    public\
  \ static long CountUpper(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountUpper((\"\
  aBCdEf\")) == (1L));\n    Debug.Assert(CountUpper((\"abcdefg\")) == (0L));\n   \
  \ Debug.Assert(CountUpper((\"dBBE\")) == (0L));\n    Debug.Assert(CountUpper((\"\
  B\")) == (0L));\n    Debug.Assert(CountUpper((\"U\")) == (1L));\n    Debug.Assert(CountUpper((\"\
  \")) == (0L));\n    Debug.Assert(CountUpper((\"EEEE\")) == (2L));\n    }\n\n}\n"
completions: ["        long count = 0;\n        foreach (char c in s) {\n        \
    \    if (char.IsUpper(c)) {\n                if (c != 'A' && c != 'a') {\n   \
    \                 count++;\n                }\n            }\n        }\n    \
    \    return count;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n                   \
    \ count++;\n                }\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          vowels++;\n            }\n        }\n        return vowels;", "   \
    \     long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U') {\n                    count++;\n                }\n            }\n   \
    \     }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n                if\
    \ (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        foreach (char c in s)\
    \ {\n            if (Char.IsUpper(c)) {\n                if (c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U')\n                    count++;\n   \
    \         }\n        }\n        return count;", "        long countUpper = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         countUpper += 1;\n            }\n        }\n        return countUpper;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                char c = s[i];\n                if (char.IsUpper(c))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long vowels = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                vowels++;\n      \
    \      }\n            if (char.IsUpper(c)) {\n                vowels++;\n    \
    \        }\n            if (char.IsUpper(c)) {\n                vowels++;\n  \
    \          }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c)) {\n                vowels++;\n\
    \            }\n            if (char.IsUpper(c", "        long upperCount = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'a') {\n                    upperCount++;\n   \
    \             }\n            }\n        }\n        return upperCount;", "    \
    \    long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (i % 2 == 0) {\n                char c = s[i];\n                if (char.IsUpper(c))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ s.Length; i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n           \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long upperCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n          \
    \          upperCount++;\n            }\n        }\n        return upperCount;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                count += c >= 'A' && c <= 'Z' ? 1 : 0;\n            }\n \
    \       }\n        return count;", "        long countUpper = 0;\n        foreach\
    \ (char c in s) {\n            if (char.IsUpper(c)) {\n                if (c !=\
    \ 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                   \
    \ countUpper++;\n                }\n            }\n        }\n        return countUpper;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {\n                count += 1;\n            }\n            if (char.IsUpper(c))\
    \ {", "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n\
    \            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n    \
    \                count++;\n            }\n        }\n        return count;", " \
    \       long upperCount = 0;\n        foreach (char c in s) {\n            if\
    \ (char.IsUpper(c)) {\n                upperCount++;\n            }\n        }\n\
    \        long evenCount = 0;\n        for (int i = 0; i < s.Length; i++) {\n \
    \           if (i % 2 == 0) {\n                evenCount++;\n            }\n \
    \       }\n        return upperCount - (evenCount / 2);", "        long vowels\
    \ = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c)) {\n\
    \                vowels++;\n            }\n            if (char.IsUpper(c"]
stop_tokens:
- "\n    }\n"

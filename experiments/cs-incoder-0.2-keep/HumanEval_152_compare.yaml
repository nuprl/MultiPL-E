name: HumanEval_152_compare
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // I think we all remember that feeling when the result of some\
  \ long-awaited\n    // event is finally known. The feelings and thoughts you have\
  \ at that moment are\n    // definitely worth noting down and comparing.\n    //\
  \ Your task is to determine if a person correctly guessed the results of a number\
  \ of matches.\n    // You are given two arrays of scores and guesses of equal length,\
  \ where each index shows a match. \n    // Return an array of the same length denoting\
  \ how far off each guess was. If they have guessed correctly,\n    // the value\
  \ is 0, and if not, the value is the absolute difference between the guess and the\
  \ score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
  \    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    public static\
  \ List<long> Compare(List<long> game, List<long> guess) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n\
  \    Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,\
  \ (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,\
  \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,\
  \ (long)1L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long score =\
    \ 0;\n        long diff = 0;\n        foreach (long g in game) {\n           \
    \ score += g;\n        }\n        foreach (long g in guess) {\n            diff\
    \ += g - score;\n        }\n        result.Add(diff);\n        return result;",
  "        List<long> result = new List<long>();\n        long total = 0;\n      \
    \  long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long\
    \ diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7\
    \ = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10\
    \ = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;\n        long diff84", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long difference = 0;\n        foreach (var item in game) {\n            score\
    \ += item;\n        }\n        foreach (var item in guess) {\n            guess\
    \ += item;\n        }\n        difference = guess - score;\n        result.Add(difference);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        foreach (long guess\
    \ in guess) {\n            score = game.Sum(x => x);\n            difference =\
    \ guess - score;\n            result.Add(difference);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long difference = 0;\n        bool correct = false;\n        foreach\
    \ (long g in game) {\n            score += g;\n            foreach (long g in\
    \ guess) {\n                difference = Math.Abs(g - score);\n              \
    \  if (difference == 0) {\n                    correct = true;\n             \
    \       break;\n                }\n            }\n            result.Add(difference);\n\
    \        }\n        if (!correct) {\n            foreach (long g in guess) {\n\
    \                difference = Math.Abs(g - score);\n                result.Add(difference);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        game.ForEach(x => result.Add(0));\n        guess.ForEach(x\
    \ => result.Add(0));\n        game.ForEach(x => result.Add(Math.Abs(x - guess[game.IndexOf(x)])));\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        long guess = 0;\n\
    \        long game = 0;\n        foreach (var item in guess) {\n            guess\
    \ = item;\n            game = game[game.Count - 1];\n            difference =\
    \ Math.Abs(guess - game);\n            result.Add(difference);\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long score = 0;\n        long diff = 0;\n        long guess = 0;\n       \
    \ long game = 0;\n        foreach (var item in guess) {\n            guess = item;\n\
    \            game = game[game.Count - 1];\n            diff = guess - game;\n\
    \            result.Add(diff);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        long scoreDifference = 0;\n        long\
    \ scoreDifference2 = 0;\n        long scoreDifference3 = 0;\n        long scoreDifference4\
    \ = 0;\n        long scoreDifference5 = 0;\n        long scoreDifference6 = 0;\n\
    \        long scoreDifference7 = 0;\n        long scoreDifference8 = 0;\n    \
    \    long scoreDifference9 = 0;\n        long scoreDifference10 = 0;\n       \
    \ long scoreDifference11 = 0;\n        long scoreDifference12 = 0;\n        long\
    \ scoreDifference13 = 0;\n        long scoreDifference14 = 0;\n        long scoreDifference15\
    \ = 0;\n        long scoreDifference16 = 0;\n        long scoreDifference17 =\
    \ 0;\n        long scoreDifference18 = 0;\n        long scoreDifference19 = 0;\n\
    \        long scoreDifference20 = 0;\n        long scoreDifference21 = 0;\n  \
    \      long scoreDifference22 = 0;\n        long scoreDifference23 = 0;\n    \
    \    long scoreDifference24 = 0;\n        long scoreDifference25 = 0;\n      \
    \  long scoreDifference26 = 0;\n        long scoreDifference27 = 0;\n        long\
    \ scoreDifference28 = 0;\n        long scoreDifference29 = 0;\n        long scoreDifference30\
    \ = 0;\n        long scoreDifference31 = 0;\n        long scoreDifference32 =\
    \ 0;\n        long scoreDifference33 = 0;\n        long scoreDifference34 = 0;\n\
    \        long scoreDifference35 = 0;\n        long scoreDifference36 = 0;\n  \
    \      long scoreDifference37 = 0;\n        long scoreDifference38 = 0;\n    \
    \    long scoreDifference39 = 0;\n        long scoreDifference40 = 0;\n      \
    \  long scoreDifference41 = 0;\n        long scoreDifference42 = 0;\n        long\
    \ scoreDifference43 = 0;\n        long scoreDifference44 = 0;\n        long scoreDifference45\
    \ = 0;\n        long scoreDifference46 = 0;\n        long scoreDifference47 =\
    \ 0;\n        long scoreDifference48 = 0;\n        long scoreDifference49 = 0;\n\
    \        long scoreDifference50 = 0;\n        long scoreDifference51 = 0;\n  \
    \      long scoreDifference52 = 0;\n        long scoreDifference53 = 0;\n    \
    \    long scoreDifference54 = 0;\n        long scoreDifference55 = 0;\n      \
    \  long scoreDifference56 = 0;\n        long scoreDifference57 = 0;\n        long\
    \ scoreDifference58 = 0;\n        long scoreDifference59 = 0;\n        long scoreDifference60\
    \ = 0;\n        long scoreDifference61 = 0;\n        long scoreDifference62 =\
    \ 0;\n        long scoreDifference63 = 0;\n        long scoreDifference64 = 0;\n\
    \        long scoreDifference65 = 0;\n        long scoreDifference66 = 0;\n  \
    \      long scoreDifference67 = 0;\n        long scoreDifference68 = 0;\n    \
    \    long scoreDifference69 = 0;\n        long scoreDifference70 = 0;\n      \
    \  long ", "        var result = new List<long>();\n        var scores = new List<long>();\n\
    \        var guesses = new List<long>();\n        foreach (var g in game) {\n\
    \            scores.Add(g);\n        }\n        foreach (var g in guess) {\n \
    \           guesses.Add(g);\n        }\n        var scoreCount = scores.Count;\n\
    \        var guesseCount = guesses.Count;\n        var scoreSum = scores.Sum();\n\
    \        var guesseSum = guesses.Sum();\n        var scoreDiff = scoreSum - guesseSum;\n\
    \        var guesseDiff = guesseSum - scoreSum;\n        var scoreDiffAbs = Math.Abs(scoreDiff);\n\
    \        var guesseDiffAbs = Math.Abs(guesseDiff);\n        var scoreDiffPercent\
    \ = scoreDiff / scoreSum;\n        var guesseDiffPercent = guesseDiff / guesseSum;\n\
    \        var scoreDiffPercentAbs = Math.Abs(scoreDiffPercent);\n        var guesseDiffPercentAbs\
    \ = Math.Abs(guesseDiffPercent);\n        var scoreDiffPercentPercent = scoreDiffPercent\
    \ / scoreCount;\n        var guesseDiffPercentPercent = guesseDiffPercent / guesseCount;\n\
    \        var scoreDiffPercentPercentAbs = Math.Abs(scoreDiffPercentPercent);\n\
    \        var guesseDiffPercentPercentAbs = Math.Abs(guesseDiffPercentPercent);\n\
    \        var scoreDiffPercentPercentPercent = scoreDiffPercent / scoreCount *\
    \ guesseDiffPercent / guesseCount;\n        var guesseDiffPercentPercent = guesseDiffPercent\
    \ / guesseCount * scoreDiffPercent / scoreCount;\n        var scoreDiffPercentPercentPercentAbs\
    \ = Math.Abs(scoreDiffPercentPercent);\n        var guesseDiffPercentPercentAbs\
    \ = Math.Abs(guesseDiffPercentPercent);\n        var scoreDiffPercentPercentPercent\
    \ = scoreDiffPercent / scoreCount * guesseDiffPercent / guesseCount * scoreDiffPercent\
    \ / scoreCount;\n        var guesseDiffPercentPercentPercent = guesseDiffPercent\
    \ / guesseCount * scoreDiffPercent / scoreCount * guesseDiffPercent / guesseCount;\n\
    \        var scoreDiffPercentPercentPercentAbs = Math.Abs(scoreDiffPercentPercent);\n\
    \        var guesseDiffPercentPercentAbs = Math.Abs(guesseDiffPercentPercent);\n\
    \        var scoreDiffPercentPercentPercent = scoreDiffPercent / scoreCount *\
    \ guesseDiffPercent / guesseCount * scoreDiffPercent / scoreCount * guesseDiffPer",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        foreach (var g in game) {\n            score = g;\n\
    \            foreach (var g in guess) {\n                diff = g - score;\n \
    \               if (diff < 0) {\n                    diff = -diff;\n         \
    \       }\n                result.Add(diff);\n            }\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        foreach\
    \ (var item in game) {\n            score = score * item + item;\n        }\n\
    \        foreach (var item in guess) {\n            guess = guess * item + item;\n\
    \        }\n        foreach (var item in game) {\n            difference = guess\
    \ - score;\n            result.Add(difference);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        foreach (var item in game) {\n            score +=\
    \ item;\n        }\n        foreach (var item in guess) {\n            guess +=\
    \ item;\n        }\n        if (guess == score) {\n            result.Add(0);\n\
    \        } else {\n            result.Add(Math.Abs(guess - score));\n        }\n\
    \        return result;", "        var result = new List<long>();\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));\n        game.ForEach(x\
    \ => result.Add(0));\n        guess.ForEach(x => result.Add(0));", "        List<long>\
    \ result = new List<long>();\n        long diff = 0;\n        foreach (var g in\
    \ game) {\n            diff = g - guess[game.IndexOf(g)];\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score = g;\n            foreach (long g in guess) {\n       \
    \         diff = g - score;\n                if (diff < 0) {\n               \
    \     diff = -diff;\n                }\n                if (diff == 0) {\n   \
    \                 result.Add(0);\n                } else {\n                 \
    \   result.Add(diff);\n                }\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long difference = 0;\n        foreach (long g in game) {\n   \
    \         score += g;\n        }\n        foreach (long g in guess) {\n      \
    \      difference += g - score;\n        }\n        result.Add(difference);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        foreach (long g in game) {\n            score = g;\n            foreach\
    \ (long g in guess) {\n                guess = g;\n                difference\
    \ = Math.Abs(guess - score);\n                result.Add(difference);\n      \
    \      }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long guessed = 0;\n        long\
    \ difference = 0;\n        foreach (long g in game) {\n            guessed = g;\n\
    \            foreach (long g in guess) {\n                difference = Math.Abs(g\
    \ - guessed);\n                if (difference == 0) {\n                    score\
    \ = 0;\n                    break;\n                }\n                else {\n\
    \                    score = difference;\n                    break;\n       \
    \         }\n            }\n            result.Add(score);\n        }\n      \
    \  return result;", "        var result = new List<long>();\n        game.ForEach(x\
    \ => result.Add(Math.Abs(x - guess[game.IndexOf(x)])));\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        foreach (var item in game) {\n            score =\
    \ score * item + item;\n        }\n        foreach (var item in guess) {\n   \
    \         guess = guess * item + item;\n        }\n        foreach (var item in\
    \ game) {\n            guess = guess * item + item;\n            if (guess ==\
    \ score) {\n                result.Add(0);\n            } else {\n           \
    \     result.Add(Math.Abs(guess - score));\n            }\n        }\n       \
    \ return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long difference = 0;\n        long maxScore = game.Max();\n\
    \        long minScore = game.Min();\n        long maxGuess = guess.Max();\n \
    \       long minGuess = guess.Min();\n        long maxDifference = maxScore -\
    \ minScore;\n        long minDifference = minScore - maxScore;\n        foreach\
    \ (long g in guess) {\n            if (g > maxGuess)\n                g = maxGuess;\n\
    \            if (g < minGuess)\n                g = minGuess;\n            score\
    \ += g;\n            difference = Math.Abs(g - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        result.Add(diff);\n      \
    \  return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long difference = 0;\n        long guess = 0;\n        long\
    \ game = 0;\n        foreach (var item in guess) {\n            guess = item;\n\
    \            game = game[game.Count - 1];\n            difference = Math.Abs(guess\
    \ - game);\n            result.Add(difference);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            guess += g;\n   \
    \     }\n        guess = Math.Abs(guess);\n        score = Math.Abs(score);\n\
    \        foreach (long g in guess) {\n            if (g == score) {\n        \
    \        result.Add(0);\n            } else {\n                result.Add(g -\
    \ score);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;", "        List<long> result\
    \ = new List<long>();\n        long diff = 0;\n        long score = 0;\n     \
    \   long maxScore = game.Max();\n        long minScore = game.Min();\n       \
    \ long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n       \
    \ bool gameOver = false;\n        bool gameOver2 = false;\n        bool gameOver3\
    \ = false;\n        bool gameOver4 = false;\n        bool gameOver5 = false;\n\
    \        bool gameOver6 = false;\n        bool gameOver7 = false;\n        bool\
    \ gameOver8 = false;\n        bool gameOver9 = false;\n        bool gameOver10\
    \ = false;\n        bool gameOver11 = false;\n        bool gameOver12 = false;\n\
    \        bool gameOver13 = false;\n        bool gameOver14 = false;\n        bool\
    \ gameOver15 = false;\n        bool gameOver16 = false;\n        bool gameOver17\
    \ = false;\n        bool gameOver18 = false;\n        bool gameOver19 = false;\n\
    \        bool gameOver20 = false;\n        bool gameOver21 = false;\n        bool\
    \ gameOver22 = false;\n        bool gameOver23 = false;\n        bool gameOver24\
    \ = false;\n        bool gameOver25 = false;\n        bool gameOver26 = false;\n\
    \        bool gameOver27 = false;\n        bool gameOver28 = false;\n        bool\
    \ gameOver29 = false;\n        bool gameOver30 = false;\n        bool gameOver31\
    \ = false;\n        bool gameOver32 = false;\n        bool gameOver33 = false;\n\
    \        bool gameOver34 = false;\n        bool gameOver35 = false;\n        bool\
    \ gameOver36 = false;\n        bool gameOver37 = false;\n        bool gameOver38\
    \ = false;\n        bool gameOver39 = false;\n        bool gameOver40 = false;\n\
    \        bool gameOver41 = false;\n        bool gameOver42 = false;\n        bool\
    \ gameOver43 = false;\n        bool gameOver44 = false;\n        bool gameOver45\
    \ = false;\n        bool gameOver46 = false;\n        bool gameOver47 = false;\n\
    \        bool gameOver48 = false;\n        bool gameOver49 = false;\n        bool\
    \ gameOver50 = false;\n        bool gameOver51 = false;\n        bool gameOver52\
    \ = false;\n        bool gameOver53 = false;\n        bool gameOver54 = false;\n\
    \        bool gameOver55 = false;\n        bool gameOver56 = false;\n        bool\
    \ gameOver57 = false;\n        bool gameOver58 = false;\n        bool gameOver59\
    \ = false;\n        bool gameOver60 = false;\n        bool gameOver61 = false;\n\
    \        bool gameOver62 = false;\n        bool gameOver63 = false;", "      \
    \  List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (long g in game) {\n            score += g;\n   \
    \     }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        result.AddRange(game.Zip(guess, (a, b) => a - b));\n     \
    \   result.AddRange(game.Zip(guess, (a, b) => a - b).Where(x => x < 0));\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  long score = 0;\n        long guess = 0;\n        long difference = 0;\n  \
    \      foreach (var item in game) {\n            score = item;\n            foreach\
    \ (var item2 in guess) {\n                guess = item2;\n                difference\
    \ = Math.Abs(guess - score);\n                result.Add(difference);\n      \
    \      }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long guess = 0;\n        foreach\
    \ (var item in game) {\n            score += item;\n        }\n        foreach\
    \ (var item in guess) {\n            guess += item;\n        }\n        guess\
    \ = Math.Abs(guess);\n        score = Math.Abs(score);\n        foreach (var item\
    \ in game) {\n            if (item == 0) {\n                result.Add(0);\n \
    \           }\n            else {\n                result.Add(Math.Abs(item -\
    \ guess));\n            }\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        game.ForEach(x => result.Add(Math.Abs(x - guess.FirstOrDefault(y\
    \ => y == x))).ToList());\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long total = 0;\n        long diff = 0;\n     \
    \   long score = 0;\n        foreach (long g in game) {\n            total +=\
    \ g;\n        }\n        foreach (long g in guess) {\n            score += g;\n\
    \        }\n        diff = score - total;\n        if (diff > 0) {\n         \
    \   result.Add(diff);\n        }\n        if (diff < 0) {\n            result.Add(-diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        foreach (long g in\
    \ game) {\n            score = g;\n            foreach (long g in guess) {\n \
    \               guess = g;\n                long difference = score - guess;\n\
    \                if (difference < 0) {\n                    difference = -difference;\n\
    \                }\n                result.Add(difference);\n            }\n \
    \       }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        bool correct =\
    \ false;\n        foreach (long g in game) {\n            foreach (long g in guess)\
    \ {\n                if (g == g) {\n                    score++;\n           \
    \     }\n                else {\n                    difference = Math.Abs(g -\
    \ score);\n                }\n            }\n            if (correct) {\n    \
    \            result.Add(0);\n            }\n            else {\n             \
    \   result.Add(difference);\n            }\n            correct = false;\n   \
    \     }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        result.Add(diff);\n      \
    \  return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        foreach\
    \ (var item in game) {\n            score += item;\n        }\n        foreach\
    \ (var item in guess) {\n            guess += item;\n        }\n        diff =\
    \ score - guess;\n        if (diff < 0) {\n            diff = -diff;\n       \
    \ }\n        result.Add(diff);\n        return result;", "        var result =\
    \ new List<long>();\n        var gameLength = game.Count;\n        var guessLength\
    \ = guess.Count;\n        if (gameLength != guessLength) {\n            throw\
    \ new ArgumentException(\"The two lists must have the same length\");\n      \
    \  }\n        \n        // The game and guess lists are the same length, so the\
    \ loop below will run exactly once.\n        // The loop below will run exactly\
    \ once.\n        for (int i = 0; i < gameLength; i++) {\n            var gameScore\
    \ = game[i];\n            var guessScore = guess[i];\n            if (gameScore\
    \ == guessScore) {\n                result.Add(0);\n            } else {\n   \
    \             result.Add(Math.Abs(gameScore - guessScore));\n            }\n \
    \       }\n        return result;", "        var result = new List<long>();\n\
    \        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score += g;\n            foreach (long g in guess) {\n                diff\
    \ += Math.Abs(g - g);\n            }\n            result.Add(diff);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        result.Add(diff);\n      \
    \  return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n   \
    \         score += g;\n        }\n        foreach (long g in guess) {\n      \
    \      diff += Math.Abs(g - score);\n        }\n        result.AddRange(guess.Select(g\
    \ => Math.Abs(g - score)));\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   long maxScore = game.Max();\n        long minScore = game.Min();\n       \
    \ long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n       \
    \ long maxDiff = maxScore - minScore;\n        long minDiff = maxGuess - minGuess;\n\
    \        bool gameOver = false;\n        bool gameOver2 = false;\n        bool\
    \ gameOver3 = false;\n        bool gameOver4 = false;\n        bool gameOver5\
    \ = false;\n        bool gameOver6 = false;\n        bool gameOver7 = false;\n\
    \        bool gameOver8 = false;\n        bool gameOver9 = false;\n        bool\
    \ gameOver10 = false;\n        bool gameOver11 = false;\n        bool gameOver12\
    \ = false;\n        bool gameOver13 = false;\n        bool gameOver14 = false;\n\
    \        bool gameOver15 = false;\n        bool gameOver16 = false;\n        bool\
    \ gameOver17 = false;\n        bool gameOver18 = false;\n        bool gameOver19\
    \ = false;\n        bool gameOver20 = false;\n        bool gameOver21 = false;\n\
    \        bool gameOver22 = false;\n        bool gameOver23 = false;\n        bool\
    \ gameOver24 = false;\n        bool gameOver25 = false;\n        bool gameOver26\
    \ = false;\n        bool gameOver27 = false;\n        bool gameOver28 = false;\n\
    \        bool gameOver29 = false;\n        bool gameOver30 = false;\n        bool\
    \ gameOver31 = false;\n        bool gameOver32 = false;\n        bool gameOver33\
    \ = false;\n        bool gameOver34 = false;\n        bool gameOver35 = false;\n\
    \        bool gameOver36 = false;\n        bool gameOver37 = false;\n        bool\
    \ gameOver38 = false;\n        bool gameOver39 = false;\n        bool gameOver40\
    \ = false;\n        bool gameOver41 = false;\n        bool gameOver42 = false;\n\
    \        bool gameOver43 = false;\n        bool gameOver44 = false;\n        bool\
    \ gameOver45 = false;\n        bool gameOver46 = false;\n        bool gameOver47\
    \ = false;\n        bool gameOver48 = false;\n        bool gameOver49 = false;\n\
    \        bool gameOver50 = false;\n        bool gameOver51 = false;\n        bool\
    \ gameOver52 = false;\n        bool gameOver53 = false;\n        bool gameOver54\
    \ = false;\n        bool gameOver55 = false;\n        bool gameOver56 = false;\n\
    \        bool gameOver57 = false;\n        bool gameOver58 = false;\n        bool\
    \ gameOver59 = false;\n        bool gameOver", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long diff = 0;\n        foreach\
    \ (long g in game) {\n            score += g;\n        }\n        foreach (long\
    \ g in guess) {\n            diff += g - score;\n        }\n        result.AddRange(guess.Select(g\
    \ => g - score).Where(g => g != 0).Select(g => Math.Abs(g)));\n        return\
    \ result;", "        var result = new List<long>();\n        game.ForEach(x =>\
    \ result.Add(Math.Abs(x - guess.FirstOrDefault(y => y == x))));\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (var item in game) {\n       \
    \     score = score+item;\n        }\n        foreach (var item in guess) {\n\
    \            diff = diff-Math.Abs(item);\n        }\n        foreach (var item\
    \ in guess) {\n            if (item == 0) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(diff);\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score = g;\n            foreach (long g in guess) {\n       \
    \         diff = g - score;\n                if (diff < 0) {\n               \
    \     diff = -diff;\n                }\n                if (diff == 0) {\n   \
    \                 result.Add(0);\n                } else {\n                 \
    \   result.Add(diff);\n                }\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long difference = 0;\n        bool isCorrect\
    \ = false;\n        foreach (var item in game) {\n            score = score *\
    \ 10;\n            guess = guess * 10;\n            difference = score - item;\n\
    \            if (guess == item) {\n                isCorrect = true;\n       \
    \     }\n            if (isCorrect) {\n                result.Add(0);\n      \
    \      } else {\n                result.Add(difference);\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        long diff2 = 0;\n  \
    \      long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n   \
    \     long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n    \
    \    long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n   \
    \     long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n \
    \       long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \        long diff84", "        List<long> result = new List<long>();\n      \
    \  long score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n            foreach (long g in guess) {\n          \
    \      diff = g - score;\n                if (diff < 0) {\n                  \
    \  diff = -diff;\n                }\n                if (diff == 0) {\n      \
    \              result.Add(0);\n                } else {\n                    result.Add(diff);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (long g in game) {\n            score += g;\n   \
    \     }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        result.Add(diff);\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score = g;\n            foreach\
    \ (long g in guess) {\n                diff = g - score;\n                if (diff\
    \ < 0) {\n                    diff = -diff;\n                }\n             \
    \   if (diff == 0) {\n                    result.Add(0);\n                }\n\
    \                else {\n                    result.Add(diff);\n             \
    \   }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            score\
    \ = g;\n            foreach (long g in guess) {\n                guess = g;\n\
    \                diff = g - score;\n                if (diff < 0) {\n        \
    \            diff = -diff;\n                }\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var gameLength = game.Count;\n        var guessLength\
    \ = guess.Count;\n        if (gameLength != guessLength) {\n            throw\
    \ new ArgumentException(\"The two lists must have the same length\");\n      \
    \  }\n        var gameScores = new int[gameLength];\n        var guessScores =\
    \ new int[guessLength];\n        var gameIndex = 0;\n        var guessIndex =\
    \ 0;\n        while (gameIndex < gameLength && guessIndex < guessLength) {\n \
    \           gameScores[gameIndex] = game[gameIndex];\n            guessScores[guessIndex]\
    \ = guess[guessIndex];\n            gameIndex++;\n            guessIndex++;\n\
    \        }\n        while (gameIndex < gameLength) {\n            gameScores[gameIndex]\
    \ = 0;\n            gameIndex++;\n        }\n        while (guessIndex < guessLength)\
    \ {\n            guessScores[guessIndex] = 0;\n            guessIndex++;\n   \
    \     }\n        while (gameIndex < gameLength && guessIndex < guessLength) {\n\
    \            if (gameScores[gameIndex] == guessScores[guessIndex]) {\n       \
    \         gameScores[gameIndex] = 0;\n                guessScores[guessIndex]\
    \ = 0;\n                gameIndex++;\n                guessIndex++;\n        \
    \    } else if (gameScores[gameIndex] > guessScores[guessIndex]) {\n         \
    \       gameScores[gameIndex] -= guessScores[guessIndex];\n                gameIndex++;\n\
    \            } else {\n                guessScores[guessIndex] -= gameScores[gameIndex];\n\
    \                guessIndex++;\n            }\n        }\n        while (gameIndex\
    \ < gameLength) {\n            result.Add(gameScores[gameIndex]);\n          \
    \  gameIndex++;\n        }\n        while (guessIndex < guessLength) {\n     \
    \       result.Add(guessScores[guessIndex]);\n            guessIndex++;\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     var gameLength = game.Count;\n        var guessLength = guess.Count;\n \
    \       if (gameLength != guessLength) {\n            throw new ArgumentException(\"\
    The two lists must have the same length\");\n        }\n        var gameScores\
    \ = new int[gameLength];\n        var guessScores = new int[guessLength];\n  \
    \      var gameGuesses = new int[gameLength];\n        var guessGuesses = new\
    \ int[guessLength];\n        var gameScore = 0;\n        var guessScore = 0;\n\
    \        var gameGuess = 0;\n        var guessGuess = 0;\n        var gameScoreDiff\
    \ = 0;\n        var guessScoreDiff = 0;\n        var gameGuessDiff = 0;\n    \
    \    var gameScoreDiffs = new List<long>();\n        var guessScoreDiffs = new\
    \ List<long>();\n        var gameGuessDiffs = new List<long>();\n        var gameScoreDiffsSum\
    \ = 0;\n        var guessScoreDiffsSum = 0;\n        var gameGuessDiffsSum = 0;\n\
    \        var gameScoreDiffsSums = new List<long>();\n        var guessScoreDiffsSums\
    \ = new List<long>();\n        var gameGuessDiffsSums = new List<long>();\n  \
    \      var gameScoreDiffsSum = 0;\n        var guessScoreDiffsSum = 0;\n     \
    \   var gameGuessDiffsSum = 0;\n        var gameScoreDiffsSums = new List<long>();\n\
    \        var guessScoreDiffsSums = new List<long>();\n        var gameGuessDiffsSums\
    \ = new List<long>();\n        var gameScoreDiffsSum = 0;\n        var guessScoreDiffsSum\
    \ = 0;\n        var gameGuessDiffsSum = 0;\n        var gameScoreDiffsSums = new\
    \ List<long>();\n        var guessScoreDiffsSums = new List<long>();\n       \
    \ var gameGuessDiffsSums = new List<long>();\n        var gameScoreDiffsSum =\
    \ 0;\n        var guessScoreDiffsSum = 0;\n        var gameGuessDiffsSum = 0;\n\
    \        var gameScoreDiffsSums = new List<long>();\n        var guessScoreDiffsSums\
    \ = new List<long>();\n        var gameGuessDiffsSums = new List<long>();\n  \
    \      var gameScoreDiffsSum = 0;\n        var guessScoreDiffsSum = 0;\n     \
    \   var gameGuessDiffsSum = 0;\n        var gameScoreDiffsSums = new List<long>();\n\
    \        var guessScoreDiffsSums = new List<long>();\n        var gameGuessDiffsSums\
    \ = new List<long>();\n        var gameScoreDiffsSum = 0;\n        var guessScoreDiffsSum\
    \ = 0;\n        var gameGuessDiffsSum = 0;\n        var gameScoreDiffsSums = new\
    \ List<long>();\n        var guessScoreDiffsSums = new List<long>();\n       \
    \ var gameGuessDiffsSums = new List<long>();\n", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long diff = 0;\n       \
    \ long scoreDiff = 0;\n        long scoreDiff2 = 0;\n        long scoreDiff3 =\
    \ 0;\n        long scoreDiff4 = 0;\n        long scoreDiff5 = 0;\n        long\
    \ scoreDiff6 = 0;\n        long scoreDiff7 = 0;\n        long scoreDiff8 = 0;\n\
    \        long scoreDiff9 = 0;\n        long scoreDiff10 = 0;\n        long scoreDiff11\
    \ = 0;\n        long scoreDiff12 = 0;\n        long scoreDiff13 = 0;\n       \
    \ long scoreDiff14 = 0;\n        long scoreDiff15 = 0;\n        long scoreDiff16\
    \ = 0;\n        long scoreDiff17 = 0;\n        long scoreDiff18 = 0;\n       \
    \ long scoreDiff19 = 0;\n        long scoreDiff20 = 0;\n        long scoreDiff21\
    \ = 0;\n        long scoreDiff22 = 0;\n        long scoreDiff23 = 0;\n       \
    \ long scoreDiff24 = 0;\n        long scoreDiff25 = 0;\n        long scoreDiff26\
    \ = 0;\n        long scoreDiff27 = 0;\n        long scoreDiff28 = 0;\n       \
    \ long scoreDiff29 = 0;\n        long scoreDiff30 = 0;\n        long scoreDiff31\
    \ = 0;\n        long scoreDiff32 = 0;\n        long scoreDiff33 = 0;\n       \
    \ long scoreDiff34 = 0;\n        long scoreDiff35 = 0;\n        long scoreDiff36\
    \ = 0;\n        long scoreDiff37 = 0;\n        long scoreDiff38 = 0;\n       \
    \ long scoreDiff39 = 0;\n        long scoreDiff40 = 0;\n        long scoreDiff41\
    \ = 0;\n        long scoreDiff42 = 0;\n        long scoreDiff43 = 0;\n       \
    \ long scoreDiff44 = 0;\n        long scoreDiff45 = 0;\n        long scoreDiff46\
    \ = 0;\n        long scoreDiff47 = 0;\n        long scoreDiff48 = 0;\n       \
    \ long scoreDiff49 = 0;\n        long scoreDiff50 = 0;\n        long scoreDiff51\
    \ = 0;\n        long scoreDiff52 = 0;\n        long scoreDiff53 = 0;\n       \
    \ long scoreDiff54 = 0;\n        long scoreDiff55 = 0;\n        long scoreDiff56\
    \ = 0;\n        long scoreDiff57 = 0;\n        long scoreDiff58 = 0;\n       \
    \ long scoreDiff59 = 0;\n        long scoreDiff60 = 0;\n        long scoreDiff61\
    \ = 0;\n        long scoreDiff62 = 0;\n        long scoreDiff63 = 0;\n       \
    \ long scoreDiff64 = 0;\n        long scoreDiff65 = 0;\n        long scoreDiff66\
    \ = 0;\n        long scoreDiff67 = 0;\n        long scoreDiff68 = 0;\n       \
    \ long scoreDiff69 = 0;\n        long scoreDiff70 = 0;\n        long scoreDiff71\
    \ = 0;\n", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long difference = 0;\n        foreach\
    \ (var item in game) {\n            score = score * 10;\n            guess = guess\
    \ * 10;\n            difference = score - guess;\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n   \
    \     long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n    \
    \    long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n    \
    \    long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n  \
    \      long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;", "        List<long> result = new List<long>();\n \
    \       long diff = 0;\n        foreach (long g in game) {\n            foreach\
    \ (long g in guess) {\n                diff = Math.Abs(g - g);\n             \
    \   if (g == g) {\n                    result.Add(0);\n                }\n   \
    \             else {\n                    result.Add(diff);\n                }\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   long maxScore = game.Max();\n        long minScore = game.Min();\n       \
    \ long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n       \
    \ foreach (long g in guess) {\n            score += g;\n        }\n        foreach\
    \ (long g in game) {\n            diff += Math.Abs(g - score);\n        }\n  \
    \      foreach (long g in guess) {\n            diff -= Math.Abs(g - score);\n\
    \        }\n        foreach (long g in game) {\n            score -= g;\n    \
    \    }\n        foreach (long g in guess) {\n            score += g;\n       \
    \ }\n        foreach (long g in game) {\n            score += g;\n        }\n\
    \        foreach (long g in guess) {\n            score -= g;\n        }\n   \
    \     foreach (long g in game) {\n            score += g;\n        }\n       \
    \ foreach (long g in guess) {\n            score -= g;\n        }\n        foreach\
    \ (long g in game) {\n            score += g;\n        }\n        foreach (long\
    \ g in guess) {\n            score -= g;\n        }\n        foreach (long g in\
    \ game) {\n            score += g;\n        }\n        foreach (long g in guess)\
    \ {\n            score -= g;\n        }\n        foreach (long g in game) {\n\
    \            score += g;\n        }\n        foreach (long g in guess) {\n   \
    \         score -= g;\n        }\n        foreach (long g in game) {\n       \
    \     score += g;\n        }\n        foreach (long g in guess) {\n          \
    \  score -= g;\n        }\n        foreach (long g in game) {\n            score\
    \ += g;\n        }\n        foreach (long g in guess) {\n            score -=\
    \ g;\n        }\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            score -= g;\n   \
    \     }\n        foreach (long g in game) {\n            score += g;\n       \
    \ }\n        foreach (long g in guess) {\n            score -= g;\n        }\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            score -= g;\n        }\n       \
    \ foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            score -= g;\n        }\n        foreach (long\
    \ g in game) {\n            score += g;\n        }\n        foreach (long g in\
    \ guess) {\n            score -= g;\n        }\n        foreach (long g in game)\
    \ {\n", "        List<long> result = new List<long>();\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n        }\n        foreach (long g in guess) {\n            diff += g\
    \ - score;\n        }\n        result.AddRange(game.Zip(guess, (a, b) => a - b).ToList());\n\
    \        result.AddRange(game.Zip(guess, (a, b) => a - b).ToList());\n       \
    \ return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long difference = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n        }\n        foreach (long g in guess) {\n   \
    \         difference += g - score;\n        }\n        result.Add(difference);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score = g;\n            foreach (long\
    \ g in guess) {\n                guess = g;\n                diff = guess - score;\n\
    \                if (diff < 0) {\n                    result.Add(diff);\n    \
    \            }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        foreach (var item in game) {\n            score = score * item + item;\n\
    \        }\n        foreach (var item in guess) {\n            guess = guess *\
    \ item + item;\n        }\n        if (guess == score) {\n            result.Add(0);\n\
    \        } else {\n            result.Add(Math.Abs(guess - score));\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long diff = 0;\n     \
    \   foreach (long i in game) {\n            score = i;\n            foreach (long\
    \ j in guess) {\n                guess = j;\n                diff = guess - score;\n\
    \                if (diff < 0) {\n                    diff = -diff;\n        \
    \        }\n                result.Add(diff);\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ long score = 0;\n        long difference = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            difference += g - score;\n        }\n        result.Add(difference);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long total = 0;\n        long total2 = 0;\n        long total3 = 0;\n  \
    \      long total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n\
    \        long total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n\
    \        long total10 = 0;\n        long total11 = 0;\n        long total12 =\
    \ 0;\n        long total13 = 0;\n        long total14 = 0;\n        long total15\
    \ = 0;\n        long total16 = 0;\n        long total17 = 0;\n        long total18\
    \ = 0;\n        long total19 = 0;\n        long total20 = 0;\n        long total21\
    \ = 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n        long total83 = 0;\n        long total84\
    \ = 0;\n        long total", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        foreach (var item in game) {\n         \
    \   score = item;\n            guess = guess[game.IndexOf(item)]; // guess = guess[game.IndexOf(item)];\
    \ \n            diff = guess - score;\n            if (diff < 0) {\n         \
    \       diff = -diff;\n            }\n            result.Add(diff);\n        \
    \    if (diff == 0) {\n                correct = true;\n            }\n      \
    \  }\n        if (!correct) {\n            foreach (var item in guess) {\n   \
    \             score = item;\n                guess = guess[game.IndexOf(item)];\
    \ // guess = guess[game.IndexOf(item)]; \n                diff = guess - score;\n\
    \                if (diff < 0) {\n                    diff = -diff;\n        \
    \        }\n                result.Add(diff);\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ long score = 0;\n        long guessed = 0;\n        long diff = 0;\n       \
    \ bool correct = false;\n        foreach (long g in game) {\n            guessed\
    \ = g;\n            diff = guess - score;\n            if (diff < 0) {\n     \
    \           diff = -diff;\n            }\n            if (diff == 0) {\n     \
    \           correct = true;\n            }\n            result.Add(diff);\n  \
    \      }\n        if (!correct) {\n            foreach (long g in guess) {\n \
    \               guessed = g;\n                diff = guess - score;\n        \
    \        if (diff < 0) {\n                    diff = -diff;\n                }\n\
    \                if (diff == 0) {\n                    correct = true;\n     \
    \           }\n                result.Add(diff);\n            }\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long score = 0;\n        long diff = 0;\n        long guessed = 0;\n    \
    \    long total = 0;\n        foreach (long g in game) {\n            total +=\
    \ g;\n        }\n        foreach (long g in guess) {\n            guessed += g;\n\
    \        }\n        foreach (long g in guess) {\n            diff = g - score;\n\
    \            if (diff < 0) {\n                diff = -diff;\n            }\n \
    \           result.Add(diff);\n        }\n        if (total != guessed) {\n  \
    \          result.Add(0);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g - score;\n        }\n\
    \        result.Add(diff);\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            diff += g - score;\n        }\n        result.Add(diff);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long diff = 0;\n     \
    \   foreach (var item in game) {\n            score = score * 10 + item;\n   \
    \     }\n        foreach (var item in guess) {\n            guess = guess * 10\
    \ + item;\n        }\n        foreach (var item in game) {\n            diff =\
    \ diff + Math.Abs(guess - item);\n        }\n        result.Add(diff);\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long difference = 0;\n        foreach (long guess in guess)\
    \ {\n            score += game[guess.ToInt()];\n        }\n        foreach (long\
    \ guess in guess) {\n            difference = Math.Abs(guess - score);\n     \
    \       result.Add(difference);\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guessed = 0;\n        long diff = 0;\n        foreach (long g in game) {\n \
    \           score += g;\n        }\n        foreach (long g in guess) {\n    \
    \        guessed += g;\n        }\n        diff = score - guessed;\n        if\
    \ (diff < 0) {\n            diff = -diff;\n        }\n        result.Add(diff);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            score += g;\n            foreach\
    \ (long g in guess) {\n                difference = Math.Abs(g - score);\n   \
    \             if (difference == 0) {\n                    correct = true;\n  \
    \                  break;\n                }\n            }\n            if (correct)\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(difference);\n\
    \            }\n            correct = false;\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            diff += g;\n    \
    \    }\n        if (diff == score) {\n            result.Add(0);\n        } else\
    \ {\n            result.Add(Math.Abs(score - diff));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long difference = 0;\n        long scoreDifference\
    \ = 0;\n        long scoreDifference2 = 0;\n        long scoreDifference3 = 0;\n\
    \        long scoreDifference4 = 0;\n        long scoreDifference5 = 0;\n    \
    \    long scoreDifference6 = 0;\n        long scoreDifference7 = 0;\n        long\
    \ scoreDifference8 = 0;\n        long scoreDifference9 = 0;\n        long scoreDifference10\
    \ = 0;\n        long scoreDifference11 = 0;\n        long scoreDifference12 =\
    \ 0;\n        long scoreDifference13 = 0;\n        long scoreDifference14 = 0;\n\
    \        long scoreDifference15 = 0;\n        long scoreDifference16 = 0;\n  \
    \      long scoreDifference17 = 0;\n        long scoreDifference18 = 0;\n    \
    \    long scoreDifference19 = 0;\n        long scoreDifference20 = 0;\n      \
    \  long scoreDifference21 = 0;\n        long scoreDifference22 = 0;\n        long\
    \ scoreDifference23 = 0;\n        long scoreDifference24 = 0;\n        long scoreDifference25\
    \ = 0;\n        long scoreDifference26 = 0;\n        long scoreDifference27 =\
    \ 0;\n        long scoreDifference28 = 0;\n        long scoreDifference29 = 0;\n\
    \        long scoreDifference30 = 0;\n        long scoreDifference31 = 0;\n  \
    \      long scoreDifference32 = 0;\n        long scoreDifference33 = 0;\n    \
    \    long scoreDifference34 = 0;\n        long scoreDifference35 = 0;\n      \
    \  long scoreDifference36 = 0;\n        long scoreDifference37 = 0;\n        long\
    \ scoreDifference38 = 0;\n        long scoreDifference39 = 0;\n        long scoreDifference40\
    \ = 0;\n        long scoreDifference41 = 0;\n        long scoreDifference42 =\
    \ 0;\n        long scoreDifference43 = 0;\n        long scoreDifference44 = 0;\n\
    \        long scoreDifference45 = 0;\n        long scoreDifference46 = 0;\n  \
    \      long scoreDifference47 = 0;\n        long scoreDifference48 = 0;\n    \
    \    long scoreDifference49 = 0;\n        long scoreDifference50 = 0;\n      \
    \  long scoreDifference51 = 0;\n        long scoreDifference52 = 0;\n        long\
    \ scoreDifference53 = 0;\n        long scoreDifference54 = 0;\n        long scoreDifference55\
    \ = 0;\n        long scoreDifference56 = 0;\n        long scoreDifference57 =\
    \ 0;\n        long scoreDifference58 = 0;\n        long scoreDifference59 = 0;\n\
    \        long scoreDifference60 = 0;\n        long scoreDifference61 = 0;\n  \
    \      long scoreDifference62 = 0;\n        long scoreDifference63 = 0;\n    \
    \    long scoreDifference64 = 0;\n        long scoreDifference65 = 0;\n      \
    \  long scoreDifference66 = 0;\n        long scoreDifference67 = 0;\n        long\
    \ scoreDifference68 = 0;\n        long scoreDifference69 = 0;\n        long scoreDifference70\
    \ = 0;\n        long ", "        List<long> result = new List<long>();\n     \
    \   long score = 0;\n        long guess = 0;\n        long diff = 0;\n       \
    \ foreach (var item in game) {\n            score = score * item + item;\n   \
    \     }\n        foreach (var item in guess) {\n            guess = guess * item\
    \ + item;\n        }\n        diff = score - guess;\n        if (diff < 0) {\n\
    \            diff = -diff;\n        }\n        result.Add(diff);\n        return\
    \ result;", "        var result = new List<long>();\n        var gameLength =\
    \ game.Count;\n        var guessLength = guess.Count;\n        if (gameLength\
    \ != guessLength) {\n            throw new ArgumentException(\"The two lists must\
    \ have the same length\");\n        }\n        \n        // We will store the\
    \ results of our comparisons here.\n        // The first index will hold the number\
    \ of matches.\n        // The second index will hold the difference between the\
    \ guess and the score.\n        // The third index will hold the absolute difference\
    \ between the guess and the score.\n        var matches = new int[gameLength,\
    \ 3];\n        \n        // We will store the guesses that we haven't yet compared.\n\
    \        // The first index will hold the number of matches.\n        // The second\
    \ index will hold the difference between the guess and the score.\n        //\
    \ The third index will hold the absolute difference between the guess and the\
    \ score.\n        var unmatched = new int[guessLength, 3];\n        \n       \
    \ // We will store the guesses that we haven't yet compared.\n        // The first\
    \ index will hold the number of matches.\n        // The second index will hold\
    \ the difference between the guess and the score.\n        // The third index\
    \ will hold the absolute difference between the guess and the score.\n       \
    \ var unmatched2 = new int[guessLength, 3];\n        \n        // We will store\
    \ the guesses that we haven't yet compared.\n        // The first index will hold\
    \ the number of matches.\n        // The second index will hold the difference\
    \ between the guess and the score.\n        // The third index will hold the absolute\
    \ difference between the guess and the score.\n        var unmatched3 = new int[guessLength,\
    \ 3];\n        \n        // We will store the guesses that we haven't yet compared.\n\
    \        // The first index will hold the number of matches.\n        // The second\
    \ index will hold the difference between the guess and the score.\n        //\
    \ The third index will hold the absolute difference between the guess and the\
    \ score.\n        var unmatched4 = new int[guessLength, 3];\n        \n      \
    \  // We will store the guesses that we haven't yet compared.\n        // The\
    \ first index will hold the number of matches.\n        // The second index will\
    \ hold the difference between the guess and the score.\n        // The third index\
    \ will hold the absolute difference between the guess and the score.\n       \
    \ var unmatched5 = new int[guessLength, 3];\n        \n        // We will store\
    \ the guesses that we haven't yet compared.\n        // The first index will hold\
    \ the number of matches.\n        // The second index will hold the difference\
    \ between the guess and the score.\n        // The third index will hold the absolute\
    \ difference between the guess and the score.\n        var unmatched6 = new int[guessLength,\
    \ 3];\n        \n        // We will store the guesses that we ", "        var\
    \ result = new List<long>();\n        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long diff = 0;\n        long score = 0;\n        long score2 = 0;\n    \
    \    long score3 = 0;\n        long score4 = 0;\n        long score5 = 0;\n  \
    \      long score6 = 0;\n        long score7 = 0;\n        long score8 = 0;\n\
    \        long score9 = 0;\n        long score10 = 0;\n        long score11 = 0;\n\
    \        long score12 = 0;\n        long score13 = 0;\n        long score14 =\
    \ 0;\n        long score15 = 0;\n        long score16 = 0;\n        long score17\
    \ = 0;\n        long score18 = 0;\n        long score19 = 0;\n        long score20\
    \ = 0;\n        long score21 = 0;\n        long score22 = 0;\n        long score23\
    \ = 0;\n        long score24 = 0;\n        long score25 = 0;\n        long score26\
    \ = 0;\n        long score27 = 0;\n        long score28 = 0;\n        long score29\
    \ = 0;\n        long score30 = 0;\n        long score31 = 0;\n        long score32\
    \ = 0;\n        long score33 = 0;\n        long score34 = 0;\n        long score35\
    \ = 0;\n        long score36 = 0;\n        long score37 = 0;\n        long score38\
    \ = 0;\n        long score39 = 0;\n        long score40 = 0;\n        long score41\
    \ = 0;\n        long score42 = 0;\n        long score43 = 0;\n        long score44\
    \ = 0;\n        long score45 = 0;\n        long score46 = 0;\n        long score47\
    \ = 0;\n        long score48 = 0;\n        long score49 = 0;\n        long score50\
    \ = 0;\n        long score51 = 0;\n        long score52 = 0;\n        long score53\
    \ = 0;\n        long score54 = 0;\n        long score55 = 0;\n        long score56\
    \ = 0;\n        long score57 = 0;\n        long score58 = 0;\n        long score59\
    \ = 0;\n        long score60 = 0;\n        long score61 = 0;\n        long score62\
    \ = 0;\n        long score63 = 0;\n        long score64 = 0;\n        long score65\
    \ = 0;\n        long score66 = 0;\n        long score67 = 0;\n        long score68\
    \ = 0;\n        long score69 = 0;\n        long score70 = 0;\n        long score71\
    \ = 0;\n        long score72 = 0;\n        long score73 = 0;\n        long score74\
    \ = 0;\n        long score75 = 0;\n        long score76 = 0;\n        long score77\
    \ = 0;\n        long score78 = 0;\n        long score79 = 0;\n        long score80\
    \ = 0;\n        long score81 = 0;\n        long score82 = 0;\n        long score83\
    \ = 0;\n        long score84", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        foreach (var item in game) {\n         \
    \   score = score * 10 + item;\n        }\n        foreach (var item in guess)\
    \ {\n            guess = guess * 10 + item;\n        }\n        diff = guess -\
    \ score;\n        if (diff < 0) {\n            diff = -diff;\n        }\n    \
    \    if (diff == 0) {\n            result.Add(0);\n            correct = true;\n\
    \        }\n        else {\n            result.Add(diff);\n            correct\
    \ = false;\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var gameLength = game.Count;\n        var guessLength = guess.Count;\n\
    \        if (gameLength != guessLength) {\n            throw new ArgumentException(\"\
    The two lists must have the same length\");\n        }\n        var gameScores\
    \ = new int[gameLength];\n        var guessScores = new int[guessLength];\n  \
    \      for (int i = 0; i < gameLength; i++) {\n            gameScores[i] = game[i];\n\
    \            guessScores[i] = guess[i];\n        }\n        for (int i = 0; i\
    \ < guessLength; i++) {\n            var gameScore = gameScores[i];\n        \
    \    var guessScore = guessScores[i];\n            if (gameScore == guessScore)\
    \ {\n                result.Add(0);\n            } else {\n                result.Add(Math.Abs(gameScore\
    \ - guessScore));\n            }\n        }\n        return result;", "      \
    \  var result = new List<long>();\n        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            difference += g;\n        }\n  \
    \      if (difference == score) {\n            correct = true;\n        }\n  \
    \      if (correct) {\n            result.Add(0);\n        } else {\n        \
    \    result.Add(difference);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (long g in game) {\n            score = g;\n         \
    \   foreach (long g in guess) {\n                difference = Math.Abs(g - score);\n\
    \                if (difference == 0) {\n                    result.Add(0);\n\
    \                } else {\n                    result.Add(difference);\n     \
    \           }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (var g in game) {\n            score += g;\n        }\n     \
    \   foreach (var g in guess) {\n            diff += g - score;\n        }\n  \
    \      result.AddRange(game.Zip(guess, (a, b) => a - b).Where(x => x != 0).Select(x\
    \ => Math.Abs(x)));\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long diff = 0;\n        long\
    \ maxScore = game.Max();\n        long minScore = game.Min();\n        long maxGuess\
    \ = guess.Max();\n        long minGuess = guess.Min();\n        long maxDiff =\
    \ maxScore - minScore;\n        long minDiff = minScore - maxScore;\n        long\
    \ maxGuess = guess.Max();\n        long minGuess = guess.Min();\n        long\
    \ maxDiff = maxScore - minScore;\n        long minDiff = minScore - maxScore;\n\
    \        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n\
    \        long maxDiff = maxScore - minScore;\n        long minDiff = minScore\
    \ - maxScore;\n        long maxGuess = guess.Max();\n        long min", "    \
    \    List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (long g in game) {\n            score += g;\n   \
    \     }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        result.Add(diff);\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long max = 0;\n\
    \        long min = 0;\n        long sum = 0;\n        long count = 0;\n     \
    \   long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79 =\
    \ 0;", "        List<long> result = new List<long>();\n        long score = 0;\n\
    \        long guess = 0;\n        long diff = 0;\n        long diff2 = 0;\n  \
    \      long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n   \
    \     long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n    \
    \    long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n   \
    \     long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n \
    \       long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        foreach (var item in game)\
    \ {\n            score = item;\n            foreach (var item2 in guess) {\n \
    \               guess = item2;\n                diff = guess - score;\n      \
    \          if (diff < 0) {\n                    result.Add(diff);\n          \
    \      }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        bool correct = false;\n        foreach (long g in game) {\n         \
    \   score += g;\n        }\n        foreach (long g in guess) {\n            diff\
    \ += g;\n        }\n        if (diff == score) {\n            result.Add(0);\n\
    \            correct = true;\n        } else {\n            result.Add(diff -\
    \ score);\n        }\n        if (correct) {\n            return result;\n   \
    \     } else {\n            return result.Select(x => Math.Abs(x)).ToList();\n\
    \        }", "        var result = new List<long>();\n        foreach (var g in\
    \ game) {\n            var guesses = guess.Where(x => x == g).ToList();\n    \
    \        if (guesses.Count == 1) {\n                result.Add(0);\n         \
    \   } else {\n                var diff = g.Abs(guesses.Min() - g);\n         \
    \       result.Add(diff);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n        }\n        foreach (long g in guess) {\n            difference\
    \ += Math.Abs(g - score);\n        }\n        result.AddRange(guess.Select(g =>\
    \ Math.Abs(g - score)));\n        result.AddRange(game.Select(g => Math.Abs(g\
    \ - score)));\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score = g;\n            foreach (long g in guess) {\n       \
    \         diff = g - score;\n                if (diff < 0) {\n               \
    \     diff = -diff;\n                }\n                if (diff == 0) {\n   \
    \                 result.Add(0);\n                } else {\n                 \
    \   result.Add(diff);\n                }\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score += g;\n        }\n        foreach (long g in guess) {\n            diff\
    \ += g - score;\n        }\n        foreach (long g in guess) {\n            result.Add(Math.Abs(g\
    \ - score));\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long diff = 0;\n       \
    \ foreach (var g in guess) {\n            score = game.Sum(x => x);\n        \
    \    diff = g - score;\n            result.Add(diff);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long difference = 0;\n        long maxScore = game.Max();\n  \
    \      long minScore = game.Min();\n        long maxGuess = guess.Max();\n   \
    \     long minGuess = guess.Min();\n        foreach (long g in guess) {\n    \
    \        score = game.IndexOf(g);\n            if (score == -1) continue;\n  \
    \          difference = Math.Abs(g - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        long diff2 = 0;\n  \
    \      long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n   \
    \     long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n    \
    \    long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n   \
    \     long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n \
    \       long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n\
    \        long diff84", "        List<long> result = new List<long>();\n      \
    \  long score = 0;\n        long difference = 0;\n        long guess = 0;\n  \
    \      long game = 0;\n        long game2 = 0;\n        long game3 = 0;\n    \
    \    long game4 = 0;\n        long game5 = 0;\n        long game6 = 0;\n     \
    \   long game7 = 0;\n        long game8 = 0;\n        long game9 = 0;\n      \
    \  long game10 = 0;\n        long game11 = 0;\n        long game12 = 0;\n    \
    \    long game13 = 0;\n        long game14 = 0;\n        long game15 = 0;\n  \
    \      long game16 = 0;\n        long game17 = 0;\n        long game18 = 0;\n\
    \        long game19 = 0;\n        long game20 = 0;\n        long game21 = 0;\n\
    \        long game22 = 0;\n        long game23 = 0;\n        long game24 = 0;\n\
    \        long game25 = 0;\n        long game26 = 0;\n        long game27 = 0;\n\
    \        long game28 = 0;\n        long game29 = 0;\n        long game30 = 0;\n\
    \        long game31 = 0;\n        long game32 = 0;\n        long game33 = 0;\n\
    \        long game34 = 0;\n        long game35 = 0;\n        long game36 = 0;\n\
    \        long game37 = 0;\n        long game38 = 0;\n        long game39 = 0;\n\
    \        long game40 = 0;\n        long game41 = 0;\n        long game42 = 0;\n\
    \        long game43 = 0;\n        long game44 = 0;\n        long game45 = 0;\n\
    \        long game46 = 0;\n        long game47 = 0;\n        long game48 = 0;\n\
    \        long game49 = 0;\n        long game50 = 0;\n        long game51 = 0;\n\
    \        long game52 = 0;\n        long game53 = 0;\n        long game54 = 0;\n\
    \        long game55 = 0;\n        long game56 = 0;\n        long game57 = 0;\n\
    \        long game58 = 0;\n        long game59 = 0;\n        long game60 = 0;\n\
    \        long game61 = 0;\n        long game62 = 0;\n        long game63 = 0;\n\
    \        long game64 = 0;\n        long game65 = 0;\n        long game66 = 0;\n\
    \        long game67 = 0;\n        long game68 = 0;\n        long game69 = 0;\n\
    \        long game70 = 0;\n        long game71 = 0;\n        long game72 = 0;\n\
    \        long game73 = 0;\n        long game74 = 0;\n        long game75 = 0;\n\
    \        long game76 = 0;\n        long game77 = 0;\n        long game78 = 0;\n\
    \        long game79 = 0;\n        long game80 = 0;\n        long game81 = 0;\n\
    \        long game82 = 0;\n", "        var result = new List<long>();\n      \
    \  var gameLength = game.Count;\n        var guessLength = guess.Count;\n    \
    \    if (gameLength != guessLength) {\n            throw new ArgumentException(\"\
    Game and guess lists must be of equal length\");\n        }\n        var gameScores\
    \ = new int[gameLength];\n        var guessScores = new int[guessLength];\n  \
    \      var gameGuesses = new int[gameLength];\n        var guessGuesses = new\
    \ int[guessLength];\n        var gameScore = 0;\n        var guessScore = 0;\n\
    \        var gameGuess = 0;\n        var guessGuess = 0;\n        var gameScoreDiff\
    \ = 0;\n        var guessScoreDiff = 0;\n        var gameGuesseDiff = 0;\n   \
    \     var guessGuesseDiff = 0;\n        for (int i = 0; i < gameLength; i++) {\n\
    \            gameScores[i] = game[i];\n            guessScores[i] = guess[i];\n\
    \            gameGuesses[i] = game[i];\n            guessGuesses[i] = guess[i];\n\
    \        }\n        for (int i = 0; i < gameLength; i++) {\n            gameScore\
    \ = gameScores[i];\n            guessScore = guessScores[i];\n            gameGuess\
    \ = gameGuesses[i];\n            guessGuess = guessGuesses[i];\n            gameScoreDiff\
    \ = gameScore - guessScore;\n            guessScoreDiff = guessScore - gameScore;\n\
    \            gameGuesseDiff = gameGuess - guessGuess;\n            guessGuesseDiff\
    \ = guessGuess - gameGuess;\n            if (gameScoreDiff != guessScoreDiff)\
    \ {\n                result.Add(gameScoreDiff);\n            }\n            if\
    \ (gameGuesseDiff != guessGuesseDiff) {\n                result.Add(gameGuesseDiff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long difference = 0;\n\
    \        long maxScore = game.Max();\n        long minScore = game.Min();\n  \
    \      long maxGuess = guess.Max();\n        long minGuess = guess.Min();\n  \
    \      bool isCorrect = true;\n        foreach (long g in guess) {\n         \
    \   score = game.IndexOf(g);\n            if (score == -1) {\n               \
    \ isCorrect = false;\n                break;\n            }\n            difference\
    \ = g - score;\n            if (difference > maxGuess)\n                difference\
    \ = maxGuess - score;\n            if (difference < minGuess)\n              \
    \  difference = minGuess - score;\n            result.Add(difference);\n     \
    \   }\n        if (isCorrect)\n            return result;\n        else\n    \
    \        return result.Select(x => Math.Abs(x)).ToList();", "        var result\
    \ = new List<long>();\n        var gameLength = game.Count;\n        var guessLength\
    \ = guess.Count;\n        if (gameLength != guessLength) {\n            throw\
    \ new ArgumentException(\"The two lists must have the same length\");\n      \
    \  }\n        var gameScores = new int[gameLength];\n        var guessScores =\
    \ new int[guessLength];\n        for (int i = 0; i < gameLength; i++) {\n    \
    \        gameScores[i] = game[i];\n            guessScores[i] = guess[i];\n  \
    \      }\n        for (int i = 0; i < guessLength; i++) {\n            var gameScore\
    \ = gameScores[i];\n            var guessScore = guessScores[i];\n           \
    \ if (gameScore == guessScore) {\n                result.Add(0);\n           \
    \ } else {\n                var diff = gameScore - guessScore;\n             \
    \   if (diff > 0) {\n                    result.Add(diff);\n                }\
    \ else {\n                    result.Add(-diff);\n                }\n        \
    \    }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        long maxScore = game.Max();\n\
    \        long minScore = game.Min();\n        long maxGuess = guess.Max();\n \
    \       long minGuess = guess.Min();\n        long maxDiff = maxScore - minScore;\n\
    \        long minDiff = maxScore - maxGuess;\n        long maxDiffGuess = maxGuess\
    \ - minGuess;\n        long minDiffGuess = maxGuess - minScore;\n        long\
    \ maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess = maxGuess -\
    \ minGuess;\n        long maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess\
    \ = maxGuess - minScore;\n        long maxDiffGuess = maxGuess - maxScore;\n \
    \       long minDiffGuess = maxGuess - minGuess;\n        long maxDiffGuess =\
    \ maxGuess - maxScore;\n        long minDiffGuess = maxGuess - minScore;\n   \
    \     long maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess = maxGuess\
    \ - minGuess;\n        long maxDiffGuess = maxGuess - maxScore;\n        long\
    \ minDiffGuess = maxGuess - minScore;\n        long maxDiffGuess = maxGuess -\
    \ maxScore;\n        long minDiffGuess = maxGuess - minGuess;\n        long maxDiffGuess\
    \ = maxGuess - maxScore;\n        long minDiffGuess = maxGuess - minScore;\n \
    \       long maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess =\
    \ maxGuess - minGuess;\n        long maxDiffGuess = maxGuess - maxScore;\n   \
    \     long minDiffGuess = maxGuess - minScore;\n        long maxDiffGuess = maxGuess\
    \ - maxScore;\n        long minDiffGuess = maxGuess - minGuess;\n        long\
    \ maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess = maxGuess -\
    \ minScore;\n        long maxDiffGuess = maxGuess - maxScore;\n        long minDiffGuess\
    \ = maxGuess - minGuess;", "        List<long> result = new List<long>();\n  \
    \      long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          diff = g - score;\n                if (diff < 0) {\n              \
    \      diff = -diff;\n                }\n                result.Add(diff);\n \
    \           }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long diff = 0;\n        foreach (long g in game) {\n            score = g;\n\
    \            foreach (long g in guess) {\n                guess = g;\n       \
    \         diff = g - score;\n                if (diff < 0) {\n               \
    \     diff = -diff;\n                }\n                result.Add(diff);\n  \
    \          }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long diff = 0;\n       \
    \ foreach (long g in game) {\n            score = g;\n            foreach (long\
    \ g in guess) {\n                diff = g - score;\n                if (diff <\
    \ 0) {\n                    diff = -diff;\n                }\n               \
    \ if (diff == 0) {\n                    result.Add(0);\n                }\n  \
    \              else {\n                    result.Add(diff);\n               \
    \ }\n            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            diff += g - score;\n        }\n        if (diff\
    \ < 0) {\n            foreach (long g in guess) {\n                result.Add(-g);\n\
    \            }\n        } else {\n            foreach (long g in guess) {\n  \
    \              result.Add(g);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        long guess = 0;\n        long game = 0;\n   \
    \     foreach (var item in guess) {\n            guess = item;\n            game\
    \ = game[game.Count - 1];\n            difference = Math.Abs(guess - game);\n\
    \            result.Add(difference);\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        bool gameWon = false;\n        bool guessWon\
    \ = false;\n        bool gameOver = false;\n        bool guessOver = false;\n\
    \        long gameIndex = 0;\n        long guessIndex = 0;\n        long gameScore\
    \ = 0;\n        long guessScore = 0;\n        long gameGuess = 0;\n        long\
    \ guessGuess = 0;\n        long gameGuessScore = 0;\n        long guessGuessScore\
    \ = 0;\n        long gameGuessGuess = 0;\n        long guessGuessGuess = 0;\n\
    \        long gameGuessGuessScore = 0;\n        long guessGuessGuessScore = 0;\n\
    \        long gameGuessGuessGuess = 0;\n        long guessGuessGuessGuess = 0;\n\
    \        long gameGuessGuessGuessScore = 0;\n        long guessGuessGuessGuessScore\
    \ = 0;\n        long gameGuessGuessGuessGuess = 0;\n        long guessGuessGuessGuessGuess\
    \ = 0;\n        long gameGuessGuessGuessGuessScore = 0;\n        long guessGuessGuessGuessGuessScore\
    \ = 0;\n        long gameGuessGuessGuessGuessGuess = 0;\n        long guessGuessGuessGuessGuessGuess\
    \ = 0;\n        long gameGuessGuessGuessGuessGuessScore = 0;\n        long guessGuessGuessGuessGuessGuessScore\
    \ = 0;\n        long gameGuessGuessGuessGuessGuessGuess = 0;\n        long guessGuessGuessGuessGuessGuessGuess\
    \ = 0;\n        long gameGuessGuessGuessGuessGuessGuessScore = 0;\n        long\
    \ guessGuessGuessGuessGuessGuessGuessScore = 0;\n        long gameGuessGuessGuessGuessGuessGuessGuessGuess\
    \ = 0;\n        long guessGuessGuessGuessGuessGuessGuessGuess = 0;\n        long\
    \ gameGuessGuessGuessGuessGuessGuessGuessScore = 0;\n        long guessGuessGuessGuessGuessGuessGuessGuessScore\
    \ = 0;\n        long gameGuessGuessGuessGuessGuessGuessGuessGuessGuess = 0;\n\
    \        long guessGuessGuessGuessGuessGuessGuessGuessGuess = 0;\n        long\
    \ gameGuessGuessGuessGuessGuessGuessGuessGue", "        var result = new List<long>();\n\
    \        var gameCount = game.Count;\n        var guessCount = guess.Count;\n\
    \        if (gameCount != guessCount) {\n            throw new ArgumentException(\"\
    The two lists must have the same length\");\n        }\n        for (int i = 0;\
    \ i < gameCount; i++) {\n            var gameScore = game[i];\n            var\
    \ guessScore = guess[i];\n            if (gameScore == guessScore) {\n       \
    \         result.Add(0);\n            } else {\n                var diff = gameScore\
    \ - guessScore;\n                result.Add(diff);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long diff = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            score = g;\n            foreach\
    \ (long g in guess) {\n                diff = g - score;\n                if (diff\
    \ < 0) {\n                    diff = -diff;\n                }\n             \
    \   if (diff == 0) {\n                    correct = true;\n                  \
    \  break;\n                }\n            }\n            if (correct) {\n    \
    \            result.Add(0);\n            } else {\n                result.Add(diff);\n\
    \            }\n            correct = false;\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                difference =\
    \ Math.Abs(g - score);\n                if (difference == 0) {\n             \
    \       result.Add(0);\n                } else {\n                    result.Add(difference);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   var result = new List<long>();\n        foreach (var g in game) {\n      \
    \      long diff = Math.Abs(g - guess[game.IndexOf(g)]);\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        bool gameOver = false;\n\
    \        bool gameOver2 = false;\n        bool gameOver3 = false;\n        bool\
    \ gameOver4 = false;\n        bool gameOver5 = false;\n        bool gameOver6\
    \ = false;\n        bool gameOver7 = false;\n        bool gameOver8 = false;\n\
    \        bool gameOver9 = false;\n        bool gameOver10 = false;\n        bool\
    \ gameOver11 = false;\n        bool gameOver12 = false;\n        bool gameOver13\
    \ = false;\n        bool gameOver14 = false;\n        bool gameOver15 = false;\n\
    \        bool gameOver16 = false;\n        bool gameOver17 = false;\n        bool\
    \ gameOver18 = false;\n        bool gameOver19 = false;\n        bool gameOver20\
    \ = false;\n        bool gameOver21 = false;\n        bool gameOver22 = false;\n\
    \        bool gameOver23 = false;\n        bool gameOver24 = false;\n        bool\
    \ gameOver25 = false;\n        bool gameOver26 = false;\n        bool gameOver27\
    \ = false;\n        bool gameOver28 = false;\n        bool gameOver29 = false;\n\
    \        bool gameOver30 = false;\n        bool gameOver31 = false;\n        bool\
    \ gameOver32 = false;\n        bool gameOver33 = false;\n        bool gameOver34\
    \ = false;\n        bool gameOver35 = false;\n        bool gameOver36 = false;\n\
    \        bool gameOver37 = false;\n        bool gameOver38 = false;\n        bool\
    \ gameOver39 = false;\n        bool gameOver40 = false;\n        bool gameOver41\
    \ = false;\n        bool gameOver42 = false;\n        bool gameOver43 = false;\n\
    \        bool gameOver44 = false;\n        bool gameOver45 = false;\n        bool\
    \ gameOver46 = false;\n        bool gameOver47 = false;\n        bool gameOver48\
    \ = false;\n        bool gameOver49 = false;\n        bool gameOver50 = false;\n\
    \        bool gameOver51 = false;\n        bool gameOver52 = false;\n        bool\
    \ gameOver53 = false;\n        bool gameOver54 = false;\n        bool gameOver55\
    \ = false;\n        bool gameOver56 = false;\n        bool gameOver57 = false;\n\
    \        bool gameOver58 = false;\n        bool gameOver59 = false;\n        bool\
    \ gameOver60 = false;\n        bool gameOver61 = false;\n        bool gameOver62\
    \ = false;\n        bool gameOver63 = false;\n        bool gameOver64 = false;\n\
    \        bool gameOver65 = false;\n        bool gameOver66 = false;\n        bool\
    \ gameOver67 = false;\n        bool gameOver68 = false;\n        bool gameOver",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        foreach (var item in game) {\n            score = item;\n\
    \            foreach (var item2 in guess) {\n                diff = item2 - score;\n\
    \                if (diff < 0) {\n                    diff = -diff;\n        \
    \        }\n                if (diff == 0) {\n                    result.Add(0);\n\
    \                }\n                else {\n                    result.Add(diff);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        long maxDiff = 0;\n        long maxScore = 0;\n        long\
    \ maxScoreIndex = 0;\n        long maxGuess = 0;\n        long maxGuessIndex =\
    \ 0;\n        long maxGame = 0;\n        long maxGameIndex = 0;\n        long\
    \ maxGuesses = 0;\n        long maxGuessesIndex = 0;\n        long maxScoreDiff\
    \ = 0;\n        long maxScoreDiffIndex = 0;\n        long maxGuessesDiff = 0;\n\
    \        long maxGuessesDiffIndex = 0;\n        long maxGameDiff = 0;\n      \
    \  long maxGameDiffIndex = 0;\n        bool gameOver = false;\n        bool gameOverIndex\
    \ = false;\n        bool gameOverGuesses = false;\n        bool gameOverGuessesIndex\
    \ = false;\n        bool gameOverScore = false;\n        bool gameOverScoreIndex\
    \ = false;\n        bool gameOverGuessesDiff = false;\n        bool gameOverGuessesDiffIndex\
    \ = false;\n        bool gameOverScoreDiff = false;\n        bool gameOverScoreDiffIndex\
    \ = false;\n        bool gameOverMax = false;\n        bool gameOverMaxIndex =\
    \ false;\n        bool gameOverMaxGuesses = false;\n        bool gameOverMaxGuessesIndex\
    \ = false;\n        bool gameOverMaxScore = false;\n        bool gameOverMaxScoreIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScoreDiff = false;\n        bool gameOverMaxScoreDiffIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScoreDiff = false;\n        bool gameOverMaxScoreDiffIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScoreDiff = false;\n        bool gameOverMaxScoreDiffIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScoreDiff = false;\n        bool gameOverMaxScoreDiffIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScoreDiff = false;\n        bool gameOverMaxScoreDiffIndex\
    \ = false;\n        bool gameOverMaxGuessesDiff = false;\n        bool gameOverMaxGuessesDiffIndex\
    \ = false;\n        bool gameOverMaxScore", "        List<long> result = new List<long>();\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            foreach\
    \ (long g in guess) {\n                diff = g - g;\n                if (diff\
    \ < 0) {\n                    diff *= -1;\n                }\n               \
    \ result.Add(diff);\n            }\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (long g in game) {\n            score += g;\n   \
    \     }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        result.Add(diff);\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        long maxScore = game.Max();\n        long maxGuess = guess.Max();\n \
    \       long minScore = game.Min();\n        long minGuess = guess.Min();\n  \
    \      bool isCorrect = true;\n        bool isIncorrect = false;\n        bool\
    \ isIncorrect2 = false;\n        bool isIncorrect3 = false;\n        bool isIncorrect4\
    \ = false;\n        bool isIncorrect5 = false;\n        bool isIncorrect6 = false;\n\
    \        bool isIncorrect7 = false;\n        bool isIncorrect8 = false;\n    \
    \    bool isIncorrect9 = false;\n        bool isIncorrect10 = false;\n       \
    \ bool isIncorrect11 = false;\n        bool isIncorrect12 = false;\n        bool\
    \ isIncorrect13 = false;\n        bool isIncorrect14 = false;\n        bool isIncorrect15\
    \ = false;\n        bool isIncorrect16 = false;\n        bool isIncorrect17 =\
    \ false;\n        bool isIncorrect18 = false;\n        bool isIncorrect19 = false;\n\
    \        bool isIncorrect20 = false;\n        bool isIncorrect21 = false;\n  \
    \      bool isIncorrect22 = false;\n        bool isIncorrect23 = false;\n    \
    \    bool isIncorrect24 = false;\n        bool isIncorrect25 = false;\n      \
    \  bool isIncorrect26 = false;\n        bool isIncorrect27 = false;\n        bool\
    \ isIncorrect28 = false;\n        bool isIncorrect29 = false;\n        bool isIncorrect30\
    \ = false;\n        bool isIncorrect31 = false;\n        bool isIncorrect32 =\
    \ false;\n        bool isIncorrect33 = false;\n        bool isIncorrect34 = false;\n\
    \        bool isIncorrect35 = false;\n        bool isIncorrect36 = false;\n  \
    \      bool isIncorrect37 = false;\n        bool isIncorrect38 = false;\n    \
    \    bool isIncorrect39 = false;\n        bool isIncorrect40 = false;\n      \
    \  bool isIncorrect41 = false;\n        bool isIncorrect42 = false;\n        bool\
    \ isIncorrect43 = false;\n        bool isIncorrect44 = false;\n        bool isIncorrect45\
    \ = false;\n        bool isIncorrect46 = false;\n        bool isIncorrect47 =\
    \ false;\n        bool isIncorrect48 = false;\n        bool isIncorrect49 = false;\n\
    \        bool isIncorrect50 = false;\n        bool isIncorrect51 = false;\n  \
    \      bool isIncorrect52 = false;\n        bool isIncorrect53 = false;\n    \
    \    bool isIncorrect54 = false;\n        bool isIncorrect55", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guessed =\
    \ 0;\n        long difference = 0;\n        foreach (long g in game) {\n     \
    \       guessed = g;\n            foreach (long g in guess) {\n              \
    \  difference = g.CompareTo(guessed);\n                if (difference < 0) {\n\
    \                    difference = -difference;\n                }\n          \
    \      result.Add(difference);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        long guess = 0;\n        long game = 0;\n   \
    \     foreach (long i in game) {\n            score += i;\n        }\n       \
    \ foreach (long i in guess) {\n            guess += i;\n        }\n        foreach\
    \ (long i in guess) {\n            difference = Math.Abs(guess - score);\n   \
    \         result.Add(difference);\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ difference = 0;\n        long maxScore = game.Max();\n        long minScore\
    \ = game.Min();\n        long maxGuess = guess.Max();\n        long minGuess =\
    \ guess.Min();\n        long maxDifference = maxScore - minScore;\n        long\
    \ minDifference = minScore - maxScore;\n        long maxGuessesDifference = maxGuess\
    \ - minGuess;\n        long minGuessesDifference = minGuess - maxGuess;\n    \
    \    long maxDifferenceDifference = maxDifference - minDifference;\n        long\
    \ minDifferenceDifference = minDifference - maxDifference;\n        long maxGuessesDifferenceDifference\
    \ = maxGuessesDifference - minGuessesDifference;\n        long minGuessesDifferenceDifference\
    \ = minGuessesDifference - maxGuessesDifference;\n        long maxDifferenceDifferenceDifference\
    \ = maxDifferenceDifference - minDifferenceDifference;\n        long minDifferenceDifferenceDifference\
    \ = minDifferenceDifference - maxDifferenceDifference;\n        long maxGuessesDifferenceDifferenceDifference\
    \ = maxGuessesDifferenceDifference - minGuessesDifferenceDifference;\n       \
    \ long minGuessesDifferenceDifferenceDifference = minGuessesDifferenceDifference\
    \ - maxGuessesDifferenceDifference;\n        long maxDifferenceDifferenceDifference\
    \ = maxDifferenceDifferenceDifference - minDifferenceDifferenceDifference;\n \
    \       long minDifferenceDifferenceDifference = minDifferenceDifferenceDifference\
    \ - maxDifferenceDifferenceDifference;\n        long maxGuessesDifferenceDifferenceDifference\
    \ = maxGuessesDifferenceDifferenceDifference - minGuessesDifferenceDifferenceDifference;\n\
    \        long minGuessesDifferenceDifferenceDifference = minGuessesDifferenceDifferenceDifference\
    \ - maxGuessesDifferenceDifferenceDifference;\n        long maxDifferenceDifferenceDifference\
    \ = maxDifferenceDifferenceDifference - minDifferenceDifferenceDifference;\n \
    \       long minDifferenceDifferenceDifference = minDifferenceDifferenceDifference\
    \ - maxDifferenceDifferenceDifference;\n        long maxGuessesDifferenceDifferenceDifference\
    \ = maxGuessesDifferenceDifferenceDifference - minGuessesDifferenceDifferenceDifference;\n\
    \        long minGuessesDifferenceDifferenceDifference = minGuessesDifferenceDifferenceDifference\
    \ - maxGuessesDifferenceDifferenceDifference;\n        long maxDifferenceDifferenceDifference\
    \ = maxDifferenceDifferenceDifference - minDifferenceDifferenceDifference;\n \
    \       long minDifferenceDifferenceDifference = minDifferenceDifferenceDifference\
    \ - maxDifferenceDifferenceDifference;\n        long maxGuessesDifferenceDifference",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guessed = 0;\n        long difference = 0;\n        foreach (long g in\
    \ game) {\n            guessed = g;\n            difference = guess - score;\n\
    \            result.Add(difference);\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long total = 0;\n      \
    \  long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long\
    \ diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7\
    \ = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10\
    \ = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;\n        long diff84", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guessed = 0;\n  \
    \      long diff = 0;\n        foreach (long g in game) {\n            guessed\
    \ = g;\n            foreach (long g in guess) {\n                diff = g - guessed;\n\
    \                if (diff < 0) {\n                    diff *= -1;\n          \
    \      }\n                score += diff;\n            }\n            result.Add(score);\n\
    \            score = 0;\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        bool correct = false;\n        foreach (var item\
    \ in game) {\n            if (item == guess) {\n                correct = true;\n\
    \            }\n            guess = item;\n        }\n        if (correct) {\n\
    \            result.Add(0);\n        } else {\n            foreach (var item in\
    \ guess) {\n                diff = item - score;\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score = g;\n            foreach (long\
    \ g in guess) {\n                diff = g - score;\n                if (diff <\
    \ 0) {\n                    diff = -diff;\n                }\n               \
    \ if (diff == 0) {\n                    result.Add(0);\n                } else\
    \ {\n                    result.Add(diff);\n                }\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        bool gameIsCorrect\
    \ = true;\n        bool guessIsCorrect = true;\n        bool gameIsIncorrect =\
    \ false;\n        bool guessIsIncorrect = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n        bool gameIsIncorrectOrGuess\
    \ = false;\n        bool guessIsIncorrectOrGame = false;\n", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        bool correct = false;\n        bool first\
    \ = true;\n        foreach (long i in game) {\n            guess = i;\n      \
    \      difference = guess - score;\n            if (first) {\n               \
    \ first = false;\n                correct = true;\n            }\n           \
    \ if (difference < 0) {\n                correct = false;\n            }\n   \
    \         result.Add(difference);\n        }\n        if (correct) {\n       \
    \     result.Add(0);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        foreach (var\
    \ item in game) {\n            score = score * 10;\n            score = score\
    \ + item;\n        }\n        foreach (var item in guess) {\n            guess\
    \ = guess * 10;\n            guess = guess + item;\n        }\n        foreach\
    \ (var item in guess) {\n            difference = guess - item;\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        long guess = 0;\n  \
    \      long game = 0;\n        foreach (var item in game) {\n            score\
    \ += item;\n        }\n        foreach (var item in guess) {\n            guess\
    \ += item;\n        }\n        foreach (var item in guess) {\n            diff\
    \ = guess - score;\n            result.Add(diff);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            guess = g.ToString();\n     \
    \       difference = Convert.ToInt64(guess) - Convert.ToInt64(g);\n          \
    \  if (difference < 0) {\n                difference = -difference;\n        \
    \    }\n            if (difference == 0) {\n                correct = true;\n\
    \                score = 0;\n            }\n            else {\n             \
    \   score = difference;\n            }\n            result.Add(score);\n     \
    \   }\n        if (correct) {\n            result.Add(0);\n        }\n       \
    \ return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        foreach\
    \ (var item in game) {\n            score = item;\n            guess = guess.FirstOrDefault();\n\
    \            diff = guess - score;\n            result.Add(diff);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long diff = 0;\n     \
    \   bool correct = false;\n        foreach (long g in game) {\n            guess\
    \ = g.ToString();\n            diff = g.ToString().CompareTo(guess.ToString());\n\
    \            if (diff == 0) {\n                correct = true;\n             \
    \   score = 0;\n            }\n            else {\n                score = diff;\n\
    \            }\n            result.Add(score);\n        }\n        if (correct)\
    \ {\n            return result;\n        }\n        else {\n            foreach\
    \ (long g in guess) {\n                guess = g.ToString();\n               \
    \ diff = g.ToString().CompareTo(guess.ToString());\n                if (diff ==\
    \ 0) {\n                    correct = true;\n                    score = 0;\n\
    \                }\n                else {\n                    score = diff;\n\
    \                }\n                result.Add(score);\n            }\n      \
    \      return result;\n        }", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        foreach (long g in game) {\n         \
    \   score += g;\n        }\n        foreach (long g in guess) {\n            guess\
    \ += g;\n        }\n        if (score == 0) {\n            result.Add(0);\n  \
    \      }\n        else {\n            difference = score - guess;\n          \
    \  if (difference < 0) {\n                difference = difference * -1;\n    \
    \        }\n            result.Add(difference);\n        }\n        return result;",
  "        var result = new List<long>();\n        game.ForEach(x => result.Add(Math.Abs(x\
    \ - guess.ElementAt(game.IndexOf(x)))));\n        return result;", "        var\
    \ result = new List<long>();\n        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        foreach (var item in game)\
    \ {\n            score = score * item + item;\n        }\n        foreach (var\
    \ item in guess) {\n            guess = guess * item + item;\n        }\n    \
    \    if (guess == score) {\n            result.Add(0);\n        }\n        else\
    \ {\n            result.Add(Math.Abs(guess - score));\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score = g;\n            foreach (long g in guess) {\n                diff\
    \ = g - score;\n                if (diff < 0) {\n                    diff = -diff;\n\
    \                }\n                result.Add(diff);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        long guessed = 0;\n\
    \        foreach (long g in game) {\n            guessed = g;\n            score\
    \ = g.CompareTo(guess);\n            if (score == 0) {\n                result.Add(0);\n\
    \            } else {\n                diff = g.CompareTo(guessed);\n        \
    \        result.Add(diff);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score = g;\n            foreach (long g in guess) {\n           \
    \     guess = g;\n                diff = guess - score;\n                if (diff\
    \ < 0) {\n                    diff = -diff;\n                }\n             \
    \   result.Add(diff);\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score = g;\n            foreach (long g in guess) {\n           \
    \     guess = g;\n                diff = guess - score;\n                if (diff\
    \ < 0) {\n                    result.Add(diff);\n                }\n         \
    \   }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        foreach (long g in guess)\
    \ {\n            result.Add(Math.Abs(g - score));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long\
    \ diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7\
    \ = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10\
    \ = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;\n        long diff84", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long difference = 0;\n        long scoreDifference = 0;\n        long guessDifference\
    \ = 0;\n        bool gameCorrect = false;\n        bool guessCorrect = false;\n\
    \        bool gameScoreCorrect = false;\n        bool guessScoreCorrect = false;\n\
    \        bool gameGuessCorrect = false;\n        bool guessGuessCorrect = false;\n\
    \        bool gameScoreGuessCorrect = false;\n        bool guessScoreGuessCorrect\
    \ = false;\n        bool gameGuessGuessCorrect = false;\n        bool guessGuessGuessCorrect\
    \ = false;\n        bool gameScoreDifference = false;\n        bool guessDifference\
    \ = false;\n        bool gameGuessDifference = false;\n        bool guessGuessDifference\
    \ = false;\n        bool gameScoreGuessDifference = false;\n        bool guessGuessDifference\
    \ = false;\n        bool gameScoreDifferenceGuessDifference = false;\n       \
    \ bool guessDifferenceGuessDifference = false;\n        bool gameGuessDifferenceGuessDifference\
    \ = false;\n        bool guessGuessDifferenceGuessDifference = false;\n      \
    \  bool gameScoreDifferenceGuessDifference = false;\n        bool guessDifferenceGuessDifference\
    \ = false;\n        bool gameGuessDifferenceGuessDifference = false;\n       \
    \ bool guessGuessDifferenceGuessDifference = false;\n        bool gameScoreDifferenceGuessDifference\
    \ = false;\n        bool guessDifferenceGuessDifference = false;\n        bool\
    \ gameGuessDifferenceGuessDifference = false;\n        bool guessGuessDifferenceGuessDifference\
    \ = false;\n        bool gameScoreDifferenceGuessDifference = false;\n       \
    \ bool guessDifferenceGuessDifference = false;\n        bool gameGuessDifferenceGuessDifference\
    \ = false;\n        bool guessGuessDifferenceGuessDifference = false;\n      \
    \  bool gameScoreDifferenceGuessDifference = false;\n        bool guessDifferenceGuessDifference\
    \ = false;\n        bool gameGuessDifferenceGuessDifference = false;\n       \
    \ bool guessGuessDifferenceGuessDifference = false;\n        bool gameScoreDifferenceGuessDifference\
    \ = false;\n        bool guessDifferenceGuessDifference = false;\n        bool\
    \ gameGuessDifferenceGuessDifference = false;\n        bool guessGuessDifferenceGuessDifference\
    \ = false;\n        bool gameScoreDifferenceGuessDifference = false;\n       \
    \ bool guessDifferenceGuessDifference = false;\n        bool gameGuessDifferenceGuessDifference\
    \ = false;\n        bool guessGuessDifferenceGuessDifference = false;\n      \
    \  bool gameScoreDifferenceGuessDifference = false;\n        bool guessDifferenceGuessDifference\
    \ = false;\n        bool gameGuessDifferenceGuessDifference = false;\n       \
    \ bool guessGuessDifferenceGuessDifference = false;\n        bool gameScoreDifferenceGuessDifference\
    \ = false;\n        bool guessDifferenceGuessDifference = false;\n        bool ",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score = g;\n            foreach (long g in guess) {\n           \
    \     guess = g;\n                diff = score - guess;\n                if (diff\
    \ < 0) {\n                    result.Add(diff);\n                }\n         \
    \   }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            score += g;\n        }\n        foreach (long g in\
    \ guess) {\n            difference += g - score;\n        }\n        result.AddRange(game.Zip(guess,\
    \ (a, b) => a - b));\n        result.AddRange(game.Zip(guess, (a, b) => a - b).Where(x\
    \ => x < 0));\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            score += g;\n            foreach (long g in guess)\
    \ {\n                difference = Math.Abs(g - score);\n                if (difference\
    \ == 0) {\n                    result.Add(0);\n                } else {\n    \
    \                result.Add(difference);\n                }\n            }\n \
    \       }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (var item in game) {\n            score = score * item + item;\n\
    \        }\n        foreach (var item in guess) {\n            guess = guess *\
    \ item + item;\n        }\n        foreach (var item in game) {\n            diff\
    \ = diff * item + item;\n        }\n        foreach (var item in guess) {\n  \
    \          diff = diff * item + item;\n        }\n        foreach (var item in\
    \ game) {\n            diff = diff * item + item;\n        }\n        foreach\
    \ (var item in guess) {\n            diff = diff * item + item;\n        }\n \
    \       foreach (var item in game) {\n            diff = diff * item + item;\n\
    \        }\n        foreach (var item in guess) {\n            diff = diff * item\
    \ + item;\n        }\n        foreach (var item in game) {\n            diff =\
    \ diff * item + item;\n        }\n        foreach (var item in guess) {\n    \
    \        diff = diff * item + item;\n        }\n        foreach (var item in game)\
    \ {\n            diff = diff * item + item;\n        }\n        foreach (var item\
    \ in guess) {\n            diff = diff * item + item;\n        }\n        foreach\
    \ (var item in game) {\n            diff = diff * item + item;\n        }\n  \
    \      foreach (var item in guess) {\n            diff = diff * item + item;\n\
    \        }\n        foreach (var item in game) {\n            diff = diff * item\
    \ + item;\n        }\n        foreach (var item in guess) {\n            diff\
    \ = diff * item + item;\n        }\n        foreach (var item in game) {\n   \
    \         diff = diff * item + item;\n        }\n        foreach (var item in\
    \ guess) {\n            diff = diff * item + item;\n        }\n        foreach\
    \ (var item in game) {\n            diff = diff * item + item;\n        }\n  \
    \      foreach (var item in guess) {\n            diff = diff * item + item;\n\
    \        }\n        foreach (var item in game) {\n            diff = diff * item\
    \ + item;\n        }\n        foreach (var item in guess) {\n            diff\
    \ = diff * item + item;\n        }\n        foreach (var item in game) {\n   \
    \         diff = diff * item + item;\n        }\n        foreach (var item in\
    \ guess) {\n            diff = diff * item + item;\n        }\n        foreach\
    \ (var item in game) {\n            diff = diff * item + item;\n        }\n  \
    \      foreach (var item in guess) {\n            diff = diff * item + item;\n\
    \        }\n        foreach (var item in game) {\n            diff = diff * item\
    \ + item;\n        }\n", "        List<long> result = new List<long>();\n    \
    \    long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        result.Add(diff);\n      \
    \  return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        long diff2\
    \ = 0;\n        bool correct = false;\n        foreach (long g in game) {\n  \
    \          guess = g.ToString();\n            diff2 = Convert.ToInt64(guess) -\
    \ Convert.ToInt64(score);\n            if (diff2 < 0) {\n                diff2\
    \ = diff2 * -1;\n            }\n            if (diff2 == 0) {\n              \
    \  result.Add(0);\n                correct = true;\n            } else {\n   \
    \             result.Add(diff2);\n            }\n        }\n        if (correct)\
    \ {\n            return result;\n        }\n        foreach (long g in guess)\
    \ {\n            guess = g.ToString();\n            diff = Convert.ToInt64(guess)\
    \ - Convert.ToInt64(score);\n            if (diff < 0) {\n                diff\
    \ = diff * -1;\n            }\n            if (diff == 0) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(diff);\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        foreach (var item in\
    \ game) {\n            score += item;\n        }\n        foreach (var item in\
    \ guess) {\n            guess += item;\n        }\n        guess = Math.Abs(guess);\n\
    \        if (guess == score) {\n            result.Add(0);\n        } else {\n\
    \            result.Add(guess - score);\n        }\n        return result;", " \
    \       var result = new List<long>();\n        foreach (var g in game) {\n  \
    \          var guesses = guess.Where(x => x == g).ToList();\n            if (guesses.Count\
    \ == 0) {\n                result.Add(0);\n            } else {\n            \
    \    var diff = g.CompareTo(guesses.First());\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long diff = 0;\n        bool correct = false;\n        bool first = true;\n\
    \        foreach (long g in game) {\n            guess = g.ToString();\n     \
    \       diff = g.ToString().CompareTo(guess.ToString());\n            if (first)\
    \ {\n                score = diff;\n                first = false;\n         \
    \   }\n            else {\n                score = Math.Abs(diff);\n         \
    \   }\n            result.Add(score);\n        }\n        if (correct) {\n   \
    \         return result;\n        }\n        else {\n            foreach (long\
    \ g in guess) {\n                guess = g.ToString();\n                diff =\
    \ g.ToString().CompareTo(guess.ToString());\n                if (first) {\n  \
    \                  score = diff;\n                    first = false;\n       \
    \         }\n                else {\n                    score = Math.Abs(diff);\n\
    \                }\n                result.Add(score);\n            }\n      \
    \      return result;\n        }", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score = g;\n            foreach (long g in guess) {\n       \
    \         diff = g - score;\n                if (diff < 0) {\n               \
    \     diff = -diff;\n                }\n                result.Add(diff);\n  \
    \          }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score = g;\n            foreach (long g in guess) {\n                diff\
    \ = g - score;\n                if (diff < 0) {\n                    diff = -diff;\n\
    \                }\n                if (diff == 0) {\n                    result.Add(0);\n\
    \                } else {\n                    result.Add(diff);\n           \
    \     }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long difference = 0;\n        bool correct = false;\n        foreach (var\
    \ item in game) {\n            guess = guess\n                .Where(x => x !=\
    \ 0)\n                .Select(x => Math.Abs(x - item))\n                .FirstOrDefault();\n\
    \            if (guess == 0) {\n                result.Add(0);\n            }\
    \ else {\n                difference = guess - item;\n                result.Add(difference);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long difference = 0;\n\
    \        foreach (long g in game) {\n            score = g;\n            foreach\
    \ (long g in guess) {\n                difference = Math.Abs(g - score);\n   \
    \             if (difference == 0) {\n                    result.Add(0);\n   \
    \             }\n                else {\n                    result.Add(difference);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        long difference = 0;\n        bool correct = false;\n  \
    \      bool first = true;\n        foreach (long g in game) {\n            foreach\
    \ (long g in guess) {\n                if (first) {\n                    first\
    \ = false;\n                    guess = g;\n                    score = 0;\n \
    \               } else {\n                    difference = Math.Abs(g - guess);\n\
    \                    guess = g;\n                    score += difference;\n  \
    \              }\n            }\n            result.Add(score);\n            score\
    \ = 0;\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (var item\
    \ in game) {\n            score += item;\n        }\n        foreach (var item\
    \ in guess) {\n            difference += Math.Abs(item - score);\n        }\n\
    \        result.AddRange(guess.Select(x => Math.Abs(x - score)));\n        result.AddRange(game.Select(x\
    \ => Math.Abs(x - score)));\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n      \
    \  long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n       \
    \ long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long\
    \ diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long\
    \ diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long\
    \ diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long\
    \ diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long\
    \ diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long\
    \ diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long\
    \ diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long\
    \ diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long\
    \ diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long\
    \ diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long\
    \ diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long\
    \ diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long\
    \ diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long\
    \ diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long\
    \ diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long\
    \ diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long\
    \ diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long\
    \ diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long\
    \ diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long\
    \ diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long\
    \ diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long\
    \ diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long\
    \ diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long\
    \ diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long\
    \ diff82 = 0;\n        long diff83 = 0;", "        var result = new List<long>();\n\
    \        var scores = new List<long>();\n        scores.AddRange(game);\n    \
    \    scores.AddRange(guess);\n        scores.Sort();\n        scores.Reverse();\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n        scores.RemoveAt(0);\n\
    \        scores.RemoveAt(0);\n", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        foreach (long g in game) {\n           \
    \ guess = g.ToString();\n            diff = g.ToString().Replace(\"-\", \"\").Replace(\"\
    ,\", \"\").Replace(\"0\", \"\").Replace(\"1\", \"\").Replace(\"2\", \"\").Replace(\"\
    3\", \"\").Replace(\"4\", \"\").Replace(\"5\", \"\").Replace(\"6\", \"\").Replace(\"\
    7\", \"\").Replace(\"8\", \"\").Replace(\"9\", \"\").Replace(\".\", \"\").Replace(\"\
    *\", \"\").Replace(\"?\", \"\").Replace(\"!\", \"\").Replace(\"(\", \"\").Replace(\"\
    )\", \"\").Replace(\"[\", \"\").Replace(\"]\", \"\").Replace(\"{\", \"\").Replace(\"\
    }\", \"\").Replace(\"|\", \"\").Replace(\"~\", \"\").Replace(\"$\", \"\").Replace(\"\
    %\", \"\").Replace(\"^\", \"\").Replace(\"&\", \"\").Replace(\"*\", \"\").Replace(\"\
    (\", \"\").Replace(\")\", \"\").Replace(\"[\", \"\").Replace(\"]\", \"\").Replace(\"\
    {\", \"\").Replace(\"}\", \"\").Replace(\"|\", \"\").Replace(\"~\", \"\").Replace(\"\
    $\", \"\").Replace(\"%\", \"\").Replace(\"^\", \"\").Replace(\"&\", \"\").Replace(\"\
    *\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"[\", \"\").Replace(\"\
    ]\", \"\").Replace(\"{\", \"\").Replace(\"}\", \"\").Replace(\"|\", \"\").Replace(\"\
    ~\", \"\").Replace(\"$\", \"\").Replace(\"%\", \"\").Replace(\"^\", \"\").Replace(\"\
    &\", \"\").Replace(\"*\", \"\").Replace(\"(\", \"\").Replace(\")\", \"\").Replace(\"\
    [\", \"\").Replace(\"]\", \"\").Replace(\"{\", \"\").Replace(\"}\", \"\").Replace(\"\
    |\", \"\").Replace(\"~\", \"\").Replace(\"$\", \"\").Replace(\"%\", \"\").Replace(\"\
    ^\", \"\").Replace(\"&\", \"\").Replace(\"*\", \"\").Replace(\"(\", \"\").Replace(\"\
    )\", \"\").Replace(\"[\", \"\").Replace(\"]\", \"\").Replace(\"{\", \"\").Replace(\"\
    }\", \"\").Replace(\"|\", \"\").Replace(\"~\", \"\").Replace(\"$\", \"\").Replace(\"\
    %\", \"\").Replace(\"^\", \"\").Replace(\"&\", \"\").Replace(\"*\", \"\").Replace(\"\
    (\", \"\").Replace(\")\", \"\").Replace(\"[\", \"\").Replace(\"]\", \"\").Replace(\"\
    {\", \"\").Replace(\"}\", \"\").Replace(\"|\", \"\").Replace(\"~\", \"\").Replace(\"\
    $\", \"\").Replace(\"%\", \"\").Replace(\"^\", \"\"", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score = g;\n            foreach (long\
    \ g in guess) {\n                diff = g - score;\n                if (diff <\
    \ 0) {\n                    diff = -diff;\n                }\n               \
    \ result.Add(diff);\n            }\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4\
    \ = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 =\
    \ 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 =\
    \ 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;\n        long diff84", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long diff = 0;\n        foreach (var item in game) {\n            score =\
    \ item;\n            guess = guess[game.IndexOf(item)]; // guess = guess[game.IndexOf(item)]\n\
    \            diff = guess - score;\n            result.Add(diff);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        foreach (long g in\
    \ game) {\n            score += g;\n        }\n        foreach (long g in guess)\
    \ {\n            difference += Math.Abs(g - score);\n        }\n        foreach\
    \ (long g in guess) {\n            result.Add(Math.Abs(g - score));\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long diff = 0;\n        long guess = 0;\n     \
    \   long game = 0;\n        long game2 = 0;\n        long game3 = 0;\n       \
    \ long game4 = 0;\n        long game5 = 0;\n        long game6 = 0;\n        long\
    \ game7 = 0;\n        long game8 = 0;\n        long game9 = 0;\n        long game10\
    \ = 0;\n        long game11 = 0;\n        long game12 = 0;\n        long game13\
    \ = 0;\n        long game14 = 0;\n        long game15 = 0;\n        long game16\
    \ = 0;\n        long game17 = 0;\n        long game18 = 0;\n        long game19\
    \ = 0;\n        long game20 = 0;\n        long game21 = 0;\n        long game22\
    \ = 0;\n        long game23 = 0;\n        long game24 = 0;\n        long game25\
    \ = 0;\n        long game26 = 0;\n        long game27 = 0;\n        long game28\
    \ = 0;\n        long game29 = 0;\n        long game30 = 0;\n        long game31\
    \ = 0;\n        long game32 = 0;\n        long game33 = 0;\n        long game34\
    \ = 0;\n        long game35 = 0;\n        long game36 = 0;\n        long game37\
    \ = 0;\n        long game38 = 0;\n        long game39 = 0;\n        long game40\
    \ = 0;\n        long game41 = 0;\n        long game42 = 0;\n        long game43\
    \ = 0;\n        long game44 = 0;\n        long game45 = 0;\n        long game46\
    \ = 0;\n        long game47 = 0;\n        long game48 = 0;\n        long game49\
    \ = 0;\n        long game50 = 0;\n        long game51 = 0;\n        long game52\
    \ = 0;\n        long game53 = 0;\n        long game54 = 0;\n        long game55\
    \ = 0;\n        long game56 = 0;\n        long game57 = 0;\n        long game58\
    \ = 0;\n        long game59 = 0;\n        long game60 = 0;\n        long game61\
    \ = 0;\n        long game62 = 0;\n        long game63 = 0;\n        long game64\
    \ = 0;\n        long game65 = 0;\n        long game66 = 0;\n        long game67\
    \ = 0;\n        long game68 = 0;\n        long game69 = 0;\n        long game70\
    \ = 0;\n        long game71 = 0;\n        long game72 = 0;\n        long game73\
    \ = 0;\n        long game74 = 0;\n        long game75 = 0;\n        long game76\
    \ = 0;\n        long game77 = 0;\n        long game78 = 0;\n        long game79\
    \ = 0;\n        long game80 = 0;\n        long game81 = 0;\n        long game82\
    \ = 0;\n", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        bool correct = false;\n        foreach\
    \ (long g in game) {\n            score = g;\n            foreach (long g in guess)\
    \ {\n                diff = g - score;\n                if (diff < 0) {\n    \
    \                diff = -diff;\n                }\n                if (diff ==\
    \ 0) {\n                    correct = true;\n                    break;\n    \
    \            }\n            }\n            result.Add(diff);\n        }\n    \
    \    if (correct) {\n            return result;\n        }\n        List<long>\
    \ diffs = new List<long>();\n        foreach (long g in guess) {\n           \
    \ diffs.Add(g - score);\n        }\n        return diffs;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guessed =\
    \ 0;\n        long difference = 0;\n        bool correct = false;\n        foreach\
    \ (long g in game) {\n            guessed = g;\n            difference = guess\
    \ - score;\n            if (difference < 0) {\n                difference = difference\
    \ * -1;\n            }\n            if (difference == 0) {\n                result.Add(0);\n\
    \                correct = true;\n            }\n            else {\n        \
    \        result.Add(difference);\n            }\n        }\n        if (!correct)\
    \ {\n            foreach (long g in guess) {\n                guessed = g;\n \
    \               difference = guess - score;\n                if (difference <\
    \ 0) {\n                    difference = difference * -1;\n                }\n\
    \                if (difference == 0) {\n                    result.Add(0);\n\
    \                }\n                else {\n                    result.Add(difference);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        long difference = 0;\n        bool correct = false;\n  \
    \      foreach (long g in game) {\n            guess = g.ToString();\n       \
    \     difference = Math.Abs(guess - score);\n            if (guess == guess) {\n\
    \                correct = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (correct) {\n            result.Add(0);\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long score = 0;\n        long diff = 0;\n        long diff2 = 0;\n       \
    \ long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n        long\
    \ diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n        long diff9\
    \ = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n        long diff12\
    \ = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n        long diff15\
    \ = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n        long diff18\
    \ = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n        long diff21\
    \ = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n        long diff24\
    \ = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n        long diff27\
    \ = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n        long diff30\
    \ = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n        long diff33\
    \ = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n        long diff36\
    \ = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n        long diff39\
    \ = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n        long diff42\
    \ = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n        long diff45\
    \ = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n        long diff48\
    \ = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n        long diff51\
    \ = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n        long diff54\
    \ = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n        long diff57\
    \ = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n        long diff60\
    \ = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n        long diff63\
    \ = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n        long diff66\
    \ = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n        long diff69\
    \ = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n        long diff72\
    \ = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n        long diff75\
    \ = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n        long diff78\
    \ = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n        long diff81\
    \ = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n        long diff84",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long difference = 0;\n        foreach (long g in game)\
    \ {\n            score = g;\n            foreach (long g in guess) {\n       \
    \         guess = g;\n                difference = Math.Abs(guess - score);\n\
    \                result.Add(difference);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long difference = 0;\n        bool correct\
    \ = false;\n        foreach (var item in game) {\n            score += item;\n\
    \        }\n        foreach (var item in guess) {\n            guess += item;\n\
    \        }\n        if (score == guess) {\n            result.Add(0);\n      \
    \      correct = true;\n        }\n        else {\n            difference = score\
    \ - guess;\n            result.Add(difference);\n            correct = false;\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (long i in game) {\n            score = i;\n            foreach\
    \ (long j in guess) {\n                guess = j;\n                diff = guess\
    \ - score;\n                if (diff < 0) {\n                    diff = -diff;\n\
    \                }\n                result.Add(diff);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool isCorrect = false;\n        foreach (long g in game) {\n       \
    \     score += g;\n        }\n        foreach (long g in guess) {\n          \
    \  guess += g;\n        }\n        foreach (long g in guess) {\n            difference\
    \ = guess - score;\n            if (difference < 0) {\n                difference\
    \ = difference * -1;\n            }\n            if (difference == 0) {\n    \
    \            isCorrect = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (isCorrect) {\n            return result;\n        }\n\
    \        else {\n            return result.Select(x => Math.Abs(x)).ToList();\n\
    \        }", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score = g;\n            foreach (long g in guess) {\n                diff\
    \ = g - score;\n                if (diff < 0) {\n                    diff = -diff;\n\
    \                }\n                if (diff == 0) {\n                    result.Add(0);\n\
    \                }\n                else {\n                    result.Add(diff);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   var result = new List<long>();\n        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        if (diff > 0) {\n        \
    \    result.Add(diff);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g;\n        }\n        if\
    \ (diff == 0) {\n            result.Add(0);\n        } else {\n            result.Add(Math.Abs(score\
    \ - diff));\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long guess = 0;\n      \
    \  long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long\
    \ diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7\
    \ = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10\
    \ = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        bool gameWon =\
    \ false;\n        bool guessWon = false;\n        bool gameWonOrWon = false;\n\
    \        bool guessWonOrWon = false;\n        bool gameWonOrWonOrWon = false;\n\
    \        bool guessWonOrWonOrWon = false;\n        bool gameWonOrWonOrWonOrWon\
    \ = false;\n        bool guessWonOrWonOrWonOrWon = false;\n        bool gameWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool guessWonOrWonOrWonOrWonOrWon = false;\n        bool gameWonOrWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool guessWonOrWonOrWonOrWonOrWonOrWon = false;\n        bool\
    \ gameWonOrWonOrWonOrWonOrWonOrWonOrWon = false;\n        bool guessWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool gameWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon = false;\n\
    \        bool guessWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon = false;\n\
    \        bool gameWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon = false;\n\
    \        bool guessWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool gameWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool guessWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWon\
    \ = false;\n        bool gameWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrWonOrW",
  "        List<long> result = new List<long>();\n        foreach (long g in game)\
    \ {\n            long guess = guess.FirstOrDefault();\n            long diff =\
    \ g - guess;\n            result.Add(diff);\n        }\n        return result;",
  "        var result = new List<long>();\n        foreach (var g in game) {\n   \
    \         var guessedCorrectly = false;\n            foreach (var g in guess)\
    \ {\n                if (g == g) {\n                    guessedCorrectly = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!guessedCorrectly) {\n                result.Add(Math.Abs(g - game[0]));\n\
    \            } else {\n                result.Add(0);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        bool gameOver = false;\n        bool gameOver2\
    \ = false;\n        bool gameOver3 = false;\n        bool gameOver4 = false;\n\
    \        bool gameOver5 = false;\n        bool gameOver6 = false;\n        bool\
    \ gameOver7 = false;\n        bool gameOver8 = false;\n        bool gameOver9\
    \ = false;\n        bool gameOver10 = false;\n        bool gameOver11 = false;\n\
    \        bool gameOver12 = false;\n        bool gameOver13 = false;\n        bool\
    \ gameOver14 = false;\n        bool gameOver15 = false;\n        bool gameOver16\
    \ = false;\n        bool gameOver17 = false;\n        bool gameOver18 = false;\n\
    \        bool gameOver19 = false;\n        bool gameOver20 = false;\n        bool\
    \ gameOver21 = false;\n        bool gameOver22 = false;\n        bool gameOver23\
    \ = false;\n        bool gameOver24 = false;\n        bool gameOver25 = false;\n\
    \        bool gameOver26 = false;\n        bool gameOver27 = false;\n        bool\
    \ gameOver28 = false;\n        bool gameOver29 = false;\n        bool gameOver30\
    \ = false;\n        bool gameOver31 = false;\n        bool gameOver32 = false;\n\
    \        bool gameOver33 = false;\n        bool gameOver34 = false;\n        bool\
    \ gameOver35 = false;\n        bool gameOver36 = false;\n        bool gameOver37\
    \ = false;\n        bool gameOver38 = false;\n        bool gameOver39 = false;\n\
    \        bool gameOver40 = false;\n        bool gameOver41 = false;\n        bool\
    \ gameOver42 = false;\n        bool gameOver43 = false;\n        bool gameOver44\
    \ = false;\n        bool gameOver45 = false;\n        bool gameOver46 = false;\n\
    \        bool gameOver47 = false;\n        bool gameOver48 = false;\n        bool\
    \ gameOver49 = false;\n        bool gameOver50 = false;\n        bool gameOver51\
    \ = false;\n        bool gameOver52 = false;\n        bool gameOver53 = false;\n\
    \        bool gameOver54 = false;\n        bool gameOver55 = false;\n        bool\
    \ gameOver56 = false;\n        bool gameOver57 = false;\n        bool gameOver58\
    \ = false;\n        bool gameOver59 = false;\n        bool gameOver60 = false;\n\
    \        bool gameOver61 = false;\n        bool gameOver62 = false;\n        bool\
    \ gameOver63 = false;\n        bool gameOver64 = false;\n        bool gameOver65\
    \ = false;\n        bool gameOver66 = false;\n        bool gameOver67 = false;\n\
    \        ", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score += g;\n        }\n        foreach (long g in guess) {\n            diff\
    \ += g - score;\n        }\n        result.Add(diff);\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long\
    \ diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7\
    \ = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n        long diff10\
    \ = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n        long diff13\
    \ = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n        long diff16\
    \ = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n        long diff19\
    \ = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n        long diff22\
    \ = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n        long diff25\
    \ = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n        long diff28\
    \ = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n        long diff31\
    \ = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n        long diff34\
    \ = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n        long diff37\
    \ = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n        long diff40\
    \ = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n        long diff43\
    \ = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n        long diff46\
    \ = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n        long diff49\
    \ = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n        long diff52\
    \ = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n        long diff55\
    \ = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n        long diff58\
    \ = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n        long diff61\
    \ = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n        long diff64\
    \ = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n        long diff67\
    \ = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n        long diff70\
    \ = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n        long diff73\
    \ = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n        long diff76\
    \ = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n        long diff79\
    \ = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n        long diff82\
    \ = 0;\n        long diff83 = 0;\n        long diff84", "        var result =\
    \ new List<long>();\n        var gameLength = game.Count;\n        var guessLength\
    \ = guess.Count;\n        if (gameLength != guessLength) {\n            throw\
    \ new ArgumentException(\"Game and guess lists must be of equal length\");\n \
    \       }\n        for (int i = 0; i < gameLength; i++) {\n            var gameScore\
    \ = game[i];\n            var guessScore = guess[i];\n            if (gameScore\
    \ == guessScore) {\n                result.Add(0);\n            } else {\n   \
    \             result.Add(Math.Abs(gameScore - guessScore));\n            }\n \
    \       }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        bool gameWon =\
    \ false;\n        bool gameOver = false;\n        bool gameWon = false;\n    \
    \    bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver\
    \ = false;\n        bool gameWon = false;\n        bool gameOver = false;\n  \
    \      bool gameWon = false;\n        bool gameOver = false;\n        bool gameWon\
    \ = false;\n        bool gameOver = false;\n        bool gameWon = false;\n  \
    \      bool gameOver = false;\n        bool gameWon = false;\n        bool gameOver",
  "        var result = new List<long>();\n        var gameLength = game.Count;\n\
    \        var guessLength = guess.Count;\n        if (gameLength != guessLength)\
    \ {\n            throw new ArgumentException(\"The two lists must have the same\
    \ length\");\n        }\n        var gameScores = new int[gameLength];\n     \
    \   var guessScores = new int[guessLength];\n        for (int i = 0; i < gameLength;\
    \ i++) {\n            gameScores[i] = game[i];\n            guessScores[i] = guess[i];\n\
    \        }\n        for (int i = 0; i < guessLength; i++) {\n            int gameScore\
    \ = gameScores[i];\n            int guessScore = guessScores[i];\n           \
    \ if (gameScore == guessScore) {\n                result.Add(0);\n           \
    \ } else {\n                result.Add(Math.Abs(gameScore - guessScore));\n  \
    \          }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long diff = 0;\n       \
    \ foreach (long g in game) {\n            score = g;\n            foreach (long\
    \ g in guess) {\n                diff = g - score;\n                if (diff <\
    \ 0)\n                    diff *= -1;\n                if (diff == 0)\n      \
    \              result.Add(0);\n                else\n                    result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   bool correct = false;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                diff += Math.Abs(g\
    \ - g);\n                if (g == g) {\n                    correct = true;\n\
    \                }\n            }\n            if (correct) {\n              \
    \  result.Add(0);\n            } else {\n                result.Add(diff);\n \
    \           }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long difference = 0;\n        long scoreDiff = 0;\n        long guessDiff\
    \ = 0;\n        bool correct = false;\n        bool guessedCorrectly = false;\n\
    \        bool guessedIncorrectly = false;\n        bool guessedCorrectlyIncorrectly\
    \ = false;\n        bool guessedIncorrectlyIncorrectly = false;\n        bool\
    \ guessedCorrectlyIncorrectlyIncorrectly = false;\n        bool guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n \
    \       bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n    \
    \    bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n     \
    \   bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool\
    \ guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n \
    \       bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n    \
    \    bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n     \
    \   bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool\
    \ guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n \
    \       bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n    \
    \    bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n     \
    \   bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool\
    \ guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ false;\n        bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n \
    \       bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n    \
    \    bool guessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n     \
    \   bool guessedCorrectlyIncorrectlyIncorrectlyIncorrectly = false;\n        bool\
    \ guessed", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long difference = 0;\n        long score2 = 0;\n        long difference2\
    \ = 0;\n        long score3 = 0;\n        long difference3 = 0;\n        long\
    \ score4 = 0;\n        long difference4 = 0;\n        long score5 = 0;\n     \
    \   long difference5 = 0;\n        long score6 = 0;\n        long difference6\
    \ = 0;\n        long score7 = 0;\n        long difference7 = 0;\n        long\
    \ score8 = 0;\n        long difference8 = 0;\n        long score9 = 0;\n     \
    \   long difference9 = 0;\n        long score10 = 0;\n        long difference10\
    \ = 0;\n        long score11 = 0;\n        long difference11 = 0;\n        long\
    \ score12 = 0;\n        long difference12 = 0;\n        long score13 = 0;\n  \
    \      long difference13 = 0;\n        long score14 = 0;\n        long difference14\
    \ = 0;\n        long score15 = 0;\n        long difference15 = 0;\n        long\
    \ score16 = 0;\n        long difference16 = 0;\n        long score17 = 0;\n  \
    \      long difference17 = 0;\n        long score18 = 0;\n        long difference18\
    \ = 0;\n        long score19 = 0;\n        long difference19 = 0;\n        long\
    \ score20 = 0;\n        long difference20 = 0;\n        long score21 = 0;\n  \
    \      long difference21 = 0;\n        long score22 = 0;\n        long difference22\
    \ = 0;\n        long score23 = 0;\n        long difference23 = 0;\n        long\
    \ score24 = 0;\n        long difference24 = 0;\n        long score25 = 0;\n  \
    \      long difference25 = 0;\n        long score26 = 0;\n        long difference26\
    \ = 0;\n        long score27 = 0;\n        long difference27 = 0;\n        long\
    \ score28 = 0;\n        long difference28 = 0;\n        long score29 = 0;\n  \
    \      long difference29 = 0;\n        long score30 = 0;\n        long difference30\
    \ = 0;\n        long score31 = 0;\n        long difference31 = 0;\n        long\
    \ score32 = 0;\n        long difference32 = 0;\n        long score33 = 0;\n  \
    \      long difference33 = 0;\n        long score34 = 0;\n        long difference34\
    \ = 0;\n        long score35 = 0;\n        long difference35 = 0;\n        long\
    \ score36 = 0;\n        long difference36 = 0;\n        long score37 = 0;\n  \
    \      long difference37 = 0;\n        long score38 = 0;\n        long difference38\
    \ = 0;\n        long score39 = 0;\n        long difference39 = 0;\n        long\
    \ score40 = 0;\n        long difference40 = 0;\n        long score41 = 0;\n  \
    \      long difference41 = 0;\n        long score42 = 0;\n        long difference42\
    \ = 0;\n        long score43 = 0;\n        long ", "        var result = new List<long>();\n\
    \        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long difference = 0;\n        foreach (long guess in guess) {\n\
    \            score = game.ElementAtOrDefault(guess);\n            if (score ==\
    \ 0) {\n                difference = guess - score;\n                result.Add(difference);\n\
    \            } else {\n                difference = score - guess;\n         \
    \       result.Add(difference);\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

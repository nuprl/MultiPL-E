language: cs
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long maxIndex = 0;\n        foreach (long i in\
    \ l) {\n            if (i > max) {\n                max = i;\n               \
    \ maxIndex = i;\n            }\n        }\n        return maxIndex;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68c85b7abead4ae2b06ae0d5d1dc79e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68c85b7abead4ae2b06ae0d5d1dc79e0>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i < max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long max2 = l.Max(x => x);\n        long max3\
    \ = l.Max(x => x, x => x);\n        long max4 = l.Max(x => x, x => x, x => x);\n\
    \        long max5 = l.Max(x => x, x => x, x => x, x => x);\n        long max6\
    \ = l.Max(x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kif8ik7.cs(20,1188): error CS1026: ) expected

    /tmp/tmp6kif8ik7.cs(20,1188): error CS1002: ; expected

    '
  timestamp: 1659792607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long max2 = l.Max(x => x);\n        long max3\
    \ = l.Max(x => x, x => x);\n        long max4 = l.Max(x => x, x => x, x => x);\n\
    \        long max5 = l.Max(x => x, x => x, x => x, x => x);\n        long max6\
    \ = l.Max(x => x, x => x, x => x, x => x, x => x);\n        long max7 = l.Max(x\
    \ => x, x => x, x => x, x => x, x => x, x => x);\n        long max8 = l.Max(x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x);\n        long max9 =\
    \ l.Max(x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x,\
    \ x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x =>\
    \ x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x => x, x\
    \ => x, x => x, x => x, x => x, x \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0b16onfu.cs(23,980): error CS1026: ) expected

    /tmp/tmp0b16onfu.cs(23,980): error CS1002: ; expected

    '
  timestamp: 1659792607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max)\n                max = i;\n        }\n        return max;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l) {\n            if\
    \ (x > max) {\n                max = x;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l)\n            if (x\
    \ > max)\n                max = x;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max)\n                max = i;\n        }\n        return max;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l)\n            if (x\
    \ > max)\n                max = x;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l)\n            if (x\
    \ > max)\n                max = x;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max)\n                max = i;\n        }\n        return max;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var item in l) {\n           \
    \ if (item > max) {\n                max = item;\n            }\n        }\n \
    \       return max;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l) {\n            if (i >\
    \ max)\n                max = i;\n        }\n        return max;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l)\n            if (i >\
    \ max)\n                max = i;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i < max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l)\n            if (i >\
    \ max)\n                max = i;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l)\n            if (i >\
    \ max)\n                max = i;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l) {\n            if (i >\
    \ max) max = i;\n        }\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i < max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i < max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <99ec078516cc43b38c340fc632590a45>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l) {\n            if (i >\
    \ max) {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l) {\n            if\
    \ (x > max) {\n                max = x;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long maxIndex = 0;\n        foreach (long i in\
    \ l) {\n            if (i > max) {\n                max = i;\n               \
    \ maxIndex = i;\n            }\n        }\n        return maxIndex;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68c85b7abead4ae2b06ae0d5d1dc79e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68c85b7abead4ae2b06ae0d5d1dc79e0>:0 \n"
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (var item in l) {\n            if (item > max)\
    \ {\n                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (var i in l) {\n            if (i > max) max\
    \ = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (var item in l) {\n            if (item > max)\
    \ {\n                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l) {\n            if (i >\
    \ max)\n                max = i;\n        }\n        return max;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var x in l) {\n            if\
    \ (x > max) {\n                max = x;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l) {\n            if (i\
    \ > max)\n                max = i;\n        }\n        return max;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > max) {\n                max = l[i];\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l)\n            if (x\
    \ > max)\n                max = x;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l) {\n            if (i >\
    \ max) {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < l.Count; i++) {\n            if (l[i] > max) {\n                max = l[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.First();\n        foreach (long i in l)\n            if (i >\
    \ max)\n                max = i;\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long x in l) {\n            if\
    \ (x > max) {\n                max = x;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (var item in l) {\n           \
    \ if (item > max) {\n                max = item;\n            }\n        }\n \
    \       return max;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\
    \ == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l[0];\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = long.MinValue;\n        foreach (long i in l) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792525
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> max_element([1,\
    \ 2, 3])\n    // 3\n    // >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10])\n    // 123\n    public static long MaxElement(List<long> l) {\n     \
    \   long max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792608

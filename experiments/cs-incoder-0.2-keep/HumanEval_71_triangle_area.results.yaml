language: cs
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 > side2 && side1 > side3) {\n          \
    \  area = side1;\n        } else if (side2 > side1 && side2 > side3) {\n     \
    \       area = side2;\n        } else if (side3 > side1 && side3 > side2) {\n\
    \            area = side3;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt0a25p23.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0611llmb.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float third2;\n        float third3;\n        float third4;\n       \
    \ float third5;\n        float third6;\n        float third7;\n        float third8;\n\
    \        float third9;\n        float third10;\n        float third11;\n     \
    \   float third12;\n        float third13;\n        float third14;\n        float\
    \ third15;\n        float third16;\n        float third17;\n        float third18;\n\
    \        float third19;\n        float third20;\n        float third21;\n    \
    \    float third22;\n        float third23;\n        float third24;\n        float\
    \ third25;\n        float third26;\n        float third27;\n        float third28;\n\
    \        float third29;\n        float third30;\n        float third31;\n    \
    \    float third32;\n        float third33;\n        float third34;\n        float\
    \ third35;\n        float third36;\n        float third37;\n        float third38;\n\
    \        float third39;\n        float third40;\n        float third41;\n    \
    \    float third42;\n        float third43;\n        float third44;\n        float\
    \ third45;\n        float third46;\n        float third47;\n        float third48;\n\
    \        float third49;\n        float third50;\n        float third51;\n    \
    \    float third52;\n        float third53;\n        float third54;\n        float\
    \ third55;\n        float third56;\n        float third57;\n        float third58;\n\
    \        float third59;\n        float third60;\n        float third61;\n    \
    \    float third62;\n        float third63;\n        float third64;\n        float\
    \ third65;\n        float third68;\n        float third69;\n        float third70;\n\
    \        float third71;\n        float third72;\n        float third73;\n    \
    \    float third74;\n        float third75;\n        float third76;\n        float\
    \ third77;\n        float third78;\n        float third79;\n        float thir\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3lvzrqnd.cs(97,19): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float fourth;\n        float fifth;\n        float sixth;\n        float\
    \ seventh;\n        float eighth;\n        float ninth;\n        float tenth;\n\
    \        float eleventh;\n        float twelfth;\n        float thirteenth;\n\
    \        float fourteenth;\n        float fifteenth;\n        float sixteenth;\n\
    \        float seventeenth;\n        float eighteenth;\n        float nineteenth;\n\
    \        float twentieth;\n        float twentyfirst;\n        float twentysecond;\n\
    \        float twentythird;\n        float twentyfourth;\n        float twentyfifth;\n\
    \        float twentysixth;\n        float twentyseventh;\n        float twentyeighth;\n\
    \        float twentyninth;\n        float thirtieth;\n        float thirtyfirst;\n\
    \        float thirtysecond;\n        float thirtythird;\n        float thirtyfourth;\n\
    \        float thirtyfifth;\n        float thirtysixth;\n        float thirtyseventh;\n\
    \        float thirtyeighth;\n        float thirtyninth;\n        float fortieth;\n\
    \        float fortyfirst;\n        float fortysecond;\n        float fortythird;\n\
    \        float fortyfourth;\n        float fortyfifth;\n        float fortysixth;\n\
    \        float fortyseventh;\n        float fortyeighth;\n        float fortyninth;\n\
    \        float fiftieth;\n        float fiftyfirst;\n        float fiftysecond;\n\
    \        float fiftythird;\n        float fiftyfourth;\n        float fiftyfifth;\n\
    \        float fiftysixth;\n        float fiftyseventh;\n        float fiftyeighth;\n\
    \        float fiftyninth;\n        float sixtieth;\n        float sixtyfirst;\n\
    \        float sixtysecond;\n        float sixtythird;\n        float sixtyfourth;\n\
    \        float sixtyfifth;\n        float sixtysixth;\n        float sixtyseventh;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5k8_q7b9.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp5k8_q7b9.cs(20,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(21,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(22,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(23,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(24,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(25,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(26,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(27,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(28,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(29,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(30,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(31,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(32,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(33,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(34,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(35,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(36,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(37,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(38,15): warning C'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum = a + b + c;\n    \
    \    if (sum > c) {\n            area = -1;\n        } else {\n            area\
    \ = Math.Sqrt(Math.Pow(sum, 2) / 2);\n        }\n        return area;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4gaq1m7v.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side5 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side6 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        float side7 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side8 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        float side9 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n        float side10\
    \ = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2)\
    \ + Math.Pow(c, 2) + Math.Pow(a, 2));\n        float side11 = Math.Sqrt(Math.Pow(b,\
    \ 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        float side12 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2));\n \
    \       float side13 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side14 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        float side15 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2));\n        float side16\
    \ = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2)\
    \ + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side17 = Math.Sqrt(Math.Pow(b,\
    \ 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_472d11d.cs(35,96): error CS1525: Invalid expression term ''}''

    /tmp/tmp_472d11d.cs(35,96): error CS1026: ) expected

    /tmp/tmp_472d11d.cs(35,96): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a + b + c;\n\
    \        if (sum > c) {\n            area = -1;\n        } else if (sum == c)\
    \ {\n            area = 0.5f * Math.Sqrt(a * b * c);\n        } else if (sum >\
    \ b) {\n            area = 0.5f * Math.Sqrt(a * b * c);\n        } else if (sum\
    \ < b) {\n            area = 0.5f * Math.Sqrt(a * b * c);\n        }\n       \
    \ return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbp0xzuky.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpbp0xzuky.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpbp0xzuky.cs(27,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpbp0xzuky.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float fourth;\n        float fifth;\n        float sixth;\n        float\
    \ seventh;\n        float eighth;\n        float ninth;\n        float tenth;\n\
    \        float eleventh;\n        float twelfth;\n        float thirteenth;\n\
    \        float fourteenth;\n        float fifteenth;\n        float sixteenth;\n\
    \        float seventeenth;\n        float eighteenth;\n        float nineteenth;\n\
    \        float twentieth;\n        float twentyfirst;\n        float twentysecond;\n\
    \        float twentythird;\n        float twentyfourth;\n        float twentyfifth;\n\
    \        float twentysix;\n        float twentyseventh;\n        float twentyeighth;\n\
    \        float twentyninth;\n        float thirtieth;\n        float thirtyfirst;\n\
    \        float thirtysecond;\n        float thirtythird;\n        float thirtyfourth;\n\
    \        float thirtyfifth;\n        float thirtysix;\n        float thirtyseventh;\n\
    \        float thirtyeighth;\n        float thirtyninth;\n        float fourtieth;\n\
    \        float fourtyfirst;\n        float fourtysecond;\n        float fourtythird;\n\
    \        float fourtyfourth;\n        float fourtyfifth;\n        float fourtysix;\n\
    \        float fourtyseventh;\n        float fourtyeighth;\n        float fourtyninth;\n\
    \        float fiftieth;\n        float fiftyfirst;\n        float fiftysecond;\n\
    \        float fiftythird;\n        float fiftyfourth;\n        float fiftyfifth;\n\
    \        float fiftysix;\n        float fiftyseventh;\n        float fiftyeighth;\n\
    \        float fiftyninth;\n        float sixtieth;\n        float sixtyfirst;\n\
    \        float sixtysecond;\n        float sixtythird;\n        float sixtyfourth;\n\
    \        float sixtyfifth;\n        float sixtysix;\n        float sixtyseventh;\n\
    \        float sixtyeighth\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5quebosf.cs(85,26): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side;\n\
    \        float third;\n        float fourth;\n        float fifth;\n        float\
    \ sixth;\n        float seventh;\n        float eighth;\n        float ninth;\n\
    \        float tenth;\n        float eleventh;\n        float twelfth;\n     \
    \   float thirteenth;\n        float fourteenth;\n        float fifteenth;\n \
    \       float sixteenth;\n        float seventeenth;\n        float eighteenth;\n\
    \        float nineteenth;\n        float twentieth;\n        float twentyfirst;\n\
    \        float twentysecond;\n        float twentythird;\n        float twentyfourth;\n\
    \        float twentyfifth;\n        float twentysixth;\n        float twentyseventh;\n\
    \        float twentyeighth;\n        float twentyninth;\n        float thirtieth;\n\
    \        float thirtyfirst;\n        float thirtysecond;\n        float thirtythird;\n\
    \        float thirtyfourth;\n        float thirtyfifth;\n        float thirtysixth;\n\
    \        float thirtyseventh;\n        float thirtyeighth;\n        float thirtyninth;\n\
    \        float fortieth;\n        float fortyfirst;\n        float fortysecond;\n\
    \        float fortythird;\n        float fortyfourth;\n        float fortyfifth;\n\
    \        float fortysixth;\n        float fortyseventh;\n        float fortyeighth;\n\
    \        float fortyninth;\n        float fiftieth;\n        float fiftyfirst;\n\
    \        float fiftysecond;\n        float fiftythird;\n        float fiftyfourth;\n\
    \        float fiftyfifth;\n        float fiftysixth;\n        float fiftyseventh;\n\
    \        float fiftyeighth;\n        float fiftyninth;\n        float sixtieth;\n\
    \        float sixtyfirst;\n        float sixtysecond;\n        float sixtythird;\n\
    \        float sixtyfourth;\n        float sixtyfifth;\n        float sixtysixth;\n\
    \        float sixtyse\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd5bvgs7o.cs(85,22): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side1\
    \ = (float)(a * Math.Sqrt(Math.Pow(b, 2.0f) / 2.0f));\n        float side2 = (float)(b\
    \ * Math.Sqrt(Math.Pow(c, 2.0f) / 2.0f));\n        float side3 = (float)(c * Math.Sqrt(Math.Pow(a,\
    \ 2.0f) / 2.0f));\n        sum = side1 + side2 + side3;\n        if (sum > side3)\n\
    \            area = sum / 2.0f;\n        else\n            area = -1;\n      \
    \  return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnv9gixx_.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)(a\
    \ * b) / c;\n        float side2 = (float)(a * c) / b;\n        float side3 =\
    \ (float)(b * c) / a;\n        if (side1 + side2 > side3) {\n            area\
    \ = side1 + side2;\n        } else {\n            area = side3;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi9nlt6l1.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side1;\n\
    \        float side2;\n        float side3;\n        side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        side2 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        side3 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n \
    \       sum = side1 + side2 + side3;\n        if (sum > 0) {\n            area\
    \ = sum / 2;\n        } else {\n            area = -1;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp56b77apf.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(b * b - 4 * a * c));\n        float side2 = (float)(b * Math.Sqrt(b\
    \ * b - 4 * a * c));\n        float side3 = (float)(a * Math.Sqrt(b * b - 4 *\
    \ a * c));\n        if (side1 + side2 > side3) {\n            area = side1 + side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpthofr72_.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float sum1 = side1 + side2;\n            float sum2 = side2 + side3;\n\
    \            float sum3 = side3 + side1;\n            float sum4 = side1 + side3;\n\
    \            float sum5 = side2 + side4;\n            float sum6 = side3 + side4;\n\
    \            float sum7 = side4 + side1;\n            float sum8 = side4 + side2;\n\
    \            float sum9 = side1 + side4;\n            float sum10 = side2 + side4;\n\
    \            float sum11 = side3 + side5;\n            float sum12 = side4 + side5;\n\
    \            float sum13 = side5 + side1;\n            float sum14 = side5 + side2;\n\
    \            float sum15 = side1 + side5;\n            float sum16 = side2 + side5;\n\
    \            float sum17 = side3 + side6;\n            float sum18 = side4 + side6;\n\
    \            float sum19 = side5 + side6;\n            float sum20 = side1 + side6;\n\
    \            float sum21 = side2 + side6;\n            float sum22 = side3 + side7;\n\
    \            float sum23 = side4 + side7;\n            float sum24 = side5 + side7;\n\
    \            float sum25 = side1 + side7;\n            float sum26 = side2 + side7;\n\
    \            float sum27 = side3 + side8;\n            float sum28 = side4 + side8;\n\
    \            float sum29 = side5 + side8;\n            float sum30 = side1 + side8;\n\
    \            float sum31 = side2 + side8;\n            float sum32 = side3 + side9;\n\
    \            float sum33 = side4 + side9;\n            float sum34 = side5 + side9;\n\
    \            float sum35 = side1 + side9;\n            float sum36 = side2 + side9;\n\
    \            float sum37 = side3 + side10;\n            float sum38 = side4 +\
    \ side10;\n            float sum39 = side5 + side10;\n            float sum40\
    \ = side1 + side10;\n            float sum41 = side2 + side10;\n            float\
    \ sum42 = side3 + side11;\n            float sum43 = side4 + side11;\n       \
    \     float sum44 = side5 + side11;\n            float sum45 = side1 + side11;\n\
    \            float sum46 = side2 + side11;\n            float sum47\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt3kzi4y0.cs(70,24): error CS1002: ; expected

    /tmp/tmpt3kzi4y0.cs(72,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpt3kzi4y0.cs(84,2): error CS1513: } expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(sum);\n   \
    \         float side2 = (float)Math.Sqrt(sum - side1);\n            float side3\
    \ = (float)Math.Sqrt(sum - side1 - side2);\n            area = side1 * side2 *\
    \ side3;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv5s7agdx.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 > side2 && side1 > side3) {\n          \
    \  area = side1;\n        } else if (side2 > side1 && side2 > side3) {\n     \
    \       area = side2;\n        } else if (side3 > side1 && side3 > side2) {\n\
    \            area = side3;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt0a25p23.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)(a\
    \ * b) / c;\n        float side2 = (float)(a * c) / b;\n        float side3 =\
    \ (float)(b * c) / a;\n        if (side1 + side2 > side3) {\n            area\
    \ = Math.Round(side1, 2);\n        } else {\n            area = -1;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0hslttz3.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if (a > 0 && b > 0 &&\
    \ c > 0) {\n            float side1 = (float)(a * b);\n            float side2\
    \ = (float)(b * c);\n            float side3 = (float)(a * c);\n            float\
    \ sum = side1 + side2 + side3;\n            if (sum > side3) {\n             \
    \   area = Math.Round((side1 * side2 * side3) / sum, 2);\n            }\n    \
    \    }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprblt47k7.cs(25,24): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(c, 2) +\
    \ Math.Pow(a, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side5 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n\
    \        float side6 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n  \
    \      float side7 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n    \
    \    float side8 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2));\n      \
    \  float side9 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n        float\
    \ side10 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float side11\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side12 =\
    \ (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side13 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n        float side14 = (float)Math.Sqrt(Math.Pow(b, 2)\
    \ + Math.Pow(a, 2));\n        float side15 = (float)Math.Sqrt(Math.Pow(b, 2) +\
    \ Math.Pow(c, 2));\n        float side16 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side17 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n\
    \        float side18 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2));\n \
    \       float side19 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n  \
    \      float side20 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n   \
    \     float side21 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n    \
    \    float side22 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n     \
    \   float side23 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2));\n      \
    \  float side24 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n       \
    \ float side25 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float\
    \ side26 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side27\
    \ = (float)Math.Sqrt(Math.Pow\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppx3t27ff.cs(45,49): error CS1026: ) expected

    /tmp/tmppx3t27ff.cs(45,49): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxndc1vy2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(c, 2));\n            area = Math.Round(side1*side2*side3, 2);\n\
    \        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedim1d18.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(sum);\n   \
    \         float side2 = (float)Math.Sqrt(sum - side1);\n            float side3\
    \ = (float)Math.Sqrt(sum - side1 - side2);\n            area = side1 * side2 *\
    \ side3;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv5s7agdx.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2)\
    \ + Math.Pow(c, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 + side2 > side3) {\n            area = side1\
    \ * side2 * 0.5f;\n        }\n        return Math.Round(area, 2);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp59xnoi51.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp18xggzft.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / 2;\n        float side2 = (float)(b * c) / 2;\n        float side3 = (float)(a\
    \ * c) / 2;\n        float sum = side1 + side2 + side3;\n        if (sum > side3)\
    \ {\n            area = side3;\n        } else {\n            area = sum;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp03q92r2y.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ - Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) -\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) - Math.Pow(a,\
    \ 2));\n        float side5 = Math.Abs(side1 + side2 + side3);\n        float\
    \ side6 = Math.Abs(side1 + side2 + side4);\n        float side7 = Math.Abs(side3\
    \ + side4 + side5);\n        float side8 = Math.Abs(side3 + side5 + side6);\n\
    \        float side9 = Math.Abs(side5 + side6 + side7);\n        float side10\
    \ = Math.Abs(side7 + side8 + side9);\n        float side11 = Math.Abs(side9 +\
    \ side10 + side10);\n        float side12 = Math.Abs(side11 + side10 + side11);\n\
    \        float side13 = Math.Abs(side11 + side12 + side12);\n        float side14\
    \ = Math.Abs(side13 + side12 + side13);\n        float side15 = Math.Abs(side13\
    \ + side14 + side14);\n        float side16 = Math.Abs(side15 + side14 + side15);\n\
    \        float side17 = Math.Abs(side15 + side16 + side16);\n        float side18\
    \ = Math.Abs(side17 + side16 + side17);\n        float side19 = Math.Abs(side17\
    \ + side18 + side18);\n        float side20 = Math.Abs(side19 + side18 + side19);\n\
    \        float side21 = Math.Abs(side19 + side20 + side20);\n        float side22\
    \ = Math.Abs(side21 + side20 + side21);\n        float side23 = Math.Abs(side21\
    \ + side22 + side22);\n        float side24 = Math.Abs(side23 + side22 + side23);\n\
    \        float side25 = Math.Abs(side23 + side24 + side24);\n        float side26\
    \ = Math.Abs(side25 + side24 + side25);\n        float side27 = Math.Abs(side25\
    \ + side26 + side26);\n        float side28 = Math.Abs(side27 + side26 + side27);\n\
    \        float side29 = Math.Abs(side27 + side28 + side28);\n        float side30\
    \ = Math.Abs(side29 + side28 + side29);\n        float side31 = Math.Abs(side\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0jyb8nk5.cs(49,37): error CS1026: ) expected

    /tmp/tmp0jyb8nk5.cs(49,37): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        if ((a + b > c) && (a + c >\
    \ b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        } else {\n\
    \            area = -1;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp85x4d442.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        sum = (a + b + c) / 2;\n        sum2 = Math.Sqrt(sum);\n\
    \        sum3 = sum2 * sum2;\n        if (sum3 >= a + b && sum3 >= a + c && sum3\
    \ >= b + c) {\n            area = sum * 0.5f;\n        }\n        else {\n   \
    \         area = -1;\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1itv61_p.cs(23,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2)\
    \ + Math.Pow(c, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) +\
    \ Math.Pow(c, 2));\n        float sideSum = side1 + side2 + side3;\n        if\
    \ (sideSum > 0) {\n            area = side1 / sideSum;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqwuu_4uz.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        area = Math.Round(side1 * side2 * side3, 2);\n   \
    \     return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj8hc_zeq.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 > side2 && side1 > side3) {\n          \
    \  area = side1;\n        } else if (side2 > side1 && side2 > side3) {\n     \
    \       area = side2;\n        } else if (side3 > side1 && side3 > side2) {\n\
    \            area = side3;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt0a25p23.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxndc1vy2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float area1 = (side1*side1);\n            float area2 = (side2*side2);\n\
    \            float area3 = (side3*side3);\n            float areaTotal = area1+area2+area3;\n\
    \            area = Math.Round(areaTotal,2);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7sydfs22.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(c * c + b * b + a * a);\n        if (side1\
    \ > side2 && side1 > side3) {\n            area = side1;\n        } else if (side2\
    \ > side1 && side2 > side3) {\n            area = side2;\n        } else if (side3\
    \ > side1 && side3 > side2) {\n            area = side3;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwrsf29bd.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)(b * c) / a;\n        float side3 = (float)(a\
    \ * c) / b;\n        float sum = (side1 + side2 + side3) / 3;\n        if (sum\
    \ > 0) {\n            area = Math.Round(sum * 100) / 100;\n        } else {\n\
    \            area = -1;\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3087syim.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side;\n\
    \        float sum2;\n        float sum3;\n        float sum4;\n        float\
    \ sum5;\n        float sum6;\n        float sum7;\n        float sum8;\n     \
    \   float sum9;\n        float sum10;\n        float sum11;\n        float sum12;\n\
    \        float sum13;\n        float sum14;\n        float sum15;\n        float\
    \ sum16;\n        float sum17;\n        float sum18;\n        float sum19;\n \
    \       float sum20;\n        float sum21;\n        float sum22;\n        float\
    \ sum23;\n        float sum24;\n        float sum25;\n        float sum26;\n \
    \       float sum27;\n        float sum28;\n        float sum29;\n        float\
    \ sum30;\n        float sum31;\n        float sum32;\n        float sum33;\n \
    \       float sum34;\n        float sum35;\n        float sum36;\n        float\
    \ sum37;\n        float sum38;\n        float sum39;\n        float sum40;\n \
    \       float sum41;\n        float sum42;\n        float sum43;\n        float\
    \ sum44;\n        float sum45;\n        float sum46;\n        float sum47;\n \
    \       float sum48;\n        float sum49;\n        float sum50;\n        float\
    \ sum51;\n        float sum52;\n        float sum53;\n        float sum54;\n \
    \       float sum55;\n        float sum56;\n        float sum57;\n        float\
    \ sum58;\n        float sum59;\n        float sum60;\n        float sum61;\n \
    \       float sum62;\n        float sum63;\n        float sum64;\n        float\
    \ sum65;\n        float sum66;\n        float sum67;\n        float sum68;\n \
    \       float sum69;\n        float sum70;\n        float sum71;\n        float\
    \ sum72;\n        float sum73;\n        float sum74;\n        float sum75;\n \
    \       float sum76;\n        float sum77;\n        float sum78;\n        float\
    \ sum79;\n        float sum80;\n        float sum81;\n        float sum82;\n \
    \       float sum83;\n        float sum84;\n        float sum85;\n        float\
    \ sum86;\n        float sum87;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpijdph5ua.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpijdph5ua.cs(20,15): warning CS0168: The variable ''side'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(21,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(22,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(23,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(24,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(25,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(26,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(27,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(28,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(29,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(30,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(31,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(32,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(33,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(34,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(35,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(36,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(37,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(38,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if (a > 0 && b > 0 &&\
    \ c > 0) {\n            float s = (a + b + c) / 2.0f;\n            float area1\
    \ = Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n            area = Math.Round(area1,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9fg35a6w.cs(21,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp9fg35a6w.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(c, 2) +\
    \ Math.Pow(a, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side5 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n  \
    \      float side6 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float\
    \ side7 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side8 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        float side9 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side10 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n \
    \       float side11 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float\
    \ side12 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side13 =\
    \ Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side14 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        float side15 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side16 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n \
    \       float side17 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float\
    \ side18 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side19 =\
    \ Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side20 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        float side21 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side22 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n \
    \       float side23 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float\
    \ side24 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side25 =\
    \ Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side26 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(b, 2));\n        float side27 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side28 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2));\n \
    \       float side29 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n        float\
    \ side30 = Math.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg5_4zj0v.cs(48,29): error CS1001: Identifier expected

    /tmp/tmpg5_4zj0v.cs(48,29): error CS1002: ; expected

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b + c * c);\n        float side2 = (float)Math.Sqrt(a * a + b * b\
    \ - c * c);\n        float side3 = (float)Math.Sqrt(a * a - b * b + c * c);\n\
    \        if (side1 > side2 && side1 > side3) {\n            area = side1;\n  \
    \      }\n        else if (side2 > side3) {\n            area = side2;\n     \
    \   }\n        else {\n            area = side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcddx1qc_.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float fourth;\n        float fifth;\n        float sixth;\n        float\
    \ seventh;\n        float eighth;\n        float ninth;\n        float tenth;\n\
    \        float eleventh;\n        float twelfth;\n        float thirteenth;\n\
    \        float fourteenth;\n        float fifteenth;\n        float sixteenth;\n\
    \        float seventeenth;\n        float eighteenth;\n        float nineteenth;\n\
    \        float twentieth;\n        float twentyfirst;\n        float twentysecond;\n\
    \        float twentythird;\n        float twentyfourth;\n        float twentyfifth;\n\
    \        float twentysixth;\n        float twentyseventh;\n        float twentyeighth;\n\
    \        float twentyninth;\n        float thirtieth;\n        float thirtyfirst;\n\
    \        float thirtysecond;\n        float thirtythird;\n        float thirtyfourth;\n\
    \        float thirtyfifth;\n        float thirtysixth;\n        float thirtyseventh;\n\
    \        float thirtyeighth;\n        float thirtyninth;\n        float fortieth;\n\
    \        float fortyfirst;\n        float fortysecond;\n        float fortythird;\n\
    \        float fortyfourth;\n        float fortyfifth;\n        float fortysixth;\n\
    \        float fortyseventh;\n        float fortyeighth;\n        float fortyninth;\n\
    \        float fiftieth;\n        float fiftyfirst;\n        float fiftysecond;\n\
    \        float fiftythird;\n        float fiftyfourth;\n        float fiftyfifth;\n\
    \        float fiftysixth;\n        float fiftyseventh;\n        float fiftyeighth;\n\
    \        float fiftyninth;\n        float sixtieth;\n        float sixtyfirst;\n\
    \        float sixtysecond;\n        float sixtythird;\n        float sixtyfourth;\n\
    \        float sixtyfifth;\n        float sixtysixth;\n        float sixtyseventh;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5k8_q7b9.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp5k8_q7b9.cs(20,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(21,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(22,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(23,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(24,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(25,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(26,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(27,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(28,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(29,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(30,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(31,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(32,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(33,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(34,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(35,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(36,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(37,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmp5k8_q7b9.cs(38,15): warning C'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        sum = (a\
    \ + b + c) / 2;\n        area = Math.Sqrt(Math.Pow(sum, 2) - (Math.Pow(a, 2) +\
    \ Math.Pow(b, 2) + Math.Pow(c, 2)));\n        return Math.Round(area, 2);\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr_a2007l.cs(21,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpr_a2007l.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float sum = (a + b + c)\
    \ / 2;\n        if (Math.Abs(sum - a) > Math.Abs(sum - b)) {\n            area\
    \ = sum - Math.Abs(sum - c);\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1sj0si0j.cs(23,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ - Math.Pow(a, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(c, 2) -\
    \ Math.Pow(b, 2));\n        if (side1 + side2 > side3) {\n            area = Math.Round(side1\
    \ * side2 * .5, 2);\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_oncqn4r.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = side1 + side2;\n            float side5 = side3 - side4;\n\
    \            float side6 = side1 + side3;\n            float side7 = side2 + side3;\n\
    \            float side8 = side5 + side6;\n            float side9 = side7 - side8;\n\
    \            float side10 = side5 + side8;\n            float side11 = side9 +\
    \ side10;\n            float side12 = side7 - side10;\n            float side13\
    \ = side9 - side10;\n            float side14 = side5 - side6;\n            float\
    \ side15 = side13 - side14;\n            float side16 = side13 - side14;\n   \
    \         float side17 = side15 + side16;\n            float side18 = side17 -\
    \ side16;\n            float side19 = side17 - side18;\n            float side20\
    \ = side19 + side18;\n            float side21 = side20 - side18;\n          \
    \  float side22 = side21 - side20;\n            float side23 = side21 - side22;\n\
    \            float side24 = side23 - side22;\n            float side25 = side24\
    \ - side22;\n            float side26 = side25 - side22;\n            float side27\
    \ = side26 - side22;\n            float side28 = side27 - side22;\n          \
    \  float side29 = side28 - side22;\n            float side30 = side29 - side22;\n\
    \            float side31 = side30 - side22;\n            float side32 = side31\
    \ - side22;\n            float side33 = side32 - side22;\n            float side34\
    \ = side33 - side22;\n            float side35 = side34 - side22;\n          \
    \  float side36 = side35 - side22;\n            float side37 = side36 - side22;\n\
    \            float side38 = side37 - side22;\n            float side39 = side38\
    \ - side22;\n            float side40 = side39 - side22;\n            float side41\
    \ = side40 - side22;\n            float side42 = side41 - side22;\n          \
    \  float side43 = side42 - side22;\n            float side44 = side43 - \n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_l10dj1k.cs(64,36): error CS1525: Invalid expression term ''}''

    /tmp/tmp_l10dj1k.cs(64,36): error CS1002: ; expected

    /tmp/tmp_l10dj1k.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_l10dj1k.cs(78,2): error CS1513: } expected

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum = a + b + c;\n    \
    \    if (sum > c) {\n            area = -1;\n        } else {\n            area\
    \ = (float)Math.Sqrt(Math.Pow(sum, 2) / (2 * b));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpghk1wn4e.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float fourth;\n        float fifth;\n        float sixth;\n        float\
    \ seventh;\n        float eighth;\n        float ninth;\n        float tenth;\n\
    \        float eleventh;\n        float twelfth;\n        float thirteenth;\n\
    \        float fourteenth;\n        float fifteenth;\n        float sixteenth;\n\
    \        float seventeenth;\n        float eighteenth;\n        float nineteenth;\n\
    \        float twentieth;\n        float twentyfirst;\n        float twentysecond;\n\
    \        float twentythird;\n        float twentyfourth;\n        float twentyfifth;\n\
    \        float twentysixth;\n        float twentyseventh;\n        float twentyeighth;\n\
    \        float twentyninth;\n        float thirtieth;\n        float thirtyfirst;\n\
    \        float thirtysecond;\n        float thirtythird;\n        float thirtyfourth;\n\
    \        float thirtyfifth;\n        float thirtysixth;\n        float thirtyseventh;\n\
    \        float thirtyeighth;\n        float thirtyninth;\n        float fourtieth;\n\
    \        float fourtyfirst;\n        float fourtysecond;\n        float fourtythird;\n\
    \        float fourtyfourth;\n        float fourtyfifth;\n        float fourtysixth;\n\
    \        float fourtyseventh;\n        float fourtyeighth;\n        float fourtyninth;\n\
    \        float fiftieth;\n        float fiftyfirst;\n        float fiftysecond;\n\
    \        float fiftythird;\n        float fiftyfourth;\n        float fiftyfifth;\n\
    \        float fiftysixth;\n        float fiftyseventh;\n        float fiftyeighth;\n\
    \        float fiftyninth;\n        float sixtieth;\n        float sixtyfirst;\n\
    \        float sixtysecond;\n        float sixtythird;\n        float sixtyfourth;\n\
    \        float sixtyfifth;\n        float sixtysixth;\n        float sixtyseventh;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ai93vkt.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp1ai93vkt.cs(20,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(21,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(22,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(23,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(24,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(25,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(26,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(27,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(28,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(29,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(30,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(31,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(32,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(33,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(34,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(35,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(36,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(37,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(38,15): warning C'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (b\
    \ + c > a) && (a + c > b)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp46pqtmha.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        float sum = (a + b + c)\
    \ / 2;\n        if (sum > c) {\n            area = sum * sum;\n        }\n   \
    \     return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj3mjqdp2.cs(23,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)(a\
    \ * Math.Sqrt(Math.Pow(b, 2.0) + Math.Pow(c, 2.0)));\n        float side2 = (float)(b\
    \ * Math.Sqrt(Math.Pow(a, 2.0) + Math.Pow(c, 2.0)));\n        float side3 = (float)(c\
    \ * Math.Sqrt(Math.Pow(a, 2.0) + Math.Pow(b, 2.0)));\n        float sum = (side1\
    \ + side2 + side3);\n        if (sum > 0) {\n            area = Math.Round(sum\
    \ * 0.5) / 2;\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpilv2_dmz.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float sum = (a + b +\
    \ c) / 2.0f;\n        if (sum > c) {\n            area = -1;\n        }\n    \
    \    else {\n            area = Math.Sqrt(Math.Pow(sum, 2.0f) / 2.0f);\n     \
    \   }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyvfburjm.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)(a * c) / b;\n        float side3 = (float)(b\
    \ * c) / a;\n        float sum = side1 + side2 + side3;\n        if (sum > 0)\
    \ {\n            area = Math.Round(sum * 100) / 100;\n        } else {\n     \
    \       area = -1;\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8gxfz_l1.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (b\
    \ + c > a) && (a + c > b)) {\n            area = (a * b * c) / (a + b + c);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl4ovuyif.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2f;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2f;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = 0.5f * Math.Sqrt(Math.Pow(a + b\
    \ + c, 0.5f) + Math.Pow(a + b - c, 0.5f) + Math.Pow(a + c - b, 0.5f) + Math.Pow(a\
    \ - b - c, 0.5f) + Math.Pow(a - b + c, 0.5f) + Math.Pow(a - c - b, 0.5f) + Math.Pow(a\
    \ - c + b, 0.5f) + Math.Pow(b - c + a, 0.5f) + Math.Pow(b + c + a, 0.5f) + Math.Pow(b\
    \ + c - a, 0.5f) + Math.Pow(c - b + a, 0.5f) + Math.Pow(c - b - a, 0.5f) + Math.Pow(c\
    \ - a + b, 0.5f) + Math.Pow(c + a + b, 0.5f) + Math.Pow(c + a - b, 0.5f) + Math.Pow(c\
    \ + a - c, 0.5f));\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpallw7txr.cs(20,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / ((a + b) * (a + c)\
    \ * (b + c));\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2bb4b7b04ae4fad90b14f8efbb00b15>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d2bb4b7b04ae4fad90b14f8efbb00b15>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side1\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side2 =\
    \ (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        sum = side1 + side2 + side3;\n        if (sum\
    \ > side3) {\n            area = sum / 2;\n        } else {\n            area\
    \ = -1;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdjjiqsoj.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)(b * c) / a;\n        float side3 = (float)(c\
    \ * a) / b;\n        float sum = side1 + side2 + side3;\n        if (sum > 0)\
    \ {\n            area = Math.Round(sum * 100) / 100;\n        } else {\n     \
    \       area = -1;\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphqhneirl.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxndc1vy2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float third2;\n        float third3;\n        float third4;\n       \
    \ float third5;\n        float third6;\n        float third7;\n        float third8;\n\
    \        float third9;\n        float third10;\n        float third11;\n     \
    \   float third12;\n        float third13;\n        float third14;\n        float\
    \ third15;\n        float third16;\n        float third17;\n        float third18;\n\
    \        float third19;\n        float third20;\n        float third21;\n    \
    \    float third22;\n        float third23;\n        float third24;\n        float\
    \ third25;\n        float third26;\n        float third27;\n        float third28;\n\
    \        float third29;\n        float third30;\n        float third31;\n    \
    \    float third32;\n        float third33;\n        float third34;\n        float\
    \ third35;\n        float third36;\n        float third37;\n        float third38;\n\
    \        float third39;\n        float third40;\n        float third41;\n    \
    \    float third42;\n        float third43;\n        float third44;\n        float\
    \ third45;\n        float third46;\n        float third47;\n        float third48;\n\
    \        float third49;\n        float third50;\n        float third51;\n    \
    \    float third52;\n        float third53;\n        float third54;\n        float\
    \ third55;\n        float third56;\n        float third57;\n        float third58;\n\
    \        float third59;\n        float third60;\n        float third61;\n    \
    \    float third62;\n        float third63;\n        float third64;\n        float\
    \ third65;\n        float third68;\n        float third69;\n        float third70;\n\
    \        float third71;\n        float third72;\n        float third73;\n    \
    \    float third74;\n        float third75;\n        float third76;\n        float\
    \ third77;\n        float third78;\n        float third79;\n        float thir\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3lvzrqnd.cs(97,19): error CS1002: ; expected

    '
  timestamp: 1659805032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = 0.5f * Math.Sqrt(Math.Pow(a, 2)\
    \ + Math.Pow(b, 2) + Math.Pow(c, 2));\n        }\n        return area;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpml1qrnoe.cs(20,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(a * a + b *\
    \ b);\n            float side2 = (float)Math.Sqrt(c * c + a * b);\n          \
    \  float side3 = (float)Math.Sqrt(c * c + b * b);\n            float side4 = (float)Math.Sqrt(a\
    \ * a + c * c);\n            float side5 = (float)Math.Sqrt(b * b + c * c);\n\
    \            float side6 = (float)Math.Sqrt(a * a + b * b + c * c);\n        \
    \    float side7 = (float)Math.Sqrt(a * a + c * c + b * b);\n            float\
    \ side8 = (float)Math.Sqrt(a * a + b * b + c * c);\n            float side9 =\
    \ (float)Math.Sqrt(a * a + c * c + b * b);\n            float side10 = (float)Math.Sqrt(a\
    \ * a + b * b + c * c);\n            float side11 = (float)Math.Sqrt(a * a + b\
    \ * b + c * c);\n            float side12 = (float)Math.Sqrt(a * a + c * c + b\
    \ * b);\n            float side13 = (float)Math.Sqrt(a * a + b * b + c * c);\n\
    \            float side14 = (float)Math.Sqrt(a * a + c * c + b * b);\n       \
    \     float side15 = (float)Math.Sqrt(a * a + b * b + c * c);\n            float\
    \ side16 = (float)Math.Sqrt(a * a + c * c + b * b);\n            float side17\
    \ = (float)Math.Sqrt(a * a + b * b + c * c);\n            float side18 = (float)Math.Sqrt(a\
    \ * a + c * c + b * b);\n            float side19 = (float)Math.Sqrt(a * a + b\
    \ * b + c * c);\n            float side20 = (float)Math.Sqrt(a * a + c * c + b\
    \ * b);\n            float side21 = (float)Math.Sqrt(a * a + b * b + c * c);\n\
    \            float side22 = (float)Math.Sqrt(a * a + c * c + b * b);\n       \
    \     float side23 = (float)Math.Sqrt(a * a + b * b + c * c);\n            float\
    \ side24 = (float)Math.Sqrt(a * a + c * c + b * b);\n            float side25\
    \ = (float)Math.Sqrt(a * a + b * b + c * c);\n            float side26 = (float)\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2dkmyq3u.cs(46,35): error CS1525: Invalid expression term ''}''

    /tmp/tmp2dkmyq3u.cs(46,35): error CS1002: ; expected

    /tmp/tmp2dkmyq3u.cs(48,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp2dkmyq3u.cs(60,2): error CS1513: } expected

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 + side2 > side3) {\n            area = side1\
    \ * side2 * 0.5f;\n        }\n        return Math.Round(area, 2);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpclaux0gf.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)(a\
    \ * b) / c;\n        float side2 = (float)(a * c) / b;\n        float side3 =\
    \ (float)(b * c) / a;\n        float sideSum = side1 + side2 + side3;\n      \
    \  if (sideSum > 0) {\n            area = Math.Round(sideSum * 100) / 100;\n \
    \       }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaby0iyth.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b);\n\
    \        float side2 = (float)(b * c);\n        float side3 = (float)(a * c);\n\
    \        float sum1 = side1 + side2;\n        float sum2 = side2 + side3;\n  \
    \      float sum3 = side1 + side3;\n        if (sum1 > sum2 && sum1 > sum3) {\n\
    \            area = sum1;\n        }\n        else if (sum2 > sum1 && sum2 > sum3)\
    \ {\n            area = sum2;\n        }\n        else {\n            area = sum3;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2su6906a.cs(34,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n\
    \        float side2 = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n\
    \        float side4 = side1 + side2;\n        float side5 = side1 + side3;\n\
    \        float side6 = side2 + side3;\n        float side7 = side1 + side4;\n\
    \        float side8 = side2 + side4;\n        float side9 = side3 + side4;\n\
    \        float side10 = side1 + side5;\n        float side11 = side2 + side5;\n\
    \        float side12 = side3 + side5;\n        float side13 = side4 + side5;\n\
    \        float side14 = side1 + side6;\n        float side15 = side2 + side6;\n\
    \        float side16 = side3 + side6;\n        float side17 = side4 + side6;\n\
    \        float side18 = side5 + side6;\n        float side19 = side1 + side7;\n\
    \        float side20 = side2 + side7;\n        float side21 = side3 + side7;\n\
    \        float side22 = side4 + side7;\n        float side23 = side5 + side7;\n\
    \        float side24 = side1 + side8;\n        float side25 = side2 + side8;\n\
    \        float side26 = side3 + side8;\n        float side27 = side4 + side8;\n\
    \        float side28 = side5 + side8;\n        float side29 = side1 + side9;\n\
    \        float side30 = side2 + side9;\n        float side31 = side3 + side9;\n\
    \        float side32 = side4 + side9;\n        float side33 = side5 + side9;\n\
    \        float side34 = side1 + side10;\n        float side35 = side2 + side10;\n\
    \        float side36 = side3 + side10;\n        float side37 = side4 + side10;\n\
    \        float side38 = side5 + side10;\n        float side39 = side1 + side11;\n\
    \        float side40 = side2 + side11;\n        float side41 = side3 + side11;\n\
    \        float side42 = side4 + side11;\n        float side43 = side5 + side11;\n\
    \        float side44 = side1 + side12;\n        float side45 = side2 + side12;\n\
    \        float side46 = side3 + side12;\n        float side47 = side4 + side12;\n\
    \        float side48 = side5 + side12;\n        float side49 = side1 + side13;\n\
    \        float side\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphiaaerw4.cs(68,19): error CS1002: ; expected

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float sum2;\n        float sum3;\n        float sum4;\n        float\
    \ sum5;\n        float sum6;\n        float sum7;\n        float sum8;\n     \
    \   float sum9;\n        float sum10;\n        float sum11;\n        float sum12;\n\
    \        float sum13;\n        float sum14;\n        float sum15;\n        float\
    \ sum16;\n        float sum17;\n        float sum18;\n        float sum19;\n \
    \       float sum20;\n        float sum21;\n        float sum22;\n        float\
    \ sum23;\n        float sum24;\n        float sum25;\n        float sum26;\n \
    \       float sum27;\n        float sum28;\n        float sum29;\n        float\
    \ sum30;\n        float sum31;\n        float sum32;\n        float sum33;\n \
    \       float sum34;\n        float sum35;\n        float sum36;\n        float\
    \ sum37;\n        float sum38;\n        float sum39;\n        float sum40;\n \
    \       float sum41;\n        float sum42;\n        float sum43;\n        float\
    \ sum44;\n        float sum45;\n        float sum46;\n        float sum47;\n \
    \       float sum48;\n        float sum49;\n        float sum50;\n        float\
    \ sum51;\n        float sum52;\n        float sum53;\n        float sum54;\n \
    \       float sum55;\n        float sum56;\n        float sum57;\n        float\
    \ sum58;\n        float sum59;\n        float sum60;\n        float sum61;\n \
    \       float sum62;\n        float sum63;\n        float sum64;\n        float\
    \ sum65;\n        float sum66;\n        float sum67;\n        float sum68;\n \
    \       float sum69;\n        float sum70;\n        float sum71;\n        float\
    \ sum72;\n        float sum73;\n        float sum74;\n        float sum75;\n \
    \       float sum76;\n        float sum77;\n        float sum78;\n        float\
    \ sum79;\n        float sum80;\n        float sum81;\n        float sum82;\n \
    \       float sum83;\n        float sum84;\n        float sum85;\n        float\
    \ sum86;\n        float sum87;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxqhxcluq.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpxqhxcluq.cs(20,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(21,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(22,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(23,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(24,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(25,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(26,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(27,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(28,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(29,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(30,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(31,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(32,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(33,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(34,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(35,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(36,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(37,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpxqhxcluq.cs(38,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (b\
    \ + c > a) && (a + c > b)) {\n            area = (a * b * c) / ((a * b) + (b *\
    \ c) + (c * a));\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxu1_jlq1.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float sum = (a + b + c)\
    \ / 2;\n        if (sum > c) {\n            area = -1;\n        } else {\n   \
    \         area = Math.Sqrt(Math.Pow(sum, 2) - (Math.Pow(a, 2) + Math.Pow(b, 2)));\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcppb5sov.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpcppb5sov.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return area;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0c24758c98e4cd08256fc38eec4f30c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0c24758c98e4cd08256fc38eec4f30c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if (a + b > c) {\n  \
    \          area = (a * c) / b;\n        }\n        else if (b + c > a) {\n   \
    \         area = (b * c) / a;\n        }\n        else if (a + c > b) {\n    \
    \        area = (c * a) / b;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt3bh07w0.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(a * b));\n        float side2 = (float)(b * Math.Sqrt(a * b));\n\
    \        float side3 = (float)(c * Math.Sqrt(a * b));\n        float side4 = (float)(a\
    \ * Math.Sqrt(a * c));\n        float side5 = (float)(b * Math.Sqrt(a * c));\n\
    \        float side6 = (float)(c * Math.Sqrt(a * c));\n        float side7 = (float)(a\
    \ * Math.Sqrt(b * c));\n        float side8 = (float)(b * Math.Sqrt(b * c));\n\
    \        float side9 = (float)(c * Math.Sqrt(b * c));\n        float side10 =\
    \ (float)(a * Math.Sqrt(c * c));\n        float side11 = (float)(b * Math.Sqrt(c\
    \ * c));\n        float side12 = (float)(c * Math.Sqrt(c * c));\n        float\
    \ side13 = (float)(a * Math.Sqrt(a * b + c * c));\n        float side14 = (float)(b\
    \ * Math.Sqrt(a * b + c * c));\n        float side15 = (float)(c * Math.Sqrt(a\
    \ * b + c * c));\n        float side16 = (float)(a * Math.Sqrt(a * c + b * b));\n\
    \        float side17 = (float)(b * Math.Sqrt(a * c + b * b));\n        float\
    \ side18 = (float)(c * Math.Sqrt(a * c + b * b));\n        float side19 = (float)(a\
    \ * Math.Sqrt(a * c + c * c));\n        float side20 = (float)(b * Math.Sqrt(a\
    \ * c + c * c));\n        float side21 = (float)(c * Math.Sqrt(a * c + c * c));\n\
    \        float side22 = (float)(a * Math.Sqrt(b * b + c * c));\n        float\
    \ side23 = (float)(b * Math.Sqrt(b * b + c * c));\n        float side24 = (float)(c\
    \ * Math.Sqrt(b * b + c * c));\n        float side25 = (float)(a * Math.Sqrt(c\
    \ * c + b * b));\n        float side26 = (float)(b * Math.Sqrt(c * c + b * b));\n\
    \        float side27 = (float)(c * Math.Sqrt(c * c + b * b));\n        float\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjes_d4ui.cs(46,14): error CS1001: Identifier expected

    /tmp/tmpjes_d4ui.cs(46,14): error CS1002: ; expected

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(a * a + c * c);\n        float side4 = (float)Math.Sqrt(b\
    \ * b + c * c);\n        float side5 = side1 + side2 + side3;\n        float side6\
    \ = side4 - side5;\n        float side7 = side1 + side3;\n        float side8\
    \ = side2 + side4;\n        float side9 = side2 + side5;\n        float side10\
    \ = side3 + side4;\n        float side11 = side3 + side5;\n        float side12\
    \ = side4 + side5;\n        float side13 = side4 + side6;\n        float side14\
    \ = side5 + side6;\n        float side15 = side5 + side7;\n        float side16\
    \ = side6 + side7;\n        float side17 = side6 + side8;\n        float side18\
    \ = side7 + side8;\n        float side19 = side7 + side9;\n        float side20\
    \ = side8 + side9;\n        float side21 = side9 + side10;\n        float side22\
    \ = side9 + side11;\n        float side23 = side10 + side11;\n        float side24\
    \ = side10 + side12;\n        float side25 = side11 + side12;\n        float side26\
    \ = side11 + side13;\n        float side27 = side12 + side13;\n        float side28\
    \ = side12 + side14;\n        float side29 = side13 + side14;\n        float side30\
    \ = side13 + side15;\n        float side31 = side14 + side15;\n        float side32\
    \ = side14 + side16;\n        float side33 = side15 + side16;\n        float side34\
    \ = side15 + side17;\n        float side35 = side16 + side17;\n        float side36\
    \ = side16 + side18;\n        float side37 = side17 + side18;\n        float side38\
    \ = side17 + side19;\n        float side39 = side18 + side19;\n        float side40\
    \ = side18 + side20;\n        float side41 = side19 + side20;\n        float side42\
    \ = side19 + side21;\n        float side43 = side20 + side21;\n        float side44\
    \ = side20 + side22;\n        float side45\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd3n3ipo1.cs(63,21): error CS1002: ; expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(c * c + b * b);\n        float side4 = (float)Math.Sqrt(a\
    \ * a + c * c);\n        float side5 = (float)Math.Sqrt(b * b + c * c);\n    \
    \    float side6 = (float)Math.Sqrt(a * a + b * b + c * c);\n        float side7\
    \ = (float)Math.Sqrt(a * a + c * c + b * b);\n        float side8 = (float)Math.Sqrt(c\
    \ * c + a * a + b * b);\n        float side9 = (float)Math.Sqrt(c * c + b * b\
    \ + a * a);\n        float side10 = (float)Math.Sqrt(c * c + a * a + c * c);\n\
    \        float side11 = (float)Math.Sqrt(b * b + a * a + c * c);\n        float\
    \ side12 = (float)Math.Sqrt(b * b + c * c + a * a);\n        float side13 = (float)Math.Sqrt(b\
    \ * b + c * c + b * b);\n        float side14 = (float)Math.Sqrt(a * a + c * c\
    \ + b * b);\n        float side15 = (float)Math.Sqrt(a * a + b * b + c * c);\n\
    \        float side16 = (float)Math.Sqrt(a * a + b * b + c * c);\n        float\
    \ side17 = (float)Math.Sqrt(c * c + a * a + b * b);\n        float side18 = (float)Math.Sqrt(c\
    \ * c + b * b + a * a);\n        float side19 = (float)Math.Sqrt(c * c + a * a\
    \ + c * c);\n        float side20 = (float)Math.Sqrt(b * b + a * a + c * c);\n\
    \        float side21 = (float)Math.Sqrt(b * b + c * c + a * a);\n        float\
    \ side22 = (float)Math.Sqrt(b * b + c * c + b * b);\n        float side23 = (float)Math.Sqrt(a\
    \ * a + c * c + b * b);\n        float side24 = (float)Math.Sqrt(a * a + b * b\
    \ + c * c);\n        float side25 = (float)Math.Sqrt(a * a + b * b + c * c);\n\
    \        float side26 = (float)Math.Sqrt(c * c + a * a + b * b);\n\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpml3dgm5t.cs(18,15): warning CS0219: The variable ''area'' is assigned
    but its value is never used

    /tmp/tmpml3dgm5t.cs(17,25): error CS0161: ''Problem.TriangleArea(long, long, long)'':
    not all code paths return a value

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum = (a + b + c) / 2;\n\
    \        if (Math.Abs(sum - a) > Math.Abs(sum - b)) {\n            area = sum\
    \ * sum;\n        } else {\n            area = sum * sum * -1;\n        }\n  \
    \      return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp58pbolha.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side;\n\
    \        float sum2;\n        float sum3;\n        float sum4;\n        float\
    \ sum5;\n        float sum6;\n        float sum7;\n        float sum8;\n     \
    \   float sum9;\n        float sum10;\n        float sum11;\n        float sum12;\n\
    \        float sum13;\n        float sum14;\n        float sum15;\n        float\
    \ sum16;\n        float sum17;\n        float sum18;\n        float sum19;\n \
    \       float sum20;\n        float sum21;\n        float sum22;\n        float\
    \ sum23;\n        float sum24;\n        float sum25;\n        float sum26;\n \
    \       float sum27;\n        float sum28;\n        float sum29;\n        float\
    \ sum30;\n        float sum31;\n        float sum32;\n        float sum33;\n \
    \       float sum34;\n        float sum35;\n        float sum36;\n        float\
    \ sum37;\n        float sum38;\n        float sum39;\n        float sum40;\n \
    \       float sum41;\n        float sum42;\n        float sum43;\n        float\
    \ sum44;\n        float sum45;\n        float sum46;\n        float sum47;\n \
    \       float sum48;\n        float sum49;\n        float sum50;\n        float\
    \ sum51;\n        float sum52;\n        float sum53;\n        float sum54;\n \
    \       float sum55;\n        float sum56;\n        float sum57;\n        float\
    \ sum58;\n        float sum59;\n        float sum60;\n        float sum61;\n \
    \       float sum62;\n        float sum63;\n        float sum64;\n        float\
    \ sum65;\n        float sum66;\n        float sum67;\n        float sum68;\n \
    \       float sum69;\n        float sum70;\n        float sum71;\n        float\
    \ sum72;\n        float sum73;\n        float sum74;\n        float sum75;\n \
    \       float sum76;\n        float sum77;\n        float sum78;\n        float\
    \ sum79;\n        float sum80;\n        float sum81;\n        float sum82;\n \
    \       float sum83;\n        float sum84;\n        float sum85;\n        float\
    \ sum86;\n        float sum87;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpijdph5ua.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpijdph5ua.cs(20,15): warning CS0168: The variable ''side'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(21,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(22,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(23,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(24,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(25,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(26,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(27,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(28,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(29,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(30,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(31,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(32,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(33,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(34,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(35,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(36,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(37,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(38,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)((b * c) / a);\n        float side3 = (float)((c\
    \ * a) / b);\n        if (side1 + side2 > side3) {\n            area = side1 +\
    \ side2;\n        } else {\n            area = side3;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5wq7nwnm.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float area1 = (side1*side1);\n            float area2 = (side2*side2);\n\
    \            float area3 = (side3*side3);\n            float area4 = Math.Sqrt(area1+area2+area3);\n\
    \            area = Math.Round(area4, 2);\n        }\n        return area;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphgi1u4bv.cs(27,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmphgi1u4bv.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi55ltb6g.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a+b+c;\n    \
    \    if (sum > c) {\n            area = -1;\n        }\n        else {\n     \
    \       area = Math.Sqrt(Math.Pow((Math.Pow(a, 2) + Math.Pow(b, 2)) , 0.5));\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptmti68qm.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptmti68qm.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(b * b - 4 * a * c));\n        float side2 = (float)(b * Math.Sqrt(b\
    \ * b - 4 * a * c));\n        float side3 = (float)(a * Math.Sqrt(b * b - 4 *\
    \ a * c));\n        if (side1 > side2 && side1 > side3) {\n            area =\
    \ side1;\n        }\n        else if (side2 > side1 && side2 > side3) {\n    \
    \        area = side2;\n        }\n        else if (side3 > side1 && side3 > side2)\
    \ {\n            area = side3;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpndqa3qhd.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a+b+c;\n    \
    \    if (sum > 0) {\n            float side1 = (float)(a/sum);\n            float\
    \ side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n       \
    \     float side4 = side1 + side2;\n            float side5 = side3 - side4;\n\
    \            float side6 = side1 + side3;\n            float side7 = side2 + side3;\n\
    \            float side8 = side5 + side6;\n            float side9 = side7 - side8;\n\
    \            float side10 = side5 + side8;\n            float side11 = side9 +\
    \ side10;\n            float side12 = side9 - side10;\n            float side13\
    \ = side11 - side12;\n            float side14 = side11 + side12;\n          \
    \  float side15 = side13 + side14;\n            float side16 = side13 - side14;\n\
    \            float side17 = side15 - side16;\n            float side18 = side15\
    \ + side16;\n            float side19 = side17 + side18;\n            float side20\
    \ = side17 - side18;\n            float side21 = side19 + side20;\n          \
    \  float side22 = side19 - side20;\n            float side23 = side21 - side22;\n\
    \            float side24 = side21 + side22;\n            float side25 = side23\
    \ + side24;\n            float side26 = side23 - side24;\n            float side27\
    \ = side25 - side26;\n            float side28 = side25 + side26;\n          \
    \  float side29 = side27 + side28;\n            float side30 = side27 - side28;\n\
    \            float side31 = side29 - side30;\n            float side32 = side29\
    \ + side30;\n            float side33 = side31 - side32;\n            float side34\
    \ = side31 + side32;\n            float side35 = side33 + side34;\n          \
    \  float side36 = side33 - side34;\n            float side37 = side35 - side36;\n\
    \            float side38 = side35 + side36;\n            float side39 = side37\
    \ + side38;\n            float side40 = side37 - side38;\n            float side41\
    \ = side39 - side40;\n            float side42 = side39 + side40;\n          \
    \  float side43 = side41 - side42;\n            float side44 = side41 + side42;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg25_3jp2.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpg25_3jp2.cs(78,2): error CS1513: } expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side1\
    \ = (float)(a * b);\n        float side2 = (float)(b * c);\n        float side3\
    \ = (float)(a * c);\n        sum = side1 + side2 + side3;\n        if (sum > side3)\n\
    \            area = side3;\n        else\n            area = sum / 2;\n      \
    \  return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqa5hygwj.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float sum = (a + b + c)\
    \ / 2;\n        if (sum > c) {\n            area = -1;\n        } else {\n   \
    \         float s = (a + b) / 2;\n            float t = (b + c) / 2;\n       \
    \     float u = (a + c) / 2;\n            float v = (b + d) / 2;\n           \
    \ float w = (c + d) / 2;\n            float x = 0;\n            float y = 0;\n\
    \            float z = 0;\n            float xx = x * x;\n            float yy\
    \ = y * y;\n            float zz = z * z;\n            float xy = x * y;\n   \
    \         float xz = x * z;\n            float yz = y * z;\n            float\
    \ xw = x * w;\n            float yw = y * w;\n            float zw = z * w;\n\
    \            float xx = xx * xx + xx * yy + xx * zz;\n            float yy = yy\
    \ * xx + yy * yy + yy * zz;\n            float zz = zz * xx + zz * yy + zz * zz;\n\
    \            float xy = xy * xx + xy * yy + xy * zz;\n            float xz = xz\
    \ * xx + xz * yy + xz * zz;\n            float yz = yz * xx + yz * yy + yz * zz;\n\
    \            float xw = xw * xx + xw * yy + xw * zz;\n            float yw = yw\
    \ * xx + yw * yy + yw * zz;\n            float zw = zw * xx + zw * yy + zw * zz;\n\
    \            float xx = xx * xx + xx * yy + xx * zz + xw * xw;\n            float\
    \ yy = yy * xx + yy * yy + yy * zz + yw * yw;\n            float zz = zz * xx\
    \ + zz * yy + zz * zz + zw * zw;\n            float xy = xy * xx + xy * yy + xy\
    \ * zz + xw * yw;\n            float xz = xz * xx + xz * yy + xz * zz + xw * zw;\n\
    \            float yz = yz * xx + yz * yy + yz * zz + yw * zw;\n            float\
    \ xw = xw * xx + xw * yy + xw * zz + xw * zw;\n            float yw = yw * xx\
    \ + yw * yy + yw * zz + yw * zw;\n            float zw = zw * xx + zw * yy + zw\
    \ * zz + zw * zw;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxx0lkhgb.cs(59,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpxx0lkhgb.cs(71,2): error CS1513: } expected

    '
  timestamp: 1659805034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2f;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <44badc07999b4acdb63603c4abb7a500>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n  \
    \      }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e24530016c8d4993b9a8cae9927c26f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e24530016c8d4993b9a8cae9927c26f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if (a + b > c) {\n  \
    \          area = -1;\n        } else {\n            float s = (a + b + c) / 2;\n\
    \            float area = Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n      \
    \  }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvpbjw187.cs(23,19): error CS0136: A local or parameter named ''area''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpvpbjw187.cs(23,26): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpvpbjw187.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            float side4 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side5 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side6 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side7 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side8 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side9 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side10 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side11 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side12 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side13 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side14 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side15 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side16 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side17 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side18 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side19 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side20 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side21 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side22 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side23 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side24 = Math.Sqrt(Math.Pow(a,\
    \ 2) + \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplcsw6vc1.cs(44,54): error CS1525: Invalid expression term ''}''

    /tmp/tmplcsw6vc1.cs(44,54): error CS1026: ) expected

    /tmp/tmplcsw6vc1.cs(44,54): error CS1002: ; expected

    /tmp/tmplcsw6vc1.cs(46,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmplcsw6vc1.cs(58,2): error CS1513: } expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * b) / c;\n        float side2 = (float)(b * c) / a;\n        float side3 =\
    \ (float)(c * a) / b;\n        float sum = side1 + side2 + side3;\n        if\
    \ (sum > 0) {\n            area = Math.Round(sum * 100) / 100;\n        }\n  \
    \      return area;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqux6bmpt.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float area1 = (side1*side1)+(side2*side2)+(side3*side3);\n      \
    \      float area2 = (side1*side2)+(side2*side1)+(side3*side3);\n            float\
    \ area3 = (side1*side3)+(side2*side3)+(side3*side1);\n            area = Math.Round(area1/area2,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfe9celbc.cs(27,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            area = (a * b * c) / 2;\n        }\n      \
    \  return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdac1a1d088b41fc9d011cd8561965f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cdac1a1d088b41fc9d011cd8561965f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        sum = (a\
    \ + b + c) / 2;\n        if (sum > c) {\n            area = -1;\n        } else\
    \ {\n            area = (float)(Math.Sqrt(Math.Pow(sum, 2) + Math.Pow(c - sum,\
    \ 2)));\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9750c16a9d4a48df88c7418666a88825>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9750c16a9d4a48df88c7418666a88825>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side1\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side2 =\
    \ (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        sum = side1 + side2 + side3;\n        if (sum\
    \ > side3)\n            area = sum;\n        else\n            area = -1;\n  \
    \      return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppv6grrdl.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = side1 + side2;\n            float side5 = side3 + side4;\n\
    \            float side6 = side5 - side1;\n            float side7 = side6 - side3;\n\
    \            float side8 = side7 - side5;\n            float side9 = side8 - side6;\n\
    \            float side10 = side9 - side7;\n            float side11 = side10\
    \ - side8;\n            float side12 = side11 - side9;\n            float side13\
    \ = side12 - side10;\n            float side14 = side13 - side11;\n          \
    \  float side15 = side14 - side12;\n            float side16 = side15 - side13;\n\
    \            float side17 = side16 - side14;\n            float side18 = side17\
    \ - side15;\n            float side19 = side18 - side16;\n            float side20\
    \ = side19 - side17;\n            float side21 = side20 - side18;\n          \
    \  float side22 = side21 - side19;\n            float side23 = side22 - side20;\n\
    \            float side24 = side23 - side21;\n            float side25 = side24\
    \ - side22;\n            float side26 = side25 - side23;\n            float side27\
    \ = side26 - side24;\n            float side28 = side27 - side25;\n          \
    \  float side29 = side28 - side26;\n            float side30 = side29 - side27;\n\
    \            float side31 = side30 - side28;\n            float side32 = side31\
    \ - side29;\n            float side33 = side32 - side30;\n            float side34\
    \ = side33 - side31;\n            float side35 = side34 - side32;\n          \
    \  float side36 = side35 - side33;\n            float side37 = side36 - side34;\n\
    \            float side38 = side37 - side35;\n            float side39 = side38\
    \ - side36;\n            float side40 = side39 - side37;\n            float side41\
    \ = side40 - side38;\n            float side42 = side41 - side39;\n          \
    \  float side43 = side42 - side40;\n            float side44 = side43 - side4\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfheiqpxl.cs(64,42): error CS1002: ; expected

    /tmp/tmpfheiqpxl.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpfheiqpxl.cs(78,2): error CS1513: } expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi55ltb6g.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (b\
    \ + c > a) && (c + a > b)) {\n            area = (a * b * c) / 2f;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d658abb76df34e88b7b0afd2b0429822>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d658abb76df34e88b7b0afd2b0429822>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum = (a + b + c) / 2;\n\
    \        if (a > b + c) {\n            area = sum * Math.Sqrt(Math.Pow(a - b,\
    \ 2) + Math.Pow(b - c, 2));\n        } else {\n            area = sum * Math.Sqrt(Math.Pow(a\
    \ - c, 2) + Math.Pow(b - a, 2));\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_o9bkrtw.cs(21,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_o9bkrtw.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_o9bkrtw.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi55ltb6g.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = (a + b + c)\
    \ / 2;\n        if (sum > c) {\n            area = -1;\n        } else if (sum\
    \ < a) {\n            area = -1;\n        } else if (sum > b) {\n            area\
    \ = -1;\n        } else if (sum < c) {\n            area = -1;\n        } else\
    \ {\n            area = (float)(Math.Sqrt(Math.Pow(sum, 2.0f) / 2.0f));\n    \
    \    }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bbed345f2e294dffa031afe1c164c6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bbed345f2e294dffa031afe1c164c6aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2f;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplqoxvnm2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum = (a + b + c) / 2;\n\
    \        if (sum > c) {\n            area = -1;\n        } else {\n          \
    \  area = (float)(Math.Sqrt(Math.Pow(sum, 2.0f) - Math.Pow(c - sum, 2.0f)));\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpntt0d0fh.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)(b * c) / a;\n        float side3 = (float)(a\
    \ * c) / b;\n        if (side1 + side2 > side3) {\n            area = side1;\n\
    \        } else {\n            area = side2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpizzr8o19.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp18xggzft.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum;\n        sum = (a\
    \ + b + c) / 2;\n        if (sum > c) {\n            area = -1;\n        } else\
    \ {\n            area = (float)(Math.Sqrt(Math.Pow(sum, 2) + Math.Pow(c - sum,\
    \ 2)));\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphh7yytwt.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if (a + b > c) {\n  \
    \          area = -1;\n        } else {\n            float s = 0.0f;\n       \
    \     float h = b - c;\n            float w = a - c;\n            float x = h\
    \ / w;\n            float y = h / w;\n            float z = h / w;\n         \
    \   float t = Math.Sqrt(x * x + y * y + z * z);\n            float area = Math.Round(t\
    \ * t * t, 2);\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx298_37i.cs(28,23): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpx298_37i.cs(29,19): error CS0136: A local or parameter named ''area''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpx298_37i.cs(29,26): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpx298_37i.cs(22,19): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    '
  timestamp: 1659805035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ - Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) - Math.Pow(a,\
    \ 2));\n        if (side1 + side2 > side3 && side1 + side4 > side3) {\n      \
    \      area = side1 * side2 * 0.5f;\n        }\n        return area;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c8d7489ffa04da49fa8da82d493fc2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c8d7489ffa04da49fa8da82d493fc2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a + b + c;\n\
    \        if (sum > c) {\n            area = -1;\n        } else {\n          \
    \  float s = a / sum;\n            float t = b / sum;\n            float u = (a\
    \ + b + c) / 3;\n            float v = (a + b) / 2;\n            float w = c /\
    \ 2;\n            area = Math.Sqrt(s * (s - t) * (s - u) * (s - v) * (s - w));\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwxsk1box.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpwxsk1box.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float sum = 0;\n       \
    \ float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float\
    \ side2 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side3\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n        if (side1 + side2\
    \ > side3) {\n            sum = side1 + side2;\n            area = sum / 2;\n\
    \        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c362402752e4832ad608d24932e990f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c362402752e4832ad608d24932e990f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        sum = (a\
    \ + b + c) / 2;\n        if (sum > c) {\n            area = -1;\n        } else\
    \ {\n            area = Math.Sqrt(Math.Pow(sum, 2) - (Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2)));\n        }\n        return Math.Round(area, 2);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdv4xnxpk.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpdv4xnxpk.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2)\
    \ + Math.Pow(c, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) +\
    \ Math.Pow(c, 2));\n        if (side1 + side2 > side3) {\n            area = side1\
    \ * side2 * 0.5;\n        } else {\n            area = -1;\n        }\n      \
    \  return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8ur8r2r_.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp8ur8r2r_.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / (a + b + c);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi55ltb6g.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side5 = side1 + side2 + side3;\n        float side6 = side1\
    \ + side2 + side4;\n        float side7 = side1 + side3 + side4;\n        float\
    \ side8 = side1 + side4 + side5;\n        float side9 = side1 + side3 + side6;\n\
    \        float side10 = side1 + side4 + side7;\n        float side11 = side1 +\
    \ side5 + side6;\n        float side12 = side1 + side5 + side7;\n        float\
    \ side13 = side1 + side6 + side7;\n        float side14 = side2 + side3 + side4;\n\
    \        float side15 = side2 + side3 + side5;\n        float side16 = side2 +\
    \ side4 + side5;\n        float side17 = side2 + side5 + side6;\n        float\
    \ side18 = side2 + side5 + side7;\n        float side19 = side2 + side6 + side7;\n\
    \        float side20 = side3 + side4 + side5;\n        float side21 = side3 +\
    \ side4 + side6;\n        float side22 = side3 + side5 + side6;\n        float\
    \ side23 = side3 + side6 + side7;\n        float side24 = side4 + side5 + side6;\n\
    \        float side25 = side4 + side5 + side7;\n        float side26 = side4 +\
    \ side6 + side7;\n        float side27 = side5 + side6 + side7;\n        float\
    \ side28 = side6 + side7;\n        float side29 = side7;\n        float side30\
    \ = side8;\n        float side31 = side9;\n        float side32 = side10;\n  \
    \      float side33 = side11;\n        float side34 = side12;\n        float side35\
    \ = side13;\n        float side36 = side14;\n        float side37 = side15;\n\
    \        float side38 = side16;\n        float side39 = side17;\n        float\
    \ side40 = side18;\n        float side41 = side19;\n        float side42 = side20;\n\
    \        float side43 = side21;\n        float side44 = side22;\n        float\
    \ side45 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps59zvi7_.cs(63,23): error CS1525: Invalid expression term ''}''

    /tmp/tmps59zvi7_.cs(63,23): error CS1002: ; expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = 0;\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgxve8zps.cs(104,18): error CS1002: ; expected

    '
  timestamp: 1659805034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxndc1vy2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(a * a + c * c);\n        if (side1 + side2\
    \ > side3) {\n            area = side1 * side2;\n        } else {\n          \
    \  area = side1 * side3;\n        }\n        return Math.Round(area, 2);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsfm2w4ve.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(c, 2.0f)));\n        float side2 =\
    \ (float)(b * Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(c, 2.0f)));\n        float\
    \ side3 = (float)(a * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(a, 2.0f)));\n   \
    \     float side4 = (float)(b * Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(b, 2.0f)));\n\
    \        float side5 = Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(b, 2.0f));\n   \
    \     float side6 = Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(b, 2.0f));\n      \
    \  float side7 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float\
    \ side8 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side9\
    \ = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side10 =\
    \ Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side11 = Math.Sqrt(Math.Pow(c,\
    \ 2.0f) + Math.Pow(a, 2.0f));\n        float side12 = Math.Sqrt(Math.Pow(c, 2.0f)\
    \ + Math.Pow(b, 2.0f));\n        float side13 = Math.Sqrt(Math.Pow(c, 2.0f) +\
    \ Math.Pow(a, 2.0f));\n        float side14 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b,\
    \ 2.0f));\n        float side15 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n\
    \        float side16 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n  \
    \      float side17 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n    \
    \    float side18 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n      \
    \  float side19 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float\
    \ side20 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side21\
    \ = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float side22 =\
    \ Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side23 = Math.Sqrt(Math.Pow(c,\
    \ 2.0f) + Math.Pow(a, 2.0f));\n        float side24 = Math.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4zia_w_n.cs(42,29): error CS1001: Identifier expected

    /tmp/tmp4zia_w_n.cs(42,29): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        sum = (a\
    \ + b + c) / 2;\n        if (sum > c) {\n            area = -1;\n        } else\
    \ {\n            area = (float)(Math.Sqrt(Math.Pow(sum, 2) - Math.Pow(a, 2) +\
    \ Math.Pow(b, 2)));\n        }\n        return Math.Round(area, 2);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpreqpknvb.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float sum = 0.0f;\n \
    \       float sum2 = 0.0f;\n        float sum3 = 0.0f;\n        float sum4 = 0.0f;\n\
    \        float sum5 = 0.0f;\n        float sum6 = 0.0f;\n        float sum7 =\
    \ 0.0f;\n        float sum8 = 0.0f;\n        float sum9 = 0.0f;\n        float\
    \ sum10 = 0.0f;\n        float sum11 = 0.0f;\n        float sum12 = 0.0f;\n  \
    \      float sum13 = 0.0f;\n        float sum14 = 0.0f;\n        float sum15 =\
    \ 0.0f;\n        float sum16 = 0.0f;\n        float sum17 = 0.0f;\n        float\
    \ sum18 = 0.0f;\n        float sum19 = 0.0f;\n        float sum20 = 0.0f;\n  \
    \      float sum21 = 0.0f;\n        float sum22 = 0.0f;\n        float sum23 =\
    \ 0.0f;\n        float sum24 = 0.0f;\n        float sum25 = 0.0f;\n        float\
    \ sum26 = 0.0f;\n        float sum27 = 0.0f;\n        float sum28 = 0.0f;\n  \
    \      float sum29 = 0.0f;\n        float sum30 = 0.0f;\n        float sum31 =\
    \ 0.0f;\n        float sum32 = 0.0f;\n        float sum33 = 0.0f;\n        float\
    \ sum34 = 0.0f;\n        float sum35 = 0.0f;\n        float sum36 = 0.0f;\n  \
    \      float sum37 = 0.0f;\n        float sum38 = 0.0f;\n        float sum39 =\
    \ 0.0f;\n        float sum40 = 0.0f;\n        float sum41 = 0.0f;\n        float\
    \ sum42 = 0.0f;\n        float sum43 = 0.0f;\n        float sum44 = 0.0f;\n  \
    \      float sum45 = 0.0f;\n        float sum46 = 0.0f;\n        float sum47 =\
    \ 0.0f;\n        float sum48 = 0.0f;\n        float sum49 = 0.0f;\n        float\
    \ sum50 = 0.0f;\n        float sum51 = 0.0f;\n        float sum52 = 0.0f;\n  \
    \      float sum53 = 0.0f;\n        float sum54 = 0.0f;\n        float sum55 =\
    \ 0.0f;\n        float sum56 = 0.0f;\n        float sum57 = 0.0f;\n        float\
    \ sum58 = 0.0f;\n        float sum59 = 0.0f;\n        float sum60 = 0.0f;\n  \
    \      float sum61 = 0.0f;\n        float sum62 = 0.0f;\n        float sum63 =\
    \ 0.0f;\n        float sum64 = 0.0f;\n        float sum65 = 0.0f;\n        float\
    \ sum66 = 0.0f;\n        float sum67 = 0.0f;\n        float sum68 = 0.0f;\n  \
    \      float sum69 = 0.0f;\n        float sum70 = 0.0f;\n        float sum7\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6wjebot8.cs(89,19): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        area = (side1 + side2 + side3) / 2;\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnbv8okr.cs(23,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a*a + b*b);\n      \
    \      float side2 = (float)(a*c + b*b);\n            float side3 = (float)(a*c\
    \ + b*c);\n            float side4 = (float)(a*a + b*c);\n            float side5\
    \ = (float)(a*a + b*b);\n            float side6 = (float)(a*c + b*c);\n     \
    \       float side7 = (float)(a*c + b*b);\n            float side8 = (float)(a*c\
    \ + b*c);\n            float side9 = (float)(a*a + b*b);\n            float side10\
    \ = (float)(a*c + b*b);\n            float side11 = (float)(a*c + b*c);\n    \
    \        float side12 = (float)(a*a + b*b);\n            float side13 = (float)(a*c\
    \ + b*b);\n            float side14 = (float)(a*c + b*c);\n            float side15\
    \ = (float)(a*a + b*b);\n            float side16 = (float)(a*c + b*b);\n    \
    \        float side17 = (float)(a*c + b*c);\n            float side18 = (float)(a*a\
    \ + b*c);\n            float side19 = (float)(a*a + b*b);\n            float side20\
    \ = (float)(a*c + b*b);\n            float side21 = (float)(a*c + b*c);\n    \
    \        float side22 = (float)(a*a + b*b);\n            float side23 = (float)(a*c\
    \ + b*b);\n            float side24 = (float)(a*c + b*c);\n            float side25\
    \ = (float)(a*a + b*b);\n            float side26 = (float)(a*c + b*b);\n    \
    \        float side27 = (float)(a*c + b*c);\n            float side28 = (float)(a*a\
    \ + b*b);\n            float side29 = (float)(a*c + b*b);\n            float side30\
    \ = (float)(a*c + b*c);\n            float side31 = (float)(a*a + b*b);\n    \
    \        float side32 = (float)(a*c + b*b);\n            float side33 = (float)(a*c\
    \ + b*c);\n            float side34 = (float)(a*a + b*c);\n            float side35\
    \ = (float)(a*a + b*b);\n            float side36 = (float)(a*c + b*b);\n    \
    \        float side37 = (float)(a*c + b*c);\n            float side38 = (float)(a*a\
    \ + b*b);\n            float side39 = (float)(a*c + b*b);\n            float side40\
    \ = (float)(a*c + b*c);\n            float side41 = (float)(a*a + \n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppr7df6q_.cs(61,41): error CS1525: Invalid expression term ''}''

    /tmp/tmppr7df6q_.cs(61,41): error CS1026: ) expected

    /tmp/tmppr7df6q_.cs(61,41): error CS1002: ; expected

    /tmp/tmppr7df6q_.cs(63,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmppr7df6q_.cs(75,2): error CS1513: } expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float third;\n\
    \        float fourth;\n        float fifth;\n        float sixth;\n        float\
    \ seventh;\n        float eighth;\n        float ninth;\n        float tenth;\n\
    \        float eleventh;\n        float twelfth;\n        float thirteenth;\n\
    \        float fourteenth;\n        float fifteenth;\n        float sixteenth;\n\
    \        float seventeenth;\n        float eighteenth;\n        float nineteenth;\n\
    \        float twentieth;\n        float twentyfirst;\n        float twentysecond;\n\
    \        float twentythird;\n        float twentyfourth;\n        float twentyfifth;\n\
    \        float twentysixth;\n        float twentyseventh;\n        float twentyeighth;\n\
    \        float twentyninth;\n        float thirtieth;\n        float thirtyfirst;\n\
    \        float thirtysecond;\n        float thirtythird;\n        float thirtyfourth;\n\
    \        float thirtyfifth;\n        float thirtysixth;\n        float thirtyseventh;\n\
    \        float thirtyeighth;\n        float thirtyninth;\n        float fourtieth;\n\
    \        float fourtyfirst;\n        float fourtysecond;\n        float fourtythird;\n\
    \        float fourtyfourth;\n        float fourtyfifth;\n        float fourtysixth;\n\
    \        float fourtyseventh;\n        float fourtyeighth;\n        float fourtyninth;\n\
    \        float fiftieth;\n        float fiftyfirst;\n        float fiftysecond;\n\
    \        float fiftythird;\n        float fiftyfourth;\n        float fiftyfifth;\n\
    \        float fiftysixth;\n        float fiftyseventh;\n        float fiftyeighth;\n\
    \        float fiftyninth;\n        float sixtieth;\n        float sixtyfirst;\n\
    \        float sixtysecond;\n        float sixtythird;\n        float sixtyfourth;\n\
    \        float sixtyfifth;\n        float sixtysixth;\n        float sixtyseventh;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ai93vkt.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp1ai93vkt.cs(20,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(21,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(22,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(23,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(24,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(25,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(26,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(27,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(28,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(29,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(30,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(31,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(32,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(33,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(34,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(35,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(36,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(37,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmp1ai93vkt.cs(38,15): warning C'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b + c * c);\n        float side2 = (float)Math.Sqrt(a * a + b * b\
    \ - c * c);\n        float side3 = (float)Math.Sqrt(a * a - b * b + c * c);\n\
    \        if (side1 > side2 && side1 > side3) {\n            area = side1;\n  \
    \      } else if (side2 > side1 && side2 > side3) {\n            area = side2;\n\
    \        } else if (side3 > side1 && side3 > side2) {\n            area = side3;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphmal3wre.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float sum = (a + b + c)\
    \ / 2;\n        float difference = a - b;\n        float difference2 = b - c;\n\
    \        float difference3 = c - sum;\n        float difference4 = sum - a;\n\
    \        float difference5 = sum - b;\n        float difference6 = sum - c;\n\
    \        float difference7 = a - sum;\n        float difference8 = b - sum;\n\
    \        float difference9 = c - sum;\n        float difference10 = a - b;\n \
    \       float difference11 = a - c;\n        float difference12 = b - c;\n   \
    \     float difference13 = a - b;\n        float difference14 = b - c;\n     \
    \   float difference15 = a - c;\n        float difference16 = c - sum;\n     \
    \   float difference17 = a - b;\n        float difference18 = b - c;\n       \
    \ float difference19 = a - c;\n        float difference20 = c - sum;\n       \
    \ float difference21 = a - b;\n        float difference22 = b - c;\n        float\
    \ difference23 = a - c;\n        float difference24 = c - sum;\n        float\
    \ difference25 = a - b;\n        float difference26 = b - c;\n        float difference27\
    \ = a - c;\n        float difference28 = c - sum;\n        float difference29\
    \ = a - b;\n        float difference30 = b - c;\n        float difference31 =\
    \ a - c;\n        float difference32 = c - sum;\n        float difference33 =\
    \ a - b;\n        float difference34 = b - c;\n        float difference35 = a\
    \ - c;\n        float difference36 = c - sum;\n        float difference37 = a\
    \ - b;\n        float difference38 = b - c;\n        float difference39 = a -\
    \ c;\n        float difference40 = c - sum;\n        float difference41 = a -\
    \ b;\n        float difference42 = b - c;\n        float difference43 = a - c;\n\
    \        float difference44 = c - sum;\n        float difference45 = a - b;\n\
    \        float difference46 = b - c;\n        float difference47 = a - c;\n  \
    \      float difference48 = c - sum;\n        float difference49 = a - b;\n  \
    \      float difference50 = b - c;\n        float difference51 = a - c;\n    \
    \    float difference52 = c - sum;\n        float difference53 = a - b;\n    \
    \    float difference54 = b - c;\n        float difference55 = a - c;\n      \
    \  float difference56 = c - sum;\n        float difference57 = a - b;\n      \
    \  float difference58 = b - c;\n        float difference59 = a - c;\n        float\
    \ difference60 = c - sum;\n        float difference6\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3iacp1nr.cs(80,26): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float side;\n\
    \        float sum2;\n        float sum3;\n        float sum4;\n        float\
    \ sum5;\n        float sum6;\n        float sum7;\n        float sum8;\n     \
    \   float sum9;\n        float sum10;\n        float sum11;\n        float sum12;\n\
    \        float sum13;\n        float sum14;\n        float sum15;\n        float\
    \ sum16;\n        float sum17;\n        float sum18;\n        float sum19;\n \
    \       float sum20;\n        float sum21;\n        float sum22;\n        float\
    \ sum23;\n        float sum24;\n        float sum25;\n        float sum26;\n \
    \       float sum27;\n        float sum28;\n        float sum29;\n        float\
    \ sum30;\n        float sum31;\n        float sum32;\n        float sum33;\n \
    \       float sum34;\n        float sum35;\n        float sum36;\n        float\
    \ sum37;\n        float sum38;\n        float sum39;\n        float sum40;\n \
    \       float sum41;\n        float sum42;\n        float sum43;\n        float\
    \ sum44;\n        float sum45;\n        float sum46;\n        float sum47;\n \
    \       float sum48;\n        float sum49;\n        float sum50;\n        float\
    \ sum51;\n        float sum52;\n        float sum53;\n        float sum54;\n \
    \       float sum55;\n        float sum56;\n        float sum57;\n        float\
    \ sum58;\n        float sum59;\n        float sum60;\n        float sum61;\n \
    \       float sum62;\n        float sum63;\n        float sum64;\n        float\
    \ sum65;\n        float sum66;\n        float sum67;\n        float sum68;\n \
    \       float sum69;\n        float sum70;\n        float sum71;\n        float\
    \ sum72;\n        float sum73;\n        float sum74;\n        float sum75;\n \
    \       float sum76;\n        float sum77;\n        float sum78;\n        float\
    \ sum79;\n        float sum80;\n        float sum81;\n        float sum82;\n \
    \       float sum83;\n        float sum84;\n        float sum85;\n        float\
    \ sum86;\n        float sum87;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpijdph5ua.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpijdph5ua.cs(20,15): warning CS0168: The variable ''side'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(21,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(22,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(23,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(24,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(25,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(26,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(27,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(28,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(29,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(30,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(31,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(32,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(33,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(34,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(35,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(36,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(37,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpijdph5ua.cs(38,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        area = Math.Round(side1 * side2 * side3, 2);\n   \
    \     return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj8hc_zeq.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            float s = (a + b + c) / 2;\n         \
    \   float area1 = (Math.Sqrt(s * (s - a) * (s - b) * (s - c))) / 2;\n        \
    \    area = Math.Round(area1, 2);\n        }\n        return area;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5jj45tjd.cs(21,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp5jj45tjd.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ - Math.Pow(a, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(c, 2) -\
    \ Math.Pow(b, 2));\n        area = Math.Sqrt(Math.Pow(side1, 2) + Math.Pow(side2,\
    \ 2) - Math.Pow(side3, 2));\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl_vzxc4k.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpl_vzxc4k.cs(23,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * b) / c;\n        float side2 = (float)(b * c) / a;\n        float side3 =\
    \ (float)(a * c) / b;\n        if (side1 + side2 > side3) {\n            area\
    \ = Math.Round(side1, 2);\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe9uh2sb8.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a + b + c;\n\
    \        if (sum > c) {\n            area = -1;\n        } else {\n          \
    \  area = (float)Math.Sqrt(Math.Pow((a + b), 2.0f) / 2.0f);\n        }\n     \
    \   return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1jbfahs9.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(a * a + c * c);\n        float side4 = (float)Math.Sqrt(b\
    \ * b + c * c);\n        float side5 = side1 + side2 + side3;\n        float side6\
    \ = side4 - side5;\n        float side7 = side6 / 2;\n        float side8 = side7\
    \ / 2;\n        float side9 = side8 / 2;\n        float side10 = side9 / 2;\n\
    \        float side11 = side10 / 2;\n        float side12 = side11 / 2;\n    \
    \    float side13 = side12 / 2;\n        float side14 = side13 / 2;\n        float\
    \ side15 = side14 / 2;\n        float side16 = side15 / 2;\n        float side17\
    \ = side16 / 2;\n        float side18 = side17 / 2;\n        float side19 = side18\
    \ / 2;\n        float side20 = side19 / 2;\n        float side21 = side20 / 2;\n\
    \        float side22 = side21 / 2;\n        float side23 = side22 / 2;\n    \
    \    float side24 = side23 / 2;\n        float side25 = side24 / 2;\n        float\
    \ side26 = side25 / 2;\n        float side27 = side26 / 2;\n        float side28\
    \ = side27 / 2;\n        float side29 = side28 / 2;\n        float side30 = side29\
    \ / 2;\n        float side31 = side30 / 2;\n        float side32 = side31 / 2;\n\
    \        float side33 = side32 / 2;\n        float side34 = side33 / 2;\n    \
    \    float side35 = side34 / 2;\n        float side36 = side35 / 2;\n        float\
    \ side37 = side36 / 2;\n        float side38 = side37 / 2;\n        float side39\
    \ = side38 / 2;\n        float side40 = side39 / 2;\n        float side41 = side40\
    \ / 2;\n        float side42 = side41 / 2;\n        float side43 = side42 / 2;\n\
    \        float side44 = side43 / 2;\n        float side45 = side44 / 2;\n    \
    \    float side46 = side45 / 2;\n        float side47 = side46 / 2;\n        float\
    \ side48 = side47 / 2;\n        float side49\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb5v1bl3.cs(67,21): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float area1 = side1 * side1;\n            float area2 = side2 * side2;\n\
    \            float area3 = side3 * side3;\n            float area4 = Math.Sqrt(area1\
    \ + area2 + area3);\n            area = Math.Round(area4, 2);\n        }\n   \
    \     return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzmswqfwy.cs(27,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpzmswqfwy.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n        float side2 = (float)Math.Sqrt(c * c + a * b);\n    \
    \    float side3 = (float)Math.Sqrt(a * a + c * c);\n        if (side1 > side2\
    \ && side1 > side3) {\n            area = side1;\n        } else if (side2 > side1\
    \ && side2 > side3) {\n            area = side2;\n        } else {\n         \
    \   area = side3;\n        }\n        return Math.Round(area, 2);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp85xwvsqc.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b);\n\
    \        float side2 = (float)(b * c);\n        float side3 = (float)(a * c);\n\
    \        float sum = side1 + side2 + side3;\n        if (sum > side3) {\n    \
    \        area = side1;\n        } else {\n            area = side2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy5bz9ibl.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2)\
    \ + Math.Pow(c, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) +\
    \ Math.Pow(c, 2));\n        float sideSum = side1 + side2 + side3;\n        float\
    \ sideSumFloat = Convert.ToSingle(sideSum);\n        float sideSumFloat2 = Convert.ToSingle(sideSumFloat);\n\
    \        float sideSumFloat3 = Convert.ToSingle(sideSumFloat2);\n        float\
    \ sideSumFloat4 = Convert.ToSingle(sideSumFloat3);\n        float sideSumFloat5\
    \ = Convert.ToSingle(sideSumFloat4);\n        float sideSumFloat6 = Convert.ToSingle(sideSumFloat5);\n\
    \        float sideSumFloat7 = Convert.ToSingle(sideSumFloat6);\n        float\
    \ sideSumFloat8 = Convert.ToSingle(sideSumFloat7);\n        float sideSumFloat9\
    \ = Convert.ToSingle(sideSumFloat8);\n        float sideSumFloat10 = Convert.ToSingle(sideSumFloat9);\n\
    \        float sideSumFloat11 = Convert.ToSingle(sideSumFloat10);\n        float\
    \ sideSumFloat12 = Convert.ToSingle(sideSumFloat11);\n        float sideSumFloat13\
    \ = Convert.ToSingle(sideSumFloat12);\n        float sideSumFloat14 = Convert.ToSingle(sideSumFloat13);\n\
    \        float sideSumFloat15 = Convert.ToSingle(sideSumFloat14);\n        float\
    \ sideSumFloat16 = Convert.ToSingle(sideSumFloat15);\n        float sideSumFloat17\
    \ = Convert.ToSingle(sideSumFloat16);\n        float sideSumFloat18 = Convert.ToSingle(sideSumFloat17);\n\
    \        float sideSumFloat19 = Convert.ToSingle(sideSumFloat18);\n        float\
    \ sideSumFloat20 = Convert.ToSingle(sideSumFloat19);\n        float sideSumFloat21\
    \ = Convert.ToSingle(sideSumFloat20);\n        float sideSumFloat22 = Convert.ToSingle(sideSumFloat21);\n\
    \        float sideSumFloat23 = Convert.ToSingle(sideSumFloat22);\n        float\
    \ sideSumFloat24 = Convert.ToSingle(sideSumFloat23);\n        float sideSumFloat25\
    \ = Convert.ToSingle(sideSumFloat24);\n        float sideSumFloat26 = Convert.ToSingle(sideSumFloat25);\n\
    \        float \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy3numzpv.cs(49,14): error CS1001: Identifier expected

    /tmp/tmpy3numzpv.cs(49,14): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdax1a27s.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side5 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side6 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        float side7 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side8 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side9 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side10 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side11 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side12 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side13 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side14 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side15 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side16 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        float side17 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side18 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side19 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side20 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2));\n        float side21 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side22 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side23 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side24 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2));\n        float side25 = Math.Sqrt(Math.Pow\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplnlyabnf.cs(43,42): error CS1026: ) expected

    /tmp/tmplnlyabnf.cs(43,42): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)(a/sum);\n          \
    \  float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = (float)(a+b+c)/sum;\n            float side5 = Math.Sqrt(Math.Pow(side1,\
    \ 2) + Math.Pow(side2, 2) + Math.Pow(side3, 2));\n            float side6 = Math.Sqrt(Math.Pow(side4,\
    \ 2) + Math.Pow(side5, 2));\n            float side7 = Math.Sqrt(Math.Pow(side1,\
    \ 2) + Math.Pow(side5, 2));\n            float side8 = Math.Sqrt(Math.Pow(side2,\
    \ 2) + Math.Pow(side5, 2));\n            float side9 = Math.Sqrt(Math.Pow(side3,\
    \ 2) + Math.Pow(side5, 2));\n            float side10 = side1 + side2 + side3\
    \ + side4 + side5 + side6 + side7 + side8 + side9;\n            float side11 =\
    \ (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side12 = (float)Math.Sqrt(Math.Pow(side10,\
    \ 2));\n            float side13 = (float)Math.Sqrt(Math.Pow(side10, 2));\n  \
    \          float side14 = (float)Math.Sqrt(Math.Pow(side10, 2));\n           \
    \ float side15 = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side16\
    \ = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side17 = (float)Math.Sqrt(Math.Pow(side10,\
    \ 2));\n            float side18 = (float)Math.Sqrt(Math.Pow(side10, 2));\n  \
    \          float side19 = (float)Math.Sqrt(Math.Pow(side10, 2));\n           \
    \ float side20 = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side21\
    \ = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side22 = (float)Math.Sqrt(Math.Pow(side10,\
    \ 2));\n            float side23 = (float)Math.Sqrt(Math.Pow(side10, 2));\n  \
    \          float side24 = (float)Math.Sqrt(Math.Pow(side10, 2));\n           \
    \ float side25 = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side26\
    \ = (float)Math.Sqrt(Math.Pow(side10, 2));\n            float side27 = (float)Math.Sqrt(Math.Pow(side10,\
    \ 2));\n            float side28 = (float)Math.Sqrt(Math.Pow(side10, 2));\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptt7xnjba.cs(51,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmptt7xnjba.cs(63,2): error CS1513: } expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side5 = side1 + side2 + side3;\n        float side6 = side1\
    \ + side2 + side4;\n        float side7 = side1 + side3 + side4;\n        float\
    \ side8 = side1 + side3 + side5;\n        float side9 = side2 + side3 + side4;\n\
    \        float side10 = side2 + side3 + side5;\n        float side11 = side3 +\
    \ side4 + side5;\n        float side12 = side4 + side5 + side6;\n        float\
    \ side13 = side5 + side6 + side7;\n        float side14 = side6 + side7 + side8;\n\
    \        float side15 = side7 + side8 + side9;\n        float side16 = side8 +\
    \ side9 + side10;\n        float side17 = side9 + side10 + side11;\n        float\
    \ side18 = side10 + side11 + side12;\n        float side19 = side11 + side12 +\
    \ side13;\n        float side20 = side12 + side13 + side14;\n        float side21\
    \ = side13 + side14 + side15;\n        float side22 = side14 + side15 + side16;\n\
    \        float side23 = side15 + side16 + side17;\n        float side24 = side16\
    \ + side17 + side18;\n        float side25 = side17 + side18 + side19;\n     \
    \   float side26 = side18 + side19 + side20;\n        float side27 = side19 +\
    \ side20 + side21;\n        float side28 = side20 + side21 + side22;\n       \
    \ float side29 = side21 + side22 + side23;\n        float side30 = side22 + side23\
    \ + side24;\n        float side31 = side23 + side24 + side25;\n        float side32\
    \ = side24 + side25 + side26;\n        float side33 = side25 + side26 + side27;\n\
    \        float side34 = side26 + side27 + side28;\n        float side35 = side27\
    \ + side28 + side29;\n        float side36 = side28\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8hmzta53.cs(54,30): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return area;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <488298a5353a4213b65bcf61da7ba380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <488298a5353a4213b65bcf61da7ba380>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum;\n        float side1\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side2 =\
    \ (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        sum = a + b + c;\n        if (side1 > side2 &&\
    \ side1 > side3) {\n            area = side1;\n        } else if (side2 > side1\
    \ && side2 > side3) {\n            area = side2;\n        } else {\n         \
    \   area = side3;\n        }\n        return Math.Round(area, 2);\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptsweuxjo.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        long sum = a+b+c;\n \
    \       if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(b,\
    \ 2) - Math.Pow(c, 2));\n            float side4 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n            area = side1*side2*side3;\n            area\
    \ = Math.Round(area, 2);\n        }\n        return area;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq7v8eq74.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = (a + b + c) /\
    \ 2;\n        if (sum > c) {\n            area = -1;\n        } else {\n     \
    \       float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n   \
    \         float side2 = (float)Math.Sqrt(Math.Pow(c, 2) - Math.Pow(sum, 2));\n\
    \            area = side1 * side2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp58gy6w2z.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a+b+c;\n    \
    \    if (sum > c) {\n            area = -1;\n        }\n        else {\n     \
    \       float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float area1 = side1*side1;\n\
    \            float area2 = side2*side2;\n            float area3 = side3*side3;\n\
    \            area = Math.Sqrt(Math.Pow(area1,2) + Math.Pow(area2,2) + Math.Pow(area3,2));\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkf9lcnch.cs(30,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpkf9lcnch.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum;\n        sum = (long)Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2);\n        if (sum > Math.Pow(a, 3)) {\n\
    \            area = -1;\n        } else {\n            area = Math.Round(Math.Sqrt(sum),\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyf4ycf1v.cs(20,15): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpyf4ycf1v.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        long sum;\n        long sum2;\n\
    \        long sum3;\n        sum = a+b+c;\n        sum2 = a*a+b*b+c*c;\n     \
    \   sum3 = Math.Pow(sum, 2);\n        if (sum2 > sum3) {\n            area = sum2/sum;\n\
    \        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiyf5hlqy.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpiyf5hlqy.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(c, 2.0f)));\n        float side2 =\
    \ (float)(b * Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(c, 2.0f)));\n        float\
    \ side3 = (float)(a * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(a, 2.0f)));\n   \
    \     if (side1 > side2 && side1 > side3) {\n            area = side1;\n     \
    \   } else if (side2 > side1 && side2 > side3) {\n            area = side2;\n\
    \        } else if (side3 > side1 && side3 > side2) {\n            area = side3;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmgfh5emg.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2.0f;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxndc1vy2.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        if ((a + b > c) && (a\
    \ + c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6dfd03r.cs(22,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = -1;\n        if ((a + b > c) && (a +\
    \ c > b) && (b + c > a)) {\n            area = (a * b * c) / 2;\n        }\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <df3352b8722f4b8c9df62c4e6f1a3fcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)(a * b)\
    \ / c;\n        float side2 = (float)(b * c) / a;\n        float side3 = (float)(c\
    \ * a) / b;\n        if (side1 + side2 > side3) {\n            area = side1 +\
    \ side2;\n        } else {\n            area = side3;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsc5_82r2.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(c, 2)\
    \ + Math.Pow(b, 2));\n        float side3 = (float)Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(c, 2));\n        float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side5 = side1 + side2 + side3;\n        float side6 = side1\
    \ + side2 + side4;\n        float side7 = side1 + side3 + side4;\n        float\
    \ side8 = side1 + side3 + side5;\n        float side9 = side1 + side4 + side5;\n\
    \        float side10 = side1 + side4 + side6;\n        float side11 = side1 +\
    \ side5 + side6;\n        float side12 = side1 + side5 + side7;\n        float\
    \ side13 = side1 + side6 + side7;\n        float side14 = side1 + side6 + side8;\n\
    \        float side15 = side1 + side7 + side8;\n        float side16 = side1 +\
    \ side7 + side9;\n        float side17 = side1 + side8 + side9;\n        float\
    \ side18 = side1 + side8 + side10;\n        float side19 = side1 + side9 + side10;\n\
    \        float side20 = side1 + side9 + side11;\n        float side21 = side1\
    \ + side10 + side11;\n        float side22 = side1 + side10 + side12;\n      \
    \  float side23 = side1 + side11 + side12;\n        float side24 = side1 + side11\
    \ + side13;\n        float side25 = side1 + side12 + side13;\n        float side26\
    \ = side1 + side12 + side14;\n        float side27 = side1 + side13 + side14;\n\
    \        float side28 = side1 + side13 + side15;\n        float side29 = side1\
    \ + side14 + side15;\n        float side30 = side1 + side14 + side16;\n      \
    \  float side31 = side1 + side15 + side16;\n        float side32 = side1 + side15\
    \ + side17;\n        float side33 = side1 + side16 + side17;\n        float side34\
    \ = side1 + side16 + side18;\n        float side35 = side1 + side17 + side18;\n\
    \        float side36 = side1 + side17 + side19;\n        float side37 = side1\
    \ + side18 + side19;\n        float side38 = side1 + side18 + side20\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo_si6wi9.cs(56,47): error CS1002: ; expected

    '
  timestamp: 1659805035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0;\n        long sum = a+b+c;\n    \
    \    if (sum > 0) {\n            float side1 = (float)(a/b);\n            float\
    \ side2 = (float)(b/c);\n            float side3 = (float)(c/a);\n           \
    \ area = Math.Sqrt(side1*side1 + side2*side2 + side3*side3);\n        }\n    \
    \    return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwovi_gik.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpwovi_gik.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area;\n        float sum;\n        float sum2;\n\
    \        float sum3;\n        float sum4;\n        float sum5;\n        float\
    \ sum6;\n        float sum7;\n        float sum8;\n        float sum9;\n     \
    \   float sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n\
    \        float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n        float sum88;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp08p2wqsi.cs(18,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(19,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp08p2wqsi.cs(20,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(21,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(22,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(23,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(24,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(25,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(26,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(27,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(28,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(29,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(30,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(31,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(32,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(33,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(34,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(35,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(36,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(37,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp08p2wqsi.cs(38,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659805033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float TriangleArea(long a,\
    \ long b, long c) {\n        float area = 0.0f;\n        float side1 = (float)(a\
    \ * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(c, 2.0f)));\n        float side2 =\
    \ (float)(b * Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(c, 2.0f)));\n        float\
    \ side3 = (float)(a * Math.Sqrt(Math.Pow(b, 2.0f) + Math.Pow(a, 2.0f)));\n   \
    \     float side4 = (float)(b * Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(b, 2.0f)));\n\
    \        float side5 = Math.Sqrt(Math.Pow(a, 2.0f) + Math.Pow(b, 2.0f));\n   \
    \     float side6 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n      \
    \  float side7 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float\
    \ side8 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side9\
    \ = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float side10 =\
    \ Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side11 = Math.Sqrt(Math.Pow(c,\
    \ 2.0f) + Math.Pow(a, 2.0f));\n        float side12 = Math.Sqrt(Math.Pow(c, 2.0f)\
    \ + Math.Pow(b, 2.0f));\n        float side13 = Math.Sqrt(Math.Pow(c, 2.0f) +\
    \ Math.Pow(a, 2.0f));\n        float side14 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b,\
    \ 2.0f));\n        float side15 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n\
    \        float side16 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n  \
    \      float side17 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n    \
    \    float side18 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n      \
    \  float side19 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float\
    \ side20 = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side21\
    \ = Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(a, 2.0f));\n        float side22 =\
    \ Math.Sqrt(Math.Pow(c, 2.0f) + Math.Pow(b, 2.0f));\n        float side23 = Math.Sqrt(Math.Pow(c,\
    \ 2.0f) + Math.Pow(a, 2.0f));\n        float side24 = Math.S\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqt0mrdle.cs(42,30): error CS1002: ; expected

    '
  timestamp: 1659805035

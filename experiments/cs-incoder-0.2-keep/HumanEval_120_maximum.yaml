name: HumanEval_120_maximum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n    // of length k with the maximum k numbers in arr.\n    //\
  \ Example 1:\n    // Input: arr = [-3, -4, 5], k = 3\n    // Output: [-4, -3, 5]\n\
  \    // Example 2:\n    // Input: arr = [4, -4, 4], k = 2\n    // Output: [4, 4]\n\
  \    // Example 3:\n    // Input: arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n    //\
  \ Output: [2]\n    // Note:\n    // 1. The length of the array will be in the range\
  \ of [1, 1000].\n    // 2. The elements in the array will be in the range of [-1000,\
  \ 1000].\n    // 3. 0 <= k <= len(arr)\n    public static List<long> Maximum(List<long>\
  \ arr, long k) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)-3L, (long)-4L, (long)5L})), (3L)).Equals((new List<long>(new\
  \ long[]{(long)-4L, (long)-3L, (long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L, (long)4L})), (2L)).Equals((new List<long>(new long[]{(long)4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-3L,\
  \ (long)2L, (long)1L, (long)2L, (long)-1L, (long)-2L, (long)1L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)2L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)123L, (long)-123L, (long)20L, (long)0L, (long)1L, (long)2L, (long)-3L})),\
  \ (3L)).Equals((new List<long>(new long[]{(long)2L, (long)20L, (long)123L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)-123L, (long)20L, (long)0L,\
  \ (long)1L, (long)2L, (long)-3L})), (4L)).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)1L, (long)2L, (long)20L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)5L, (long)15L, (long)0L, (long)3L, (long)-13L, (long)-8L, (long)0L})),\
  \ (7L)).Equals((new List<long>(new long[]{(long)-13L, (long)-8L, (long)0L, (long)0L,\
  \ (long)3L, (long)5L, (long)15L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)-1L, (long)0L, (long)2L, (long)5L, (long)3L, (long)-10L})), (2L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)5L}))));\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)1L, (long)0L, (long)5L, (long)-7L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L})), (2L)).Equals((new List<long>(new long[]{(long)-4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-10L,\
  \ (long)10L})), (2L)).Equals((new List<long>(new long[]{(long)-10L, (long)10L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
  \ (long)-23L, (long)243L, (long)-400L, (long)0L})), (0L)).Equals((new List<long>())));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = 0;\n        long currentValue\
    \ = 0;\n        long currentIndex = 0;\n        foreach (long i in arr) {\n  \
    \          if (currentValue < i) {\n                currentValue = i;\n      \
    \          currentIndex = i;\n            }\n            if (currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \            }\n            if (currentValue == maxValue) {\n                currentIndex++;\n\
    \            }\n        }\n        result.Add(maxValue);\n        result.Add(maxIndex);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long sum = 0;\n        long maxSum = 0;\n       \
    \ long sumOfSquare = 0;\n        long square = 0;\n        long maxSquare = 0;\n\
    \        long maxSumOfSquare = 0;\n        long maxSquareOfSquare = 0;\n     \
    \   long maxSumOfSquareOfSquare = 0;\n        long maxSquareOfSquareOfSquare =\
    \ 0;\n        long maxSumOfSquareOfSquareOfSquare = 0;\n        long maxSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquare", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long cur = 0;\n        foreach\
    \ (long i in arr) {\n            if (max < i) {\n                max = i;\n  \
    \          }\n        }\n        long max2 = max;\n        long cur2 = 0;\n  \
    \      foreach (long i in arr) {\n            if (max < i) {\n               \
    \ max = i;\n            }\n            if (cur < i) {\n                cur = i;\n\
    \            }\n            if (max2 < cur) {\n                max2 = cur;\n \
    \           }\n            if (cur2 < cur) {\n                cur2 = cur;\n  \
    \          }\n        }\n        long max3 = max2;\n        long cur3 = 0;\n \
    \       foreach (long i in arr) {\n            if (max < i) {\n              \
    \  max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max3 < cur) {\n                max3 = cur;\n\
    \            }\n            if (cur3 < cur) {\n                cur3 = cur;\n \
    \           }\n        }\n        long max4 = max3;\n        long cur4 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max4 < cur) {\n                max4 = cur;\n\
    \            }\n            if (cur4 < cur) {\n                cur4 = cur;\n \
    \           }\n        }\n        long max5 = max4;\n        long cur5 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max5 < cur) {\n                max5 = cur;\n\
    \            }\n            if (cur5 < cur) {\n                cur5 = cur;\n \
    \           }\n        }\n        long max6 = max5;\n        long cur6 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max6 < cur) {\n                max6 = cur;\n\
    \            }\n            if (cur6 < cur) {\n                cur6 = cur;\n \
    \           }\n        }\n        long max7 = max6;\n        long cur7 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max7 < cur) {\n                max7 = cur;\n\
    \            }\n            if (cur7 < cur) {\n                cur7 = cur;\n \
    \           }\n        }\n        long max8 = max7;\n        long cur8 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long maxIndex = 0;\n \
    \       long tempIndex = 0;\n        bool isMax = true;\n        foreach (long\
    \ i in arr) {\n            if (isMax) {\n                temp = i;\n         \
    \       isMax = false;\n            }\n            if (temp > i) {\n         \
    \       temp = i;\n                maxIndex = i;\n            }\n        }\n \
    \       max = temp;\n        foreach (long i in arr) {\n            if (i == maxIndex)\
    \ {\n                result.Add(i);\n            }\n            if (i == max)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long sum = 0;\n        long maxSum = 0;\n        long maxSumIndex\
    \ = 0;\n        long sumIndex = 0;\n        long sumIndex2 = 0;\n        long\
    \ sumIndex3 = 0;\n        long sumIndex4 = 0;\n        long sumIndex5 = 0;\n \
    \       long sumIndex6 = 0;\n        long sumIndex7 = 0;\n        long sumIndex8\
    \ = 0;\n        long sumIndex9 = 0;\n        long sumIndex10 = 0;\n        long\
    \ sumIndex11 = 0;\n        long sumIndex12 = 0;\n        long sumIndex13 = 0;\n\
    \        long sumIndex14 = 0;\n        long sumIndex15 = 0;\n        long sumIndex16\
    \ = 0;\n        long sumIndex17 = 0;\n        long sumIndex18 = 0;\n        long\
    \ sumIndex19 = 0;\n        long sumIndex20 = 0;\n        long sumIndex21 = 0;\n\
    \        long sumIndex22 = 0;\n        long sumIndex23 = 0;\n        long sumIndex24\
    \ = 0;\n        long sumIndex25 = 0;\n        long sumIndex26 = 0;\n        long\
    \ sumIndex27 = 0;\n        long sumIndex28 = 0;\n        long sumIndex29 = 0;\n\
    \        long sumIndex30 = 0;\n        long sumIndex31 = 0;\n        long sumIndex32\
    \ = 0;\n        long sumIndex33 = 0;\n        long sumIndex34 = 0;\n        long\
    \ sumIndex35 = 0;\n        long sumIndex36 = 0;\n        long sumIndex37 = 0;\n\
    \        long sumIndex38 = 0;\n        long sumIndex39 = 0;\n        long sumIndex40\
    \ = 0;\n        long sumIndex41 = 0;\n        long sumIndex42 = 0;\n        long\
    \ sumIndex43 = 0;\n        long sumIndex44 = 0;\n        long sumIndex45 = 0;\n\
    \        long sumIndex46 = 0;\n        long sumIndex47 = 0;\n        long sumIndex48\
    \ = 0;\n        long sumIndex49 = 0;\n        long sumIndex50 = 0;\n        long\
    \ sumIndex51 = 0;\n        long sumIndex52 = 0;\n        long sumIndex53 = 0;\n\
    \        long sumIndex54 = 0;\n        long sumIndex55 = 0;\n        long sumIndex56\
    \ = 0;\n        long sumIndex57 = 0;\n        long sumIndex58 = 0;\n        long\
    \ sumIndex59 = 0;\n        long sumIndex60 = 0;\n        long sumIndex61 = 0;\n\
    \        long sumIndex62 = 0;\n        long sumIndex63 = 0;\n        long sumIndex64\
    \ = 0;\n        long sumIndex65 = 0;\n        long sumIndex66 = 0;\n        long\
    \ sumIndex67 = 0;\n        long sumIndex68 = 0;\n        long sumIndex69 = 0;\n\
    \        ", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long temp = 0;\n        long sum = 0;\n        long sum2 = 0;\n\
    \        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n    \
    \    long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long\
    \ sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12\
    \ = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 =\
    \ 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n\
    \        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n \
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n  \
    \      long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n   \
    \     long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n    \
    \    long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n     \
    \   long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n      \
    \  long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n       \
    \ long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long\
    \ sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46\
    \ = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 =\
    \ 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n\
    \        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n \
    \       long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n  \
    \      long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n   \
    \     long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n    \
    \    long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n     \
    \   long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n      \
    \  long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n       \
    \ long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long\
    \ sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80\
    \ = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83 =\
    \ 0;", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = 0;\n        long minValue = 0;\n        long maxIndex2\
    \ = 0;\n        long minIndex2 = 0;\n        long maxValue2 = 0;\n        long\
    \ minValue2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n \
    \       long maxValue3 = 0;\n        long minValue3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxValue4 = 0;\n        long\
    \ minValue4 = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n \
    \       long maxValue5 = 0;\n        long minValue5 = 0;\n        long maxIndex6\
    \ = 0;\n        long minIndex6 = 0;\n        long maxValue6 = 0;\n        long\
    \ minValue6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7 = 0;\n \
    \       long maxValue7 = 0;\n        long minValue7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxValue8 = 0;\n        long\
    \ minValue8 = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n \
    \       long maxValue9 = 0;\n        long minValue9 = 0;\n        long maxIndex10\
    \ = 0;\n        long minIndex10 = 0;\n        long maxValue10 = 0;\n        long\
    \ minValue10 = 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n\
    \        long maxValue11 = 0;\n        long minValue11 = 0;\n        long maxIndex12\
    \ = 0;\n        long minIndex12 = 0;\n        long maxValue12 = 0;\n        long\
    \ minValue12 = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n\
    \        long maxValue13 = 0;\n        long minValue13 = 0;\n        long maxIndex14\
    \ = 0;\n        long minIndex14 = 0;\n        long maxValue14 = 0;\n        long\
    \ minValue14 = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n\
    \        long maxValue15 = 0;\n        long minValue15 = 0;\n        long maxIndex16\
    \ = 0;\n        long minIndex16 = 0;\n        long maxValue16 = 0;\n        long\
    \ minValue16 = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n\
    \        long maxValue17 = 0;\n        long minValue17 = 0;\n        long maxIndex18\
    \ = 0;\n        long minIndex18 = 0;\n        long maxValue18 = 0;\n        long\
    \ minValue18 = 0;\n        long maxIndex19 = 0;\n        ", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = arr[0];\n        long maxValueIndex = -1;\n        foreach\
    \ (long i in arr) {\n            if (i > maxValue) {\n                maxValue\
    \ = i;\n                maxValueIndex = i;\n            }\n            if (i ==\
    \ maxValue) {\n                maxIndex++;\n            }\n        }\n       \
    \ if (maxIndex < k) {\n            max = maxValue;\n            maxIndex = maxValueIndex;\n\
    \        }\n        long maxIndex = maxIndex;\n        long maxValue = maxValue;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ maxValue = arr[0];\n        long currentValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long i in arr) {\n            if (i == currentValue)\
    \ {\n                currentIndex++;\n            } else {\n                result.Add(maxValue);\n\
    \                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \                currentValue = i;\n                currentIndex = 1;\n      \
    \      }\n        }\n        result.Add(maxValue);\n        return result.Take(k).ToList();",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long currentMax = 0;\n        long currentMaxIndex =\
    \ 0;\n        long currentSum = 0;\n        long currentSumIndex = 0;\n      \
    \  long currentSumOfSquares = 0;\n        long currentSumOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquares = 0;\n        long currentSumOfSquaresOfSquaresIndex\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquares = 0;\n        long\
    \ currentSumOfSquaresOfSquaresOfSquaresIndex = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresIndex\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOf", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long maxValue = 0;\n    \
    \    long minValue = 0;\n        long sum = 0;\n        long count = 0;\n    \
    \    long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        ", "       \
    \ List<long> result = new List<long>();\n        Array.Sort(arr);\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long\
    \ currentValue = 0;\n        long currentIndex = 0;\n        long currentMax =\
    \ 0;\n        long currentMaxIndex = 0;\n        long currentMaxValue = 0;\n \
    \       foreach (long i in arr) {\n            currentValue = i;\n           \
    \ currentIndex = 0;\n            currentMax = i;\n            currentMaxIndex\
    \ = i;\n            currentMaxValue = i;\n            while (currentIndex < arr.Count\
    \ && currentValue > currentMax) {\n                currentMax = arr[currentIndex];\n\
    \                currentMaxIndex = currentIndex;\n                currentMaxValue\
    \ = currentValue;\n                currentIndex++;\n            }\n          \
    \  result.Add(currentMaxValue);\n        }\n        return result.Take(k).ToList();",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > maxValue) {\n                maxValue = i;\n        \
    \        maxIndex = i;\n            }\n            if (i == maxValue) {\n    \
    \            maxIndex++;\n            }\n        }\n        long maxCount = 0;\n\
    \        long maxCountIndex = 0;\n        long maxCountValue = arr[0];\n     \
    \   foreach (long i in arr) {\n            if (i > maxCountValue) {\n        \
    \        maxCountValue = i;\n                maxCountIndex = i;\n            }\n\
    \            if (i == maxCountValue) {\n                maxCountIndex++;\n   \
    \         }\n        }\n        long maxCountCount = 0;\n        long maxCountCountIndex\
    \ = 0;\n        long maxCountCountValue = arr[0];\n        foreach (long i in\
    \ arr) {\n            if (i > maxCountCountValue) {\n                maxCountCountValue\
    \ = i;\n                maxCountCountIndex = i;\n            }\n            if\
    \ (i == maxCountCountValue) {\n                maxCountCountIndex++;\n       \
    \     }\n        }\n        long maxCountCountCount = 0;\n        long maxCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxCountCountCountValue) {\n              \
    \  maxCountCountCountValue = i;\n                maxCountCountCountIndex = i;\n\
    \            }\n            if (i == maxCountCountCountValue) {\n            \
    \    maxCountCountCountIndex++;\n            }\n        }\n        long maxCountCountCountCount\
    \ = 0;\n        long maxCountCountCountIndex = 0;\n        long maxCountCountCountValue\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i > maxCountCountCountCountValue)\
    \ {\n                maxCountCountCountCountValue = i;\n                maxCountCountCountCountIndex\
    \ = i;\n            }\n            if (i == maxCountCountCountCountValue) {\n\
    \                maxCountCountCountCountIndex++;\n            }\n        }\n \
    \       long maxCountCountCountCountCount = 0;\n        long maxCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxCountCountCountCountCountValue) {\n    \
    \            maxCountCountCountCountCountValue = i;\n                maxCountCountCountCountIndex\
    \ = i;\n            }\n            if (i == maxCountCountCountCountCountValue)\
    \ {\n                maxCountCountCountCountIndex++;\n            }\n        }\n\
    \        long maxCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > maxCountCountCountCountCountCountValue)\
    \ {\n", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long currentMax = arr[0];\n        long currentMaxIndex\
    \ = 0;\n        long currentMaxValue = currentMax;\n        long currentMaxIndex\
    \ = currentMaxIndex;\n        foreach (long i in arr) {\n            if (i ==\
    \ currentMax) {\n                currentMax++;\n                currentMaxIndex++;\n\
    \                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n            if (currentMaxIndex == k) {\n\
    \                result.Add(currentMaxValue);\n                currentMaxIndex\
    \ = 0;\n                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n            if (currentMaxIndex < k) {\n\
    \                currentMax = i;\n                currentMaxIndex = currentMaxIndex;\n\
    \                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        foreach (long i in arr) {\n       \
    \     sum += i;\n            if (sum > max) {\n                max = sum;\n  \
    \          }\n            if (sum < min) {\n                min = sum;\n     \
    \       }\n        }\n        long mid = min + (max - min) / 2;\n        long\
    \ midSum = 0;\n        foreach (long i in arr) {\n            midSum += i;\n \
    \           if (midSum > mid) {\n                mid = midSum;\n            }\n\
    \        }\n        long midSum2 = 0;\n        foreach (long i in arr) {\n   \
    \         midSum2 += i;\n            if (midSum2 > mid) {\n                mid\
    \ = midSum2;\n            }\n        }\n        long midSum3 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum3 += i;\n            if (midSum3 > mid)\
    \ {\n                mid = midSum3;\n            }\n        }\n        long midSum4\
    \ = 0;\n        foreach (long i in arr) {\n            midSum4 += i;\n       \
    \     if (midSum4 > mid) {\n                mid = midSum4;\n            }\n  \
    \      }\n        long midSum5 = 0;\n        foreach (long i in arr) {\n     \
    \       midSum5 += i;\n            if (midSum5 > mid) {\n                mid =\
    \ midSum5;\n            }\n        }\n        long midSum6 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum6 += i;\n            if (midSum6 > mid)\
    \ {\n                mid = midSum6;\n            }\n        }\n        long midSum7\
    \ = 0;\n        foreach (long i in arr) {\n            midSum7 += i;\n       \
    \     if (midSum7 > mid) {\n                mid = midSum7;\n            }\n  \
    \      }\n        long midSum8 = 0;\n        foreach (long i in arr) {\n     \
    \       midSum8 += i;\n            if (midSum8 > mid) {\n                mid =\
    \ midSum8;\n            }\n        }\n        long midSum9 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum9 += i;\n            if (midSum9 > mid)\
    \ {\n                mid = midSum9;\n            }\n        }\n        long midSum10\
    \ = 0;\n        foreach (long i in arr) {\n            midSum10 += i;\n      \
    \      if (midSum10 > mid) {\n                mid = midSum10;\n            }\n\
    \        }\n        long midSum11 = 0;\n        foreach (long i in arr) {\n  \
    \          midSum11 += i;\n            if (midSum11 > mid) {\n               \
    \ mid = midSum11;\n            }\n        }\n        long mid", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in arr) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        temp = max;\n        sum = 0;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > temp) {\n             \
    \   temp = sum;\n            }\n        }\n        temp = temp / k;\n        foreach\
    \ (long i in arr) {\n            if (temp == i) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long temp = 0;\n       \
    \ long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long\
    \ sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7\
    \ = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n\
    \        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n \
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n  \
    \      long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n   \
    \     long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n    \
    \    long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n     \
    \   long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n      \
    \  long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n       \
    \ long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long\
    \ sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38\
    \ = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 =\
    \ 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n\
    \        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n \
    \       long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n  \
    \      long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n   \
    \     long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n    \
    \    long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n     \
    \   long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n      \
    \  long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n       \
    \ long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long\
    \ sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72\
    \ = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long sum75 =\
    \ 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n\
    \        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n \
    \       long sum82 = 0;\n        long sum83 = 0;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long maxValue = arr[0];\n        for (int i = 0; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                max = arr[i];\n       \
    \         maxIndex = i;\n            }\n        }\n        long temp = 0;\n  \
    \      for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == maxValue)\
    \ {\n                temp = arr[i];\n            }\n        }\n        long temp2\
    \ = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ == maxValue) {\n                temp2 = arr[i];\n            }\n        }\n\
    \        if (temp > temp2) {\n            max = temp;\n            maxIndex =\
    \ tempIndex;\n        }\n        result.Add(max);\n        result.Add(arr[maxIndex]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ maxSum = 0;\n        long minSum = 0;\n        long sumOfSquare = 0;\n     \
    \   long squareOfSum = 0;\n        long squareOfSum2 = 0;\n        long squareOfSum3\
    \ = 0;\n        long squareOfSum4 = 0;\n        long squareOfSum5 = 0;\n     \
    \   long squareOfSum6 = 0;\n        long squareOfSum7 = 0;\n        long squareOfSum8\
    \ = 0;\n        long squareOfSum9 = 0;\n        long squareOfSum10 = 0;\n    \
    \    long squareOfSum11 = 0;\n        long squareOfSum12 = 0;\n        long squareOfSum13\
    \ = 0;\n        long squareOfSum14 = 0;\n        long squareOfSum15 = 0;\n   \
    \     long squareOfSum16 = 0;\n        long squareOfSum17 = 0;\n        long squareOfSum18\
    \ = 0;\n        long squareOfSum19 = 0;\n        long squareOfSum20 = 0;\n   \
    \     long squareOfSum21 = 0;\n        long squareOfSum22 = 0;\n        long squareOfSum23\
    \ = 0;\n        long squareOfSum24 = 0;\n        long squareOfSum25 = 0;\n   \
    \     long squareOfSum26 = 0;\n        long squareOfSum27 = 0;\n        long squareOfSum28\
    \ = 0;\n        long squareOfSum29 = 0;\n        long squareOfSum30 = 0;\n   \
    \     long squareOfSum31 = 0;\n        long squareOfSum32 = 0;\n        long squareOfSum33\
    \ = 0;\n        long squareOfSum34 = 0;\n        long squareOfSum35 = 0;\n   \
    \     long squareOfSum36 = 0;\n        long squareOfSum37 = 0;\n        long squareOfSum38\
    \ = 0;\n        long squareOfSum39 = 0;\n        long squareOfSum40 = 0;\n   \
    \     long squareOfSum41 = 0;\n        long squareOfSum42 = 0;\n        long squareOfSum43\
    \ = 0;\n        long squareOfSum44 = 0;\n        long squareOfSum45 = 0;\n   \
    \     long squareOfSum46 = 0;\n        long squareOfSum47 = 0;\n        long squareOfSum48\
    \ = 0;\n        long squareOfSum49 = 0;\n        long squareOfSum50 = 0;\n   \
    \     long squareOfSum51 = 0;\n        long squareOfSum52 = 0;\n        long squareOfSum53\
    \ = 0;\n        long squareOfSum54 = 0;\n        long squareOfSum55 = 0;\n   \
    \     long squareOfSum56 = 0;\n        long squareOfSum57 = 0;\n        long squareOfSum58\
    \ = 0;\n        long squareOfSum59 = 0;\n        ", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long min = 0;\n        long minIndex = 0;\n        long sum = 0;\n     \
    \   long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79 =\
    \ 0;\n        long sum80 = 0;\n        long sum81 = 0;"]
stop_tokens:
- "\n    }\n"

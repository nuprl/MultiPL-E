name: HumanEval_120_maximum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n    // of length k with the maximum k numbers in arr.\n    //\
  \ Example 1:\n    // Input: arr = [-3, -4, 5], k = 3\n    // Output: [-4, -3, 5]\n\
  \    // Example 2:\n    // Input: arr = [4, -4, 4], k = 2\n    // Output: [4, 4]\n\
  \    // Example 3:\n    // Input: arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n    //\
  \ Output: [2]\n    // Note:\n    // 1. The length of the array will be in the range\
  \ of [1, 1000].\n    // 2. The elements in the array will be in the range of [-1000,\
  \ 1000].\n    // 3. 0 <= k <= len(arr)\n    public static List<long> Maximum(List<long>\
  \ arr, long k) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)-3L, (long)-4L, (long)5L})), (3L)).Equals((new List<long>(new\
  \ long[]{(long)-4L, (long)-3L, (long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L, (long)4L})), (2L)).Equals((new List<long>(new long[]{(long)4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-3L,\
  \ (long)2L, (long)1L, (long)2L, (long)-1L, (long)-2L, (long)1L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)2L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)123L, (long)-123L, (long)20L, (long)0L, (long)1L, (long)2L, (long)-3L})),\
  \ (3L)).Equals((new List<long>(new long[]{(long)2L, (long)20L, (long)123L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)-123L, (long)20L, (long)0L,\
  \ (long)1L, (long)2L, (long)-3L})), (4L)).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)1L, (long)2L, (long)20L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)5L, (long)15L, (long)0L, (long)3L, (long)-13L, (long)-8L, (long)0L})),\
  \ (7L)).Equals((new List<long>(new long[]{(long)-13L, (long)-8L, (long)0L, (long)0L,\
  \ (long)3L, (long)5L, (long)15L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)-1L, (long)0L, (long)2L, (long)5L, (long)3L, (long)-10L})), (2L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)5L}))));\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)1L, (long)0L, (long)5L, (long)-7L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L})), (2L)).Equals((new List<long>(new long[]{(long)-4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-10L,\
  \ (long)10L})), (2L)).Equals((new List<long>(new long[]{(long)-10L, (long)10L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
  \ (long)-23L, (long)243L, (long)-400L, (long)0L})), (0L)).Equals((new List<long>())));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = 0;\n        long currentValue\
    \ = 0;\n        long currentIndex = 0;\n        foreach (long i in arr) {\n  \
    \          if (currentValue < i) {\n                currentValue = i;\n      \
    \          currentIndex = i;\n            }\n            if (currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \            }\n            if (currentValue == maxValue) {\n                currentIndex++;\n\
    \            }\n        }\n        result.Add(maxValue);\n        result.Add(maxIndex);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long sum = 0;\n        long maxSum = 0;\n       \
    \ long sumOfSquare = 0;\n        long square = 0;\n        long maxSquare = 0;\n\
    \        long maxSumOfSquare = 0;\n        long maxSquareOfSquare = 0;\n     \
    \   long maxSumOfSquareOfSquare = 0;\n        long maxSquareOfSquareOfSquare =\
    \ 0;\n        long maxSumOfSquareOfSquareOfSquare = 0;\n        long maxSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare\
    \ = 0;\n        long maxSquareOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n\
    \        long maxSumOfSquareOfSquareOfSquareOfSquareOfSquare = 0;\n        long\
    \ maxSquareOfSquareOfSquareOfSquareOfSquare", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long cur = 0;\n        foreach\
    \ (long i in arr) {\n            if (max < i) {\n                max = i;\n  \
    \          }\n        }\n        long max2 = max;\n        long cur2 = 0;\n  \
    \      foreach (long i in arr) {\n            if (max < i) {\n               \
    \ max = i;\n            }\n            if (cur < i) {\n                cur = i;\n\
    \            }\n            if (max2 < cur) {\n                max2 = cur;\n \
    \           }\n            if (cur2 < cur) {\n                cur2 = cur;\n  \
    \          }\n        }\n        long max3 = max2;\n        long cur3 = 0;\n \
    \       foreach (long i in arr) {\n            if (max < i) {\n              \
    \  max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max3 < cur) {\n                max3 = cur;\n\
    \            }\n            if (cur3 < cur) {\n                cur3 = cur;\n \
    \           }\n        }\n        long max4 = max3;\n        long cur4 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max4 < cur) {\n                max4 = cur;\n\
    \            }\n            if (cur4 < cur) {\n                cur4 = cur;\n \
    \           }\n        }\n        long max5 = max4;\n        long cur5 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max5 < cur) {\n                max5 = cur;\n\
    \            }\n            if (cur5 < cur) {\n                cur5 = cur;\n \
    \           }\n        }\n        long max6 = max5;\n        long cur6 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max6 < cur) {\n                max6 = cur;\n\
    \            }\n            if (cur6 < cur) {\n                cur6 = cur;\n \
    \           }\n        }\n        long max7 = max6;\n        long cur7 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }\n            if (cur < i) {\n                cur =\
    \ i;\n            }\n            if (max7 < cur) {\n                max7 = cur;\n\
    \            }\n            if (cur7 < cur) {\n                cur7 = cur;\n \
    \           }\n        }\n        long max8 = max7;\n        long cur8 = 0;\n\
    \        foreach (long i in arr) {\n            if (max < i) {\n             \
    \   max = i;\n            }", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long maxIndex = 0;\n \
    \       long tempIndex = 0;\n        bool isMax = true;\n        foreach (long\
    \ i in arr) {\n            if (isMax) {\n                temp = i;\n         \
    \       isMax = false;\n            }\n            if (temp > i) {\n         \
    \       temp = i;\n                maxIndex = i;\n            }\n        }\n \
    \       max = temp;\n        foreach (long i in arr) {\n            if (i == maxIndex)\
    \ {\n                result.Add(i);\n            }\n            if (i == max)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long sum = 0;\n        long maxSum = 0;\n        long maxSumIndex\
    \ = 0;\n        long sumIndex = 0;\n        long sumIndex2 = 0;\n        long\
    \ sumIndex3 = 0;\n        long sumIndex4 = 0;\n        long sumIndex5 = 0;\n \
    \       long sumIndex6 = 0;\n        long sumIndex7 = 0;\n        long sumIndex8\
    \ = 0;\n        long sumIndex9 = 0;\n        long sumIndex10 = 0;\n        long\
    \ sumIndex11 = 0;\n        long sumIndex12 = 0;\n        long sumIndex13 = 0;\n\
    \        long sumIndex14 = 0;\n        long sumIndex15 = 0;\n        long sumIndex16\
    \ = 0;\n        long sumIndex17 = 0;\n        long sumIndex18 = 0;\n        long\
    \ sumIndex19 = 0;\n        long sumIndex20 = 0;\n        long sumIndex21 = 0;\n\
    \        long sumIndex22 = 0;\n        long sumIndex23 = 0;\n        long sumIndex24\
    \ = 0;\n        long sumIndex25 = 0;\n        long sumIndex26 = 0;\n        long\
    \ sumIndex27 = 0;\n        long sumIndex28 = 0;\n        long sumIndex29 = 0;\n\
    \        long sumIndex30 = 0;\n        long sumIndex31 = 0;\n        long sumIndex32\
    \ = 0;\n        long sumIndex33 = 0;\n        long sumIndex34 = 0;\n        long\
    \ sumIndex35 = 0;\n        long sumIndex36 = 0;\n        long sumIndex37 = 0;\n\
    \        long sumIndex38 = 0;\n        long sumIndex39 = 0;\n        long sumIndex40\
    \ = 0;\n        long sumIndex41 = 0;\n        long sumIndex42 = 0;\n        long\
    \ sumIndex43 = 0;\n        long sumIndex44 = 0;\n        long sumIndex45 = 0;\n\
    \        long sumIndex46 = 0;\n        long sumIndex47 = 0;\n        long sumIndex48\
    \ = 0;\n        long sumIndex49 = 0;\n        long sumIndex50 = 0;\n        long\
    \ sumIndex51 = 0;\n        long sumIndex52 = 0;\n        long sumIndex53 = 0;\n\
    \        long sumIndex54 = 0;\n        long sumIndex55 = 0;\n        long sumIndex56\
    \ = 0;\n        long sumIndex57 = 0;\n        long sumIndex58 = 0;\n        long\
    \ sumIndex59 = 0;\n        long sumIndex60 = 0;\n        long sumIndex61 = 0;\n\
    \        long sumIndex62 = 0;\n        long sumIndex63 = 0;\n        long sumIndex64\
    \ = 0;\n        long sumIndex65 = 0;\n        long sumIndex66 = 0;\n        long\
    \ sumIndex67 = 0;\n        long sumIndex68 = 0;\n        long sumIndex69 = 0;\n\
    \        ", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long temp = 0;\n        long sum = 0;\n        long sum2 = 0;\n\
    \        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n    \
    \    long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long\
    \ sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12\
    \ = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 =\
    \ 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n\
    \        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n \
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n  \
    \      long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n   \
    \     long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n    \
    \    long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n     \
    \   long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n      \
    \  long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n       \
    \ long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long\
    \ sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46\
    \ = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 =\
    \ 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n\
    \        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n \
    \       long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n  \
    \      long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n   \
    \     long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n    \
    \    long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n     \
    \   long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n      \
    \  long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n       \
    \ long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long\
    \ sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80\
    \ = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long sum83 =\
    \ 0;", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = 0;\n        long minValue = 0;\n        long maxIndex2\
    \ = 0;\n        long minIndex2 = 0;\n        long maxValue2 = 0;\n        long\
    \ minValue2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n \
    \       long maxValue3 = 0;\n        long minValue3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxValue4 = 0;\n        long\
    \ minValue4 = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n \
    \       long maxValue5 = 0;\n        long minValue5 = 0;\n        long maxIndex6\
    \ = 0;\n        long minIndex6 = 0;\n        long maxValue6 = 0;\n        long\
    \ minValue6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7 = 0;\n \
    \       long maxValue7 = 0;\n        long minValue7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxValue8 = 0;\n        long\
    \ minValue8 = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n \
    \       long maxValue9 = 0;\n        long minValue9 = 0;\n        long maxIndex10\
    \ = 0;\n        long minIndex10 = 0;\n        long maxValue10 = 0;\n        long\
    \ minValue10 = 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n\
    \        long maxValue11 = 0;\n        long minValue11 = 0;\n        long maxIndex12\
    \ = 0;\n        long minIndex12 = 0;\n        long maxValue12 = 0;\n        long\
    \ minValue12 = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n\
    \        long maxValue13 = 0;\n        long minValue13 = 0;\n        long maxIndex14\
    \ = 0;\n        long minIndex14 = 0;\n        long maxValue14 = 0;\n        long\
    \ minValue14 = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n\
    \        long maxValue15 = 0;\n        long minValue15 = 0;\n        long maxIndex16\
    \ = 0;\n        long minIndex16 = 0;\n        long maxValue16 = 0;\n        long\
    \ minValue16 = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n\
    \        long maxValue17 = 0;\n        long minValue17 = 0;\n        long maxIndex18\
    \ = 0;\n        long minIndex18 = 0;\n        long maxValue18 = 0;\n        long\
    \ minValue18 = 0;\n        long maxIndex19 = 0;\n        ", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = arr[0];\n        long maxValueIndex = -1;\n        foreach\
    \ (long i in arr) {\n            if (i > maxValue) {\n                maxValue\
    \ = i;\n                maxValueIndex = i;\n            }\n            if (i ==\
    \ maxValue) {\n                maxIndex++;\n            }\n        }\n       \
    \ if (maxIndex < k) {\n            max = maxValue;\n            maxIndex = maxValueIndex;\n\
    \        }\n        long maxIndex = maxIndex;\n        long maxValue = maxValue;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;\n        long maxValueIndex = maxValueIndex;\n\
    \        long maxValueIndex = maxValueIndex;", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ maxValue = arr[0];\n        long currentValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long i in arr) {\n            if (i == currentValue)\
    \ {\n                currentIndex++;\n            } else {\n                result.Add(maxValue);\n\
    \                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \                currentValue = i;\n                currentIndex = 1;\n      \
    \      }\n        }\n        result.Add(maxValue);\n        return result.Take(k).ToList();",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long currentMax = 0;\n        long currentMaxIndex =\
    \ 0;\n        long currentSum = 0;\n        long currentSumIndex = 0;\n      \
    \  long currentSumOfSquares = 0;\n        long currentSumOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquares = 0;\n        long currentSumOfSquaresOfSquaresIndex\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquares = 0;\n        long\
    \ currentSumOfSquaresOfSquaresOfSquaresIndex = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n\
    \        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresIndex\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long currentSumOfSquaresOfSquaresOf", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long maxValue = 0;\n    \
    \    long minValue = 0;\n        long sum = 0;\n        long count = 0;\n    \
    \    long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        ", "       \
    \ List<long> result = new List<long>();\n        Array.Sort(arr);\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long\
    \ currentValue = 0;\n        long currentIndex = 0;\n        long currentMax =\
    \ 0;\n        long currentMaxIndex = 0;\n        long currentMaxValue = 0;\n \
    \       foreach (long i in arr) {\n            currentValue = i;\n           \
    \ currentIndex = 0;\n            currentMax = i;\n            currentMaxIndex\
    \ = i;\n            currentMaxValue = i;\n            while (currentIndex < arr.Count\
    \ && currentValue > currentMax) {\n                currentMax = arr[currentIndex];\n\
    \                currentMaxIndex = currentIndex;\n                currentMaxValue\
    \ = currentValue;\n                currentIndex++;\n            }\n          \
    \  result.Add(currentMaxValue);\n        }\n        return result.Take(k).ToList();",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > maxValue) {\n                maxValue = i;\n        \
    \        maxIndex = i;\n            }\n            if (i == maxValue) {\n    \
    \            maxIndex++;\n            }\n        }\n        long maxCount = 0;\n\
    \        long maxCountIndex = 0;\n        long maxCountValue = arr[0];\n     \
    \   foreach (long i in arr) {\n            if (i > maxCountValue) {\n        \
    \        maxCountValue = i;\n                maxCountIndex = i;\n            }\n\
    \            if (i == maxCountValue) {\n                maxCountIndex++;\n   \
    \         }\n        }\n        long maxCountCount = 0;\n        long maxCountCountIndex\
    \ = 0;\n        long maxCountCountValue = arr[0];\n        foreach (long i in\
    \ arr) {\n            if (i > maxCountCountValue) {\n                maxCountCountValue\
    \ = i;\n                maxCountCountIndex = i;\n            }\n            if\
    \ (i == maxCountCountValue) {\n                maxCountCountIndex++;\n       \
    \     }\n        }\n        long maxCountCountCount = 0;\n        long maxCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxCountCountCountValue) {\n              \
    \  maxCountCountCountValue = i;\n                maxCountCountCountIndex = i;\n\
    \            }\n            if (i == maxCountCountCountValue) {\n            \
    \    maxCountCountCountIndex++;\n            }\n        }\n        long maxCountCountCountCount\
    \ = 0;\n        long maxCountCountCountIndex = 0;\n        long maxCountCountCountValue\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i > maxCountCountCountCountValue)\
    \ {\n                maxCountCountCountCountValue = i;\n                maxCountCountCountCountIndex\
    \ = i;\n            }\n            if (i == maxCountCountCountCountValue) {\n\
    \                maxCountCountCountCountIndex++;\n            }\n        }\n \
    \       long maxCountCountCountCountCount = 0;\n        long maxCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxCountCountCountCountCountValue) {\n    \
    \            maxCountCountCountCountCountValue = i;\n                maxCountCountCountCountIndex\
    \ = i;\n            }\n            if (i == maxCountCountCountCountCountValue)\
    \ {\n                maxCountCountCountCountIndex++;\n            }\n        }\n\
    \        long maxCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > maxCountCountCountCountCountCountValue)\
    \ {\n", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long currentMax = arr[0];\n        long currentMaxIndex\
    \ = 0;\n        long currentMaxValue = currentMax;\n        long currentMaxIndex\
    \ = currentMaxIndex;\n        foreach (long i in arr) {\n            if (i ==\
    \ currentMax) {\n                currentMax++;\n                currentMaxIndex++;\n\
    \                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n            if (currentMaxIndex == k) {\n\
    \                result.Add(currentMaxValue);\n                currentMaxIndex\
    \ = 0;\n                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n            if (currentMaxIndex < k) {\n\
    \                currentMax = i;\n                currentMaxIndex = currentMaxIndex;\n\
    \                currentMaxValue = currentMax;\n                currentMaxIndex\
    \ = currentMaxIndex;\n            }\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        foreach (long i in arr) {\n       \
    \     sum += i;\n            if (sum > max) {\n                max = sum;\n  \
    \          }\n            if (sum < min) {\n                min = sum;\n     \
    \       }\n        }\n        long mid = min + (max - min) / 2;\n        long\
    \ midSum = 0;\n        foreach (long i in arr) {\n            midSum += i;\n \
    \           if (midSum > mid) {\n                mid = midSum;\n            }\n\
    \        }\n        long midSum2 = 0;\n        foreach (long i in arr) {\n   \
    \         midSum2 += i;\n            if (midSum2 > mid) {\n                mid\
    \ = midSum2;\n            }\n        }\n        long midSum3 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum3 += i;\n            if (midSum3 > mid)\
    \ {\n                mid = midSum3;\n            }\n        }\n        long midSum4\
    \ = 0;\n        foreach (long i in arr) {\n            midSum4 += i;\n       \
    \     if (midSum4 > mid) {\n                mid = midSum4;\n            }\n  \
    \      }\n        long midSum5 = 0;\n        foreach (long i in arr) {\n     \
    \       midSum5 += i;\n            if (midSum5 > mid) {\n                mid =\
    \ midSum5;\n            }\n        }\n        long midSum6 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum6 += i;\n            if (midSum6 > mid)\
    \ {\n                mid = midSum6;\n            }\n        }\n        long midSum7\
    \ = 0;\n        foreach (long i in arr) {\n            midSum7 += i;\n       \
    \     if (midSum7 > mid) {\n                mid = midSum7;\n            }\n  \
    \      }\n        long midSum8 = 0;\n        foreach (long i in arr) {\n     \
    \       midSum8 += i;\n            if (midSum8 > mid) {\n                mid =\
    \ midSum8;\n            }\n        }\n        long midSum9 = 0;\n        foreach\
    \ (long i in arr) {\n            midSum9 += i;\n            if (midSum9 > mid)\
    \ {\n                mid = midSum9;\n            }\n        }\n        long midSum10\
    \ = 0;\n        foreach (long i in arr) {\n            midSum10 += i;\n      \
    \      if (midSum10 > mid) {\n                mid = midSum10;\n            }\n\
    \        }\n        long midSum11 = 0;\n        foreach (long i in arr) {\n  \
    \          midSum11 += i;\n            if (midSum11 > mid) {\n               \
    \ mid = midSum11;\n            }\n        }\n        long mid", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in arr) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        temp = max;\n        sum = 0;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > temp) {\n             \
    \   temp = sum;\n            }\n        }\n        temp = temp / k;\n        foreach\
    \ (long i in arr) {\n            if (temp == i) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long temp = 0;\n       \
    \ long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long\
    \ sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7\
    \ = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n\
    \        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n \
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n  \
    \      long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n   \
    \     long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n    \
    \    long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n     \
    \   long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n      \
    \  long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n       \
    \ long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long\
    \ sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38\
    \ = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 =\
    \ 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n\
    \        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n \
    \       long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n  \
    \      long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n   \
    \     long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n    \
    \    long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n     \
    \   long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n      \
    \  long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n       \
    \ long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long\
    \ sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72\
    \ = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long sum75 =\
    \ 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n\
    \        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n \
    \       long sum82 = 0;\n        long sum83 = 0;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long maxValue = arr[0];\n        for (int i = 0; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                max = arr[i];\n       \
    \         maxIndex = i;\n            }\n        }\n        long temp = 0;\n  \
    \      for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == maxValue)\
    \ {\n                temp = arr[i];\n            }\n        }\n        long temp2\
    \ = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ == maxValue) {\n                temp2 = arr[i];\n            }\n        }\n\
    \        if (temp > temp2) {\n            max = temp;\n            maxIndex =\
    \ tempIndex;\n        }\n        result.Add(max);\n        result.Add(arr[maxIndex]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ maxSum = 0;\n        long minSum = 0;\n        long sumOfSquare = 0;\n     \
    \   long squareOfSum = 0;\n        long squareOfSum2 = 0;\n        long squareOfSum3\
    \ = 0;\n        long squareOfSum4 = 0;\n        long squareOfSum5 = 0;\n     \
    \   long squareOfSum6 = 0;\n        long squareOfSum7 = 0;\n        long squareOfSum8\
    \ = 0;\n        long squareOfSum9 = 0;\n        long squareOfSum10 = 0;\n    \
    \    long squareOfSum11 = 0;\n        long squareOfSum12 = 0;\n        long squareOfSum13\
    \ = 0;\n        long squareOfSum14 = 0;\n        long squareOfSum15 = 0;\n   \
    \     long squareOfSum16 = 0;\n        long squareOfSum17 = 0;\n        long squareOfSum18\
    \ = 0;\n        long squareOfSum19 = 0;\n        long squareOfSum20 = 0;\n   \
    \     long squareOfSum21 = 0;\n        long squareOfSum22 = 0;\n        long squareOfSum23\
    \ = 0;\n        long squareOfSum24 = 0;\n        long squareOfSum25 = 0;\n   \
    \     long squareOfSum26 = 0;\n        long squareOfSum27 = 0;\n        long squareOfSum28\
    \ = 0;\n        long squareOfSum29 = 0;\n        long squareOfSum30 = 0;\n   \
    \     long squareOfSum31 = 0;\n        long squareOfSum32 = 0;\n        long squareOfSum33\
    \ = 0;\n        long squareOfSum34 = 0;\n        long squareOfSum35 = 0;\n   \
    \     long squareOfSum36 = 0;\n        long squareOfSum37 = 0;\n        long squareOfSum38\
    \ = 0;\n        long squareOfSum39 = 0;\n        long squareOfSum40 = 0;\n   \
    \     long squareOfSum41 = 0;\n        long squareOfSum42 = 0;\n        long squareOfSum43\
    \ = 0;\n        long squareOfSum44 = 0;\n        long squareOfSum45 = 0;\n   \
    \     long squareOfSum46 = 0;\n        long squareOfSum47 = 0;\n        long squareOfSum48\
    \ = 0;\n        long squareOfSum49 = 0;\n        long squareOfSum50 = 0;\n   \
    \     long squareOfSum51 = 0;\n        long squareOfSum52 = 0;\n        long squareOfSum53\
    \ = 0;\n        long squareOfSum54 = 0;\n        long squareOfSum55 = 0;\n   \
    \     long squareOfSum56 = 0;\n        long squareOfSum57 = 0;\n        long squareOfSum58\
    \ = 0;\n        long squareOfSum59 = 0;\n        ", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long min = 0;\n        long minIndex = 0;\n        long sum = 0;\n     \
    \   long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long\
    \ sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8\
    \ = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 =\
    \ 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n\
    \        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n \
    \       long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n  \
    \      long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n   \
    \     long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n    \
    \    long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n     \
    \   long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n      \
    \  long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n       \
    \ long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long\
    \ sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42\
    \ = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 =\
    \ 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n\
    \        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n \
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n  \
    \      long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n   \
    \     long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n    \
    \    long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n     \
    \   long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n      \
    \  long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n       \
    \ long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long\
    \ sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long sum76\
    \ = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79 =\
    \ 0;\n        long sum80 = 0;\n        long sum81 = 0;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long currentMax = 0;\n        long currentMaxIndex = 0;\n        foreach\
    \ (long i in arr) {\n            if (i == max) {\n                currentMaxIndex\
    \ = maxIndex;\n            }\n            if (i == currentMax) {\n           \
    \     currentMaxIndex = currentMaxIndex;\n            }\n            if (currentMaxIndex\
    \ == k) {\n                result.Add(max);\n                maxIndex++;\n   \
    \             max = 0;\n                currentMax = 0;\n                currentMaxIndex\
    \ = 0;\n            }\n            if (currentMaxIndex < k) {\n              \
    \  max = i;\n                maxIndex = currentMaxIndex;\n                currentMax\
    \ = currentMax;\n                currentMaxIndex = currentMaxIndex;\n        \
    \    }\n        }\n        if (currentMaxIndex == k) {\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        if (k == maxIndex) {\n            result.Add(max);\n\
    \            return result;\n        }\n        if (k > maxIndex) {\n        \
    \    k = maxIndex;\n        }\n        List<long> maxList = new List<long>();\n\
    \        long maxValue = 0;\n        for (int i = 0; i < arr.Count; i++) {\n \
    \           if (arr[i] > maxValue) {\n                maxValue = arr[i];\n   \
    \         }\n            if (arr[i] == maxValue) {\n                maxList.Add(arr[i]);\n\
    \            }\n        }\n        result.AddRange(maxList);\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > maxValue) {\n                maxValue = i;\n        \
    \        maxIndex = i;\n            }\n            if (i == maxValue) {\n    \
    \            maxIndex++;\n            }\n        }\n        if (k > maxIndex)\
    \ {\n            k = maxIndex;\n        }\n        long maxCount = 0;\n      \
    \  long maxCountIndex = 0;\n        long maxCountValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > maxCountValue) {\n                maxCountValue\
    \ = i;\n                maxCountIndex = i;\n            }\n            if (i ==\
    \ maxCountValue) {\n                maxCountIndex++;\n            }\n        \
    \    if (maxCount < maxCountIndex) {\n                maxCount = maxCountIndex;\n\
    \            }\n        }\n        long maxCountCount = 0;\n        long maxCountCountIndex\
    \ = 0;\n        long maxCountCountValue = arr[0];\n        foreach (long i in\
    \ arr) {\n            if (i > maxCountCountValue) {\n                maxCountCountValue\
    \ = i;\n                maxCountCountIndex = i;\n            }\n            if\
    \ (i == maxCountCountValue) {\n                maxCountCountIndex++;\n       \
    \     }\n            if (maxCountCount < maxCountCountIndex) {\n             \
    \   maxCountCount = maxCountCountIndex;\n            }\n        }\n        long\
    \ maxCountCountCount = 0;\n        long maxCountCountCountIndex = 0;\n       \
    \ long maxCountCountCountValue = arr[0];\n        foreach (long i in arr) {\n\
    \            if (i > maxCountCountCountValue) {\n                maxCountCountCountValue\
    \ = i;\n                maxCountCountCountIndex = i;\n            }\n        \
    \    if (i == maxCountCountCountValue) {\n                maxCountCountCountIndex++;\n\
    \            }\n            if (maxCountCountCount < maxCountCountCountIndex)\
    \ {\n                maxCountCountCount = maxCountCountCountIndex;\n         \
    \   }\n        }\n        long maxCountCountCountCount = 0;\n        long maxCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxCountCountCountCountValue) {\n         \
    \       maxCountCountCountCountValue = i;\n                maxCountCountCountCountIndex\
    \ = i;\n            }\n            if (i == maxCountCountCountCountValue) {\n\
    \                maxCountCountCountCountIndex++;\n            }\n            if\
    \ (maxCountCountCountCount < maxCountCountCountCountIndex) {\n               \
    \ maxCountCountCountCount = maxCountCountCountCountIndex;\n            }\n   \
    \     }\n        long maxCountCountCountCountCount = 0;\n        long maxCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountValue = arr[0];\n        foreach (long\
    \ i in arr) {", "        List<long> result = new List<long>();\n        long max\
    \ = arr[0];\n        long maxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        result.Add(max);\n\
    \        for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        return result;", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long maxIndex = 0;\n        long maxVal = 0;\n        long maxIndex2 = 0;\n\
    \        long maxVal2 = 0;\n        long maxIndex3 = 0;\n        long maxVal3\
    \ = 0;\n        long maxIndex4 = 0;\n        long maxVal4 = 0;\n        long maxIndex5\
    \ = 0;\n        long maxVal5 = 0;\n        long maxIndex6 = 0;\n        long maxVal6\
    \ = 0;\n        long maxIndex7 = 0;\n        long maxVal7 = 0;\n        long maxIndex8\
    \ = 0;\n        long maxVal8 = 0;\n        long maxIndex9 = 0;\n        long maxVal9\
    \ = 0;\n        long maxIndex10 = 0;\n        long maxVal10 = 0;\n        long\
    \ maxIndex11 = 0;\n        long maxVal11 = 0;\n        long maxIndex12 = 0;\n\
    \        long maxVal12 = 0;\n        long maxIndex13 = 0;\n        long maxVal13\
    \ = 0;\n        long maxIndex14 = 0;\n        long maxVal14 = 0;\n        long\
    \ maxIndex15 = 0;\n        long maxVal15 = 0;\n        long maxIndex16 = 0;\n\
    \        long maxVal16 = 0;\n        long maxIndex17 = 0;\n        long maxVal17\
    \ = 0;\n        long maxIndex18 = 0;\n        long maxVal18 = 0;\n        long\
    \ maxIndex19 = 0;\n        long maxVal19 = 0;\n        long maxIndex20 = 0;\n\
    \        long maxVal20 = 0;\n        long maxIndex21 = 0;\n        long maxVal21\
    \ = 0;\n        long maxIndex22 = 0;\n        long maxVal22 = 0;\n        long\
    \ maxIndex23 = 0;\n        long maxVal23 = 0;\n        long maxIndex24 = 0;\n\
    \        long maxVal24 = 0;\n        long maxIndex25 = 0;\n        long maxVal25\
    \ = 0;\n        long maxIndex26 = 0;\n        long maxVal26 = 0;\n        long\
    \ maxIndex27 = 0;\n        long maxVal27 = 0;\n        long maxIndex28 = 0;\n\
    \        long maxVal28 = 0;\n        long maxIndex29 = 0;\n        long maxVal29\
    \ = 0;\n        long maxIndex30 = 0;\n        long maxVal30 = 0;\n        long\
    \ maxIndex31 = 0;\n        long maxVal31 = 0;\n        long maxIndex32 = 0;\n\
    \        long maxVal32 = 0;\n        long maxIndex33 = 0;\n        long maxVal33\
    \ = 0;\n        long maxIndex34 = 0;\n        long maxVal34 = 0;\n        long\
    \ maxIndex35 = 0;\n        long maxVal35 = 0;\n        long maxIndex36 = 0;\n\
    \        long maxVal36 = 0;\n        long max", "        List<long> result = new\
    \ List<long>();\n        Array.Sort(arr);\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if\
    \ (arr[i] > max) {\n                max = arr[i];\n                maxIndex =\
    \ i;\n            }\n        }\n        result.Add(max);\n        for (int i =\
    \ maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n     \
    \           max = arr[i];\n                maxIndex = i;\n            }\n    \
    \    }\n        result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        result.Add(max);\n\
    \        for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < ", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long temp\
    \ = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 =\
    \ 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n\
    \        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n\
    \        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long maxIndex = 0;\n        long temp = 0;\n        long temp2 = 0;\n      \
    \  long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n       \
    \ long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long\
    \ temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long\
    \ temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long\
    \ temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long\
    \ temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long\
    \ temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long\
    \ temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long\
    \ temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long\
    \ temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long\
    \ temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long\
    \ temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long\
    \ temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long\
    \ temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long\
    \ temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long\
    \ temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long\
    \ temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long\
    \ temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long\
    \ temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long\
    \ temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long\
    \ temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long\
    \ temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long\
    \ temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long\
    \ temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long\
    \ temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long\
    \ temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long\
    \ temp81 = 0;\n        long temp82 = 0;\n        long temp83", "        List<long>\
    \ result = new List<long>();\n        long max = arr[0];\n        long maxIndex\
    \ = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      result.Add(max);\n        for (int i = maxIndex + 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > max) {\n                max = arr[i];\n        \
    \        maxIndex = i;\n            }\n        }\n        result.Add(max);\n \
    \       for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        result.Add(max);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr", "        List<long> res =\
    \ new List<long>();\n        long max = 0;\n        long cur = 0;\n        foreach\
    \ (long i in arr) {\n            if (max < i) {\n                max = i;\n  \
    \          }\n            if (k == cur) {\n                res.Add(max);\n   \
    \             max = 0;\n            }\n            if (k > cur) {\n          \
    \      cur++;\n            }\n        }\n        return res;", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n  \
    \      long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n   \
    \     long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n    \
    \    long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n  \
    \      long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n        long temp83", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   long maxValue = 0;\n        foreach (long i in arr) {\n            if (i >\
    \ max) {\n                maxValue = max;\n                maxIndex = i;\n   \
    \         }\n            if (i == max) {\n                maxValue = i;\n    \
    \            maxIndex = i;\n            }\n            if (maxValue > i) {\n \
    \               maxValue = i;\n                maxIndex = i;\n            }\n\
    \        }\n        result.Add(maxIndex);\n        if (result.Count > k) {\n \
    \           result.RemoveAt(result.Count - 1);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;", "    \
    \    List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        long maxValueIndex =\
    \ -1;\n        foreach (long i in arr) {\n            if (i == maxValue) {\n \
    \               maxValueIndex++;\n            }\n            if (maxValueIndex\
    \ == k) {\n                result.Add(maxValue);\n                maxValueIndex\
    \ = 0;\n                maxValue = i;\n                maxValueIndex = -1;\n \
    \           }\n            if (i > maxValue) {\n                maxValue = i;\n\
    \                maxValueIndex = -1;\n            }\n        }\n        if (maxValueIndex\
    \ != 0) {\n            result.Add(maxValue);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n        bool\
    \ isMax = true;\n        bool isMin = true;\n        long maxValue = 0;\n    \
    \    long minValue = 0;\n        long maxIndexValue = 0;\n        long minIndexValue\
    \ = 0;\n        long maxIndexValue2 = 0;\n        long minIndexValue2 = 0;\n \
    \       long maxIndexValue3 = 0;\n        long minIndexValue3 = 0;\n        long\
    \ maxIndexValue4 = 0;\n        long minIndexValue4 = 0;\n        long maxIndexValue5\
    \ = 0;\n        long minIndexValue5 = 0;\n        long maxIndexValue6 = 0;\n \
    \       long minIndexValue6 = 0;\n        long maxIndexValue7 = 0;\n        long\
    \ minIndexValue7 = 0;\n        long maxIndexValue8 = 0;\n        long minIndexValue8\
    \ = 0;\n        long maxIndexValue9 = 0;\n        long minIndexValue9 = 0;\n \
    \       long maxIndexValue10 = 0;\n        long minIndexValue10 = 0;\n       \
    \ long maxIndexValue11 = 0;\n        long minIndexValue11 = 0;\n        long maxIndexValue12\
    \ = 0;\n        long minIndexValue12 = 0;\n        long maxIndexValue13 = 0;\n\
    \        long minIndexValue13 = 0;\n        long maxIndexValue14 = 0;\n      \
    \  long minIndexValue14 = 0;\n        long maxIndexValue15 = 0;\n        long\
    \ minIndexValue15 = 0;\n        long maxIndexValue16 = 0;\n        long minIndexValue16\
    \ = 0;\n        long maxIndexValue17 = 0;\n        long minIndexValue17 = 0;\n\
    \        long maxIndexValue18 = 0;\n        long minIndexValue18 = 0;\n      \
    \  long maxIndexValue19 = 0;\n        long minIndexValue19 = 0;\n        long\
    \ maxIndexValue20 = 0;\n        long minIndexValue20 = 0;\n        long maxIndexValue21\
    \ = 0;\n        long minIndexValue21 = 0;\n        long maxIndexValue22 = 0;\n\
    \        long minIndexValue22 = 0;\n        long maxIndexValue23 = 0;\n      \
    \  long minIndexValue23 = 0;\n        long maxIndexValue24 = 0;\n        long\
    \ minIndexValue24 = 0;\n        long maxIndexValue25 = 0;\n        long minIndexValue25\
    \ = 0;\n        long maxIndexValue26 = 0;\n        long minIndexValue26 = 0;\n\
    \        long maxIndexValue27 = 0;\n        long minIndexValue27 = 0;\n      \
    \  long maxIndexValue28 = 0;\n        long minIndexValue28 = 0;\n        long\
    \ maxIndexValue29 = 0;\n        long minIndexValue29 = 0;\n        long ", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long min = 0;\n        long sum = 0;\n        long maxSum = 0;\n        long\
    \ minSum = 0;\n        long sumOfSquare = 0;\n        long squareOfSum = 0;\n\
    \        long sumOfSquareOfSum = 0;\n        long squareOfSumOfSum = 0;\n    \
    \    long maxSumOfSquare = 0;\n        long minSumOfSquare = 0;\n        long\
    \ maxSumOfSquareOfSum = 0;\n        long minSumOfSquareOfSum = 0;\n        long\
    \ maxSumOfSquareOfSumOfSum = 0;\n        long minSumOfSquareOfSumOfSum = 0;\n\
    \        long maxSumOfSquareOfSumOfSumOfSum = 0;\n        long minSumOfSquareOfSumOfSumOfSum\
    \ = 0;\n        long maxSumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long minSumOfSquareOfSumOfSumOfSumOfSum\
    \ = 0;\n        long maxSumOfSquareOfSumOfSumOfSumOfSumOfSum = 0;\n        long\
    \ minSumOfSquareOfSumOfSumOfSumOfSumOfSum = 0;\n        long maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n     \
    \   long maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long\
    \ minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n\
    \        long maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n  \
    \      long minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n    \
    \    long maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n      \
    \  long minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long\
    \ maxSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long minSumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long maxSumOfSquareOfSumOfSumOfSumOfSumOf", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = 0;\n        long sum = 0;\n        long sumIndex = 0;\n\
    \        long sumValue = 0;\n        long temp = 0;\n        long tempIndex =\
    \ 0;\n        long tempValue = 0;\n        foreach (long i in arr) {\n       \
    \     sum += i;\n        }\n        max = sum;\n        sum = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n                maxIndex = i;\n                maxValue\
    \ = maxIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                sumIndex = i;\n                sumValue =\
    \ sumIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n                tempIndex = i;\n                tempValue\
    \ = tempIndex;\n            }\n        }\n        sum = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = ", "        List<long> result = new List<long>();\n        Array.Sort(arr);\n\
    \        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (i == k) {\n                break;\n            }\n \
    \           if (arr[i] > max) {\n                max = arr[i];\n             \
    \   temp = i;\n            }\n        }\n        result.Add(max);\n        result.Add(arr[temp]);\n\
    \        return result;", "        List<long> res = new List<long>();\n      \
    \  long max = 0;\n        long min = 0;\n        long sum = 0;\n        long count\
    \ = 0;\n        foreach (long i in arr) {\n            sum += i;\n           \
    \ if (sum > max) {\n                max = sum;\n            }\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n            if (sum\
    \ == max) {\n                res.Add(max);\n                count++;\n       \
    \     }\n        }\n        if (k > count) {\n            k = count;\n       \
    \ }\n        if (k == 1) {\n            return res;\n        }\n        long mid\
    \ = max / 2;\n        long mid2 = min / 2;\n        long mid3 = mid;\n       \
    \ long mid4 = mid2;\n        long mid5 = mid;\n        long mid6 = mid2;\n   \
    \     long mid7 = mid;\n        long mid8 = mid2;\n        long mid9 = mid;\n\
    \        long mid10 = mid2;\n        long mid11 = mid;\n        long mid12 = mid2;\n\
    \        long mid13 = mid;\n        long mid14 = mid2;\n        long mid15 = mid;\n\
    \        long mid16 = mid2;\n        long mid17 = mid;\n        long mid18 = mid2;\n\
    \        long mid19 = mid;\n        long mid20 = mid2;\n        long mid21 = mid;\n\
    \        long mid22 = mid2;\n        long mid23 = mid;\n        long mid24 = mid2;\n\
    \        long mid25 = mid;\n        long mid26 = mid2;\n        long mid27 = mid;\n\
    \        long mid28 = mid2;\n        long mid29 = mid;\n        long mid30 = mid2;\n\
    \        long mid31 = mid;\n        long mid32 = mid2;\n        long mid33 = mid;\n\
    \        long mid34 = mid2;\n        long mid35 = mid;\n        long mid36 = mid2;\n\
    \        long mid37 = mid;\n        long mid38 = mid2;\n        long mid39 = mid;\n\
    \        long mid40 = mid2;\n        long mid41 = mid;\n        long mid42 = mid2;\n\
    \        long mid43 = mid;\n        long mid44 = mid2;\n        long mid45 = mid;\n\
    \        long mid46 = mid2;\n        long mid47 = mid;\n        long mid48 = mid2;\n\
    \        long mid49 = mid;\n        long mid50 = mid2;\n        long mid51 = mid;\n\
    \        long mid52 = mid", "        List<long> result = new List<long>();\n \
    \       Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = arr[0];\n        for (int i = 0; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        result.Add(maxValue);\n\
    \        for (int i = arr.Count - 1; i >= 0; i--) {\n            if (arr[i] >\
    \ maxValue) {\n                maxValue = arr[i];\n                maxIndex =\
    \ i;\n            }\n        }\n        result.Add(maxValue);\n        if (result.Count\
    \ > k) {\n            List<long> newResult = new List<long>();\n            int\
    \ index = 0;\n            while (index < result.Count - k) {\n               \
    \ newResult.Add(result[index]);\n                index++;\n            }\n   \
    \         newResult.AddRange(result.Skip(index).Take(k));\n            result\
    \ = newResult;\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long min = 0;\n        long minIndex = 0;\n        long sum = 0;\n     \
    \   long sumIndex = 0;\n        long sumOfSquares = 0;\n        long sumOfSquaresIndex\
    \ = 0;\n        long sumOfSquares2 = 0;\n        long sumOfSquares2Index = 0;\n\
    \        long sumOfSquares3 = 0;\n        long sumOfSquares3Index = 0;\n     \
    \   long sumOfSquares4 = 0;\n        long sumOfSquares4Index = 0;\n        long\
    \ sumOfSquares5 = 0;\n        long sumOfSquares5Index = 0;\n        long sumOfSquares6\
    \ = 0;\n        long sumOfSquares6Index = 0;\n        long sumOfSquares7 = 0;\n\
    \        long sumOfSquares7Index = 0;\n        long sumOfSquares8 = 0;\n     \
    \   long sumOfSquares8Index = 0;\n        long sumOfSquares9 = 0;\n        long\
    \ sumOfSquares9Index = 0;\n        long sumOfSquares10 = 0;\n        long sumOfSquares10Index\
    \ = 0;\n        long sumOfSquares11 = 0;\n        long sumOfSquares11Index = 0;\n\
    \        long sumOfSquares12 = 0;\n        long sumOfSquares12Index = 0;\n   \
    \     long sumOfSquares13 = 0;\n        long sumOfSquares13Index = 0;\n      \
    \  long sumOfSquares14 = 0;\n        long sumOfSquares14Index = 0;\n        long\
    \ sumOfSquares15 = 0;\n        long sumOfSquares15Index = 0;\n        long sumOfSquares16\
    \ = 0;\n        long sumOfSquares16Index = 0;\n        long sumOfSquares17 = 0;\n\
    \        long sumOfSquares17Index = 0;\n        long sumOfSquares18 = 0;\n   \
    \     long sumOfSquares18Index = 0;\n        long sumOfSquares19 = 0;\n      \
    \  long sumOfSquares19Index = 0;\n        long sumOfSquares20 = 0;\n        long\
    \ sumOfSquares20Index = 0;\n        long sumOfSquares21 = 0;\n        long sumOfSquares21Index\
    \ = 0;\n        long sumOfSquares22 = 0;\n        long sumOfSquares22Index = 0;\n\
    \        long sumOfSquares23 = 0;\n        long sumOfSquares23Index = 0;\n   \
    \     long sumOfSquares24 = 0;\n        long sumOfSquares24Index = 0;\n      \
    \  long sumOfSquares25 = 0;\n        long sumOfSquares25Index = 0;\n        ",
  "        List<long> result = new List<long>();\n        Array.Sort(arr);\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        for (int i = 0;\
    \ i < arr.Count; i++) {\n            if (arr[i] == max) {\n                result.Add(arr[maxIndex]);\n\
    \                maxIndex++;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long sum = 0;\n        foreach (long i in arr) {\n      \
    \      sum += i;\n            if (sum > max) {\n                max = sum;\n \
    \           }\n        }\n        temp = k - max;\n        sum = k - 1;\n    \
    \    foreach (long i in arr) {\n            sum += i;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n            if (sum == temp) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = 0;\n        long current = 0;\n     \
    \   long currentIndex = 0;\n        long currentValue = 0;\n        long sum =\
    \ 0;\n        long sumIndex = 0;\n        long sumValue = 0;\n        long sumOfSquares\
    \ = 0;\n        long sumOfSquaresIndex = 0;\n        long sumOfSquaresValue =\
    \ 0;\n        long sumOfSquaresOfSquares = 0;\n        long sumOfSquaresOfSquaresIndex\
    \ = 0;\n        long sumOfSquaresOfSquaresValue = 0;\n        long sumOfSquaresOfSquaresOfSquares\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquares = 0;\n        long\
    \ sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sumOfSquaresOfSquaresOfSquaresOfSquaresIndex = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresValue\
    \ = 0;\n        long sumOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = 0;\n \
    \       long sum", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long\
    \ minValue = 1000;\n        long minIndex = 0;\n        long minIndex2 = 0;\n\
    \        long minValue2 = 0;\n        long maxIndex2 = 0;\n        long maxValue2\
    \ = 0;\n        long minValue3 = 0;\n        long minIndex3 = 0;\n        long\
    \ minIndex4 = 0;\n        long minValue4 = 0;\n        long maxIndex4 = 0;\n \
    \       long maxValue4 = 0;\n        long minValue5 = 0;\n        long minIndex5\
    \ = 0;\n        long minIndex6 = 0;\n        long minValue6 = 0;\n        long\
    \ maxIndex6 = 0;\n        long maxValue6 = 0;\n        long minValue7 = 0;\n \
    \       long minIndex7 = 0;\n        long minIndex8 = 0;\n        long minValue8\
    \ = 0;\n        long maxIndex8 = 0;\n        long maxValue8 = 0;\n        long\
    \ minValue9 = 0;\n        long minIndex9 = 0;\n        long minIndex10 = 0;\n\
    \        long minValue10 = 0;\n        long maxIndex10 = 0;\n        long maxValue10\
    \ = 0;\n        long minValue11 = 0;\n        long minIndex11 = 0;\n        long\
    \ minIndex12 = 0;\n        long minValue12 = 0;\n        long maxIndex12 = 0;\n\
    \        long maxValue12 = 0;\n        long minValue13 = 0;\n        long minIndex13\
    \ = 0;\n        long minIndex14 = 0;\n        long minValue14 = 0;\n        long\
    \ maxIndex14 = 0;\n        long maxValue14 = 0;\n        long minValue15 = 0;\n\
    \        long minIndex15 = 0;\n        long minIndex16 = 0;\n        long minValue16\
    \ = 0;\n        long maxIndex16 = 0;\n        long maxValue16 = 0;\n        long\
    \ minValue17 = 0;\n        long minIndex17 = 0;\n        long minIndex18 = 0;\n\
    \        long minValue18 = 0;\n        long maxIndex18 = 0;\n        long maxValue18\
    \ = 0;\n        long minValue19 = 0;\n        long minIndex19 = 0;\n        long\
    \ minIndex20 = 0;\n        long minValue20 = 0;\n        long maxIndex20 = 0;\n\
    \        long maxValue20 = 0;\n        long minValue21 = 0;\n        long minIndex21\
    \ = 0;\n        long minIndex22 = 0;\n        long minValue22 = 0;\n        long\
    \ maxIndex22 = 0;\n        long maxValue22 = 0;\n        long minValue23 = 0;\n\
    \        long minIndex23 = 0;\n        long minIndex24 = 0;\n        long minValue24\
    \ = 0;\n        long maxIndex24 = 0;\n        ", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ sum = 0;\n        long count = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82 = 0;\n        ", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long temp = 0;\n       \
    \ long sum = 0;\n        long count = 0;\n        foreach (long i in arr) {\n\
    \            sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        temp = max;\n        max = k;\n        sum\
    \ = 0;\n        foreach (long i in arr) {\n            sum += i;\n           \
    \ if (sum > max) {\n                max = sum;\n            }\n        }\n   \
    \     temp = max;\n        max = k;\n        sum = 0;\n        foreach (long i\
    \ in arr) {\n            sum += i;\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        temp = max;\n        max =\
    \ k;\n        sum = 0;\n        foreach (long i in arr) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        temp = max;\n        max = k;\n        sum = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n            }\n        }\n        temp = max;\n    \
    \    max = k;\n        sum = 0;\n        foreach (long i in arr) {\n         \
    \   sum += i;\n            if (sum > max) {\n                max = sum;\n    \
    \        }\n        }\n        temp = max;\n        max = k;\n        sum = 0;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        temp\
    \ = max;\n        max = k;\n        sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n        }\n        temp = max;\n        max = k;\n  \
    \      sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n  \
    \          if (sum > max) {\n                max = sum;\n            }\n     \
    \   }\n        temp = max;\n        max = k;\n        sum = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n            }\n        }\n        temp = max;\n    \
    \    max = k;\n        sum = 0;\n        foreach (long i in arr) {\n         \
    \   sum += i;\n            if (sum > max) {\n                max = sum;\n    \
    \        }\n        }\n        temp = max;\n        max = k;\n        sum = 0;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n        }\n        temp\
    \ = max;\n        max = k;\n        sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max", "        List<long> result\
    \ = new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n     \
    \   long maxIndex = 0;\n        for (int i = 0; i < arr.Count; i++) {\n      \
    \      if (arr[i] > max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        long maxValue = max;\n        long maxIndex\
    \ = maxIndex;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ == maxValue) {\n                result.Add(arr[i]);\n            }\n       \
    \ }\n        if (result.Count > k) {\n            List<long> newResult = new List<long>();\n\
    \            for (int i = 0; i < result.Count - k + 1; i++) {\n              \
    \  newResult.Add(result[i]);\n            }\n            result = newResult;\n\
    \        }\n        return result;", "        List<long> res = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n\
    \        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n     \
    \   long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long\
    \ sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10\
    \ = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 =\
    \ 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n\
    \        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n \
    \       long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n  \
    \      long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n   \
    \     long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n    \
    \    long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n     \
    \   long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n      \
    \  long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n       \
    \ long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long\
    \ sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44\
    \ = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 =\
    \ 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n\
    \        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n \
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n  \
    \      long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n   \
    \     long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n    \
    \    long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n     \
    \   long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n      \
    \  long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n       \
    \ long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long\
    \ sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78\
    \ = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 =\
    \ 0;\n        long sum82", "        List<long> res = new List<long>();\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        long maxCount = 0;\n  \
    \      long maxCountIndex = 0;\n        long maxCountCount = 0;\n        long\
    \ maxCountCountIndex = 0;\n        long maxCountCountCount = 0;\n        long\
    \ maxCountCountCountIndex = 0;\n        long maxCountCountCountCount = 0;\n  \
    \      long maxCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountCountIndex = 0;\n        long\
    \ maxCountCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountCountCount = 0;\n        long\
    \ maxCountCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountCountIndex = 0;\n        long\
    \ maxCountCountCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountCountCountCount = 0;\n      \
    \  long maxCountCountCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountCountCountIndex = 0;\n      \
    \  long maxCountCountCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountCountCountCount = 0;\n      \
    \  long maxCountCountCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountCountCountIndex = 0;\n      \
    \  long maxCountCountCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCountCountCountCount = 0;\n      \
    \  long maxCountCountCountCountCountCountCountIndex = 0;\n        long maxCountCountCountCountCountCountCountCount\
    \ = 0;\n        long maxCountCountCountCountCountCountCountIndex = 0;\n      \
    \  long maxCountCountCountCountCountCountCountCount = 0;\n        long maxCountCountCountCountCountCountCountIndex\
    \ = 0;\n        long maxCountCountCountCountCount", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long maxValue = arr[0];\n        foreach (long i in arr) {\n           \
    \ if (i > maxValue) {\n                maxValue = i;\n                maxIndex\
    \ = i;\n            }\n            if (i == maxValue) {\n                maxIndex++;\n\
    \            }\n        }\n        long maxCount = 0;\n        long maxCountIndex\
    \ = 0;\n        long maxCountValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i == maxValue) {\n                maxCount++;\n         \
    \   }\n            if (i == maxCountValue) {\n                maxCountIndex++;\n\
    \            }\n        }\n        if (maxCount > maxCountIndex) {\n         \
    \   maxCount = maxCountIndex;\n        }\n        if (maxCount > k) {\n      \
    \      k = maxCount;\n        }\n        long temp = 0;\n        long tempIndex\
    \ = 0;\n        long tempValue = arr[0];\n        foreach (long i in arr) {\n\
    \            if (i == maxValue) {\n                temp = maxIndex;\n        \
    \        tempIndex = maxIndex;\n                tempValue = i;\n            }\n\
    \            if (i == maxCountValue) {\n                temp = maxCountIndex;\n\
    \                tempIndex = maxCountIndex;\n                tempValue = i;\n\
    \            }\n            if (temp > tempIndex) {\n                temp = tempIndex;\n\
    \            }\n            if (temp == tempIndex) {\n                tempIndex++;\n\
    \            }\n            if (temp == k) {\n                result.Add(tempValue);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long maxValue = arr[0];\n\
    \        long minValue = arr[0];\n        long maxCount = 0;\n        long minCount\
    \ = 0;\n        long maxCount2 = 0;\n        long minCount2 = 0;\n        long\
    \ maxCount3 = 0;\n        long minCount3 = 0;\n        long maxCount4 = 0;\n \
    \       long minCount4 = 0;\n        long maxCount5 = 0;\n        long minCount5\
    \ = 0;\n        long maxCount6 = 0;\n        long minCount6 = 0;\n        long\
    \ maxCount7 = 0;\n        long minCount7 = 0;\n        long maxCount8 = 0;\n \
    \       long minCount8 = 0;\n        long maxCount9 = 0;\n        long minCount9\
    \ = 0;\n        long maxCount10 = 0;\n        long minCount10 = 0;\n        long\
    \ maxCount11 = 0;\n        long minCount11 = 0;\n        long maxCount12 = 0;\n\
    \        long minCount12 = 0;\n        long maxCount13 = 0;\n        long minCount13\
    \ = 0;\n        long maxCount14 = 0;\n        long minCount14 = 0;\n        long\
    \ maxCount15 = 0;\n        long minCount15 = 0;\n        long maxCount16 = 0;\n\
    \        long minCount16 = 0;\n        long maxCount17 = 0;\n        long minCount17\
    \ = 0;\n        long maxCount18 = 0;\n        long minCount18 = 0;\n        long\
    \ maxCount19 = 0;\n        long minCount19 = 0;\n        long maxCount20 = 0;\n\
    \        long minCount20 = 0;\n        long maxCount21 = 0;\n        long minCount21\
    \ = 0;\n        long maxCount22 = 0;\n        long minCount22 = 0;\n        long\
    \ maxCount23 = 0;\n        long minCount23 = 0;\n        long maxCount24 = 0;\n\
    \        long minCount24 = 0;\n        long maxCount25 = 0;\n        long minCount25\
    \ = 0;\n        long maxCount26 = 0;\n        long minCount26 = 0;\n        long\
    \ maxCount27 = 0;\n        long minCount27 = 0;\n        long maxCount28 = 0;\n\
    \        long minCount28 = 0;\n        long maxCount29 = 0;\n        long minCount29\
    \ = 0;\n        long maxCount30 = 0;\n        long minCount30 = 0;\n        long\
    \ maxCount31 = 0;\n        long minCount31 = 0;\n        long maxCount32 = 0;\n\
    \        long minCount32 = 0;\n        long maxCount33 = 0;\n        long minCount33\
    \ = 0;\n        long maxCount34 = 0;\n        long minCount34 = 0;\n", "     \
    \   List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = 0;\n        foreach (long i in arr) {\n\
    \            if (i > maxValue) {\n                maxValue = i;\n            \
    \    maxIndex = i;\n            }\n            if (i == maxValue) {\n        \
    \        maxIndex++;\n            }\n        }\n        if (maxIndex > k) {\n\
    \            k = maxIndex;\n        }\n        long maxIndex2 = 0;\n        long\
    \ maxValue2 = 0;\n        foreach (long i in arr) {\n            if (i > maxValue2)\
    \ {\n                maxValue2 = i;\n                maxIndex2 = i;\n        \
    \    }\n            if (i == maxValue2) {\n                maxIndex2++;\n    \
    \        }\n        }\n        if (maxIndex2 > k) {\n            k = maxIndex2;\n\
    \        }\n        long maxIndex3 = 0;\n        long maxValue3 = 0;\n       \
    \ foreach (long i in arr) {\n            if (i > maxValue3) {\n              \
    \  maxValue3 = i;\n                maxIndex3 = i;\n            }\n           \
    \ if (i == maxValue3) {\n                maxIndex3++;\n            }\n       \
    \ }\n        if (maxIndex3 > k) {\n            k = maxIndex3;\n        }\n   \
    \     long maxIndex4 = 0;\n        long maxValue4 = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > maxValue4) {\n                maxValue4 = i;\n\
    \                maxIndex4 = i;\n            }\n            if (i == maxValue4)\
    \ {\n                maxIndex4++;\n            }\n        }\n        if (maxIndex4\
    \ > k) {\n            k = maxIndex4;\n        }\n        long maxIndex5 = 0;\n\
    \        long maxValue5 = 0;\n        foreach (long i in arr) {\n            if\
    \ (i > maxValue5) {\n                maxValue5 = i;\n                maxIndex5\
    \ = i;\n            }\n            if (i == maxValue5) {\n                maxIndex5++;\n\
    \            }\n        }\n        if (maxIndex5 > k) {\n            k = maxIndex5;\n\
    \        }\n        long maxIndex6 = 0;\n        long maxValue6 = 0;\n       \
    \ foreach (long i in arr) {\n            if (i > maxValue6) {\n              \
    \  maxValue6 = i;\n                maxIndex6 = i;\n            }\n           \
    \ if (i == maxValue6) {\n                maxIndex6++;\n            }\n       \
    \ }\n        if (maxIndex6 > k) {\n            k = maxIndex6;\n        }\n   \
    \     long maxIndex7 = 0;\n        long maxValue7 = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > maxValue7) {\n                maxValue7 = i;\n\
    \                maxIndex7 = i;\n            }\n            if (i == maxValue7)\
    \ {\n                maxIndex7++;\n            }\n        }\n        if (maxIndex7\
    \ > k) {\n            k = max", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = 1000;\n        long maxIndex = 0;\n\
    \        long minIndex = 0;\n        long maxValue = arr[0];\n        long minValue\
    \ = arr[0];\n        long temp = 0;\n        long temp2 = 0;\n        long temp3\
    \ = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 =\
    \ 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n\
    \        long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long ", "        List<long> result = new List<long>();\n        Array.Sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        long currentValue = arr[0];\n        long currentIndex = 0;\n       \
    \ long currentMaxValue = arr[0];\n        long currentMaxIndex = 0;\n        long\
    \ currentMaxValueIndex = 0;\n        bool isMax = true;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (isMax) {\n                if (arr[i]\
    \ > maxValue) {\n                    max = arr[i];\n                    maxIndex\
    \ = i;\n                    maxValue = max;\n                }\n            }\
    \ else {\n                if (arr[i] < maxValue) {\n                    max =\
    \ arr[i];\n                    maxIndex = i;\n                    maxValue = max;\n\
    \                }\n            }\n            currentValue = arr[i];\n      \
    \      currentIndex = i;\n            currentMaxValue = maxValue;\n          \
    \  currentMaxIndex = maxIndex;\n            currentMaxValueIndex = maxIndex;\n\
    \            isMax = !isMax;\n        }\n        if (k == maxIndex) {\n      \
    \      result.Add(maxValue);\n        } else if (k == maxValueIndex) {\n     \
    \       result.Add(maxValue);\n            result.Add(maxIndex);\n        } else\
    \ if (k == currentMaxIndex && k == currentMaxValueIndex) {\n            result.Add(currentValue);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxCount = 0;\n        long minCount =\
    \ 0;\n        long maxCountIndex = 0;\n        long minCountIndex = 0;\n     \
    \   long maxCountMin = 0;\n        long minCountMin = 0;\n        long maxCountMinIndex\
    \ = 0;\n        long minCountMinIndex = 0;\n        long maxCountMax = 0;\n  \
    \      long minCountMax = 0;\n        long maxCountMaxIndex = 0;\n        long\
    \ minCountMaxIndex = 0;\n        long maxCountMinMax = 0;\n        long minCountMinMax\
    \ = 0;\n        long maxCountMinMaxIndex = 0;\n        long minCountMinMaxIndex\
    \ = 0;\n        long maxCountMaxMin = 0;\n        long minCountMaxMin = 0;\n \
    \       long maxCountMaxMinIndex = 0;\n        long minCountMaxMinIndex = 0;\n\
    \        long maxCountMaxMax = 0;\n        long minCountMaxMax = 0;\n        long\
    \ maxCountMaxMaxIndex = 0;\n        long minCountMaxMaxIndex = 0;\n        long\
    \ maxCountMinMaxMin = 0;\n        long minCountMinMaxMin = 0;\n        long maxCountMinMaxMinIndex\
    \ = 0;\n        long minCountMinMaxMinIndex = 0;\n        long maxCountMaxMaxMin\
    \ = 0;\n        long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin =\
    \ 0;\n        long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n\
    \        long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n  \
    \      long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n    \
    \    long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n      \
    \  long minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n        long\
    \ minCountMaxMaxMin = 0;\n        long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin\
    \ = 0;\n        long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin =\
    \ 0;\n        long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin = 0;\n\
    \        long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin = 0;\n  \
    \      long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin = 0;\n    \
    \    long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin = 0;\n      \
    \  long maxCountMaxMaxMin = 0;\n        long minCountMaxMaxMin = 0;\n        long ",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > maxValue) {\n                maxValue = i;\n        \
    \        maxIndex = i;\n            }\n            if (i == maxValue) {\n    \
    \            maxIndex++;\n            }\n        }\n        if (maxIndex > k)\
    \ {\n            k = maxIndex;\n        }\n        long temp = 0;\n        long\
    \ tempIndex = 0;\n        long tempValue = arr[0];\n        foreach (long i in\
    \ arr) {\n            if (i > tempValue) {\n                tempValue = i;\n \
    \               tempIndex = i;\n            }\n            if (i == tempValue)\
    \ {\n                tempIndex++;\n            }\n        }\n        if (tempIndex\
    \ > k) {\n            k = tempIndex;\n        }\n        long tempMax = 0;\n \
    \       long tempMaxIndex = 0;\n        long tempMaxValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > tempMaxValue) {\n                tempMaxValue\
    \ = i;\n                tempMaxIndex = i;\n            }\n            if (i ==\
    \ tempMaxValue) {\n                tempMaxIndex++;\n            }\n        }\n\
    \        if (tempMaxIndex > k) {\n            k = tempMaxIndex;\n        }\n \
    \       long tempMaxValue2 = arr[0];\n        foreach (long i in arr) {\n    \
    \        if (i > tempMaxValue2) {\n                tempMaxValue2 = i;\n      \
    \      }\n        }\n        long tempMaxValue3 = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > tempMaxValue3) {\n                tempMaxValue3\
    \ = i;\n            }\n        }\n        long tempMaxValue4 = arr[0];\n     \
    \   foreach (long i in arr) {\n            if (i > tempMaxValue4) {\n        \
    \        tempMaxValue4 = i;\n            }\n        }\n        long tempMaxValue5\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i > tempMaxValue5)\
    \ {\n                tempMaxValue5 = i;\n            }\n        }\n        long\
    \ tempMaxValue6 = arr[0];\n        foreach (long i in arr) {\n            if (i\
    \ > tempMaxValue6) {\n                tempMaxValue6 = i;\n            }\n    \
    \    }\n        long tempMaxValue7 = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > tempMaxValue7) {\n                tempMaxValue7 = i;\n\
    \            }\n        }\n        long tempMaxValue8 = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > tempMaxValue8) {\n                tempMaxValue8\
    \ = i;\n            }\n        }\n        long tempMaxValue9 = arr[0];\n     \
    \   foreach (long i in arr) {\n            if (i > tempMaxValue9) {\n        \
    \        tempMaxValue9 = i;\n            }\n        }\n        long tempMax",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = int.MaxValue;\n        foreach (long i in arr) {\n            if (i >\
    \ max) {\n                max = i;\n            }\n            if (i < min) {\n\
    \                min = i;\n            }\n        }\n        long mid = min +\
    \ (max - min) / 2;\n        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n\
    \        long mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6\
    \ = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n\
    \        long mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11\
    \ = mid10 / 2;\n        long mid12 = mid11 / 2;\n        long mid13 = mid12 /\
    \ 2;\n        long mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n     \
    \   long mid16 = mid15 / 2;\n        long mid17 = mid16 / 2;\n        long mid18\
    \ = mid17 / 2;\n        long mid19 = mid18 / 2;\n        long mid20 = mid19 /\
    \ 2;\n        long mid21 = mid20 / 2;\n        long mid22 = mid21 / 2;\n     \
    \   long mid23 = mid22 / 2;\n        long mid24 = mid23 / 2;\n        long mid25\
    \ = mid24 / 2;\n        long mid26 = mid25 / 2;\n        long mid27 = mid26 /\
    \ 2;\n        long mid28 = mid27 / 2;\n        long mid29 = mid28 / 2;\n     \
    \   long mid30 = mid29 / 2;\n        long mid31 = mid30 / 2;\n        long mid32\
    \ = mid31 / 2;\n        long mid33 = mid32 / 2;\n        long mid34 = mid33 /\
    \ 2;\n        long mid35 = mid34 / 2;\n        long mid36 = mid35 / 2;\n     \
    \   long mid37 = mid36 / 2;\n        long mid38 = mid37 / 2;\n        long mid39\
    \ = mid38 / 2;\n        long mid40 = mid39 / 2;\n        long mid41 = mid40 /\
    \ 2;\n        long mid42 = mid41 / 2;\n        long mid43 = mid42 / 2;\n     \
    \   long mid44 = mid43 / 2;\n        long mid45 = mid44 / 2;\n        long mid46\
    \ = mid45 / 2;\n        long mid47 = mid46 / 2;", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   long maxValue = 0;\n        long minValue = long.MaxValue;\n        long minIndex\
    \ = 0;\n        foreach (long i in arr) {\n            if (i < minValue) {\n \
    \               minValue = i;\n                minIndex = i;\n            }\n\
    \            if (i > maxValue) {\n                maxValue = i;\n            \
    \    maxIndex = i;\n            }\n        }\n        if (maxIndex - minIndex\
    \ > k) {\n            max = maxValue;\n            maxIndex = maxIndex;\n    \
    \    }\n        else {\n            max = maxValue;\n            maxIndex = maxIndex;\n\
    \        }\n        long temp = 0;\n        long tempIndex = 0;\n        long\
    \ tempValue = 0;\n        foreach (long i in arr) {\n            if (i == maxIndex)\
    \ {\n                tempValue = i;\n                tempIndex = i;\n        \
    \    }\n            if (i == minIndex) {\n                tempValue = i;\n   \
    \             tempIndex = i;\n            }\n            if (tempValue > max)\
    \ {\n                max = tempValue;\n                maxIndex = tempIndex;\n\
    \            }\n            if (tempValue < min) {\n                min = tempValue;\n\
    \                minIndex = tempIndex;\n            }\n        }\n        result.Add(max);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long maxIndex = 0;\n        foreach (long i in arr)\
    \ {\n            if (max < i) {\n                max = i;\n                maxIndex\
    \ = i;\n            }\n        }\n        long maxValue = max;\n        long maxIndex\
    \ = maxIndex;\n        long maxIndex2 = maxIndex;\n        long maxIndex3 = maxIndex;\n\
    \        long maxIndex4 = maxIndex;\n        long maxIndex5 = maxIndex;\n    \
    \    long maxIndex6 = maxIndex;\n        long maxIndex7 = maxIndex;\n        long\
    \ maxIndex8 = maxIndex;\n        long maxIndex9 = maxIndex;\n        long maxIndex10\
    \ = maxIndex;\n        long maxIndex11 = maxIndex;\n        long maxIndex12 =\
    \ maxIndex;\n        long maxIndex13 = maxIndex;\n        long maxIndex14 = maxIndex;\n\
    \        long maxIndex15 = maxIndex;\n        long maxIndex16 = maxIndex;\n  \
    \      long maxIndex17 = maxIndex;\n        long maxIndex18 = maxIndex;\n    \
    \    long maxIndex19 = maxIndex;\n        long maxIndex20 = maxIndex;\n      \
    \  long maxIndex21 = maxIndex;\n        long maxIndex22 = maxIndex;\n        long\
    \ maxIndex23 = maxIndex;\n        long maxIndex24 = maxIndex;\n        long maxIndex25\
    \ = maxIndex;\n        long maxIndex26 = maxIndex;\n        long maxIndex27 =\
    \ maxIndex;\n        long maxIndex28 = maxIndex;\n        long maxIndex29 = maxIndex;\n\
    \        long maxIndex30 = maxIndex;\n        long maxIndex31 = maxIndex;\n  \
    \      long maxIndex32 = maxIndex;\n        long maxIndex33 = maxIndex;\n    \
    \    long maxIndex34 = maxIndex;\n        long maxIndex35 = maxIndex;\n      \
    \  long maxIndex36 = maxIndex;\n        long maxIndex37 = maxIndex;\n        long\
    \ maxIndex38 = maxIndex;\n        long maxIndex39 = maxIndex;\n        long maxIndex40\
    \ = maxIndex;\n        long maxIndex41 = maxIndex;\n        long maxIndex42 =\
    \ maxIndex;\n        long maxIndex43 = maxIndex;\n        long maxIndex44 = maxIndex;\n\
    \        long maxIndex45 = maxIndex;\n        long maxIndex46 = maxIndex;\n  \
    \      long maxIndex47 = maxIndex;\n        long maxIndex48 = maxIndex;\n    \
    \    long maxIndex49 = maxIndex;\n        long maxIndex50 = maxIndex;\n      \
    \  long maxIndex51 = maxIndex;\n        long maxIndex52 = maxIndex;\n        long\
    \ maxIndex", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long minValue\
    \ = 1000000000000L;\n        long minIndex = 0;\n        bool isMax = true;\n\
    \        bool isMin = true;\n        long sum = 0;\n        long sum2 = 0;\n \
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n     \
    \   long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long\
    \ sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12\
    \ = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 =\
    \ 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n\
    \        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n \
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n  \
    \      long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n   \
    \     long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n    \
    \    long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n     \
    \   long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n      \
    \  long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n       \
    \ long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long\
    \ sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46\
    \ = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 =\
    \ 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n\
    \        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n \
    \       long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n  \
    \      long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n   \
    \     long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n    \
    \    long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n     \
    \   long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n      \
    \  long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n       \
    \ long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long\
    \ sum77 = 0;\n", "        List<long> res = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long min = 0;\n        long minIndex\
    \ = 0;\n        long sum = 0;\n        long sumIndex = 0;\n        long sumOfSquares\
    \ = 0;\n        long sumOfSquaresIndex = 0;\n        long maxOfSquares = 0;\n\
    \        long maxOfSquaresIndex = 0;\n        long minOfSquares = 0;\n       \
    \ long minOfSquaresIndex = 0;\n        long maxOfSum = 0;\n        long maxOfSumIndex\
    \ = 0;\n        long minOfSum = 0;\n        long minOfSumIndex = 0;\n        long\
    \ maxOfSumOfSquares = 0;\n        long maxOfSumOfSquaresIndex = 0;\n        long\
    \ minOfSumOfSquares = 0;\n        long minOfSumOfSquaresIndex = 0;\n        long\
    \ maxOfSumOfMin = 0;\n        long maxOfSumOfMinIndex = 0;\n        long minOfSumOfMin\
    \ = 0;\n        long minOfSumOfMinIndex = 0;\n        long maxOfSumOfMax = 0;\n\
    \        long maxOfSumOfMaxIndex = 0;\n        long minOfSumOfMax = 0;\n     \
    \   long minOfSumOfMaxIndex = 0;\n        long maxOfSumOfMinOfSquares = 0;\n \
    \       long maxOfSumOfMinOfSquaresIndex = 0;\n        long minOfSumOfMinOfSquares\
    \ = 0;\n        long minOfSumOfMinOfSquaresIndex = 0;\n        long maxOfSumOfMaxOfSquares\
    \ = 0;\n        long maxOfSumOfMaxOfSquaresIndex = 0;\n        long minOfSumOfMaxOfSquares\
    \ = 0;\n        long minOfSumOfMaxOfSquaresIndex = 0;\n        long maxOfSumOfMinOfSum\
    \ = 0;\n        long maxOfSumOfMinOfSumIndex = 0;\n        long minOfSumOfMinOfSum\
    \ = 0;\n        long minOfSumOfMinOfSumIndex = 0;\n        long maxOfSumOfMaxOfSum\
    \ = 0;\n        long maxOfSumOfMaxOfSumIndex = 0;\n        long minOfSumOfMaxOfSum\
    \ = 0;\n        long minOfSumOfMaxOfSumIndex = 0;\n        long maxOfSumOfMinOfSumOfSquares\
    \ = 0;\n        long maxOfSumOfMinOfSumOfSquaresIndex = 0;\n        long minOfSumOfMinOfSumOfSquares\
    \ = 0;\n        long minOfSumOfMinOfSumOfSquaresIndex = 0;\n        long maxOfSumOfMaxOfSumOfSquares\
    \ = 0;\n        long maxOfSumOfMaxOfSumOfSquaresIndex = 0;\n        long min",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 1000;\n        long maxIndex = 0;\n        long minIndex = 0;\n      \
    \  long maxValue = arr[0];\n        long minValue = arr[0];\n        long maxCount\
    \ = 0;\n        long minCount = 0;\n        long maxCount2 = 0;\n        long\
    \ minCount2 = 0;\n        long maxCount3 = 0;\n        long minCount3 = 0;\n \
    \       long maxCount4 = 0;\n        long minCount4 = 0;\n        long maxCount5\
    \ = 0;\n        long minCount5 = 0;\n        long maxCount6 = 0;\n        long\
    \ minCount6 = 0;\n        long maxCount7 = 0;\n        long minCount7 = 0;\n \
    \       long maxCount8 = 0;\n        long minCount8 = 0;\n        long maxCount9\
    \ = 0;\n        long minCount9 = 0;\n        long maxCount10 = 0;\n        long\
    \ minCount10 = 0;\n        long maxCount11 = 0;\n        long minCount11 = 0;\n\
    \        long maxCount12 = 0;\n        long minCount12 = 0;\n        long maxCount13\
    \ = 0;\n        long minCount13 = 0;\n        long maxCount14 = 0;\n        long\
    \ minCount14 = 0;\n        long maxCount15 = 0;\n        long minCount15 = 0;\n\
    \        long maxCount16 = 0;\n        long minCount16 = 0;\n        long maxCount17\
    \ = 0;\n        long minCount17 = 0;\n        long maxCount18 = 0;\n        long\
    \ minCount18 = 0;\n        long maxCount19 = 0;\n        long minCount19 = 0;\n\
    \        long maxCount20 = 0;\n        long minCount20 = 0;\n        long maxCount21\
    \ = 0;\n        long minCount21 = 0;\n        long maxCount22 = 0;\n        long\
    \ minCount22 = 0;\n        long maxCount23 = 0;\n        long minCount23 = 0;\n\
    \        long maxCount24 = 0;\n        long minCount24 = 0;\n        long maxCount25\
    \ = 0;\n        long minCount25 = 0;\n        long maxCount26 = 0;\n        long\
    \ minCount26 = 0;\n        long maxCount27 = 0;\n        long minCount27 = 0;\n\
    \        long maxCount28 = 0;\n        long minCount28 = 0;\n        long maxCount29\
    \ = 0;\n        long minCount29 = 0;\n        long maxCount30 = 0;\n        long\
    \ minCount30 = 0;\n        long maxCount31 = 0;\n        long minCount31 = 0;\n\
    \        long maxCount32 = 0;\n        long minCount32 = 0;\n        long maxCount33\
    \ = 0;\n        long minCount33 = 0;\n        long maxCount34 = 0;\n        long\
    \ minCount34 = 0;", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long min = 0;\n        long minIndex\
    \ = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n\
    \        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n    \
    \    long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long\
    \ sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13\
    \ = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 =\
    \ 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n\
    \        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n \
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n  \
    \      long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n   \
    \     long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n    \
    \    long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n     \
    \   long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n      \
    \  long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n       \
    \ long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long\
    \ sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47\
    \ = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 =\
    \ 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n\
    \        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n \
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n  \
    \      long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n   \
    \     long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n    \
    \    long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n     \
    \   long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n      \
    \  long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n       \
    \ long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long\
    \ sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81\
    \ = 0;", "        List<long> result = new List<long>();\n        long max = arr[0];\n\
    \        long maxIndex = 0;\n        bool isMax = true;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max\
    \ = arr[i];\n                maxIndex = i;\n                isMax = true;\n  \
    \          } else if (arr[i] == max) {\n                isMax = false;\n     \
    \       }\n        }\n        if (isMax) {\n            result.Add(max);\n   \
    \         result.Add(arr[maxIndex]);\n        } else {\n            for (int i\
    \ = 0; i < arr.Count; i++) {\n                if (arr[i] > max) {\n          \
    \          result.Add(arr[i]);\n                }\n            }\n        }\n\
    \        return result.OrderByDescending(x => x).Take(k).ToList();", "       \
    \ List<long> result = new List<long>();\n        long max = 0;\n        long cur\
    \ = 0;\n        foreach (var item in arr) {\n            if (max < item) {\n \
    \               max = item;\n                cur = item;\n            }\n    \
    \        if (k > 0) {\n                k--;\n            }\n        }\n      \
    \  result.Add(cur);\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ sum = 0;\n        long sumIndex = 0;\n        foreach (long i in arr) {\n  \
    \          sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \                maxIndex = sumIndex;\n            }\n            sumIndex++;\n\
    \        }\n        sum = 0;\n        sumIndex = 0;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > max) {\n              \
    \  max = sum;\n                maxIndex = sumIndex;\n            }\n         \
    \   sumIndex++;\n        }\n        sum = 0;\n        sumIndex = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n                maxIndex = sumIndex;\n            }\n\
    \            sumIndex++;\n        }\n        sum = 0;\n        sumIndex = 0;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n                maxIndex = sumIndex;\n\
    \            }\n            sumIndex++;\n        }\n        sum = 0;\n       \
    \ sumIndex = 0;\n        foreach (long i in arr) {\n            sum += i;\n  \
    \          if (sum > max) {\n                max = sum;\n                maxIndex\
    \ = sumIndex;\n            }\n            sumIndex++;\n        }\n        sum\
    \ = 0;\n        sumIndex = 0;\n        foreach (long i in arr) {\n           \
    \ sum += i;\n            if (sum > max) {\n                max = sum;\n      \
    \          maxIndex = sumIndex;\n            }\n            sumIndex++;\n    \
    \    }\n        sum = 0;\n        sumIndex = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n                maxIndex = sumIndex;\n            }\n            sumIndex++;\n\
    \        }\n        sum = 0;\n        sumIndex = 0;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > max) {\n              \
    \  max = sum;\n                maxIndex = sumIndex;\n            }\n         \
    \   sumIndex++;\n        }\n        sum = 0;\n        sumIndex = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n                maxIndex = sumIndex;\n            }\n\
    \            sumIndex++;\n        }\n        sum = 0;\n        sumIndex = 0;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n                maxIndex = sumIndex;\n\
    \            }\n            sumIndex++;\n        }\n        sum = 0;\n       \
    \ sumIndex = 0;\n        foreach (long i in arr) {\n            sum += i;\n  \
    \          if (sum > max) {\n                max = sum", "        List<long> result\
    \ = new List<long>();\n        long max = arr[0];\n        long maxCount = 0;\n\
    \        foreach (long i in arr) {\n            if (maxCount < k) {\n        \
    \        if (i > max) {\n                    max = i;\n                    maxCount\
    \ = 1;\n                }\n                else {\n                    maxCount++;\n\
    \                }\n            }\n            else {\n                if (i ==\
    \ max) {\n                    maxCount++;\n                }\n               \
    \ else {\n                    if (maxCount > k) {\n                        result.Add(max);\n\
    \                        maxCount = 1;\n                        max = i;\n   \
    \                 }\n                    else {\n                        maxCount++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (maxCount > k) {\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        long maxSum = 0;\n        long minSum\
    \ = 0;\n        long sumOfSquare = 0;\n        long squareOfSum = 0;\n       \
    \ long sumOfSquareOfSum = 0;\n        long squareOfSumOfSum = 0;\n        long\
    \ sumOfSquareOfSquare = 0;\n        long squareOfSumOfSquare = 0;\n        long\
    \ maxSumOfSquare = 0;\n        long minSumOfSquare = 0;\n        long maxSumOfSquareOfSum\
    \ = 0;\n        long minSumOfSquareOfSum = 0;\n        long maxSumOfSquareOfSquare\
    \ = 0;\n        long minSumOfSquareOfSquare = 0;\n        long maxSumOfSquareOfSumOfSquare\
    \ = 0;\n        long minSumOfSquareOfSumOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSum\
    \ = 0;\n        long minSumOfSquareOfSumOfSquare = 0;\n        long maxSumOfSquareOfSquareOfSumOfSquare\
    \ = 0;\n        long minSumOfSquareOfSumOfSquareOfSum = 0;\n        long maxSumOfSquareOfSquareOfSumOfSquare\
    \ = 0;\n        long minSumOfSquareOfSumOfSquareOfSumOfSquare = 0;\n        long\
    \ maxSumOfSquareOfSquareOfSumOfSquareOfSum = 0;\n        long minSumOfSquareOfSumOfSquareOfSumOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquare = 0;\n \
    \       long minSumOfSquareOfSumOfSquareOfSumOfSquareOfSum = 0;\n        long\
    \ maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquare = 0;\n        long minSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquareOfSum = 0;\n\
    \        long minSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquare = 0;\n   \
    \     long maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquare = 0;\n\
    \        long minSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSum = 0;\n\
    \        long maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquare =\
    \ 0;\n        long minSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareOfSumOfSquareOfSumOfSquareOfSumOfSquareOfSum\
    \ = 0;\n        long min", "        List<long> res = new List<long>();\n     \
    \   long max = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long sum = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n                maxIndex = i;\n            }\n     \
    \   }\n        long maxSum = sum;\n        long maxIndex = maxIndex;\n       \
    \ long sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n  \
    \          if (sum > maxSum) {\n                maxSum = sum;\n              \
    \  maxIndex = i;\n            }\n        }\n        long maxSum2 = sum;\n    \
    \    long maxIndex2 = maxIndex;\n        long sum2 = 0;\n        foreach (long\
    \ i in arr) {\n            sum2 += i;\n            if (sum2 > maxSum2) {\n   \
    \             maxSum2 = sum2;\n                maxIndex2 = i;\n            }\n\
    \        }\n        result.Add(maxIndex);\n        result.Add(maxIndex2);\n  \
    \      result.Add(maxSum);\n        result.Add(maxSum2);\n        return result;",
  "        List<long> result = new List<long>();\n        Array.Sort(arr);\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        long currentMax = arr[0];\n\
    \        long currentMaxIndex = 0;\n        long currentIndex = 0;\n        bool\
    \ isMax = true;\n        bool isMaxIndex = false;\n        bool isCurrentMax =\
    \ true;\n        bool isCurrentMaxIndex = false;\n        bool isCurrentIndex\
    \ = false;\n        bool isIndex = false;\n        bool isMaxIndexIsCurrentMax\
    \ = false;\n        bool isMaxIndexIsCurrentIndex = false;\n        bool isMaxIndexIsCurrentMaxIndex\
    \ = false;\n        bool isMaxIndexIsIndex = false;\n        bool isMaxIndexIsMax\
    \ = false;\n        bool isMaxIndexIsCurrentMaxIndex = false;\n        bool isMaxIndexIsCurrentIndex\
    \ = false;\n        bool isMaxIndexIsCurrentMax = false;\n        bool isMaxIndexIsIndex\
    \ = false;\n        bool isMaxIndexIsMax = false;\n        bool isMaxIndexIsCurrentMaxIndex\
    \ = false;\n        bool isMaxIndexIsCurrentIndex = false;\n        bool isMaxIndexIsCurrentMax\
    \ = false;\n        bool isMaxIndexIsIndex = false;\n        bool isMaxIndexIsMax\
    \ = false;\n        bool isMaxIndexIsCurrentMaxIndex = false;\n        bool isMaxIndexIsCurrentIndex\
    \ = false;\n        bool isMaxIndexIsCurrentMax = false;\n        bool isMaxIndexIsIndex\
    \ = false;\n        bool isMaxIndexIsMax = false;\n        bool isMaxIndexIsCurrentMaxIndex\
    \ = false;\n        bool isMaxIndexIsCurrentIndex = false;\n        bool isMaxIndexIsCurrentMax\
    \ = false;\n        bool isMaxIndexIsIndex = false;\n        bool isMaxIndexIsMax\
    \ = false;\n        bool isMaxIndexIsCurrentMaxIndex = false;\n        bool isMaxIndexIsCurrentIndex\
    \ = false;\n        bool isMaxIndexIsCurrentMax = false;\n        bool isMaxIndexIsIndex\
    \ = false;\n        bool isMaxIndexIsMax = false;\n        bool isMaxIndexIsCurrentMaxIndex\
    \ = false;\n        bool isMaxIndexIsCurrentIndex = false;\n        bool isMaxIndexIsCurrentMax\
    \ = false;\n        bool isMaxIndexIsIndex = false;\n        bool isMaxIndexIsMax\
    \ = false;\n        bool isMaxIndexIsCurrentMaxIndex = false;\n        bool isMaxIndexIsCurrentIndex\
    \ = false;\n        bool isMaxIndexIsCurrentMax = false;\n        bool isMaxIndexIsIndex\
    \ = false;\n        bool isMaxIndexIsMax = false;\n        bool isMaxIndexIsCurrentMaxIndex\
    \ = false;\n        bool isMaxIndexIsCurrentIndex = false;\n        bool isMaxIndexIsCurrentMax\
    \ = false;", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n        long\
    \ currentMaxValue = maxValue;\n        long currentMaxIndex = maxIndex;\n    \
    \    foreach (long i in arr) {\n            if (i > maxValue) {\n            \
    \    max = i;\n                maxValue = currentMaxValue;\n                maxIndex\
    \ = currentMaxIndex;\n            }\n            if (i == maxValue) {\n      \
    \          currentMaxValue = i;\n                currentMaxIndex = i;\n      \
    \      }\n        }\n        long currentMax = max;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMaxValue = maxValue;\n        foreach (long\
    \ i in arr) {\n            if (i == currentMaxValue) {\n                currentMaxValue\
    \ = i;\n                currentMaxIndex = i;\n            }\n            if (i\
    \ == currentMax) {\n                currentMax = i;\n                currentMaxIndex\
    \ = i;\n            }\n        }\n        if (k == 1) {\n            result.Add(currentMax);\n\
    \            return result;\n        }\n        if (k == 2) {\n            result.Add(currentMax);\n\
    \            result.Add(currentMax);\n            return result;\n        }\n\
    \        long maxValue2 = currentMaxValue;\n        long maxIndex2 = currentMaxIndex;\n\
    \        long maxValue3 = currentMaxValue;\n        long maxIndex3 = currentMaxIndex;\n\
    \        long maxValue4 = currentMaxValue;\n        long maxIndex4 = currentMaxIndex;\n\
    \        long maxValue5 = currentMaxValue;\n        long maxIndex5 = currentMaxIndex;\n\
    \        long maxValue6 = currentMaxValue;\n        long maxIndex6 = currentMaxIndex;\n\
    \        long maxValue7 = currentMaxValue;\n        long maxIndex7 = currentMaxIndex;\n\
    \        long maxValue8 = currentMaxValue;\n        long maxIndex8 = currentMaxIndex;\n\
    \        long maxValue9 = currentMaxValue;\n        long maxIndex9 = currentMaxIndex;\n\
    \        long maxValue10 = currentMaxValue;\n        long maxIndex10 = currentMaxIndex;\n\
    \        long maxValue11 = currentMaxValue;\n        long maxIndex11 = currentMaxIndex;\n\
    \        long maxValue12 = currentMaxValue;\n        long maxIndex12 = currentMaxIndex;\n\
    \        long maxValue13 = currentMaxValue;\n        long maxIndex13 = currentMaxIndex;\n\
    \        long maxValue14 = currentMaxValue;\n        long maxIndex14 = currentMaxIndex;\n\
    \        long maxValue15 = currentMaxValue;\n        long maxIndex15 = currentMaxIndex;\n\
    \        long maxValue16 = currentMaxValue;\n        long maxIndex16 = currentMaxIndex;\n\
    \        long maxValue17 = currentMaxValue;\n        long maxIndex17 = currentMaxIndex;\n\
    \        long maxValue18 = ", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n\
    \        long currentMax = 0;\n        long currentMaxIndex = 0;\n        long\
    \ currentMaxValue = 0;\n        long currentIndex = 0;\n        long currentValue\
    \ = 0;\n        bool isMax = true;\n        bool isMaxIndex = false;\n       \
    \ bool isMaxValue = false;\n        bool isCurrentMax = true;\n        bool isCurrentMaxIndex\
    \ = false;\n        bool isCurrentMaxValue = false;\n        bool isCurrentIndex\
    \ = false;\n        bool isCurrentValue = false;\n        foreach (long i in arr)\
    \ {\n            if (isMax) {\n                if (i == max) {\n             \
    \       isMax = false;\n                    isMaxIndex = true;\n             \
    \       isMaxValue = true;\n                    isCurrentMax = true;\n       \
    \             isCurrentMaxIndex = true;\n                    isCurrentMaxValue\
    \ = true;\n                    isCurrentIndex = true;\n                    isCurrentValue\
    \ = true;\n                }\n                else {\n                    if (currentMaxValue\
    \ < i) {\n                        currentMaxValue = i;\n                     \
    \   currentMaxIndex = currentIndex;\n                        currentMax = max;\n\
    \                    }\n                }\n            }\n            else if\
    \ (isMaxIndex) {\n                if (i == maxIndex) {\n                    isMaxIndex\
    \ = false;\n                    isMaxValue = true;\n                    isCurrentMax\
    \ = true;\n                    isCurrentMaxIndex = true;\n                   \
    \ isCurrentMaxValue = true;\n                    isCurrentIndex = true;\n    \
    \                isCurrentValue = true;\n                }\n                else\
    \ {\n                    if (currentMaxIndex < i) {\n                        currentMaxIndex\
    \ = i;\n                        currentMax = max;\n                    }\n   \
    \             }\n            }\n            else if (isMaxValue) {\n         \
    \       if (i == maxValue) {\n                    isMaxValue = false;\n      \
    \              isMaxIndex = true;\n                    isCurrentMax = true;\n\
    \                    isCurrentMaxIndex = true;\n                    isCurrentMaxValue\
    \ = true;\n                    isCurrentIndex = true;\n                    isCurrentValue\
    \ = true;\n                }\n                else {\n                    if (currentMaxValue\
    \ < i) {\n                        currentMaxValue = i;\n                     \
    \   currentMax = max;\n                    }\n                }\n            }\n\
    \            else if (isCurrentMax) {\n                if (i == currentMax) {\n\
    \                    isCurrentMax = false;\n                    isCurrentMaxIndex\
    \ = true;\n                    isCurrentMaxValue = true;\n                   \
    \ isCurrentIndex = true;\n                    isCurrentValue = true;\n       \
    \         }\n                else {\n                    if (currentMaxValue <\
    \ i) {\n                        currentMaxValue = i;\n                       \
    \ currentMax = max;\n                    }\n                }\n            }\n\
    \            else if (isCurrentMaxIndex) {\n                if (i == currentMaxIndex)\
    \ {\n                    isCurrentMaxIndex = false;\n                    isCurrentMaxValue\
    \ = true;\n                    isCurrentIndex = true;\n                    isCurrentValue\
    \ = true;\n                }\n                else {\n", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     foreach (long i in arr) {\n            if (i > max) {\n                max\
    \ = i;\n                maxIndex = i;\n            }\n        }\n        if (k\
    \ > maxIndex) {\n            k = maxIndex;\n        }\n        long maxCount =\
    \ 0;\n        long maxCountIndex = 0;\n        foreach (long i in arr) {\n   \
    \         if (i == max) {\n                maxCount++;\n                if (maxCount\
    \ > k) {\n                    break;\n                }\n                maxCountIndex\
    \ = i;\n            }\n        }\n        long maxCountIndex2 = maxCountIndex;\n\
    \        long maxCountIndex3 = maxCountIndex2;\n        long maxCountIndex4 =\
    \ maxCountIndex3;\n        long maxCountIndex5 = maxCountIndex4;\n        long\
    \ maxCountIndex6 = maxCountIndex5;\n        long maxCountIndex7 = maxCountIndex6;\n\
    \        long maxCountIndex8 = maxCountIndex7;\n        long maxCountIndex9 =\
    \ maxCountIndex8;\n        long maxCountIndex10 = maxCountIndex9;\n        long\
    \ maxCountIndex11 = maxCountIndex10;\n        long maxCountIndex12 = maxCountIndex11;\n\
    \        long maxCountIndex13 = maxCountIndex12;\n        long maxCountIndex14\
    \ = maxCountIndex13;\n        long maxCountIndex15 = maxCountIndex14;\n      \
    \  long maxCountIndex16 = maxCountIndex15;\n        long maxCountIndex17 = maxCountIndex16;\n\
    \        long maxCountIndex18 = maxCountIndex17;\n        long maxCountIndex19\
    \ = maxCountIndex18;\n        long maxCountIndex20 = maxCountIndex19;\n      \
    \  long maxCountIndex21 = maxCountIndex20;\n        long maxCountIndex22 = maxCountIndex21;\n\
    \        long maxCountIndex23 = maxCountIndex22;\n        long maxCountIndex24\
    \ = maxCountIndex23;\n        long maxCountIndex25 = maxCountIndex24;\n      \
    \  long maxCountIndex26 = maxCountIndex25;\n        long maxCountIndex27 = maxCountIndex26;\n\
    \        long maxCountIndex28 = maxCountIndex27;\n        long maxCountIndex29\
    \ = maxCountIndex28;\n        long maxCountIndex30 = maxCountIndex29;\n      \
    \  long maxCountIndex31 = maxCountIndex30;\n        long maxCountIndex32 = maxCountIndex31;\n\
    \        long maxCountIndex33 = maxCountIndex32;\n        long maxCountIndex34\
    \ = maxCountIndex33;\n        long max", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long temp = 0;\n \
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n  \
    \      long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n   \
    \     long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n   \
    \     long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n \
    \       long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83", "        List<long> result = new List<long>();\n      \
    \  long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n        long\
    \ minIndex = 0;\n        long maxValue = arr[0];\n        long minValue = arr[0];\n\
    \        long maxCount = 0;\n        long minCount = 0;\n        bool isMax =\
    \ true;\n        bool isMin = true;\n        foreach (long i in arr) {\n     \
    \       if (i == maxValue) {\n                maxCount++;\n                if\
    \ (maxCount > k) {\n                    isMax = false;\n                }\n  \
    \              if (maxCount == k) {\n                    result.Add(maxValue);\n\
    \                }\n                maxValue = i;\n            }\n           \
    \ if (i == minValue) {\n                minCount++;\n                if (minCount\
    \ > k) {\n                    isMin = false;\n                }\n            \
    \    if (minCount == k) {\n                    result.Add(minValue);\n       \
    \         }\n                minValue = i;\n            }\n            if (isMax)\
    \ {\n                if (i > maxValue) {\n                    maxValue = i;\n\
    \                    maxIndex = i;\n                }\n            }\n       \
    \     if (isMin) {\n                if (i < minValue) {\n                    minValue\
    \ = i;\n                    minIndex = i;\n                }\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n    \
    \    long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n     \
    \   long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n      \
    \  long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n     \
    \   long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n   \
    \     long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n \
    \       long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84", "        List<long> result = new List<long>();\n      \
    \  long max = 0;\n        long maxIndex = 0;\n        long currentMax = arr[0];\n\
    \        long currentMaxIndex = 0;\n        foreach (long i in arr) {\n      \
    \      if (i > currentMax) {\n                currentMax = i;\n              \
    \  currentMaxIndex = i;\n            }\n            if (i == currentMax) {\n \
    \               currentMaxIndex = i;\n            }\n            if (currentMaxIndex\
    \ - currentMaxIndex > k) {\n                result.Add(currentMax);\n        \
    \        currentMax = currentMaxIndex;\n                currentMaxIndex = currentMaxIndex;\n\
    \            }\n        }\n        result.Add(currentMax);\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = long.MaxValue;\n        long sum = 0;\n        long sum2 = 0;\n      \
    \  long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long\
    \ sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9\
    \ = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 =\
    \ 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n\
    \        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n \
    \       long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n  \
    \      long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n   \
    \     long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n    \
    \    long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n     \
    \   long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n      \
    \  long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n       \
    \ long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long\
    \ sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43\
    \ = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 =\
    \ 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n\
    \        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n \
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n  \
    \      long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n   \
    \     long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n    \
    \    long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n     \
    \   long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n      \
    \  long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n       \
    \ long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long\
    \ sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77\
    \ = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 =\
    \ 0;\n        long sum81 = 0;\n        long sum82 = 0;\n        long ", "    \
    \    List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        long temp83 = 0;\n        long temp84", "        List<long> res\
    \ = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     foreach (long i in arr) {\n            if (i > max) {\n                max\
    \ = i;\n                maxIndex = i;\n            }\n        }\n        long\
    \ maxCount = 0;\n        long maxCountIndex = 0;\n        foreach (long i in arr)\
    \ {\n            if (i == max) {\n                maxCount++;\n              \
    \  maxCountIndex = i;\n            }\n        }\n        long maxCountIndex2 =\
    \ maxCountIndex;\n        long maxCountIndex3 = maxCountIndex;\n        long maxCountIndex4\
    \ = maxCountIndex;\n        long maxCountIndex5 = maxCountIndex;\n        long\
    \ maxCountIndex6 = maxCountIndex;\n        long maxCountIndex7 = maxCountIndex;\n\
    \        long maxCountIndex8 = maxCountIndex;\n        long maxCountIndex9 = maxCountIndex;\n\
    \        long maxCountIndex10 = maxCountIndex;\n        long maxCountIndex11 =\
    \ maxCountIndex;\n        long maxCountIndex12 = maxCountIndex;\n        long\
    \ maxCountIndex13 = maxCountIndex;\n        long maxCountIndex14 = maxCountIndex;\n\
    \        long maxCountIndex15 = maxCountIndex;\n        long maxCountIndex16 =\
    \ maxCountIndex;\n        long maxCountIndex17 = maxCountIndex;\n        long\
    \ maxCountIndex18 = maxCountIndex;\n        long maxCountIndex19 = maxCountIndex;\n\
    \        long maxCountIndex20 = maxCountIndex;\n        long maxCountIndex21 =\
    \ maxCountIndex;\n        long maxCountIndex22 = maxCountIndex;\n        long\
    \ maxCountIndex23 = maxCountIndex;\n        long maxCountIndex24 = maxCountIndex;\n\
    \        long maxCountIndex25 = maxCountIndex;\n        long maxCountIndex26 =\
    \ maxCountIndex;\n        long maxCountIndex27 = maxCountIndex;\n        long\
    \ maxCountIndex28 = maxCountIndex;\n        long maxCountIndex29 = maxCountIndex;\n\
    \        long maxCountIndex30 = maxCountIndex;\n        long maxCountIndex31 =\
    \ maxCountIndex;\n        long maxCountIndex32 = maxCountIndex;\n        long\
    \ maxCountIndex33 = maxCountIndex;\n        long maxCountIndex34 = maxCountIndex;\n\
    \        long maxCountIndex35 = maxCountIndex;\n        long maxCountIndex36 =\
    \ maxCountIndex;\n        long maxCountIndex37 = maxCountIndex;\n        long\
    \ maxCountIndex38 = maxCountIndex;\n        long maxCountIndex39 = maxCountIndex;\n\
    \        long maxCountIndex40 = maxCountIndex;\n        long maxCountIndex41 =\
    \ max", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        foreach (long i in arr) {\n            if\
    \ (i > max) {\n                max = i;\n                maxIndex = i;\n     \
    \       }\n        }\n        long maxCount = 0;\n        long maxCountIndex =\
    \ 0;\n        foreach (long i in arr) {\n            if (i == max) {\n       \
    \         maxCount++;\n                if (maxCount > k) {\n                 \
    \   maxCount = k;\n                    maxCountIndex = i;\n                }\n\
    \            }\n        }\n        result.Add(max);\n        result.Add(maxIndex);\n\
    \        result.Add(maxCount);\n        result.Add(maxCountIndex);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long temp = 0;\n        foreach (long i in arr) {\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        long\
    \ temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5\
    \ = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 =\
    \ 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =\
    \ 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14\
    \ = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17\
    \ = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20\
    \ = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23\
    \ = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26\
    \ = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29\
    \ = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32\
    \ = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35\
    \ = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38\
    \ = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41\
    \ = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44\
    \ = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47\
    \ = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50\
    \ = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53\
    \ = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56\
    \ = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59\
    \ = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62\
    \ = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65\
    \ = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68\
    \ = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71\
    \ = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74\
    \ = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77\
    \ = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80\
    \ = 0;\n        long ", "        List<long> result = new List<long>();\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        long index = 0;\n        foreach (long i in arr) {\n            if (i\
    \ == maxValue) {\n                maxIndex++;\n            }\n            if (maxIndex\
    \ == k) {\n                result.Add(maxValue);\n                maxIndex = 0;\n\
    \            }\n            if (i > maxValue) {\n                maxValue = i;\n\
    \                maxIndex = index;\n            }\n            index++;\n    \
    \    }\n        if (maxIndex != 0) {\n            result.Add(maxValue);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n\
    \        long sum = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfMax\
    \ = 0;\n        long sumOfSquareOfMaxIndex = 0;\n        long sumOfSquareOfMaxValue\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex = 0;\n        long sumOfSquareOfMaxValueIndex2\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex3 = 0;\n        long sumOfSquareOfMaxValueIndex4\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex5 = 0;\n        long sumOfSquareOfMaxValueIndex6\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex7 = 0;\n        long sumOfSquareOfMaxValueIndex8\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex9 = 0;\n        long sumOfSquareOfMaxValueIndex10\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex11 = 0;\n        long sumOfSquareOfMaxValueIndex12\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex13 = 0;\n        long sumOfSquareOfMaxValueIndex14\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex15 = 0;\n        long sumOfSquareOfMaxValueIndex16\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex17 = 0;\n        long sumOfSquareOfMaxValueIndex18\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex19 = 0;\n        long sumOfSquareOfMaxValueIndex20\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex21 = 0;\n        long sumOfSquareOfMaxValueIndex22\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex23 = 0;\n        long sumOfSquareOfMaxValueIndex24\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex25 = 0;\n        long sumOfSquareOfMaxValueIndex26\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex27 = 0;\n        long sumOfSquareOfMaxValueIndex28\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex29 = 0;\n        long sumOfSquareOfMaxValueIndex30\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex31 = 0;\n        long sumOfSquareOfMaxValueIndex32\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex33 = 0;\n        long sumOfSquareOfMaxValueIndex34\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex35 = 0;\n        long sumOfSquareOfMaxValueIndex36\
    \ = 0;\n        long sumOfSquareOfMaxValueIndex37 = 0;\n        long sumOfSquare",
  "        List<long> res = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        long maxSum = 0;\n        long minSum\
    \ = 0;\n        long sum2 = 0;\n        long maxSum2 = 0;\n        long minSum2\
    \ = 0;\n        long sum3 = 0;\n        long maxSum3 = 0;\n        long minSum3\
    \ = 0;\n        long sum4 = 0;\n        long maxSum4 = 0;\n        long minSum4\
    \ = 0;\n        long sum5 = 0;\n        long maxSum5 = 0;\n        long minSum5\
    \ = 0;\n        long sum6 = 0;\n        long maxSum6 = 0;\n        long minSum6\
    \ = 0;\n        long sum7 = 0;\n        long maxSum7 = 0;\n        long minSum7\
    \ = 0;\n        long sum8 = 0;\n        long maxSum8 = 0;\n        long minSum8\
    \ = 0;\n        long sum9 = 0;\n        long maxSum9 = 0;\n        long minSum9\
    \ = 0;\n        long sum10 = 0;\n        long maxSum10 = 0;\n        long minSum10\
    \ = 0;\n        long sum11 = 0;\n        long maxSum11 = 0;\n        long minSum11\
    \ = 0;\n        long sum12 = 0;\n        long maxSum12 = 0;\n        long minSum12\
    \ = 0;\n        long sum13 = 0;\n        long maxSum13 = 0;\n        long minSum13\
    \ = 0;\n        long sum14 = 0;\n        long maxSum14 = 0;\n        long minSum14\
    \ = 0;\n        long sum15 = 0;\n        long maxSum15 = 0;\n        long minSum15\
    \ = 0;\n        long sum16 = 0;\n        long maxSum16 = 0;\n        long minSum16\
    \ = 0;\n        long sum17 = 0;\n        long maxSum17 = 0;\n        long minSum17\
    \ = 0;\n        long sum18 = 0;\n        long maxSum18 = 0;\n        long minSum18\
    \ = 0;\n        long sum19 = 0;\n        long maxSum19 = 0;\n        long minSum19\
    \ = 0;\n        long sum20 = 0;\n        long maxSum20 = 0;\n        long minSum20\
    \ = 0;\n        long sum21 = 0;\n        long maxSum21 = 0;\n        long minSum21\
    \ = 0;\n        long sum22 = 0;\n        long maxSum22 = 0;\n        long minSum22\
    \ = 0;\n        long sum23 = 0;\n        long maxSum23 = 0;\n        long minSum23\
    \ = 0;\n        long sum24 = 0;\n        long maxSum24 = 0;\n        long minSum24\
    \ = 0;\n        long sum25 = 0;\n        long maxSum25 = 0;\n        long minSum25\
    \ = 0;\n        long sum26 = 0;\n        ", "        List<long> result = new List<long>();\n\
    \        long max = arr[0];\n        long maxIndex = 0;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max\
    \ = arr[i];\n                maxIndex = i;\n            }\n        }\n       \
    \ result.Add(max);\n        if (k > maxIndex) {\n            k = maxIndex;\n \
    \       }\n        List<long> maxList = new List<long>();\n        for (int i\
    \ = 0; i < k; i++) {\n            maxList.Add(arr[i]);\n        }\n        for\
    \ (int i = k; i < arr.Count; i++) {\n            if (arr[i] > max) {\n       \
    \         maxList.Add(arr[i]);\n            }\n        }\n        result.AddRange(maxList);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n  \
    \      long sum84", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long currentMax = 0;\n       \
    \ long currentMaxIndex = 0;\n        long currentMin = arr[0];\n        long currentMinIndex\
    \ = 0;\n        foreach (long i in arr) {\n            if (i == currentMin) {\n\
    \                currentMinIndex++;\n            } else {\n                currentMin\
    \ = i;\n                currentMinIndex = 1;\n            }\n            if (currentMin\
    \ > max) {\n                max = currentMin;\n                maxIndex = currentMinIndex;\n\
    \            }\n            currentMax = i;\n            currentMaxIndex = 1;\n\
    \            foreach (long j in arr) {\n                if (j == currentMax) {\n\
    \                    currentMaxIndex++;\n                } else {\n          \
    \          currentMax = j;\n                    currentMaxIndex = 1;\n       \
    \         }\n                if (currentMax < currentMin) {\n                \
    \    currentMin = currentMax;\n                    currentMinIndex = currentMaxIndex;\n\
    \                }\n            }\n            result.Add(max);\n            result.Add(maxIndex);\n\
    \        }\n        if (result.Count > k) {\n            return result.Take(k).ToList();\n\
    \        } else {\n            return result;\n        }", "        List<long>\
    \ result = new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n\
    \        long cur = 0;\n        for (int i = 0; i < arr.Count; i++) {\n      \
    \      if (i == 0) {\n                max = arr[i];\n                cur = arr[i];\n\
    \            }\n            if (arr[i] > max) {\n                max = arr[i];\n\
    \                cur = arr[i];\n            }\n            if (arr[i] == cur)\
    \ {\n                cur++;\n            }\n            if (cur == k) {\n    \
    \            result.Add(max);\n                cur = 0;\n            }\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n    \
    \    long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n     \
    \   long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n      \
    \  long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n     \
    \   long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n   \
    \     long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n \
    \       long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84", "        List<long> result = new List<long>();\n      \
    \  long max = 0;\n        long temp = 0;\n        long sum = 0;\n        long\
    \ maxSum = 0;\n        long maxSumIndex = 0;\n        long maxSumIndex2 = 0;\n\
    \        long maxSumIndex3 = 0;\n        long maxSumIndex4 = 0;\n        long\
    \ maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n        long maxSumIndex7\
    \ = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9 = 0;\n     \
    \   long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n        long maxSumIndex12\
    \ = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14 = 0;\n   \
    \     long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n        long maxSumIndex17\
    \ = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19 = 0;\n   \
    \     long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n        long maxSumIndex22\
    \ = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24 = 0;\n   \
    \     long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n        long maxSumIndex27\
    \ = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29 = 0;\n   \
    \     long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n        long maxSumIndex32\
    \ = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34 = 0;\n   \
    \     long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n        long maxSumIndex37\
    \ = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39 = 0;\n   \
    \     long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n        long maxSumIndex42\
    \ = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44 = 0;\n   \
    \     long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n        long maxSumIndex47\
    \ = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49 = 0;\n   \
    \     long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n        long maxSumIndex52\
    \ = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54 = 0;\n   \
    \     long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n        long maxSumIndex57\
    \ = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59 = 0;\n   \
    \     long maxSumIndex60 = 0;\n        long maxSumIndex61", "        List<long>\
    \ res = new List<long>();\n        long max = 0;\n        long max2 = 0;\n   \
    \     long max3 = 0;\n        long max4 = 0;\n        long max5 = 0;\n       \
    \ long max6 = 0;\n        long max7 = 0;\n        long max8 = 0;\n        long\
    \ max9 = 0;\n        long max10 = 0;\n        long max11 = 0;\n        long max12\
    \ = 0;\n        long max13 = 0;\n        long max14 = 0;\n        long max15 =\
    \ 0;\n        long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n\
    \        long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n \
    \       long max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n  \
    \      long max25 = 0;\n        long max26 = 0;\n        long max27 = 0;\n   \
    \     long max28 = 0;\n        long max29 = 0;\n        long max30 = 0;\n    \
    \    long max31 = 0;\n        long max32 = 0;\n        long max33 = 0;\n     \
    \   long max34 = 0;\n        long max35 = 0;\n        long max36 = 0;\n      \
    \  long max37 = 0;\n        long max38 = 0;\n        long max39 = 0;\n       \
    \ long max40 = 0;\n        long max41 = 0;\n        long max42 = 0;\n        long\
    \ max43 = 0;\n        long max44 = 0;\n        long max45 = 0;\n        long max46\
    \ = 0;\n        long max47 = 0;\n        long max48 = 0;\n        long max49 =\
    \ 0;\n        long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n\
    \        long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n \
    \       long max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n  \
    \      long max59 = 0;\n        long max60 = 0;\n        long max61 = 0;\n   \
    \     long max62 = 0;\n        long max63 = 0;\n        long max64 = 0;\n    \
    \    long max65 = 0;\n        long max66 = 0;\n        long max67 = 0;\n     \
    \   long max68 = 0;\n        long max69 = 0;\n        long max70 = 0;\n      \
    \  long max71 = 0;\n        long max72 = 0;\n        long max73 = 0;\n       \
    \ long max74 = 0;\n        long max75 = 0;\n        long max76 = 0;\n        long\
    \ max77 = 0;\n        long max78 = 0;\n        long max79 = 0;\n        long max80\
    \ = 0;\n        long max81 = 0;\n        long max82 = 0;\n        long max83 =\
    \ 0;\n        long max84 = 0;\n        long max", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ currentMax = 0;\n        long currentMaxIndex = 0;\n        foreach (long i\
    \ in arr) {\n            if (i == 0) {\n                result.Add(0);\n     \
    \           continue;\n            }\n            if (max < i) {\n           \
    \     max = i;\n                maxIndex = i;\n            }\n            if (currentMax\
    \ < i) {\n                currentMax = i;\n                currentMaxIndex = i;\n\
    \            }\n        }\n        if (k == 1) {\n            result.Add(max);\n\
    \            return result;\n        }\n        if (k == 2) {\n            result.Add(max);\n\
    \            result.Add(currentMax);\n            return result;\n        }\n\
    \        if (k == 3) {\n            result.Add(max);\n            result.Add(currentMax);\n\
    \            result.Add(currentMaxIndex);\n            return result;\n      \
    \  }\n        if (k > 3) {\n            List<long> subResult = Maximum(arr, k\
    \ - 1);\n            foreach (long i in subResult) {\n                result.Add(i);\n\
    \            }\n        }\n        if (k > 2) {\n            List<long> subResult\
    \ = Maximum(arr, k - 2);\n            foreach (long i in subResult) {\n      \
    \          result.Add(i);\n            }\n        }\n        if (k > 1) {\n  \
    \          List<long> subResult = Maximum(arr, k - 3);\n            foreach (long\
    \ i in subResult) {\n                result.Add(i);\n            }\n        }\n\
    \        if (k > 0) {\n            List<long> subResult = Maximum(arr, k - 4);\n\
    \            foreach (long i in subResult) {\n                result.Add(i);\n\
    \            }\n        }\n        if (k > -1) {\n            List<long> subResult\
    \ = Maximum(arr, k - 5);\n            foreach (long i in subResult) {\n      \
    \          result.Add(i);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long sum = 0;\n        long count = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n            }\n            if (sum == max) {\n           \
    \     result.Add(max);\n                count++;\n            }\n        }\n \
    \       if (count > k) {\n            temp = result.First();\n            for\
    \ (int i = 0; i < k - count; i++) {\n                result.Remove(temp);\n  \
    \              temp++;\n            }\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        Array.Sort(arr);\n    \
    \    long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n \
    \       for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        result.Add(arr[maxIndex]);\n        for (int i =\
    \ maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(arr[maxIndex]);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxValue = arr[i];\n                maxIndex = i;\n            }\n   \
    \     }\n        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 1;\
    \ i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n              \
    \  maxValue = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        result.Add(arr[maxIndex]);\n\
    \        for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        result.Add(arr[maxIndex]);\n       \
    \ for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        result.Add(arr[maxIndex]);\n        for (int i =\
    \ maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(arr[maxIndex]);\n        for (int i = maxIndex\
    \ + 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxValue = arr[i];\n                maxIndex = i;\n            }\n   \
    \     }\n        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 1;\
    \ i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n              \
    \  maxValue = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        result.Add(arr[maxIndex]);\n\
    \        for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        result.Add(arr[maxIndex]);\n       \
    \ for (int ", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83", " \
    \       List<long> result = new List<long>();\n        Array.Sort(arr);\n    \
    \    long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        if (k == 1) {\n\
    \            result.Add(max);\n            return result;\n        }\n       \
    \ if (k == arr.Count) {\n            result.Add(max);\n            return result;\n\
    \        }\n        long maxCount = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] == max) {\n                maxCount++;\n    \
    \        }\n        }\n        if (maxCount > k) {\n            k = maxCount;\n\
    \        }\n        List<long> left = new List<long>();\n        List<long> right\
    \ = new List<long>();\n        for (int i = 0; i < arr.Count; i++) {\n       \
    \     if (i < maxIndex) {\n                left.Add(arr[i]);\n            } else\
    \ {\n                right.Add(arr[i]);\n            }\n        }\n        left.Sort();\n\
    \        right.Sort();\n        List<long> leftMax = Maximum(left, k - 1);\n \
    \       List<long> rightMax = Maximum(right, k - 1);\n        List<long> result\
    \ = new List<long>();\n        foreach (long l in leftMax) {\n            foreach\
    \ (long r in rightMax) {\n                if (l > r) {\n                    result.Add(l);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     result.AddRange(leftMax);\n        result.AddRange(rightMax);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        Array.Sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long currentMax =\
    \ arr[0];\n        long currentMaxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax) {\n                currentMax =\
    \ arr[i];\n                currentMaxIndex = i;\n            }\n            if\
    \ (arr[i] == currentMax) {\n                max = Math.Max(max, arr[i]);\n   \
    \             maxIndex = i;\n            }\n        }\n        if (k == 1) {\n\
    \            result.Add(max);\n            return result;\n        }\n       \
    \ if (maxIndex == arr.Count - 1) {\n            result.Add(max);\n           \
    \ return result;\n        }\n        long currentMax2 = arr[maxIndex + 1];\n \
    \       long currentMaxIndex2 = 0;\n        for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax2) {\n                currentMax2\
    \ = arr[i];\n                currentMaxIndex2 = i;\n            }\n          \
    \  if (arr[i] == currentMax2) {\n                max = Math.Max(max, arr[i]);\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ == arr.Count - 1) {\n            result.Add(max);\n            return result;\n\
    \        }\n        long currentMax3 = arr[maxIndex + 1];\n        long currentMaxIndex3\
    \ = 0;\n        for (int i = maxIndex + 1; i < arr.Count; i++) {\n           \
    \ if (arr[i] > currentMax3) {\n                currentMax3 = arr[i];\n       \
    \         currentMaxIndex3 = i;\n            }\n            if (arr[i] == currentMax3)\
    \ {\n                max = Math.Max(max, arr[i]);\n                maxIndex =\
    \ i;\n            }\n        }\n        if (maxIndex == arr.Count - 1) {\n   \
    \         result.Add(max);\n            return result;\n        }\n        long\
    \ currentMax4 = arr[maxIndex + 1];\n        long currentMaxIndex4 = 0;\n     \
    \   for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] >\
    \ currentMax4) {\n                currentMax4 = arr[i];\n                currentMaxIndex4\
    \ = i;\n            }\n            if (arr[i] == currentMax4) {\n            \
    \    max = Math.Max(max, arr[i]);\n                maxIndex = i;\n           \
    \ }\n        }\n        if (maxIndex == arr.Count - 1) {\n            result.Add(max);\n\
    \            return result;\n        }\n        long currentMax5 = arr[maxIndex\
    \ + 1];\n        long currentMaxIndex5 = 0;\n        for (int i = maxIndex + 1;\
    \ i < arr.Count; i++) {\n            if (arr[i] > currentMax5) {\n           \
    \     currentMax5 = arr[i];\n                currentMaxIndex5 = i;\n         \
    \   }\n            if (arr[i] == currentMax5) {\n                max = Math.Max(max,\
    \ arr[i]);\n                maxIndex = i;\n            }\n        }\n        if\
    \ (maxIndex == arr.Count - ", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long temp = 0;\n \
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n  \
    \      long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n   \
    \     long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n   \
    \     long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n \
    \       long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83", "        List<long> result = new List<long>();\n      \
    \  Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   long temp = 0;\n        long temp2 = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        for (int i = 0;\
    \ i < arr.Count; i++) {\n            if (arr[i] == max) {\n                temp\
    \ = arr[i];\n                temp2 = i;\n            }\n        }\n        for\
    \ (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n      \
    \          result.Add(temp);\n                result.Add(arr[temp2]);\n      \
    \          result.Add(arr[maxIndex]);\n                result.Add(arr[arr.Count\
    \ - 1]);\n                break;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        long temp83 = 0;\n        long temp84", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long maxValue = arr[0];\n\
    \        long minValue = arr[0];\n        long maxCount = 1;\n        long minCount\
    \ = 1;\n        bool isMax = true;\n        bool isMin = true;\n        bool isMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMax = true;\n        bool isMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMax = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMax = true;\n        bool\
    \ isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n\
    \        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax = true;\n\
    \        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n\
    \        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82 = 0;\n        long sum83", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in arr) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        temp = k - max;\n        if (temp > 0) {\n            foreach\
    \ (long i in arr) {\n                sum += i;\n                if (sum > max)\
    \ {\n                    max = sum;\n                }\n            }\n      \
    \  }\n        temp = k - max;\n        if (temp > 0) {\n            foreach (long\
    \ i in arr) {\n                sum += i;\n                if (sum > max) {\n \
    \                   max = sum;\n                }\n            }\n        }\n\
    \        temp = k - max;\n        if (temp > 0) {\n            foreach (long i\
    \ in arr) {\n                sum += i;\n                if (sum > max) {\n   \
    \                 max = sum;\n                }\n            }\n        }\n  \
    \      temp = k - max;\n        if (temp > 0) {\n            foreach (long i in\
    \ arr) {\n                sum += i;\n                if (sum > max) {\n      \
    \              max = sum;\n                }\n            }\n        }\n     \
    \   temp = k - max;\n        if (temp > 0) {\n            foreach (long i in arr)\
    \ {\n                sum += i;\n                if (sum > max) {\n           \
    \         max = sum;\n                }\n            }\n        }\n        temp\
    \ = k - max;\n        if (temp > 0) {\n            foreach (long i in arr) {\n\
    \                sum += i;\n                if (sum > max) {\n               \
    \     max = sum;\n                }\n            }\n        }\n        temp =\
    \ k - max;\n        if (temp > 0) {\n            foreach (long i in arr) {\n \
    \               sum += i;\n                if (sum > max) {\n                \
    \    max = sum;\n                }\n            }\n        }\n        temp = k\
    \ - max;\n        if (temp > 0) {\n            foreach (long i in arr) {\n   \
    \             sum += i;\n                if (sum > max) {\n                  \
    \  max = sum;\n                }\n            }\n        }\n        temp = k -\
    \ max;\n        if (temp > 0) {\n            foreach (long i in arr) {\n     \
    \           sum += i;\n                if (sum > max) {\n                    max\
    \ = sum;\n                }\n            }\n        }\n        temp = k - max;\n\
    \        if (temp > 0) {\n            foreach (long i in arr) {\n            \
    \    sum += i;\n                if (sum > max) {\n                    max = sum;\n\
    \                }\n            }\n        }\n        temp = k - max;\n      \
    \  if (temp > 0) {\n            foreach (long i in arr) {\n                sum\
    \ += i;\n                if (sum > max) {\n                    max = sum;\n  \
    \              }\n            }\n        }\n        temp = k - max;\n        if\
    \ (temp > 0) {\n            foreach (long i in arr) {\n                sum += ",
  "        List<long> result = new List<long>();\n        long max = arr[0];\n   \
    \     long maxIndex = -1;\n        foreach (long i in arr) {\n            if (i\
    \ > max) {\n                max = i;\n                maxIndex = i;\n        \
    \    }\n        }\n        if (k == maxIndex) {\n            result.Add(max);\n\
    \            return result;\n        }\n        long maxCount = 0;\n        long\
    \ maxCountIndex = -1;\n        long maxCountValue = -1;\n        foreach (long\
    \ i in arr) {\n            if (i == max) {\n                maxCount++;\n    \
    \            if (maxCountValue == -1) {\n                    maxCountValue = i;\n\
    \                    maxCountIndex = i;\n                }\n            }\n  \
    \          if (maxCount > k) {\n                break;\n            }\n      \
    \  }\n        if (maxCount > k) {\n            return result;\n        }\n   \
    \     long maxCountValue2 = -1;\n        long maxCountIndex2 = -1;\n        long\
    \ maxCountValue2 = -1;\n        foreach (long i in arr) {\n            if (i ==\
    \ max) {\n                maxCountValue2 = maxCountValue;\n                maxCountIndex2\
    \ = maxCountIndex;\n            }\n            if (maxCountValue2 > k) {\n   \
    \             break;\n            }\n        }\n        if (maxCountValue2 > k)\
    \ {\n            return result;\n        }\n        long maxCountValue3 = -1;\n\
    \        long maxCountIndex3 = -1;\n        long maxCountValue3 = -1;\n      \
    \  foreach (long i in arr) {\n            if (i == max) {\n                maxCountValue3\
    \ = maxCountValue2;\n                maxCountIndex3 = maxCountIndex2;\n      \
    \      }\n            if (maxCountValue3 > k) {\n                break;\n    \
    \        }\n        }\n        if (maxCountValue3 > k) {\n            return result;\n\
    \        }\n        long maxCountValue4 = -1;\n        long maxCountIndex4 = -1;\n\
    \        long maxCountValue4 = -1;\n        foreach (long i in arr) {\n      \
    \      if (i == max) {\n                maxCountValue4 = maxCountValue3;\n   \
    \             maxCountIndex4 = maxCountIndex3;\n            }\n            if\
    \ (maxCountValue4 > k) {\n                break;\n            }\n        }\n \
    \       if (maxCountValue4 > k) {\n            return result;\n        }\n   \
    \     long maxCountValue5 = -1;\n        long maxCountIndex5 = -1;\n        long\
    \ maxCountValue5 = -1;\n        foreach (long i in arr) {\n            if (i ==\
    \ max) {\n                maxCountValue5 = maxCountValue4;\n                maxCountIndex5\
    \ = maxCountIndex4;\n            }\n            if (maxCountValue5 > k) {\n  \
    \              break;\n            }\n        }\n        if (maxCountValue5 >\
    \ k) {\n            return result;\n        }\n        long maxCountValue6 = -1;\n\
    \        long maxCountIndex6 = -1;\n        long ", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n   \
    \     long sum83 = 0;\n        long sum84", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n\
    \        long maxIndex2 = 0;\n        long maxValue2 = 0;\n        long maxIndex3\
    \ = 0;\n        long maxValue3 = 0;\n        long maxIndex4 = 0;\n        long\
    \ maxValue4 = 0;\n        long maxIndex5 = 0;\n        long maxValue5 = 0;\n \
    \       long maxIndex6 = 0;\n        long maxValue6 = 0;\n        long maxIndex7\
    \ = 0;\n        long maxValue7 = 0;\n        long maxIndex8 = 0;\n        long\
    \ maxValue8 = 0;\n        long maxIndex9 = 0;\n        long maxValue9 = 0;\n \
    \       long maxIndex10 = 0;\n        long maxValue10 = 0;\n        long maxIndex11\
    \ = 0;\n        long maxValue11 = 0;\n        long maxIndex12 = 0;\n        long\
    \ maxValue12 = 0;\n        long maxIndex13 = 0;\n        long maxValue13 = 0;\n\
    \        long maxIndex14 = 0;\n        long maxValue14 = 0;\n        long maxIndex15\
    \ = 0;\n        long maxValue15 = 0;\n        long maxIndex16 = 0;\n        long\
    \ maxValue16 = 0;\n        long maxIndex17 = 0;\n        long maxValue17 = 0;\n\
    \        long maxIndex18 = 0;\n        long maxValue18 = 0;\n        long maxIndex19\
    \ = 0;\n        long maxValue19 = 0;\n        long maxIndex20 = 0;\n        long\
    \ maxValue20 = 0;\n        long maxIndex21 = 0;\n        long maxValue21 = 0;\n\
    \        long maxIndex22 = 0;\n        long maxValue22 = 0;\n        long maxIndex23\
    \ = 0;\n        long maxValue23 = 0;\n        long maxIndex24 = 0;\n        long\
    \ maxValue24 = 0;\n        long maxIndex25 = 0;\n        long maxValue25 = 0;\n\
    \        long maxIndex26 = 0;\n        long maxValue26 = 0;\n        long maxIndex27\
    \ = 0;\n        long maxValue27 = 0;\n        long maxIndex28 = 0;\n        long\
    \ maxValue28 = 0;\n        long maxIndex29 = 0;\n        long maxValue29 = 0;\n\
    \        long maxIndex30 = 0;\n        long maxValue30 = 0;\n        long maxIndex31\
    \ = 0;\n        long maxValue31 = 0;\n        long maxIndex32 = 0;\n        long\
    \ maxValue32 = 0;\n        long maxIndex33 = 0;\n        long maxValue33 = 0;\n\
    \        long maxIndex34 = 0;\n        long maxValue34 = 0;\n        long maxIndex35\
    \ = 0;\n        long maxValue35 = 0;\n        long maxIndex36 = 0;\n        long\
    \ maxValue36 = 0;\n        long max", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long maxIndex = 0;\n \
    \       long maxValue = 0;\n        foreach (long i in arr) {\n            if\
    \ (max < i) {\n                max = i;\n                maxIndex = i;\n     \
    \           maxValue = i;\n            }\n            if (maxIndex == k) {\n \
    \               result.Add(maxValue);\n                maxIndex = 0;\n       \
    \         maxValue = 0;\n            }\n            if (maxIndex < k) {\n    \
    \            temp = maxIndex;\n                maxIndex = k;\n               \
    \ maxValue = max;\n                max = temp;\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  Array.Sort(arr);\n        long max = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \         }\n        }\n        if (max > k) {\n            max = k;\n       \
    \ }\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max\
    \ && arr[i] != 0) {\n                result.Add(arr[i]);\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        foreach (long i in arr)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        long start = max;\n        long end = max;\n        long mid\
    \ = 0;\n        while (start < arr.Count - 1) {\n            mid = (start + end)\
    \ / 2;\n            if (arr[mid] > mid) {\n                end = mid;\n      \
    \      } else {\n                start = mid;\n            }\n        }\n    \
    \    mid = start;\n        while (start < arr.Count - 1) {\n            mid =\
    \ (start + end) / 2;\n            if (arr[mid] < mid) {\n                end =\
    \ mid;\n            } else {\n                start = mid;\n            }\n  \
    \      }\n        mid = start;\n        while (start < arr.Count - 1) {\n    \
    \        mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n       \
    \         end = mid;\n            } else {\n                start = mid;\n   \
    \         }\n        }\n        mid = start;\n        while (start < arr.Count\
    \ - 1) {\n            mid = (start + end) / 2;\n            if (arr[mid] < mid)\
    \ {\n                end = mid;\n            } else {\n                start =\
    \ mid;\n            }\n        }\n        mid = start;\n        while (start <\
    \ arr.Count - 1) {\n            mid = (start + end) / 2;\n            if (arr[mid]\
    \ > mid) {\n                end = mid;\n            } else {\n               \
    \ start = mid;\n            }\n        }\n        mid = start;\n        while\
    \ (start < arr.Count - 1) {\n            mid = (start + end) / 2;\n          \
    \  if (arr[mid] < mid) {\n                end = mid;\n            } else {\n \
    \               start = mid;\n            }\n        }\n        mid = start;\n\
    \        while (start < arr.Count - 1) {\n            mid = (start + end) / 2;\n\
    \            if (arr[mid] > mid) {\n                end = mid;\n            }\
    \ else {\n                start = mid;\n            }\n        }\n        mid\
    \ = start;\n        while (start < arr.Count - 1) {\n            mid = (start\
    \ + end) / 2;\n            if (arr[mid] < mid) {\n                end = mid;\n\
    \            } else {\n                start = mid;\n            }\n        }\n\
    \        mid = start;\n        while (start < arr.Count - 1) {\n            mid\
    \ = (start + end) / 2;\n            if (arr[mid] > mid) {\n                end\
    \ = mid;\n            } else {\n                start = mid;\n            }\n\
    \        }\n        mid = start;\n        while (start < arr.Count - 1) {\n  \
    \          mid = (start + end) / 2;\n            if (arr[mid] < mid) {\n     \
    \           end = mid;\n            } else {\n                start = mid;\n \
    \           }\n        }\n        mid = start;\n        while (start < arr.Count\
    \ - 1) {\n            mid = (start + end) / 2;", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n   \
    \     long sum83 = 0;\n        long sum84", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long cur = 0;\n        foreach (long i in arr)\
    \ {\n            if (i == 0) {\n                result.Add(0);\n             \
    \   continue;\n            }\n            if (i > max) {\n                max\
    \ = i;\n                cur = i;\n            }\n            if (cur > 0) {\n\
    \                result.Add(cur);\n                cur = 0;\n            }\n \
    \       }\n        if (cur > 0) {\n            result.Add(cur);\n        }\n \
    \       if (result.Count > k) {\n            result.RemoveRange(0, k);\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long maxValue = arr[0];\n        for (int i = 0; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n                maxValue = arr[i];\n            }\n\
    \        }\n        if (k == maxIndex) {\n            result.Add(maxValue);\n\
    \        }\n        if (k > maxIndex) {\n            k = maxIndex;\n        }\n\
    \        if (k == arr.Count - 1) {\n            for (int i = arr.Count - 1; i\
    \ > maxIndex; i--) {\n                result.Add(arr[i]);\n            }\n   \
    \     }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long min = 0;\n  \
    \      long minIndex = 0;\n        long sum = 0;\n        long count = 0;\n  \
    \      long sumOfSquares = 0;\n        long squareSum = 0;\n        long squareCount\
    \ = 0;\n        long maxSquare = 0;\n        long maxSquareIndex = 0;\n      \
    \  long minSquare = 0;\n        long minSquareIndex = 0;\n        long squareSumSquare\
    \ = 0;\n        long squareSumSquareIndex = 0;\n        long maxSquareSquare =\
    \ 0;\n        long maxSquareSquareIndex = 0;\n        long minSquareSquare = 0;\n\
    \        long minSquareSquareIndex = 0;\n        long maxSquareSquareSquare =\
    \ 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;\n        long maxSquareSquareSquareIndex = 0;\n        long minSquareSquareSquare\
    \ = 0;\n        long minSquareSquareSquareIndex = 0;\n        long maxSquareSquareSquare\
    \ = 0;", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = 0;\n        foreach (long\
    \ i in arr) {\n            if (max < i) {\n                max = i;\n        \
    \        maxIndex = i;\n                maxValue = i;\n            }\n       \
    \     if (k > 0 && result.Count >= k) {\n                break;\n            }\n\
    \            if (i == max) {\n                result.Add(maxValue);\n        \
    \    }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = arr[0];\n        long maxCount = 0;\n        for (int i =\
    \ 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max\
    \ = arr[i];\n                maxCount = 1;\n            }\n            else if\
    \ (arr[i] == max) {\n                maxCount++;\n            }\n            else\
    \ if (arr[i] < max) {\n                if (maxCount >= k) {\n                \
    \    result.Add(max);\n                    maxCount = 1;\n                }\n\
    \                max = arr[i];\n                maxCount = 1;\n            }\n\
    \        }\n        if (maxCount >= k) {\n            result.Add(max);\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long currentMax =\
    \ arr[0];\n        long currentMaxIndex = 0;\n        foreach (long i in arr)\
    \ {\n            if (i > max) {\n                max = i;\n                maxIndex\
    \ = currentMaxIndex;\n            }\n            if (i == max) {\n           \
    \     currentMax = i;\n                currentMaxIndex = currentMaxIndex;\n  \
    \          }\n        }\n        if (k > maxIndex) {\n            k = maxIndex;\n\
    \        }\n        if (k == maxIndex) {\n            result.Add(max);\n     \
    \   }\n        else {\n            for (int i = 0; i < k; i++) {\n           \
    \     result.Add(max);\n            }\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long temp = 0;\n        foreach (long i in arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        long count =\
    \ 0;\n        long sum = 0;\n        foreach (long i in arr) {\n            if\
    \ (i == max) {\n                count++;\n                sum += i;\n        \
    \    }\n        }\n        if (count > k) {\n            temp = sum;\n       \
    \     sum = 0;\n            foreach (long i in arr) {\n                if (i ==\
    \ max) {\n                    sum += i;\n                }\n            }\n  \
    \          sum = temp;\n        }\n        long maxSum = sum;\n        long maxCount\
    \ = 0;\n        long maxSumCount = 0;\n        long tempSum = 0;\n        long\
    \ tempCount = 0;\n        foreach (long i in arr) {\n            if (i == max)\
    \ {\n                tempCount += 1;\n                tempSum += i;\n        \
    \        if (tempCount > maxCount) {\n                    maxCount = tempCount;\n\
    \                    maxSumCount = tempSum;\n                    maxSum = maxSumCount;\n\
    \                }\n            }\n        }\n        result.Add(max);\n     \
    \   result.Add(maxSum);\n        result.Add(maxCount);\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        long maxValueIndex =\
    \ -1;\n        bool isMax = true;\n        foreach (long i in arr) {\n       \
    \     if (isMax) {\n                if (i > maxValue) {\n                    maxValue\
    \ = i;\n                    maxValueIndex = i;\n                }\n          \
    \  } else {\n                if (i < maxValue) {\n                    maxValue\
    \ = i;\n                    maxValueIndex = i;\n                }\n          \
    \  }\n            if (i == maxValue) {\n                isMax = !isMax;\n    \
    \        }\n        }\n        if (k == maxValueIndex) {\n            result.Add(maxValue);\n\
    \        }\n        if (k == maxIndex + 1) {\n            result.Add(maxValue);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxValue = 0;\n        long minValue =\
    \ 0;\n        long maxCount = 0;\n        long minCount = 0;\n        long maxCountIndex\
    \ = 0;\n        long minCountIndex = 0;\n        long maxCountValue = 0;\n   \
    \     long minCountValue = 0;\n        long maxCountCount = 0;\n        long minCountCount\
    \ = 0;\n        long maxCountValueIndex = 0;\n        long minCountValueIndex\
    \ = 0;\n        long maxCountCountValue = 0;\n        long minCountCountValue\
    \ = 0;\n        long maxCountCountCount = 0;\n        long minCountCountCount\
    \ = 0;\n        long maxCountValueIndexValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxCountValueIndexValueValue = 0;\n        long minCountValueIndexValue\
    \ = 0;\n        long maxCountCountValueValue = 0;\n        long minCountCountValueValue\
    \ = 0;\n", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long min = 0;\n        long sum = 0;\n        long count = 0;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            count++;\n       \
    \ }\n        long mid = min + (max - min) / 2;\n        long mid2 = mid / 2;\n\
    \        long mid3 = mid - mid2;\n        long mid4 = mid3 / 2;\n        long\
    \ mid5 = mid3 - mid4;\n        long mid6 = mid5 / 2;\n        long mid7 = mid5\
    \ - mid6;\n        long mid8 = mid7 / 2;\n        long mid9 = mid7 - mid8;\n \
    \       long mid10 = mid9 / 2;\n        long mid11 = mid9 - mid10;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid11 - mid12;\n        long mid14\
    \ = mid13 / 2;\n        long mid15 = mid13 - mid14;\n        long mid16 = mid15\
    \ / 2;\n        long mid17 = mid15 - mid16;\n        long mid18 = mid17 / 2;\n\
    \        long mid19 = mid17 - mid18;\n        long mid20 = mid19 / 2;\n      \
    \  long mid21 = mid19 - mid20;\n        long mid22 = mid21 / 2;\n        long\
    \ mid23 = mid21 - mid22;\n        long mid24 = mid23 / 2;\n        long mid25\
    \ = mid23 - mid24;\n        long mid26 = mid25 / 2;\n        long mid27 = mid25\
    \ - mid26;\n        long mid28 = mid27 / 2;\n        long mid29 = mid27 - mid28;\n\
    \        long mid30 = mid29 / 2;\n        long mid31 = mid29 - mid30;\n      \
    \  long mid32 = mid31 / 2;\n        long mid33 = mid31 - mid32;\n        long\
    \ mid34 = mid33 / 2;\n        long mid35 = mid33 - mid34;\n        long mid36\
    \ = mid35 / 2;\n        long mid37 = mid35 - mid36;\n        long mid38 = mid37\
    \ / 2;\n        long mid39 = mid37 - mid38;\n        long mid40 = mid39 / 2;\n\
    \        long mid41 = mid39 - mid40;\n        long mid42 = mid41 / 2;\n", "  \
    \      List<long> result = new List<long>();\n        Array.Sort(arr);\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        if (k == 1) {\n\
    \            result.Add(max);\n            return result;\n        }\n       \
    \ List<long> maxList = new List<long>();\n        long maxSum = 0;\n        for\
    \ (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n       \
    \         maxList.Add(arr[i]);\n                maxSum += arr[i];\n          \
    \  }\n        }\n        List<long> maxList2 = new List<long>();\n        long\
    \ maxSum2 = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if\
    \ (arr[i] > max) {\n                maxList2.Add(arr[i]);\n                maxSum2\
    \ += arr[i];\n            }\n        }\n        if (maxSum2 > maxSum) {\n    \
    \        maxSum = maxSum2;\n            maxList = maxList2;\n        }\n     \
    \   List<long> maxList3 = new List<long>();\n        long maxSum3 = 0;\n     \
    \   for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               maxList3.Add(arr[i]);\n                maxSum3 += arr[i];\n  \
    \          }\n        }\n        if (maxSum3 > maxSum) {\n            maxSum =\
    \ maxSum3;\n            maxList = maxList3;\n        }\n        List<long> maxList4\
    \ = new List<long>();\n        long maxSum4 = 0;\n        for (int i = 0; i <\
    \ arr.Count; i++) {\n            if (arr[i] > max) {\n                maxList4.Add(arr[i]);\n\
    \                maxSum4 += arr[i];\n            }\n        }\n        if (maxSum4\
    \ > maxSum) {\n            maxSum = maxSum4;\n            maxList = maxList4;\n\
    \        }\n        List<long> maxList5 = new List<long>();\n        long maxSum5\
    \ = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                maxList5.Add(arr[i]);\n                maxSum5 +=\
    \ arr[i];\n            }\n        }\n        if (maxSum5 > maxSum) {\n       \
    \     maxSum = maxSum5;\n            maxList = maxList5;\n        }\n        List<long>\
    \ maxList6 = new List<long>();\n        long maxSum6 = 0;\n        for (int i\
    \ = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  maxList6.Add(arr[i]);\n                maxSum6 += arr[i];\n            }\n\
    \        }\n        if (maxSum6 > maxSum) {\n            maxSum = maxSum6;\n \
    \           maxList = maxList6;\n        }\n        List<long> maxList7 = new\
    \ List<long", "        List<long> result = new List<long>();\n        Array.Sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        if (maxIndex == arr.Count - 1) {\n            result.Add(maxValue);\n\
    \        } else {\n            while (maxIndex < arr.Count - 1) {\n          \
    \      if (arr[maxIndex + 1] - arr[maxIndex] > k) {\n                    maxIndex++;\n\
    \                } else {\n                    result.Add(arr[maxIndex + 1]);\n\
    \                    maxIndex++;\n                }\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long sum = 0;\n        foreach (long i in arr) {\n\
    \            sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        long start = 0;\n        long end = arr.Count\
    \ - 1;\n        while (start < end) {\n            long mid = (start + end) /\
    \ 2;\n            if (arr[mid] > max) {\n                end = mid - 1;\n    \
    \        } else {\n                start = mid + 1;\n            }\n        }\n\
    \        long maxSum = sum - arr[start];\n        if (maxSum > k) {\n        \
    \    k = maxSum;\n        }\n        long sum = 0;\n        long max = 0;\n  \
    \      long start = 0;\n        long end = arr.Count - 1;\n        while (start\
    \ < end) {\n            long mid = (start + end) / 2;\n            if (arr[mid]\
    \ > max) {\n                end = mid - 1;\n            } else {\n           \
    \     start = mid + 1;\n            }\n        }\n        long maxSum = sum -\
    \ arr[start];\n        if (maxSum > k) {\n            k = maxSum;\n        }\n\
    \        long sum = 0;\n        long max = 0;\n        long start = 0;\n     \
    \   long end = arr.Count - 1;\n        while (start < end) {\n            long\
    \ mid = (start + end) / 2;\n            if (arr[mid] > max) {\n              \
    \  end = mid - 1;\n            } else {\n                start = mid + 1;\n  \
    \          }\n        }\n        long maxSum = sum - arr[start];\n        if (maxSum\
    \ > k) {\n            k = maxSum;\n        }\n        long sum = 0;\n        long\
    \ max = 0;\n        long start = 0;\n        long end = arr.Count - 1;\n     \
    \   while (start < end) {\n            long mid = (start + end) / 2;\n       \
    \     if (arr[mid] > max) {\n                end = mid - 1;\n            } else\
    \ {\n                start = mid + 1;\n            }\n        }\n        long\
    \ maxSum = sum - arr[start];\n        if (maxSum > k) {\n            k = maxSum;\n\
    \        }\n        long sum = 0;\n        long max = 0;\n        long start =\
    \ 0;\n        long end = arr.Count - 1;\n        while (start < end) {\n     \
    \       long mid = (start + end) / 2;\n            if (arr[mid] > max) {\n   \
    \             end = mid - 1;\n            } else {\n                start = mid\
    \ + 1;\n            }\n        }\n        long maxSum = sum - arr[start];\n  \
    \      if (maxSum > k) {\n            k = maxSum;\n        }\n        long sum\
    \ = 0;\n        long max = 0;\n        long start = 0;\n        long end = arr.Count\
    \ - 1;\n        while (start < ", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long sum = 0;\n      \
    \  long count = 0;\n        foreach (long i in arr) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n                temp\
    \ = i;\n            }\n        }\n        long start = 0;\n        long end =\
    \ 0;\n        long mid = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n\
    \        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n    \
    \    long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long\
    \ sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13\
    \ = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 =\
    \ 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n\
    \        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n \
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n  \
    \      long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n   \
    \     long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n    \
    \    long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n     \
    \   long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n      \
    \  long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n       \
    \ long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long\
    \ sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47\
    \ = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 =\
    \ 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n\
    \        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n \
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n  \
    \      long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n   \
    \     long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n    \
    \    long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n     \
    \   long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n      \
    \  long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n       \
    \ long sum75", "        List<long> result = new List<long>();\n        Array.Sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxCount = 0;\n\
    \        long maxCountIndex = 0;\n        long currentCount = 0;\n        long\
    \ currentCountIndex = 0;\n        long currentMax = 0;\n        long currentMaxIndex\
    \ = 0;\n        long currentMaxCount = 0;\n        long currentMaxCountIndex =\
    \ 0;\n        foreach (long i in arr) {\n            if (currentCount > maxCount)\
    \ {\n                maxCount = currentCount;\n                maxCountIndex =\
    \ currentCountIndex;\n                maxCount = currentMax;\n               \
    \ maxCountIndex = currentMaxIndex;\n            }\n            if (currentCount\
    \ > max) {\n                max = currentCount;\n                maxIndex = currentCountIndex;\n\
    \                max = currentMax;\n                maxIndex = currentMaxIndex;\n\
    \            }\n            currentCount++;\n            currentCountIndex++;\n\
    \            currentMax = i;\n            currentMaxIndex = i;\n            currentMaxCount\
    \ = currentCount;\n            currentMaxCountIndex = currentCountIndex;\n   \
    \     }\n        if (maxCount > k) {\n            while (maxCount > k) {\n   \
    \             result.Add(arr[maxCountIndex]);\n                maxCount--;\n \
    \               maxCountIndex++;\n            }\n        }\n        else {\n \
    \           while (maxCount < k) {\n                result.Add(arr[maxCountIndex]);\n\
    \                maxCount++;\n                maxCountIndex++;\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = int.MaxValue;\n        foreach (long\
    \ i in arr) {\n            if (i < min) {\n                min = i;\n        \
    \    }\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        long mid = max - (max - min) / 2;\n        long mid2 = mid\
    \ / 2;\n        long mid3 = mid / 3;\n        long mid4 = mid / 4;\n        long\
    \ mid5 = mid / 5;\n        long mid6 = mid / 6;\n        long mid7 = mid / 7;\n\
    \        long mid8 = mid / 8;\n        long mid9 = mid / 9;\n        long mid10\
    \ = mid / 10;\n        long mid11 = mid / 11;\n        long mid12 = mid / 12;\n\
    \        long mid13 = mid / 13;\n        long mid14 = mid / 14;\n        long\
    \ mid15 = mid / 15;\n        long mid16 = mid / 16;\n        long mid17 = mid\
    \ / 17;\n        long mid18 = mid / 18;\n        long mid19 = mid / 19;\n    \
    \    long mid20 = mid / 20;\n        long mid21 = mid / 21;\n        long mid22\
    \ = mid / 22;\n        long mid23 = mid / 23;\n        long mid24 = mid / 24;\n\
    \        long mid25 = mid / 25;\n        long mid26 = mid / 26;\n        long\
    \ mid27 = mid / 27;\n        long mid28 = mid / 28;\n        long mid29 = mid\
    \ / 29;\n        long mid30 = mid / 30;\n        long mid31 = mid / 31;\n    \
    \    long mid32 = mid / 32;\n        long mid33 = mid / 33;\n        long mid34\
    \ = mid / 34;\n        long mid35 = mid / 35;\n        long mid36 = mid / 36;\n\
    \        long mid37 = mid / 37;\n        long mid38 = mid / 38;\n        long\
    \ mid39 = mid / 39;\n        long mid40 = mid / 40;\n        long mid41 = mid\
    \ / 41;\n        long mid42 = mid / 42;\n        long mid43 = mid / 43;\n    \
    \    long mid44 = mid / 44;\n        long mid45 = mid / 45;\n        long mid46\
    \ = mid / 46;\n        long mid47 = mid / 47;\n", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   long maxValue = 0;\n        long minValue = 1000;\n        long minIndex =\
    \ 0;\n        bool isMax = true;\n        bool isMin = true;\n        long temp\
    \ = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 =\
    \ 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n\
    \        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n\
    \        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ maxValue = arr[0];\n        for (int i = 0; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        max = maxValue;\n    \
    \    long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n         \
    \   if (arr[i] > maxValue) {\n                temp = maxValue;\n             \
    \   maxValue = arr[i];\n                maxIndex = i;\n            }\n       \
    \ }\n        result.Add(maxValue);\n        result.Add(arr[maxIndex]);\n     \
    \   for (int i = maxIndex + 1; i < arr.Count; i++) {\n            if (arr[i] >\
    \ maxValue) {\n                temp = maxValue;\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        result.Add(maxValue);\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 2; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                temp = maxValue;\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(maxValue);\n        result.Add(arr[maxIndex]);\n\
    \        for (int i = maxIndex + 3; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                temp = maxValue;\n                maxValue =\
    \ arr[i];\n                maxIndex = i;\n            }\n        }\n        result.Add(maxValue);\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 4; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                temp = maxValue;\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(maxValue);\n        result.Add(arr[maxIndex]);\n\
    \        for (int i = maxIndex + 5; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                temp = maxValue;\n                maxValue =\
    \ arr[i];\n                maxIndex = i;\n            }\n        }\n        result.Add(maxValue);\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 6; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                temp = maxValue;\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(maxValue);\n        result.Add(arr[maxIndex]);\n\
    \        for (int i = maxIndex + 7; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                temp = maxValue;\n                maxValue =\
    \ arr[i];\n                maxIndex = i;\n            }\n        }\n        result.Add(maxValue);\n\
    \        result.Add(arr[maxIndex]);\n        for (int i = maxIndex + 8; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                temp = maxValue;\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        result.Add(maxValue);", "        List<long> result =\
    \ new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long maxValue = arr[0];\n\
    \        long minValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long maxIndexValue = arr[0];\n     \
    \   long minIndexValue = arr[0];\n        long ", "        List<long> result =\
    \ new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n       \
    \ long temp = 0;\n        long maxIndex = 0;\n        long maxCount = 0;\n   \
    \     for (int i = 0; i < arr.Count; i++) {\n            if (i == 0) {\n     \
    \           temp = arr[i];\n                maxCount = 1;\n                maxIndex\
    \ = i;\n            }\n            if (arr[i] > temp) {\n                temp\
    \ = arr[i];\n                maxCount = 1;\n                maxIndex = i;\n  \
    \          }\n            if (arr[i] == temp) {\n                maxCount++;\n\
    \            }\n            if (maxCount > k) {\n                break;\n    \
    \        }\n            if (maxCount > k) {\n                result.Add(arr[maxIndex]);\n\
    \                maxCount = 0;\n                maxIndex++;\n            }\n \
    \       }\n        return result;", "        List<long> result = new List<long>();\n\
    \        Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        if (k == maxIndex) {\n            result.Add(max);\n\
    \            return result;\n        }\n        List<long> left = new List<long>();\n\
    \        List<long> right = new List<long>();\n        long leftMax = max;\n \
    \       long rightMax = max;\n        for (int i = 0; i < arr.Count; i++) {\n\
    \            if (arr[i] > leftMax) {\n                leftMax = arr[i];\n    \
    \        }\n            if (arr[i] > rightMax) {\n                rightMax = arr[i];\n\
    \            }\n        }\n        left.Add(leftMax);\n        right.Add(rightMax);\n\
    \        if (k > left.Count) {\n            k = left.Count;\n        }\n     \
    \   if (k > right.Count) {\n            k = right.Count;\n        }\n        List<long>\
    \ leftResult = Maximum(left, k - 1);\n        List<long> rightResult = Maximum(right,\
    \ k - 1);\n        List<long> result = new List<long>();\n        result.AddRange(leftResult);\n\
    \        result.AddRange(rightResult);\n        result.Add(max);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long temp = 0;\n        long maxIndex = 0;\n        long tempIndex\
    \ = 0;\n        long maxValue = 0;\n        long tempValue = 0;\n        long\
    \ maxIndexValue = 0;\n        long tempIndexValue = 0;\n        foreach (long\
    \ i in arr) {\n            if (max < i) {\n                max = i;\n        \
    \        maxIndex = i;\n                maxValue = i;\n                maxIndexValue\
    \ = i;\n            }\n            if (temp < i) {\n                temp = i;\n\
    \                tempIndex = i;\n                tempValue = i;\n            \
    \    tempIndexValue = i;\n            }\n            if (maxValue < tempValue)\
    \ {\n                maxValue = tempValue;\n                maxIndexValue = tempIndexValue;\n\
    \            }\n            if (tempIndexValue < maxIndexValue) {\n          \
    \      tempIndexValue = maxIndexValue;\n            }\n        }\n        if (k\
    \ == maxIndex) {\n            result.Add(maxValue);\n        }\n        if (k\
    \ == tempIndex) {\n            result.Add(tempValue);\n        }\n        if (k\
    \ == maxIndexValue) {\n            result.Add(maxIndexValue);\n        }\n   \
    \     if (k == tempIndexValue) {\n            result.Add(tempIndexValue);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = arr.Min();\n        long mid = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        bool flag = false;\n\
    \        foreach (long i in arr) {\n            if (i == min) {\n            \
    \    flag = true;\n                mid = i;\n            }\n            if (flag)\
    \ {\n                sum += i;\n                if (sum > max) {\n           \
    \         max = sum;\n                }\n            }\n            if (sum ==\
    \ k) {\n                result.Add(mid);\n                sum = 0;\n         \
    \       count++;\n            }\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        long max = 0;\n        long min\
    \ = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n\
    \        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n    \
    \    long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long\
    \ sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13\
    \ = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 =\
    \ 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n\
    \        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n \
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n  \
    \      long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n   \
    \     long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n    \
    \    long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n     \
    \   long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n      \
    \  long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n       \
    \ long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long\
    \ sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47\
    \ = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 =\
    \ 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n\
    \        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n \
    \       long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n  \
    \      long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n   \
    \     long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n    \
    \    long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n     \
    \   long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n      \
    \  long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n       \
    \ long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long\
    \ sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81\
    \ = 0;\n        long sum82 = 0;\n        long sum83 = 0;", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in arr) {\n            sum +=\
    \ i;\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        temp = max;\n        sum = temp;\n        foreach (long i\
    \ in arr) {\n            sum += i;\n            if (sum > temp) {\n          \
    \      temp = sum;\n            }\n        }\n        temp = temp;\n        sum\
    \ = temp;\n        foreach (long i in arr) {\n            sum += i;\n        \
    \    if (sum > temp) {\n                temp = sum;\n            }\n        }\n\
    \        temp = temp;\n        sum = temp;\n        foreach (long i in arr) {\n\
    \            sum += i;\n            if (sum > temp) {\n                temp =\
    \ sum;\n            }\n        }\n        temp = temp;\n        sum = temp;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > temp) {\n                temp = sum;\n            }\n        }\n        temp\
    \ = temp;\n        sum = temp;\n        foreach (long i in arr) {\n          \
    \  sum += i;\n            if (sum > temp) {\n                temp = sum;\n   \
    \         }\n        }\n        temp = temp;\n        sum = temp;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > temp) {\n  \
    \              temp = sum;\n            }\n        }\n        temp = temp;\n \
    \       sum = temp;\n        foreach (long i in arr) {\n            sum += i;\n\
    \            if (sum > temp) {\n                temp = sum;\n            }\n \
    \       }\n        temp = temp;\n        sum = temp;\n        foreach (long i\
    \ in arr) {\n            sum += i;\n            if (sum > temp) {\n          \
    \      temp = sum;\n            }\n        }\n        temp = temp;\n        sum\
    \ = temp;\n        foreach (long i in arr) {\n            sum += i;\n        \
    \    if (sum > temp) {\n                temp = sum;\n            }\n        }\n\
    \        temp = temp;\n        sum = temp;\n        foreach (long i in arr) {\n\
    \            sum += i;\n            if (sum > temp) {\n                temp =\
    \ sum;\n            }\n        }\n        temp = temp;\n        sum = temp;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > temp) {\n                temp = sum;\n            }\n        }\n        temp\
    \ = temp;\n        sum = temp;\n        foreach (long i in arr) {\n          \
    \  sum += i;\n            if (sum > temp) {\n                temp = sum;\n   \
    \         }\n        }\n        temp = temp;\n        sum = temp;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > temp) {\n  \
    \              temp = ", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        foreach (long i in arr) {\n            if (i > maxValue) {\n        \
    \        maxValue = i;\n                maxIndex = i;\n            }\n       \
    \     if (i == maxValue) {\n                maxIndex++;\n            }\n     \
    \   }\n        long temp = 0;\n        long tempIndex = 0;\n        long tempValue\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i > maxValue)\
    \ {\n                temp = maxValue;\n                tempIndex = maxIndex;\n\
    \                tempValue = i;\n            }\n            if (i == tempValue)\
    \ {\n                tempIndex++;\n            }\n            if (tempIndex ==\
    \ k) {\n                result.Add(temp);\n                tempIndex = 0;\n  \
    \              tempValue = arr[0];\n                temp = 0;\n            }\n\
    \        }\n        return result;", "        List<long> res = new List<long>();\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxVal = 0;\n        long minVal = 0;\n\
    \        long maxIndex2 = 0;\n        long minIndex2 = 0;\n        long maxVal2\
    \ = 0;\n        long minVal2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3\
    \ = 0;\n        long maxVal3 = 0;\n        long minVal3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxVal4 = 0;\n        long minVal4\
    \ = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n        long\
    \ maxVal5 = 0;\n        long minVal5 = 0;\n        long maxIndex6 = 0;\n     \
    \   long minIndex6 = 0;\n        long maxVal6 = 0;\n        long minVal6 = 0;\n\
    \        long maxIndex7 = 0;\n        long minIndex7 = 0;\n        long maxVal7\
    \ = 0;\n        long minVal7 = 0;\n        long maxIndex8 = 0;\n        long minIndex8\
    \ = 0;\n        long maxVal8 = 0;\n        long minVal8 = 0;\n        long maxIndex9\
    \ = 0;\n        long minIndex9 = 0;\n        long maxVal9 = 0;\n        long minVal9\
    \ = 0;\n        long maxIndex10 = 0;\n        long minIndex10 = 0;\n        long\
    \ maxVal10 = 0;\n        long minVal10 = 0;\n        long maxIndex11 = 0;\n  \
    \      long minIndex11 = 0;\n        long maxVal11 = 0;\n        long minVal11\
    \ = 0;\n        long maxIndex12 = 0;\n        long minIndex12 = 0;\n        long\
    \ maxVal12 = 0;\n        long minVal12 = 0;\n        long maxIndex13 = 0;\n  \
    \      long minIndex13 = 0;\n        long maxVal13 = 0;\n        long minVal13\
    \ = 0;\n        long maxIndex14 = 0;\n        long minIndex14 = 0;\n        long\
    \ maxVal14 = 0;\n        long minVal14 = 0;\n        long maxIndex15 = 0;\n  \
    \      long minIndex15 = 0;\n        long maxVal15 = 0;\n        long minVal15\
    \ = 0;\n        long maxIndex16 = 0;\n        long minIndex16 = 0;\n        long\
    \ maxVal16 = 0;\n        long minVal16 = 0;\n        long maxIndex17 = 0;\n  \
    \      long minIndex17 = 0;\n        long maxVal17 = 0;\n        long minVal17\
    \ = 0;\n        long maxIndex18 = 0;\n        long minIndex18 = 0;\n        long\
    \ maxVal18 = 0;\n        long minVal18 = 0;\n        long maxIndex19 = 0;\n  \
    \      ", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n  \
    \      long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n   \
    \     long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n    \
    \    long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n  \
    \      long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n        long temp83 = 0;\n        long temp84", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long temp = 0;\n        long sum = 0;\n        long count = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > max) {\n   \
    \             max = sum;\n            }\n        }\n        temp = k - max;\n\
    \        count = arr.Count;\n        sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > temp) {\n                result.Add(temp);\n\
    \                temp = sum - temp;\n            }\n        }\n        if (temp\
    \ != 0) {\n            result.Add(temp);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        long maxSum = 0;\n        long minSum\
    \ = 0;\n        long sumOfSquares = 0;\n        long maxSumOfSquares = 0;\n  \
    \      long minSumOfSquares = 0;\n        long maxMinSumOfSquares = 0;\n     \
    \   long maxSumOfSquareOfMinSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxMinSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSumOfSquares\
    \ = 0;\n        long maxSumOfSquareOfMaxSumOfSquares = 0;\n        long maxMinSumOfSquareOfMaxMinSum",
  "        List<long> result = new List<long>();\n        Array.Sort(arr);\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        for (int i = arr.Count - 1; i >= 0; i--) {\n          \
    \  if (arr[i] > currentMax) {\n                currentMax = arr[i];\n        \
    \        currentMaxIndex = i;\n            }\n        }\n        if (currentMaxIndex\
    \ - maxIndex == k) {\n            result.Add(maxValue);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long maxIndex = 0;\n        long currentMax = arr[0];\n        long\
    \ currentMaxIndex = arr[0];\n        foreach (long i in arr) {\n            if\
    \ (i > currentMax) {\n                currentMax = i;\n                currentMaxIndex\
    \ = i;\n            }\n            if (i == currentMax) {\n                currentMax\
    \ = i;\n                currentMaxIndex = i;\n            }\n        }\n     \
    \   long currentMaxIndex2 = currentMaxIndex;\n        long currentMax2 = currentMax;\n\
    \        long currentMaxIndex3 = currentMaxIndex;\n        long currentMax3 =\
    \ currentMax;\n        long currentMaxIndex4 = currentMaxIndex;\n        long\
    \ currentMax4 = currentMax;\n        long currentMaxIndex5 = currentMaxIndex;\n\
    \        long currentMax5 = currentMax;\n        long currentMaxIndex6 = currentMaxIndex;\n\
    \        long currentMax6 = currentMax;\n        long currentMaxIndex7 = currentMaxIndex;\n\
    \        long currentMax7 = currentMax;\n        long currentMaxIndex8 = currentMaxIndex;\n\
    \        long currentMax8 = currentMax;\n        long currentMaxIndex9 = currentMaxIndex;\n\
    \        long currentMax9 = currentMax;\n        long currentMaxIndex10 = currentMaxIndex;\n\
    \        long currentMax10 = currentMax;\n        long currentMaxIndex11 = currentMaxIndex;\n\
    \        long currentMax11 = currentMax;\n        long currentMaxIndex12 = currentMaxIndex;\n\
    \        long currentMax12 = currentMax;\n        long currentMaxIndex13 = currentMaxIndex;\n\
    \        long currentMax13 = currentMax;\n        long currentMaxIndex14 = currentMaxIndex;\n\
    \        long currentMax14 = currentMax;\n        long currentMaxIndex15 = currentMaxIndex;\n\
    \        long currentMax15 = currentMax;\n        long currentMaxIndex16 = currentMaxIndex;\n\
    \        long currentMax16 = currentMax;\n        long currentMaxIndex17 = currentMaxIndex;\n\
    \        long currentMax17 = currentMax;\n        long currentMaxIndex18 = currentMaxIndex;\n\
    \        long currentMax18 = currentMax;\n        long currentMaxIndex19 = currentMaxIndex;\n\
    \        long currentMax19 = currentMax;\n        long currentMaxIndex20 = currentMaxIndex;\n\
    \        long currentMax20 = currentMax;\n        long currentMaxIndex21 = currentMaxIndex;\n\
    \        long currentMax21 = currentMax;\n        long currentMaxIndex22 = currentMaxIndex;\n\
    \        long currentMax22 = currentMax;\n        long currentMaxIndex23 = ",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        long sum = 0;\n        long count = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n            }\n        }\n        temp = max;\n        max\
    \ = k;\n        while (max > 0) {\n            count = 0;\n            foreach\
    \ (long i in arr) {\n                if (i == temp) {\n                    count++;\n\
    \                }\n            }\n            if (count == 0) {\n           \
    \     result.Add(temp);\n                temp--;\n            }\n            else\
    \ {\n                temp--;\n            }\n            max--;\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long temp = 0;\n        long maxIndex = 0;\n     \
    \   long index = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n", "        List<long> result = new List<long>();\n \
    \       long max = 0;\n        long maxIndex = 0;\n        foreach (long i in\
    \ arr) {\n            if (max < i) {\n                max = i;\n             \
    \   maxIndex = i;\n            }\n        }\n        long temp = 0;\n        long\
    \ tempIndex = 0;\n        foreach (long i in arr) {\n            if (i == max)\
    \ {\n                result.Add(max);\n                result.Add(maxIndex);\n\
    \                result.Add(i);\n                result.Add(temp);\n         \
    \       result.Add(tempIndex);\n                max = 0;\n                maxIndex\
    \ = 0;\n                temp = 0;\n                tempIndex = 0;\n          \
    \  }\n            if (max < i) {\n                temp = i;\n                tempIndex\
    \ = i;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.Count; i++) {\n \
    \           if (arr[i] > max) {\n                max = arr[i];\n             \
    \   maxIndex = i;\n            }\n        }\n        List<long> maxList = new\
    \ List<long>();\n        if (maxIndex - k >= 0) {\n            maxList.Add(arr[maxIndex\
    \ - k]);\n        }\n        if (maxIndex + k <= arr.Count - 1) {\n          \
    \  maxList.Add(arr[maxIndex + k]);\n        }\n        result.AddRange(maxList);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n  \
    \      for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n\
    \                max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        for (int i = 0; i < k; i++) {\n            result.Add(arr[maxIndex]);\n\
    \            maxIndex++;\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        Array.Sort(arr);\n        if (k > arr.Count)\
    \ {\n            k = arr.Count;\n        }\n        if (k == 1) {\n          \
    \  result.Add(arr[0]);\n            return result;\n        }\n        List<long>\
    \ max = new List<long>();\n        List<long> max2 = new List<long>();\n     \
    \   List<long> max3 = new List<long>();\n        long maxCount = 0;\n        long\
    \ maxCount2 = 0;\n        long maxCount3 = 0;\n        long maxCount4 = 0;\n \
    \       long maxCount5 = 0;\n        long maxCount6 = 0;\n        long maxCount7\
    \ = 0;\n        long maxCount8 = 0;\n        long maxCount9 = 0;\n        long\
    \ maxCount10 = 0;\n        long maxCount11 = 0;\n        long maxCount12 = 0;\n\
    \        long maxCount13 = 0;\n        long maxCount14 = 0;\n        long maxCount15\
    \ = 0;\n        long maxCount16 = 0;\n        long maxCount17 = 0;\n        long\
    \ maxCount18 = 0;\n        long maxCount19 = 0;\n        long maxCount20 = 0;\n\
    \        long maxCount21 = 0;\n        long maxCount22 = 0;\n        long maxCount23\
    \ = 0;\n        long maxCount24 = 0;\n        long maxCount25 = 0;\n        long\
    \ maxCount26 = 0;\n        long maxCount27 = 0;\n        long maxCount28 = 0;\n\
    \        long maxCount29 = 0;\n        long maxCount30 = 0;\n        long maxCount31\
    \ = 0;\n        long maxCount32 = 0;\n        long maxCount33 = 0;\n        long\
    \ maxCount34 = 0;\n        long maxCount35 = 0;\n        long maxCount36 = 0;\n\
    \        long maxCount37 = 0;\n        long maxCount38 = 0;\n        long maxCount39\
    \ = 0;\n        long maxCount40 = 0;\n        long maxCount41 = 0;\n        long\
    \ maxCount42 = 0;\n        long maxCount43 = 0;\n        long maxCount44 = 0;\n\
    \        long maxCount45 = 0;\n        long maxCount46 = 0;\n        long maxCount47\
    \ = 0;\n        long maxCount48 = 0;\n        long maxCount49 = 0;\n        long\
    \ maxCount50 = 0;\n        long maxCount51 = 0;\n        long maxCount52 = 0;\n\
    \        long maxCount53 = 0;\n        long maxCount54 = 0;\n        long maxCount55\
    \ = 0;\n        long maxCount56 = 0;\n        long maxCount57 = 0;\n        long\
    \ maxCount58 = 0;\n        long maxCount59 = 0;\n        long maxCount60 = 0;\n\
    \        long maxCount61 = 0;\n        long maxCount62 = 0;\n        long maxCount",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = 0;\n        foreach (long i in arr) {\n\
    \            if (max < i) {\n                max = i;\n                maxIndex\
    \ = i;\n                maxValue = i;\n            }\n            else if (max\
    \ == i) {\n                if (maxIndex < i) {\n                    maxIndex =\
    \ i;\n                    maxValue = i;\n                }\n            }\n  \
    \      }\n        if (maxIndex == k) {\n            result.Add(maxValue);\n  \
    \      }\n        else {\n            while (maxIndex < k) {\n               \
    \ result.Add(maxValue);\n                maxIndex++;\n                maxValue\
    \ = 0;\n                foreach (long i in arr) {\n                    if (maxIndex\
    \ < i) {\n                        maxIndex = i;\n                        maxValue\
    \ = i;\n                    }\n                }\n            }\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long sum = 0;\n        long temp = 0;\n        long\
    \ temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5\
    \ = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 =\
    \ 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =\
    \ 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14\
    \ = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17\
    \ = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20\
    \ = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23\
    \ = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26\
    \ = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29\
    \ = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32\
    \ = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35\
    \ = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38\
    \ = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41\
    \ = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44\
    \ = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47\
    \ = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50\
    \ = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53\
    \ = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56\
    \ = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59\
    \ = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62\
    \ = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65\
    \ = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68\
    \ = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71\
    \ = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74\
    \ = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77\
    \ = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80\
    \ = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83\
    \ = 0;", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = arr[0];\n        long minValue = arr[0];\n        long\
    \ maxCount = 0;\n        long minCount = 0;\n        bool isMax = true;\n    \
    \    bool isMin = true;\n        long maxCountIndex = 0;\n        long minCountIndex\
    \ = 0;\n        long maxValueIndex = 0;\n        long minValueIndex = 0;\n   \
    \     long maxCountValue = 0;\n        long minCountValue = 0;\n        long maxValueValue\
    \ = 0;\n        long minValueValue = 0;\n        long maxCountCount = 0;\n   \
    \     long minCountCount = 0;\n        long maxValueCount = 0;\n        long minValueCount\
    \ = 0;\n        long maxCountValueIndex = 0;\n        long minCountValueIndex\
    \ = 0;\n        long maxValueValueIndex = 0;\n        long minValueValueIndex\
    \ = 0;\n        long maxCountCountValue = 0;\n        long minCountCountValue\
    \ = 0;\n        long maxValueCountValue = 0;\n        long minValueCountValue\
    \ = 0;\n        long maxCountCountCount = 0;\n        long minCountCountCount\
    \ = 0;\n        long maxValueCountCount = 0;\n        long minValueCountValue\
    \ = 0;\n        long maxCountValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxValueCountValueValue = 0;\n        long minValueCountValueValue\
    \ = 0;\n        long maxCountValueCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minCountCountCountValue\
    \ = 0;\n        long maxValueCountValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountValueCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxValueValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxValueValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountValueCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountValueValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountCountCountValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxValueValueValue = 0;\n        long minValueValueValue\
    \ = 0;\n        long maxCountValueCountValue = 0;", "        List<long> result\
    \ = new List<long>();\n        long max = arr[0];\n        long maxCount = 0;\n\
    \        foreach (long i in arr) {\n            if (maxCount < k) {\n        \
    \        if (i > max) {\n                    max = i;\n                    maxCount\
    \ = 1;\n                }\n                else {\n                    maxCount++;\n\
    \                }\n            }\n            else {\n                if (i ==\
    \ max) {\n                    maxCount++;\n                }\n               \
    \ else {\n                    if (maxCount > k) {\n                        result.Add(max);\n\
    \                        maxCount = 1;\n                        max = i;\n   \
    \                 }\n                    else {\n                        maxCount++;\n\
    \                    }\n                }\n            }\n        }\n        result.Add(max);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n   \
    \     long sum83 = 0;", "        List<long> result = new List<long>();\n     \
    \   long max = 0;\n        long sum = 0;\n        long temp = 0;\n        long\
    \ sum2 = 0;\n        long temp2 = 0;\n        long max2 = 0;\n        long max3\
    \ = 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n\
    \        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n    \
    \    long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n     \
    \   long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n      \
    \  long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n       \
    \ long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long\
    \ max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25\
    \ = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 =\
    \ 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n\
    \        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n \
    \       long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n  \
    \      long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n   \
    \     long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n    \
    \    long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n     \
    \   long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n      \
    \  long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n       \
    \ long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long\
    \ max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59\
    \ = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 =\
    \ 0;\n        long max63 = 0;\n        long max64 = 0;\n        long max65 = 0;\n\
    \        long max66 = 0;\n        long max67 = 0;\n        long max68 = 0;\n \
    \       long max69 = 0;\n        long max70 = 0;\n        long max71 = 0;\n  \
    \      long max72 = 0;\n        long max73 = 0;\n        long max74 = 0;\n   \
    \     long max75 = 0;\n        long max76 = 0;\n        long max77 = 0;\n    \
    \    long max78 = 0;\n        long max79 = 0;\n        long max80 = 0;\n     \
    \   long max81 = 0;\n        ", "        List<long> res = new List<long>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ foreach (long i in arr) {\n            sum += i;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n            if (sum < min) {\n\
    \                min = sum;\n            }\n        }\n        long mid = min\
    \ + (max - min) / 2;\n        long sum2 = 0;\n        foreach (long i in arr)\
    \ {\n            sum2 += i;\n            if (sum2 > mid) {\n                res.Add(i);\n\
    \            }\n        }\n        return res.OrderByDescending(x => x).Take(k).ToList();",
  "        List<long> result = new List<long>();\n        long max = arr.Max();\n\
    \        long min = arr.Min();\n        long mid = max / 2;\n        long mid2\
    \ = min / 2;\n        long mid3 = mid / 2;\n        long mid4 = mid3 / 2;\n  \
    \      long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7\
    \ = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n\
    \        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13\
    \ / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n   \
    \     long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19\
    \ = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 /\
    \ 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n     \
    \   long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26\
    \ = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 /\
    \ 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n     \
    \   long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33\
    \ = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 /\
    \ 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n     \
    \   long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40\
    \ = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 /\
    \ 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / 2;\n     \
    \   long mid45 = mid44 / 2;\n        long mid46 = mid45 / 2;\n        long mid47\
    \ = mid46 / 2;\n        long mid48 = mid47 / 2;\n        long mid49 = mid48 /\
    \ 2;\n        long mid50 = mid49 / 2;\n        ", "        List<long> result =\
    \ new List<long>();\n        long max = arr[0];\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        result.Add(max);\n        if (k > maxIndex) {\n     \
    \       k = maxIndex;\n        }\n        if (k == maxIndex) {\n            k\
    \ = maxIndex + 1;\n        }\n        for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        result.Add(max);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n\
    \        foreach (long i in arr) {\n            if (i > maxValue) {\n        \
    \        maxValue = i;\n                maxIndex = i;\n            }\n       \
    \     if (i == maxValue) {\n                maxIndex++;\n            }\n     \
    \   }\n        max = maxIndex;\n        long temp = 0;\n        long tempIndex\
    \ = 0;\n        long tempValue = 0;\n        foreach (long i in arr) {\n     \
    \       if (i == maxValue) {\n                tempValue = i;\n               \
    \ tempIndex = i;\n            }\n            if (i == tempValue) {\n         \
    \       tempIndex++;\n            }\n            if (tempIndex > maxIndex) {\n\
    \                max = tempIndex;\n            }\n            if (tempIndex ==\
    \ maxIndex) {\n                max = tempIndex;\n            }\n        }\n  \
    \      long temp2 = 0;\n        long temp2Index = 0;\n        long temp2Value\
    \ = 0;\n        foreach (long i in arr) {\n            if (i == maxValue) {\n\
    \                temp2Value = i;\n                temp2Index = i;\n          \
    \  }\n            if (i == temp2Value) {\n                temp2Index++;\n    \
    \        }\n            if (temp2Index > maxIndex) {\n                max = temp2Index;\n\
    \            }\n            if (temp2Index == maxIndex) {\n                max\
    \ = temp2Index;\n            }\n        }\n        long temp3 = 0;\n        long\
    \ temp3Index = 0;\n        long temp3Value = 0;\n        foreach (long i in arr)\
    \ {\n            if (i == maxValue) {\n                temp3Value = i;\n     \
    \           temp3Index = i;\n            }\n            if (i == temp3Value) {\n\
    \                temp3Index++;\n            }\n            if (temp3Index > maxIndex)\
    \ {\n                max = temp3Index;\n            }\n            if (temp3Index\
    \ == maxIndex) {\n                max = temp3Index;\n            }\n        }\n\
    \        long temp4 = 0;\n        long temp4Index = 0;\n        long temp4Value\
    \ = 0;\n        foreach (long i in arr) {\n            if (i == maxValue) {\n\
    \                temp4Value = i;\n                temp4Index = i;\n          \
    \  }\n            if (i == temp4Value) {\n                temp4Index++;\n    \
    \        }\n            if (temp4Index > maxIndex) {\n                max = temp4Index;\n\
    \            }\n            if (temp4Index == maxIndex) {\n                max\
    \ = temp4Index;\n            }\n        }\n        long temp5 = 0;\n        long\
    \ temp5Index = 0;\n        long temp5Value = 0;\n        foreach (long i in arr)\
    \ {\n            if (i == maxValue) {\n                temp5Value = i;\n     \
    \           temp5Index = i;\n            }\n            if (i == temp5Value) {\n\
    \                temp5Index++;\n            }\n            if (temp5Index > maxIndex)\
    \ {\n                max = temp5Index;\n            }\n            if (temp5Index\
    \ == ", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long temp = 0;\n        foreach (long i in arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        long temp2 =\
    \ 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n\
    \        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n \
    \       long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long ", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long min = 0;\n        long maxIndex = 0;\n        long minIndex\
    \ = 0;\n        long maxValue = 0;\n        long minValue = 0;\n        long maxIndex2\
    \ = 0;\n        long minIndex2 = 0;\n        long maxValue2 = 0;\n        long\
    \ minValue2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n \
    \       long maxValue3 = 0;\n        long minValue3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxValue4 = 0;\n        long\
    \ minValue4 = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n \
    \       long maxValue5 = 0;\n        long minValue5 = 0;\n        long maxIndex6\
    \ = 0;\n        long minIndex6 = 0;\n        long maxValue6 = 0;\n        long\
    \ minValue6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7 = 0;\n \
    \       long maxValue7 = 0;\n        long minValue7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxValue8 = 0;\n        long\
    \ minValue8 = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n \
    \       long maxValue9 = 0;\n        long minValue9 = 0;\n        long maxIndex10\
    \ = 0;\n        long minIndex10 = 0;\n        long maxValue10 = 0;\n        long\
    \ minValue10 = 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n\
    \        long maxValue11 = 0;\n        long minValue11 = 0;\n        long maxIndex12\
    \ = 0;\n        long minIndex12 = 0;\n        long maxValue12 = 0;\n        long\
    \ minValue12 = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n\
    \        long maxValue13 = 0;\n        long minValue13 = 0;\n        long maxIndex14\
    \ = 0;\n        long minIndex14 = 0;\n        long maxValue14 = 0;\n        long\
    \ minValue14 = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n\
    \        long maxValue15 = 0;\n        long minValue15 = 0;\n        long maxIndex16\
    \ = 0;\n        long minIndex16 = 0;\n        long maxValue16 = 0;\n        long\
    \ minValue16 = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n\
    \        long maxValue17 = 0;\n        long minValue17 = 0;\n        long maxIndex18\
    \ = 0;\n        long minIndex18 = 0;\n        long maxValue18 = 0;\n        long\
    \ minValue18 = 0;\n        long maxIndex19 = 0;\n        ", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long min = 0;\n        long minIndex = 0;\n        long sum = 0;\n  \
    \      long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n      \
    \  long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long\
    \ sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11\
    \ = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 =\
    \ 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n\
    \        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n \
    \       long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n  \
    \      long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n   \
    \     long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n    \
    \    long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n     \
    \   long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n      \
    \  long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n       \
    \ long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long\
    \ sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45\
    \ = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 =\
    \ 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n\
    \        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n \
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n  \
    \      long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n   \
    \     long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n    \
    \    long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n     \
    \   long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n      \
    \  long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n       \
    \ long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long\
    \ sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79\
    \ = 0;\n        long sum80 = 0;\n        long sum81 = 0;", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long cur = 0;\n \
    \       long maxIndex = 0;\n        long curIndex = 0;\n        foreach (long\
    \ i in arr) {\n            if (cur > max) {\n                max = cur;\n    \
    \            maxIndex = curIndex;\n            }\n            cur = i;\n     \
    \       curIndex++;\n        }\n        long temp = 0;\n        long tempIndex\
    \ = 0;\n        foreach (long i in arr) {\n            if (temp > max) {\n   \
    \             temp = max;\n                tempIndex = maxIndex;\n           \
    \ }\n            if (temp < i) {\n                temp = i;\n                tempIndex\
    \ = curIndex;\n            }\n        }\n        result.Add(temp);\n        result.Add(arr[tempIndex]);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        ", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n    \
    \    long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n     \
    \   long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n      \
    \  long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n     \
    \   long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n   \
    \     long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n \
    \       long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84", "        List<long> result = new List<long>();\n      \
    \  long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        if (maxIndex < k) {\n            max = maxValue;\n\
    \            result.Add(max);\n        }\n        for (int i = maxIndex; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ < k) {\n            max = maxValue;\n            result.Add(max);\n        }\n\
    \        for (int i = maxIndex; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                max = arr[i];\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex < k) {\n            max = maxValue;\n\
    \            result.Add(max);\n        }\n        for (int i = maxIndex; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ < k) {\n            max = maxValue;\n            result.Add(max);\n        }\n\
    \        for (int i = maxIndex; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                max = arr[i];\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex < k) {\n            max = maxValue;\n\
    \            result.Add(max);\n        }\n        for (int i = maxIndex; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ < k) {\n            max = maxValue;\n            result.Add(max);\n        }\n\
    \        for (int i = maxIndex; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                max = arr[i];\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex < k) {\n            max = maxValue;\n\
    \            result.Add(max);\n        }\n        for (int i = maxIndex; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ < k) {\n            max = maxValue;\n            result.Add(max);\n        }\n\
    \        for (int i = maxIndex; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                max = arr[i];\n                maxIndex = i;\n\
    \            }\n        }\n        if (maxIndex < k) {\n            max = maxValue;\n\
    \            result.Add(max);\n        }\n        for (int i = maxIndex; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        if (maxIndex\
    \ < k", "        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long temp = 0;\n        long sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n        }\n        temp = max;\n        sum = 0;\n  \
    \      foreach (long i in arr) {\n            sum += i;\n            if (sum >\
    \ temp) {\n                temp = sum;\n            }\n        }\n        temp\
    \ = temp / k;\n        foreach (long i in arr) {\n            sum += i;\n    \
    \        if (sum > temp) {\n                temp = sum;\n            }\n     \
    \   }\n        temp = temp / k;\n        foreach (long i in arr) {\n         \
    \   sum += i;\n            if (sum > temp) {\n                temp = sum;\n  \
    \          }\n        }\n        temp = temp / k;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > temp) {\n             \
    \   temp = sum;\n            }\n        }\n        temp = temp / k;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > temp) {\n  \
    \              temp = sum;\n            }\n        }\n        temp = temp / k;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > temp) {\n                temp = sum;\n            }\n        }\n        temp\
    \ = temp / k;\n        foreach (long i in arr) {\n            sum += i;\n    \
    \        if (sum > temp) {\n                temp = sum;\n            }\n     \
    \   }\n        temp = temp / k;\n        foreach (long i in arr) {\n         \
    \   sum += i;\n            if (sum > temp) {\n                temp = sum;\n  \
    \          }\n        }\n        temp = temp / k;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > temp) {\n             \
    \   temp = sum;\n            }\n        }\n        temp = temp / k;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > temp) {\n  \
    \              temp = sum;\n            }\n        }\n        temp = temp / k;\n\
    \        foreach (long i in arr) {\n            sum += i;\n            if (sum\
    \ > temp) {\n                temp = sum;\n            }\n        }\n        temp\
    \ = temp / k;\n        foreach (long i in arr) {\n            sum += i;\n    \
    \        if (sum > temp) {\n                temp = sum;\n            }\n     \
    \   }\n        temp = temp / k;\n        foreach (long i in arr) {\n         \
    \   sum += i;\n            if (sum > temp) {\n                temp = sum;\n  \
    \          }\n        }\n        temp = temp / k;\n        foreach (long i in\
    \ arr) {\n            sum += i;\n            if (sum > temp) {\n             \
    \   temp = sum;\n            }\n        }\n        temp = temp / k;\n        foreach\
    \ (long i in ", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n        long minValue\
    \ = long.MaxValue;\n        long minIndex = 0;\n        long minValueIndex = 0;\n\
    \        long sum = 0;\n        long sumIndex = 0;\n        long sumValue = 0;\n\
    \        bool isMax = true;\n        bool isMin = true;\n        long index =\
    \ 0;\n        long value = 0;\n        long sumIndex2 = 0;\n        long sumValue2\
    \ = 0;\n        long sumIndex3 = 0;\n        long sumValue3 = 0;\n        long\
    \ sumIndex4 = 0;\n        long sumValue4 = 0;\n        long sumIndex5 = 0;\n \
    \       long sumValue5 = 0;\n        long sumIndex6 = 0;\n        long sumValue6\
    \ = 0;\n        long sumIndex7 = 0;\n        long sumValue7 = 0;\n        long\
    \ sumIndex8 = 0;\n        long sumValue8 = 0;\n        long sumIndex9 = 0;\n \
    \       long sumValue9 = 0;\n        long sumIndex10 = 0;\n        long sumValue10\
    \ = 0;\n        long sumIndex11 = 0;\n        long sumValue11 = 0;\n        long\
    \ sumIndex12 = 0;\n        long sumValue12 = 0;\n        long sumIndex13 = 0;\n\
    \        long sumValue13 = 0;\n        long sumIndex14 = 0;\n        long sumValue14\
    \ = 0;\n        long sumIndex15 = 0;\n        long sumValue15 = 0;\n        long\
    \ sumIndex16 = 0;\n        long sumValue16 = 0;\n        long sumIndex17 = 0;\n\
    \        long sumValue17 = 0;\n        long sumIndex18 = 0;\n        long sumValue18\
    \ = 0;\n        long sumIndex19 = 0;\n        long sumValue19 = 0;\n        long\
    \ sumIndex20 = 0;\n        long sumValue20 = 0;\n        long sumIndex21 = 0;\n\
    \        long sumValue21 = 0;\n        long sumIndex22 = 0;\n        long sumValue22\
    \ = 0;\n        long sumIndex23 = 0;\n        long sumValue23 = 0;\n        long\
    \ sumIndex24 = 0;\n        long sumValue24 = 0;\n        long sumIndex25 = 0;\n\
    \        long sumValue25 = 0;\n        long sumIndex26 = 0;\n        long sumValue26\
    \ = 0;\n        long sumIndex27 = 0;\n        long sumValue27 = 0;\n        long\
    \ sumIndex28 = 0;\n        long sumValue28 = 0;\n        long sumIndex29 = 0;\n\
    \        long sumValue29 = 0;\n        long sumIndex30 = 0;\n        long sumValue30\
    \ = 0;\n        long sumIndex31 = 0;\n        long sumValue31 = 0;\n        long\
    \ sumIndex32 = 0;\n        long sumValue32", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ currentMax = arr[0];\n        long currentMaxIndex = 0;\n        for (int i\
    \ = 0; i < arr.Count; i++) {\n            if (arr[i] > currentMax) {\n       \
    \         currentMax = arr[i];\n                currentMaxIndex = i;\n       \
    \     }\n        }\n        long currentMaxValue = currentMax;\n        long currentMaxIndex\
    \ = currentMaxIndex;\n        for (int i = 0; i < arr.Count; i++) {\n        \
    \    if (arr[i] > currentMax) {\n                currentMax = arr[i];\n      \
    \          currentMaxIndex = i;\n            }\n        }\n        long currentMaxValue\
    \ = currentMax;\n        long currentMaxIndex = currentMaxIndex;\n        for\
    \ (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > currentMax) {\n\
    \                currentMax = arr[i];\n                currentMaxIndex = i;\n\
    \            }\n        }\n        long currentMaxValue = currentMax;\n      \
    \  long currentMaxIndex = currentMaxIndex;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax) {\n                currentMax =\
    \ arr[i];\n                currentMaxIndex = i;\n            }\n        }\n  \
    \      long currentMaxValue = currentMax;\n        long currentMaxIndex = currentMaxIndex;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > currentMax)\
    \ {\n                currentMax = arr[i];\n                currentMaxIndex = i;\n\
    \            }\n        }\n        long currentMaxValue = currentMax;\n      \
    \  long currentMaxIndex = currentMaxIndex;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax) {\n                currentMax =\
    \ arr[i];\n                currentMaxIndex = i;\n            }\n        }\n  \
    \      long currentMaxValue = currentMax;\n        long currentMaxIndex = currentMaxIndex;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > currentMax)\
    \ {\n                currentMax = arr[i];\n                currentMaxIndex = i;\n\
    \            }\n        }\n        long currentMaxValue = currentMax;\n      \
    \  long currentMaxIndex = currentMaxIndex;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax) {\n                currentMax =\
    \ arr[i];\n                currentMaxIndex = i;\n            }\n        }\n  \
    \      long currentMaxValue = currentMax;\n        long currentMaxIndex = currentMaxIndex;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > currentMax)\
    \ {\n                currentMax = arr[i];\n                currentMaxIndex = i;\n\
    \            }\n        }\n        long currentMaxValue = currentMax;\n      \
    \  long currentMaxIndex = currentMaxIndex;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentMax) {\n                currentMax =\
    \ arr[i];\n                currentMaxIndex = ", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long temp = 0;\n        long sum\
    \ = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n\
    \        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n    \
    \    long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n       \
    \ long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long\
    \ sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17\
    \ = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 =\
    \ 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n\
    \        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n \
    \       long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n  \
    \      long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n   \
    \     long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n    \
    \    long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n     \
    \   long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n      \
    \  long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n       \
    \ long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long\
    \ sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51\
    \ = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 =\
    \ 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n\
    \        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n \
    \       long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n  \
    \      long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n   \
    \     long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n    \
    \    long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n     \
    \   long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n      \
    \  long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n       \
    \ long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long\
    \ sum82 = 0;\n        long sum83 = 0;", "        List<long> res = new List<long>();\n\
    \        long max = 0;\n        long sum = 0;\n        long cur = 0;\n       \
    \ foreach (var item in arr) {\n            cur += item;\n            sum += item;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \         if (sum == max) {\n                res.Add(cur);\n            }\n  \
    \      }\n        if (res.Count < k) {\n            k = res.Count;\n        }\n\
    \        return res.OrderByDescending(x => x).Take(k).ToList();", "        List<long>\
    \ result = new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = 0;\n        long current\
    \ = 0;\n        long currentIndex = 0;\n        long currentValue = 0;\n     \
    \   long currentMax = 0;\n        long currentMaxIndex = 0;\n        long currentMaxValue\
    \ = 0;\n        long currentMaxValueIndex = 0;\n        bool isMax = false;\n\
    \        bool isMaxIndex = false;\n        bool isMaxValue = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValueIndex = false;\n        bool\
    \ isMaxValueIndex = false;\n        bool isMaxValue", "        List<long> result\
    \ = new List<long>();\n        Array.Sort(arr);\n        long max = 0;\n     \
    \   long maxIndex = 0;\n        long maxValue = arr[0];\n        long index =\
    \ 0;\n        while (index < arr.Count) {\n            if (arr[index] > maxValue)\
    \ {\n                maxValue = arr[index];\n                maxIndex = index;\n\
    \            }\n            index++;\n        }\n        result.Add(maxValue);\n\
    \        if (k > maxIndex) {\n            k = maxIndex;\n        }\n        if\
    \ (k > 0) {\n            for (long i = maxIndex + 1; i < arr.Count; i++) {\n \
    \               if (arr[i] > maxValue) {\n                    maxValue = arr[i];\n\
    \                    maxIndex = i;\n                }\n            }\n       \
    \     result.Add(maxValue);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long i in arr) {\n            if (i < min) {\n             \
    \   min = i;\n            }\n            if (i > max) {\n                max =\
    \ i;\n            }\n        }\n        long mid = min + (max - min) / 2;\n  \
    \      long mid2 = mid / 2;\n        long mid3 = mid - mid2;\n        long mid4\
    \ = mid3 / 2;\n        long mid5 = mid3 - mid4;\n        long mid6 = mid5 / 2;\n\
    \        long mid7 = mid5 - mid6;\n        long mid8 = mid7 / 2;\n        long\
    \ mid9 = mid7 - mid8;\n        long mid10 = mid9 / 2;\n        long mid11 = mid9\
    \ - mid10;\n        long mid12 = mid11 / 2;\n        long mid13 = mid11 - mid12;\n\
    \        long mid14 = mid13 / 2;\n        long mid15 = mid13 - mid14;\n      \
    \  long mid16 = mid15 / 2;\n        long mid17 = mid15 - mid16;\n        long\
    \ mid18 = mid17 / 2;\n        long mid19 = mid17 - mid18;\n        long mid20\
    \ = mid19 / 2;\n        long mid21 = mid19 - mid20;\n        long mid22 = mid21\
    \ / 2;\n        long mid23 = mid21 - mid22;\n        long mid24 = mid23 / 2;\n\
    \        long mid25 = mid23 - mid24;\n        long mid26 = mid25 / 2;\n      \
    \  long mid27 = mid25 - mid26;\n        long mid28 = mid27 / 2;\n        long\
    \ mid29 = mid27 - mid28;\n        long mid30 = mid29 / 2;\n        long mid31\
    \ = mid29 - mid30;\n        long mid32 = mid31 / 2;\n        long mid33 = mid31\
    \ - mid32;\n        long mid34 = mid33 / 2;\n        long mid35 = mid33 - mid34;\n\
    \        long mid36 = mid35 / 2;\n        long mid37 = mid35 - mid36;\n      \
    \  long mid38 = mid37 / 2;\n        long mid39 = mid37 - mid38;\n        long\
    \ mid40 = mid39 / 2;\n        long mid41 = mid39 - mid40;\n        long mid42\
    \ = mid41 / 2;\n        long mid43 = mid41 - mid42;\n        long mid44 = mid",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        long temp = 0;\n        long sum2 =\
    \ 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n\
    \        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n    \
    \    long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n      \
    \  long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n       \
    \ long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long\
    \ sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21\
    \ = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 =\
    \ 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n\
    \        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n \
    \       long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n  \
    \      long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n   \
    \     long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n    \
    \    long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n     \
    \   long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n      \
    \  long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n       \
    \ long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long\
    \ sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55\
    \ = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 =\
    \ 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n\
    \        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n \
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n  \
    \      long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n   \
    \     long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n    \
    \    long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n     \
    \   long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n      \
    \  long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n", "   \
    \     List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long\
    \ temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6\
    \ = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 =\
    \ 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12\
    \ = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15\
    \ = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18\
    \ = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21\
    \ = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24\
    \ = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27\
    \ = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30\
    \ = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33\
    \ = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36\
    \ = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39\
    \ = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42\
    \ = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45\
    \ = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48\
    \ = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51\
    \ = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54\
    \ = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57\
    \ = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60\
    \ = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63\
    \ = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66\
    \ = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69\
    \ = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72\
    \ = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75\
    \ = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78\
    \ = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81\
    \ = 0;\n        long temp82 = 0;\n        long temp83", "        List<long> result\
    \ = new List<long>();\n        long max = arr[0];\n        for (int i = 0; i <\
    \ arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n\
    \            }\n        }\n        if (k == 1) {\n            result.Add(max);\n\
    \            return result;\n        }\n        long max2 = max;\n        long\
    \ max3 = max;\n        long max4 = max;\n        long max5 = max;\n        long\
    \ max6 = max;\n        long max7 = max;\n        long max8 = max;\n        long\
    \ max9 = max;\n        long max10 = max;\n        long max11 = max;\n        long\
    \ max12 = max;\n        long max13 = max;\n        long max14 = max;\n       \
    \ long max15 = max;\n        long max16 = max;\n        long max17 = max;\n  \
    \      long max18 = max;\n        long max19 = max;\n        long max20 = max;\n\
    \        long max21 = max;\n        long max22 = max;\n        long max23 = max;\n\
    \        long max24 = max;\n        long max25 = max;\n        long max26 = max;\n\
    \        long max27 = max;\n        long max28 = max;\n        long max29 = max;\n\
    \        long max30 = max;\n        long max31 = max;\n        long max32 = max;\n\
    \        long max33 = max;\n        long max34 = max;\n        long max35 = max;\n\
    \        long max36 = max;\n        long max37 = max;\n        long max38 = max;\n\
    \        long max39 = max;\n        long max40 = max;\n        long max41 = max;\n\
    \        long max42 = max;\n        long max43 = max;\n        long max44 = max;\n\
    \        long max45 = max;\n        long max46 = max;\n        long max47 = max;\n\
    \        long max48 = max;\n        long max49 = max;\n        long max50 = max;\n\
    \        long max51 = max;\n        long max52 = max;\n        long max53 = max;\n\
    \        long max54 = max;\n        long max55 = max;\n        long max56 = max;\n\
    \        long max57 = max;\n        long max58 = max;\n        long max59 = max;\n\
    \        long max60 = ", "        List<long> result = new List<long>();\n    \
    \    Array.Sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n   \
    \     long maxValue = arr[0];\n        foreach (long i in arr) {\n           \
    \ if (i == maxValue) {\n                maxIndex++;\n                if (maxIndex\
    \ == k) {\n                    result.Add(max);\n                    maxIndex\
    \ = 0;\n                    maxValue = arr[0];\n                }\n          \
    \  }\n            max = Math.Max(i, max);\n        }\n        if (maxIndex !=\
    \ 0) {\n            result.Add(max);\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ min = int.MaxValue;\n        foreach (long i in arr) {\n            if (i <\
    \ min) {\n                min = i;\n            }\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        long mid = (min +\
    \ max) / 2;\n        List<long> left = new List<long>();\n        List<long> right\
    \ = new List<long>();\n        long midVal = arr[mid];\n        foreach (long\
    \ i in arr) {\n            if (i < mid) {\n                left.Add(i);\n    \
    \        }\n            if (i > mid) {\n                right.Add(i);\n      \
    \      }\n        }\n        List<long> leftMax = Maximum(left, k - 1);\n    \
    \    List<long> rightMax = Maximum(right, k - 1);\n        List<long> leftMax2\
    \ = Maximum(leftMax, k - 1);\n        List<long> rightMax2 = Maximum(rightMax,\
    \ k - 1);\n        List<long> leftMax3 = Maximum(leftMax2, k - 1);\n        List<long>\
    \ rightMax3 = Maximum(rightMax2, k - 1);\n        List<long> leftMax4 = Maximum(leftMax3,\
    \ k - 1);\n        List<long> rightMax4 = Maximum(rightMax3, k - 1);\n       \
    \ List<long> leftMax5 = Maximum(leftMax4, k - 1);\n        List<long> rightMax5\
    \ = Maximum(rightMax4, k - 1);\n        List<long> leftMax6 = Maximum(leftMax5,\
    \ k - 1);\n        List<long> rightMax6 = Maximum(rightMax5, k - 1);\n       \
    \ List<long> leftMax7 = Maximum(leftMax6, k - 1);\n        List<long> rightMax7\
    \ = Maximum(rightMax6, k - 1);\n        List<long> leftMax8 = Maximum(leftMax7,\
    \ k - 1);\n        List<long> rightMax8 = Maximum(rightMax7, k - 1);\n       \
    \ List<long> leftMax9 = Maximum(leftMax8, k - 1);\n        List<long> rightMax9\
    \ = Maximum(rightMax8, k - 1);\n        List<long> leftMax10 = Maximum(leftMax9,\
    \ k - 1);\n        List<long> rightMax10 = Maximum(rightMax9, k - 1);\n      \
    \  List<long> leftMax11 = Maximum(leftMax10, k - 1);\n        List<long> rightMax11\
    \ = Maximum(rightMax10, k - 1);\n        List<long> leftMax12 = Maximum(leftMax11,\
    \ k - 1);\n        List<long> rightMax12 = Maximum(rightMax11, k - 1);\n     \
    \   List<long> leftMax13 = Maximum", "        List<long> result = new List<long>();\n\
    \        long max = arr.Max();\n        long min = arr.Min();\n        long mid\
    \ = min + (max - min) / 2;\n        long mid2 = mid / 2;\n        long mid3 =\
    \ mid / 3;\n        long mid4 = mid / 4;\n        long mid5 = mid / 5;\n     \
    \   long mid6 = mid / 6;\n        long mid7 = mid / 7;\n        long mid8 = mid\
    \ / 8;\n        long mid9 = mid / 9;\n        long mid10 = mid / 10;\n       \
    \ long mid11 = mid / 11;\n        long mid12 = mid / 12;\n        long mid13 =\
    \ mid / 13;\n        long mid14 = mid / 14;\n        long mid15 = mid / 15;\n\
    \        long mid16 = mid / 16;\n        long mid17 = mid / 17;\n        long\
    \ mid18 = mid / 18;\n        long mid19 = mid / 19;\n        long mid20 = mid\
    \ / 20;\n        long mid21 = mid / 21;\n        long mid22 = mid / 22;\n    \
    \    long mid23 = mid / 23;\n        long mid24 = mid / 24;\n        long mid25\
    \ = mid / 25;\n        long mid26 = mid / 26;\n        long mid27 = mid / 27;\n\
    \        long mid28 = mid / 28;\n        long mid29 = mid / 29;\n        long\
    \ mid30 = mid / 30;\n        long mid31 = mid / 31;\n        long mid32 = mid\
    \ / 32;\n        long mid33 = mid / 33;\n        long mid34 = mid / 34;\n    \
    \    long mid35 = mid / 35;\n        long mid36 = mid / 36;\n        long mid37\
    \ = mid / 37;\n        long mid38 = mid / 38;\n        long mid39 = mid / 39;\n\
    \        long mid40 = mid / 40;\n        long mid41 = mid / 41;\n        long\
    \ mid42 = mid / 42;\n        long mid43 = mid / 43;\n        long mid44 = mid\
    \ / 44;\n        long mid45 = mid / 45;\n        long mid46 = mid / 46;\n    \
    \    long mid47 = mid / 47;\n        long mid48 = mid / 48;\n        long mid49\
    \ = mid / 49;\n        long mid50 = mid / 50;", "        List<long> res = new\
    \ List<long>();\n        long max = 0;\n        long min = 0;\n        long maxIndex\
    \ = 0;\n        long minIndex = 0;\n        long maxValue = 0;\n        long minValue\
    \ = 0;\n        long maxIndex2 = 0;\n        long minIndex2 = 0;\n        long\
    \ maxValue2 = 0;\n        long minValue2 = 0;\n        long maxIndex3 = 0;\n \
    \       long minIndex3 = 0;\n        long maxValue3 = 0;\n        long minValue3\
    \ = 0;\n        long maxIndex4 = 0;\n        long minIndex4 = 0;\n        long\
    \ maxValue4 = 0;\n        long minValue4 = 0;\n        long maxIndex5 = 0;\n \
    \       long minIndex5 = 0;\n        long maxValue5 = 0;\n        long minValue5\
    \ = 0;\n        long maxIndex6 = 0;\n        long minIndex6 = 0;\n        long\
    \ maxValue6 = 0;\n        long minValue6 = 0;\n        long maxIndex7 = 0;\n \
    \       long minIndex7 = 0;\n        long maxValue7 = 0;\n        long minValue7\
    \ = 0;\n        long maxIndex8 = 0;\n        long minIndex8 = 0;\n        long\
    \ maxValue8 = 0;\n        long minValue8 = 0;\n        long maxIndex9 = 0;\n \
    \       long minIndex9 = 0;\n        long maxValue9 = 0;\n        long minValue9\
    \ = 0;\n        long maxIndex10 = 0;\n        long minIndex10 = 0;\n        long\
    \ maxValue10 = 0;\n        long minValue10 = 0;\n        long maxIndex11 = 0;\n\
    \        long minIndex11 = 0;\n        long maxValue11 = 0;\n        long minValue11\
    \ = 0;\n        long maxIndex12 = 0;\n        long minIndex12 = 0;\n        long\
    \ maxValue12 = 0;\n        long minValue12 = 0;\n        long maxIndex13 = 0;\n\
    \        long minIndex13 = 0;\n        long maxValue13 = 0;\n        long minValue13\
    \ = 0;\n        long maxIndex14 = 0;\n        long minIndex14 = 0;\n        long\
    \ maxValue14 = 0;\n        long minValue14 = 0;\n        long maxIndex15 = 0;\n\
    \        long minIndex15 = 0;\n        long maxValue15 = 0;\n        long minValue15\
    \ = 0;\n        long maxIndex16 = 0;\n        long minIndex16 = 0;\n        long\
    \ maxValue16 = 0;\n        long minValue16 = 0;\n        long maxIndex17 = 0;\n\
    \        long minIndex17 = 0;\n        long maxValue17 = 0;\n        long minValue17\
    \ = 0;\n        long maxIndex18 = 0;\n        long minIndex18 = 0;\n        long\
    \ maxValue18 = 0;\n        long minValue18 = 0;\n        long maxIndex19 = 0;\n\
    \        ", "        List<long> res = new List<long>();\n        long max = arr[0];\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.Count; i++) {\n \
    \           if (arr[i] > max) {\n                max = arr[i];\n             \
    \   maxIndex = i;\n            }\n        }\n        long maxCount = 0;\n    \
    \    for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n\
    \                maxCount++;\n            }\n        }\n        if (maxCount >\
    \ k) {\n            k = maxCount;\n        }\n        long maxCount2 = 0;\n  \
    \      for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n\
    \                maxCount2++;\n            }\n        }\n        if (maxCount2\
    \ > k) {\n            k = maxCount2;\n        }\n        if (k == 0) {\n     \
    \       return res;\n        }\n        List<long> temp = new List<long>();\n\
    \        long maxCount3 = 0;\n        for (int i = 0; i < arr.Count; i++) {\n\
    \            if (arr[i] == max) {\n                maxCount3++;\n            }\n\
    \        }\n        if (maxCount3 > k) {\n            k = maxCount3;\n       \
    \ }\n        if (k == 1) {\n            temp.Add(max);\n            return temp;\n\
    \        }\n        long maxCount4 = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] == max) {\n                maxCount4++;\n   \
    \         }\n        }\n        if (maxCount4 > k) {\n            k = maxCount4;\n\
    \        }\n        if (k == 2) {\n            temp.Add(max);\n            temp.Add(max);\n\
    \            return temp;\n        }\n        long maxCount5 = 0;\n        for\
    \ (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n      \
    \          maxCount5++;\n            }\n        }\n        if (maxCount5 > k)\
    \ {\n            k = maxCount5;\n        }\n        if (k == 3) {\n          \
    \  temp.Add(max);\n            temp.Add(max);\n            temp.Add(max);\n  \
    \          return temp;\n        }\n        long maxCount6 = 0;\n        for (int\
    \ i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n           \
    \     maxCount6++;\n            }\n        }\n        if (maxCount6 > k) {\n \
    \           k = maxCount6;\n        }\n        if (k == 4) {\n            temp.Add(max);\n\
    \            temp.Add(max);\n            temp.Add(max);\n            temp.Add(max);\n\
    \            return temp;\n        }\n        long maxCount7 = 0;\n        for\
    \ (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == max) {\n      \
    \          maxCount7++;\n            }\n        }\n        if (maxCount7 > k)\
    \ {\n            k = maxCount7;\n        }\n        if (k == 5) {\n          \
    \  temp.Add(max);\n            temp.Add(max);\n            temp.Add(max);\n  \
    \          ", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        long temp = 0;\n        foreach (long\
    \ i in arr) {\n            if (max < i) {\n                max = i;\n        \
    \        maxIndex = i;\n            }\n        }\n        temp = max;\n      \
    \  max = maxIndex;\n        foreach (long i in arr) {\n            if (max !=\
    \ temp) {\n                result.Add(max);\n                temp = max;\n   \
    \             max = i;\n            }\n        }\n        result.Add(max);\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long maxIndex = 0;\n        long min = 0;\n      \
    \  long minIndex = 0;\n        long sum = 0;\n        long sumIndex = 0;\n   \
    \     long sumOfSquare = 0;\n        long sumOfSquareIndex = 0;\n        long\
    \ sumOfSquareOfSquare = 0;\n        long sumOfSquareOfSquareIndex = 0;\n     \
    \   long maxOfMax = 0;\n        long maxOfMaxIndex = 0;\n        long maxOfMin\
    \ = 0;\n        long maxOfMinIndex = 0;\n        long minOfMax = 0;\n        long\
    \ minOfMaxIndex = 0;\n        long minOfMin = 0;\n        long minOfMinIndex =\
    \ 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long maxSumOfSquare\
    \ = 0;\n        long maxSumOfSquareIndex = 0;\n        long maxSumOfSquareOfSquare\
    \ = 0;\n        long maxSumOfSquareOfSquareIndex = 0;\n        long minSum = 0;\n\
    \        long minSumIndex = 0;\n        long minSumOfSquare = 0;\n        long\
    \ minSumOfSquareIndex = 0;\n        long minSumOfSquareOfSquare = 0;\n       \
    \ long minSumOfSquareOfSquareIndex = 0;\n        long maxSumOfMax = 0;\n     \
    \   long maxSumOfMaxIndex = 0;\n        long maxSumOfMin = 0;\n        long maxSumOfMinIndex\
    \ = 0;\n        long minSumOfMax = 0;\n        long minSumOfMaxIndex = 0;\n  \
    \      long minSumOfMin = 0;\n        long minSumOfMinIndex = 0;\n        long\
    \ maxSumOfMaxOfMax = 0;\n        long maxSumOfMaxOfMaxIndex = 0;\n        long\
    \ maxSumOfMaxOfMin = 0;\n        long maxSumOfMaxOfMinIndex = 0;\n        long\
    \ minSumOfMaxOfMax = 0;\n        long minSumOfMaxOfMaxIndex = 0;\n        long\
    \ minSumOfMaxOfMin = 0;\n        long minSumOfMaxOfMinIndex = 0;\n        long\
    \ maxSumOfMinOfMax = 0;\n        long maxSumOfMinOfMaxIndex = 0;\n        long\
    \ maxSumOfMinOfMin = 0;\n        long maxSumOfMinOfMinIndex = 0;\n        long\
    \ minSumOfMinOfMax = 0;\n        long minSumOfMinOfMaxIndex = 0;\n        long\
    \ minSumOfMinOfMin = 0;\n        long minSumOfMinOfMinIndex = 0;\n        long\
    \ maxSumOfMaxOfMaxOfMax = 0;\n        long maxSumOfMaxOfMaxOfMaxIndex = 0;\n \
    \       long maxSumOfMaxOfMaxOfMin = 0;\n", "        List<long> res = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        if (k == maxIndex) {\n            res.Add(maxValue);\n\
    \        }\n        else {\n            while (maxIndex < arr.Count - k) {\n \
    \               res.Add(arr[maxIndex]);\n                maxIndex++;\n       \
    \     }\n            res.Add(arr[maxIndex]);\n        }\n        return res;",
  "        List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        long maxValue = arr[0];\n        foreach (long i in arr)\
    \ {\n            if (i > maxValue) {\n                maxValue = i;\n        \
    \        maxIndex = i;\n            }\n            if (i == maxValue) {\n    \
    \            maxIndex++;\n            }\n        }\n        long temp = 0;\n \
    \       long tempIndex = 0;\n        long tempValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i == maxValue) {\n                tempIndex++;\n\
    \            }\n            if (tempIndex == k) {\n                result.Add(temp);\n\
    \                tempIndex = 0;\n                tempValue = arr[0];\n       \
    \         temp = 0;\n            }\n            if (tempIndex > k) {\n       \
    \         tempIndex = 0;\n                tempValue = arr[0];\n              \
    \  temp = 0;\n            }\n            if (tempIndex == k) {\n             \
    \   tempIndex++;\n            }\n            if (tempIndex > k) {\n          \
    \      tempIndex = 0;\n                tempValue = arr[0];\n                temp\
    \ = 0;\n            }\n            if (tempIndex == k) {\n                tempIndex++;\n\
    \            }\n            if (tempIndex > k) {\n                tempIndex =\
    \ 0;\n                tempValue = arr[0];\n                temp = 0;\n       \
    \     }\n            if (tempIndex == k) {\n                tempIndex++;\n   \
    \         }\n            if (tempIndex > k) {\n                tempIndex = 0;\n\
    \                tempValue = arr[0];\n                temp = 0;\n            }\n\
    \            if (tempIndex == k) {\n                tempIndex++;\n           \
    \ }\n            if (tempIndex > k) {\n                tempIndex = 0;\n      \
    \          tempValue = arr[0];\n                temp = 0;\n            }\n   \
    \         if (tempIndex == k) {\n                tempIndex++;\n            }\n\
    \            if (tempIndex > k) {\n                tempIndex = 0;\n          \
    \      tempValue = arr[0];\n                temp = 0;\n            }\n       \
    \     if (tempIndex == k) {\n                tempIndex++;\n            }\n   \
    \         if (tempIndex > k) {\n                tempIndex = 0;\n             \
    \   tempValue = arr[0];\n                temp = 0;\n            }\n          \
    \  if (tempIndex == k) {\n                tempIndex++;\n            }\n      \
    \      if (tempIndex > k) {\n                tempIndex = 0;\n                tempValue\
    \ = arr[0];\n                temp = 0;\n            }\n            if (tempIndex\
    \ == k) {\n                tempIndex++;\n            }\n            if (tempIndex\
    \ > k) {\n                tempIndex = 0;\n                tempValue = arr[0];\n\
    \                temp = 0;\n            }\n            if (tempIndex == k) {\n\
    \                tempIndex++;\n            }\n            if (tempIndex > k) {\n\
    \                tempIndex = 0;\n                tempValue = arr[0];\n       \
    \         temp = 0;\n            }\n            if (tempIndex == k) {\n      \
    \          tempIndex++;\n            }", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        if (k == maxIndex) {\n            result.Add(maxValue);\n\
    \        } else {\n            for (int i = maxIndex; i < arr.Count; i++) {\n\
    \                if (arr[i] > maxValue) {\n                    maxValue = arr[i];\n\
    \                    maxIndex = i;\n                }\n            }\n       \
    \     result.Add(maxValue);\n            for (int i = maxIndex + 1; i < arr.Count;\
    \ i++) {\n                if (arr[i] > maxValue) {\n                    maxValue\
    \ = arr[i];\n                    maxIndex = i;\n                }\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long temp = 0;\n        long sum = 0;\n      \
    \  long count = 0;\n        foreach (long i in arr) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        long maxSum = sum;\n        long maxCount = 0;\n        foreach\
    \ (long i in arr) {\n            temp = sum - i;\n            if (temp > maxSum)\
    \ {\n                maxSum = temp;\n                maxCount = 1;\n         \
    \   }\n            else if (temp == maxSum) {\n                maxCount++;\n \
    \           }\n        }\n        if (maxCount > k) {\n            max = maxSum;\n\
    \        }\n        long temp2 = 0;\n        foreach (long i in arr) {\n     \
    \       temp = sum - i;\n            if (temp > maxSum) {\n                maxSum\
    \ = temp;\n                maxCount = 1;\n            }\n            else if (temp\
    \ == maxSum) {\n                maxCount++;\n            }\n        }\n      \
    \  if (maxCount > k) {\n            max = maxSum;\n        }\n        long temp3\
    \ = 0;\n        foreach (long i in arr) {\n            temp = sum - i;\n     \
    \       if (temp > maxSum) {\n                maxSum = temp;\n               \
    \ maxCount = 1;\n            }\n            else if (temp == maxSum) {\n     \
    \           maxCount++;\n            }\n        }\n        if (maxCount > k) {\n\
    \            max = maxSum;\n        }\n        long temp4 = 0;\n        foreach\
    \ (long i in arr) {\n            temp = sum - i;\n            if (temp > maxSum)\
    \ {\n                maxSum = temp;\n                maxCount = 1;\n         \
    \   }\n            else if (temp == maxSum) {\n                maxCount++;\n \
    \           }\n        }\n        if (maxCount > k) {\n            max = maxSum;\n\
    \        }\n        long temp5 = 0;\n        foreach (long i in arr) {\n     \
    \       temp = sum - i;\n            if (temp > maxSum) {\n                maxSum\
    \ = temp;\n                maxCount = 1;\n            }\n            else if (temp\
    \ == maxSum) {\n                maxCount++;\n            }\n        }\n      \
    \  if (maxCount > k) {\n            max = maxSum;\n        }\n        long temp6\
    \ = 0;\n        foreach (long i in arr) {\n            temp = sum - i;\n     \
    \       if (temp > maxSum) {\n                maxSum = temp;\n               \
    \ maxCount = 1;\n            }\n            else if (temp == maxSum) {\n     \
    \           maxCount++;\n            }\n        }\n        if (maxCount > k) {\n\
    \            max = maxSum;\n        }\n        long temp7 = 0;\n        foreach\
    \ (long i in arr) {\n            temp = sum - i;\n            if (temp", "   \
    \     List<long> result = new List<long>();\n        Array.Sort(arr);\n      \
    \  long max = 0;\n        long maxIndex = 0;\n        long maxValue = 0;\n   \
    \     long sum = 0;\n        long sumIndex = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n                maxIndex = sumIndex;\n                maxValue = i;\n\
    \            }\n            sumIndex++;\n        }\n        if (k == maxIndex)\
    \ {\n            result.Add(maxValue);\n        }\n        if (k == sumIndex)\
    \ {\n            result.Add(sum);\n        }\n        if (k > maxIndex) {\n  \
    \          k = maxIndex;\n        }\n        if (k > sumIndex) {\n           \
    \ k = sumIndex;\n        }\n        for (int i = k - 1; i >= 0; i--) {\n     \
    \       sum += arr[i];\n            if (sum > max) {\n                max = sum;\n\
    \                maxIndex = i;\n                maxValue = arr[i];\n         \
    \   }\n        }\n        result.Add(maxValue);\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ temp = 0;\n        foreach (long i in arr) {\n            if (i > max) {\n \
    \               max = i;\n            }\n        }\n        long start = max;\n\
    \        long end = max;\n        long mid = 0;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid;\n            } else {\n                start = mid;\n\
    \            }\n        }\n        mid = start;\n        while (start < arr.Count)\
    \ {\n            mid = (start + end) / 2;\n            if (arr[mid] > mid) {\n\
    \                end = mid", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        max = maxValue;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] == maxValue) {\n                result.Add(arr[maxIndex]);\n\
    \            }\n        }\n        return result;", "        List<long> res =\
    \ new List<long>();\n        long max = 0;\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        long minIndex = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n\
    \        long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n \
    \       long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n  \
    \      long sum80 = 0;\n        long sum81 = 0;", "        List<long> res = new\
    \ List<long>();\n        long max = 0;\n        long maxIndex = 0;\n        long\
    \ maxValue = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n        }\n        long temp = 0;\n        long temp2\
    \ = 0;\n        foreach (long i in arr) {\n            temp = temp + i;\n    \
    \        if (temp > k) {\n                temp2 = temp;\n                temp\
    \ = temp - temp2;\n            }\n            result.Add(temp);\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        max = maxValue;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] == maxValue) {\n                result.Add(arr[maxIndex]);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long max = 0;\n        long min = arr.Min();\n\
    \        long mid = 0;\n        long sum = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > max) {\n                max\
    \ = sum;\n                mid = i;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n                mid = i;\n            }\n   \
    \     }\n        long midSum = 0;\n        long midSum2 = 0;\n        long midSum3\
    \ = 0;\n        long midSum4 = 0;\n        long midSum5 = 0;\n        long midSum6\
    \ = 0;\n        long midSum7 = 0;\n        long midSum8 = 0;\n        long midSum9\
    \ = 0;\n        long midSum10 = 0;\n        long midSum11 = 0;\n        long midSum12\
    \ = 0;\n        long midSum13 = 0;\n        long midSum14 = 0;\n        long midSum15\
    \ = 0;\n        long midSum16 = 0;\n        long midSum17 = 0;\n        long midSum18\
    \ = 0;\n        long midSum19 = 0;\n        long midSum20 = 0;\n        long midSum21\
    \ = 0;\n        long midSum22 = 0;\n        long midSum23 = 0;\n        long midSum24\
    \ = 0;\n        long midSum25 = 0;\n        long midSum26 = 0;\n        long midSum27\
    \ = 0;\n        long midSum28 = 0;\n        long midSum29 = 0;\n        long midSum30\
    \ = 0;\n        long midSum31 = 0;\n        long midSum32 = 0;\n        long midSum33\
    \ = 0;\n        long midSum34 = 0;\n        long midSum35 = 0;\n        long midSum36\
    \ = 0;\n        long midSum37 = 0;\n        long midSum38 = 0;\n        long midSum39\
    \ = 0;\n        long midSum40 = 0;\n        long midSum41 = 0;\n        long midSum42\
    \ = 0;\n        long midSum43 = 0;\n        long midSum44 = 0;\n        long midSum45\
    \ = 0;\n        long midSum46 = 0;\n        long midSum47 = 0;\n        long midSum48\
    \ = 0;\n        long midSum49 = 0;\n        long midSum50 = 0;\n        long midSum51\
    \ = 0;\n        long midSum52 = 0;\n        long midSum53 = 0;\n        long midSum54\
    \ = 0;\n        long midSum55 = 0;\n        long midSum56 = 0;\n        long midSum57\
    \ = 0;\n        long midSum58 = 0;\n        long midSum59 = 0;\n        long midSum60\
    \ = 0;\n        long midSum61 = 0;\n        long midSum62 = 0;\n        long "]
stop_tokens:
- "\n    }\n"

name: HumanEval_49_modp
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>> modp(3,\
  \ 5)\n    // 3\n    // >>> modp(1101, 101)\n    // 2\n    // >>> modp(0, 101)\n\
  \    // 1\n    // >>> modp(3, 11)\n    // 8\n    // >>> modp(100, 101)\n    // 1\n\
  \    public static long Modp(long n, long p) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Modp((3L),\
  \ (5L)) == (3L));\n    Debug.Assert(Modp((1101L), (101L)) == (2L));\n    Debug.Assert(Modp((0L),\
  \ (101L)) == (1L));\n    Debug.Assert(Modp((3L), (11L)) == (8L));\n    Debug.Assert(Modp((100L),\
  \ (101L)) == (1L));\n    Debug.Assert(Modp((30L), (5L)) == (4L));\n    Debug.Assert(Modp((31L),\
  \ (5L)) == (3L));\n    }\n\n}\n"
completions: ["        long result = 1L;\n        while (n > p) {\n            result\
    \ *= p;\n            n -= p;\n        }\n        return n % p == 0 ? result :\
    \ result * p % p;", "        long res = 1;\n        while (n > 0) {\n        \
    \    if (n % 2 == 0) {\n                res = (res * p) % p;\n            }\n\
    \            n = n / 2;\n        }\n        return res;", "        long res =\
    \ 1;\n        while (n > 0) {\n            if (n % 2 == 0) {\n               \
    \ res = (res * p) % p;\n            }\n            n /= 2;\n        }\n      \
    \  return res;", "        long ret = 1;\n        while (n != 0) {\n          \
    \  long tmp = n % p;\n            ret = ret * tmp;\n            n = n / p;\n \
    \       }\n        return ret;", "        long res = 1;\n        while (n > 0)\
    \ {\n            if (n % 2 == 1) {\n                res = (res * p) % p;\n   \
    \         }\n            n /= 2;\n        }\n        return res;", "        long\
    \ r = 1;\n        while (n > 0) {\n            r = r * p % n;\n            n =\
    \ n / 2;\n        }\n        return r;", "        long r = 1;\n        while (n\
    \ > 0) {\n            long m = n / p;\n            long t = r * m;\n         \
    \   r = t;\n            n = n % p;\n        }\n        return r;", "        long\
    \ r = 1;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ t = r * m;\n            r = t;\n            n = n % p;\n        }\n        return\
    \ r;", "        long res = 1;\n        while (n > 0) {\n            if (n % 2\
    \ == 0) {\n                res *= p;\n            }\n            n /= 2;\n   \
    \         p *= p;\n        }\n        return res;", "        long result = 1L;\n\
    \        while (n > p) {\n            result *= p;\n            n -= p;\n    \
    \    }\n        return result % p;", "        long r = 1;\n        while (n >\
    \ 0) {\n            long m = n & -p;\n            n ^= m;\n            r = (r\
    \ * m) % p;\n        }\n        return r;", "        if (n == 0) return 1;\n \
    \       if (n == 1) return p;\n        if (n == 2) return p + p;\n        if (n\
    \ % 2 == 0) return Modp(n / 2, p);\n        return Modp(n / 2, p + p) % p;", " \
    \       long r = 1;\n        while (n > 0) {\n            long m = n / p;\n  \
    \          long t = r * m;\n            r = t;\n            n = n % p;\n     \
    \   }\n        return r;", "        long r = 1;\n        while (n > 0) {\n   \
    \         if (n % 2 == 0) {\n                r = (r * p) % p;\n            }\n\
    \            n = n / 2;\n        }\n        return r;", "        long r = 1;\n\
    \        while (n > 0) {\n            long t = r * n % p;\n            r = t;\n\
    \            n = n / p;\n        }\n        return r;", "        long r = 1;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        if (n == 0)\n            return 1;\n\
    \        if (n == 1)\n            return p;\n        if (n == 2)\n           \
    \ return p % 3;\n        if (n % 2 == 0)\n            return Modp(n / 2, p);\n\
    \        else\n            return Modp((n - 1) / 2, p * p) % p;", "        long\
    \ r = 1;\n        while (n != 0) {\n            if (n % 2 == 1) {\n          \
    \      r = (r * p) % p;\n            }\n            n = n / 2;\n        }\n  \
    \      return r;", "        long result = 1;\n        while (n > 0) {\n      \
    \      result *= p;\n            result %= p;\n            n -= 1;\n        }\n\
    \        return result;", "        long r = 1;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;", "        long r =\
    \ 1;\n        while (n > 0) {\n            long t = r * n % p;\n            r\
    \ = t;\n            n = n / p;\n        }\n        return r;", "        long ret\
    \ = 1;\n        while (n > 0) {\n            long tmp = ret % p;\n           \
    \ if (tmp == 0)\n                return ret;\n            ret = tmp;\n       \
    \     n /= 2;\n        }\n        return ret;", "        if (n == 0)\n       \
    \     return 1;\n        if (n == 1)\n            return p;\n        if (n ==\
    \ 2)\n            return p + p;\n        if (n % 2 == 0)\n            return Modp(n\
    \ / 2, p);\n        else\n            return Modp(n / 2, p + p) % p;", "     \
    \   long r = 1;\n        while (n > 0) {\n            long m = n / p;\n      \
    \      long t = r * m;\n            r = t;\n            n = n - m;\n        }\n\
    \        return r;", "        if (n == 0 || p == 0)\n            return 0;\n \
    \       if (n == 1)\n            return p;\n        if (p == 1)\n            return\
    \ n;\n        long r = 1;\n        while (n != 0) {\n            long t = n %\
    \ p;\n            n = n;\n            r = r * p;\n            r = r + t;\n   \
    \     }\n        return r;", "        long result = 1L;\n        while (n > 0)\
    \ {\n            if (n % 2 == 0) {\n                result = result * p;\n   \
    \         }\n            n = n / 2;\n            p = p * p;\n        }\n     \
    \   return result;", "        long r = 1;\n        while (n-- > 0) {\n       \
    \     r = (r * p) % p;\n        }\n        return r;", "        if (n == 0) {\n\
    \            return 1;\n        }\n        if (n == 1) {\n            return p;\n\
    \        }\n        if (n % 2 == 0) {\n            return Modp(n/2, p);\n    \
    \    }\n        return Modp((n-1)/2, p*p) % p;", "        if (n == 0 || p == 0)\n\
    \            return 0;\n        if (n == 1)\n            return p;\n        if\
    \ (p == 1)\n            return n;\n        if (p > n)\n            throw new ArgumentException(\"\
    p must be less than n\");\n        long q = n / p;\n        long r = n % p;\n\
    \        if (q == 0)\n            return Modp(r, p);\n        if (q == 1)\n  \
    \          return Modp(r, q);\n        long a = Modp(q, p);\n        long b =\
    \ Modp(r, p);\n        return a % p + b;", "        if (n < 0)\n            throw\
    \ new ArgumentOutOfRangeException(\"n\");\n        if (p < 1)\n            throw\
    \ new ArgumentOutOfRangeException(\"p\");\n        if (p > n)\n            throw\
    \ new ArgumentOutOfRangeException(\"p\");\n        if (n == 0)\n            return\
    \ 1;\n        if (n == 1)\n            return p;\n        long res = 1;\n    \
    \    while (n > 1) {\n            if (n % 2 == 1)\n                res = (res\
    \ * p) % p;\n            n = n / 2;\n        }\n        return res;", "      \
    \  long result = 1;\n        while (n > 0) {\n            long r = n % p;\n  \
    \          n = n / p;\n            result = result * r;\n        }\n        return\
    \ result;", "        if (n == 0)\n            return 1;\n        if (n == 1)\n\
    \            return p;\n        if (n % 2 == 0)\n            return Modp(n / 2,\
    \ p);\n        else\n            return Modp(n / 2, p * p) % p;", "        long\
    \ r = 1;\n        while (n-- > 0) {\n            r = (r * p) % p;\n        }\n\
    \        return r;", "        long r = 1;\n        long m = 1;\n        while\
    \ (n > 0) {\n            if (n % 2 == 0) {\n                r = (r * m) % p;\n\
    \            }\n            m = (m * m) % p;\n            n = n / 2;\n       \
    \ }\n        return r;", "        long r = 1;\n        long q = 1;\n        while\
    \ (n > 0) {\n            long t = q * p;\n            long m = n % p;\n      \
    \      long r = r * t + m;\n            q = q * p;\n            n = n / p;\n \
    \       }\n        return r;", "        long res = 1;\n        while (n > p) {\n\
    \            n -= p;\n            res *= p;\n        }\n        return n % p;",
  "        long r = 1;\n        while (n > 0) {\n            long m = n / p;\n   \
    \         long t = r * m;\n            r = t;\n            n = n % p;\n      \
    \  }\n        return r;", "        if (n == 0)\n            return 1;\n      \
    \  if (n == 1)\n            return p;\n        if (n == 2)\n            return\
    \ p % 3;\n        if (n % 2 == 0)\n            return Modp(n / 2, p);\n      \
    \  else\n            return Modp(n / 2, p * p) % p;", "        long r = 1;\n \
    \       while (n > 0) {\n            long t = n & -p;\n            n ^= t;\n \
    \           r = (r * t) % p;\n        }\n        return r;", "        long r =\
    \ 1;\n        while (n-- > 0) {\n            r = (r * p) % p;\n        }\n   \
    \     return r;", "        long r = 1;\n        while (n > 0) {\n            if\
    \ (n % 2 == 1) r *= p;\n            n /= 2;\n            p *= p;\n        }\n\
    \        return r;", "        long r = 1;\n        while (n > p) {\n         \
    \   n -= p;\n            r *= p;\n        }\n        return n % p;", "       \
    \ if (n == 0)\n            return 1;\n        if (n == 1)\n            return\
    \ p;\n        if (n % 2 == 0)\n            return Modp(n / 2, p);\n        else\n\
    \            return Modp(n / 2, p * p) % p;", "        if (n == 0)\n         \
    \   return 1;\n        if (n == 1)\n            return p;\n        if (n == p)\n\
    \            return n;\n        long r = 1;\n        while (n != 0) {\n      \
    \      long t = n / p;\n            long m = n % p;\n            n = t;\n    \
    \        r = r * p + m;\n        }\n        return r;", "        long r = 1;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        long ret = 1;\n        long m = 1;\n\
    \        while (n > 0) {\n            long r = n % p;\n            ret = ret *\
    \ m % p;\n            m = m;\n            n = r;\n        }\n        return ret;",
  "        long res = 1;\n        while (n > p) {\n            n -= p;\n         \
    \   res *= p;\n        }\n        return res * n % p;", "        long r = 1;\n\
    \        long m = 1;\n        long t = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long m = 1;\n        long t = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long m = 1;\n        long t = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long m = 1;\n        long t = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long m = 1;\n        long t\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long m = 1;\n      \
    \  long t = 1;\n        long q = 1;\n        long r = 1;\n        long m = 1;\n\
    \        long t = 1;\n        long q = 1;\n        long r = 1;\n        long m\
    \ = 1;\n        long t = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long m = 1;\n        long t = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long m = 1;\n        long t = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long m = 1;\n        long t = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long m = 1;\n        long t = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long m = 1;\n        long t = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long m = 1;\n        long t\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long m = 1;\n      \
    \  long t = 1;\n        long q = 1;\n        long r = 1;\n        long m = 1;\n\
    \        long t = 1;\n        long q = 1;\n        long r = 1;\n        long m\
    \ = 1;\n        long t = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long m = 1;\n        long t = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long m = 1;\n        long t = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long m = 1;\n        long t = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long m = 1;\n        long ", "        long r = 1;\n\
    \        while (n > 0) {\n            long m = n / p;\n            long t = r\
    \ * m;\n            r = t;\n            n = n % p;\n        }\n        return\
    \ r;", "        long r = 1;\n        while (n > 0) {\n            r = r * p %\
    \ n;\n            n = n / 2;\n        }\n        return r;", "        long r =\
    \ 1;\n        while (r < p) {\n            r *= 2;\n        }\n        return\
    \ n % r;", "        long r = 1;\n        while (n > 0) {\n            long t =\
    \ n % p;\n            n /= p;\n            r = r * t % p;\n        }\n       \
    \ return r;", "        long r = 1;\n        while (n > 0) {\n            long\
    \ m = n / p;\n            long t = r * m;\n            r = t;\n            n =\
    \ n % p;\n        }\n        return r;", "        long r = 1;\n        long t\
    \ = 1;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ r = r * m % p;\n            t = t * m % p;\n            n = n - m;\n       \
    \ }\n        return r;", "        long r = 1;\n        while (n > 0) {\n     \
    \       long t = n % p;\n            n = n / p;\n            r = r * t + p;\n\
    \        }\n        return r;", "        if (n == 0)\n            return 1;\n\
    \        if (n == 1)\n            return p;\n        if (n % 2 == 0)\n       \
    \     return Modp(n / 2, p);\n        else\n            return Modp(n / 2, p *\
    \ p) % p;", "        if (n == 0) {\n            return 1;\n        }\n       \
    \ if (n == 1) {\n            return p;\n        }\n        if (n % 2 == 0) {\n\
    \            return Modp(n / 2, p);\n        }\n        return Modp((n - 1) /\
    \ 2, p) * p;", "        long r = 1;\n        while (n > 0) {\n            long\
    \ t = n % p;\n            n = n / p;\n            r = r * t + p;\n        }\n\
    \        return r;", "        long ret = 1;\n        while (n != 0) {\n      \
    \      if (n % 2 == 1) ret *= p;\n            n /= 2;\n            p *= p;\n \
    \       }\n        return ret;", "        long r = 1;\n        while (n > 0) {\n\
    \            r = r * p % n;\n            n = n / 2;\n        }\n        return\
    \ r;", "        long ret = 1;\n        while (n != 0) {\n            long tmp\
    \ = n % p;\n            ret = ret * tmp;\n            n = n / p;\n        }\n\
    \        return ret;", "        long res = 1;\n        while (n > 1) {\n     \
    \       if (n % 2 == 0) {\n                res = (res * p) % p;\n            }\n\
    \            n /= 2;\n        }\n        return res;", "        if (n == 0) return\
    \ 1;\n        if (n == 1) return p;\n        if (n == 2) return p + p;\n     \
    \   if (n % 2 == 0) return Modp(n / 2, p);\n        return Modp(n / 2, p + p)\
    \ % p;", "        long r = 1;\n        while (n > 0) {\n            long m = n\
    \ / p;\n            long t = r * m;\n            r = t;\n            n = n - m;\n\
    \        }\n        return r;", "        if (n == 0 || p == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return p;\n        if (p == 1)\n      \
    \      return n;\n        if (p % 2 == 0)\n            return Modp(n / 2, p);\n\
    \        else\n            return Modp(n / 2, p + p) % p;", "        if (n < 0)\n\
    \            throw new ArgumentOutOfRangeException(\"n\");\n        if (p < 2)\n\
    \            throw new ArgumentOutOfRangeException(\"p\");\n        if (p == 2)\n\
    \            return n;\n        if (p == 3)\n            return n % 2;\n     \
    \   if (p == 4)\n            return n % 3;\n        if (p == 5)\n            return\
    \ n % 4;\n        if (p == 6)\n            return n % 5;\n        if (p == 7)\n\
    \            return n % 6;\n        if (p == 8)\n            return n % 7;\n \
    \       if (p == 9)\n            return n % 8;\n        if (p == 10)\n       \
    \     return n % 9;\n        if (p == 11)\n            return n % 10;\n      \
    \  if (p == 12)\n            return n % 11;\n        if (p == 13)\n          \
    \  return n % 12;\n        if (p == 14)\n            return n % 13;\n        if\
    \ (p == 15)\n            return n % 14;\n        if (p == 16)\n            return\
    \ n % 15;\n        if (p == 17)\n            return n % 16;\n        if (p ==\
    \ 18)\n            return n % 17;\n        if (p == 19)\n            return n\
    \ % 18;\n        if (p == 20)\n            return n % 19;\n        if (p == 21)\n\
    \            return n % 20;\n        if (p == 22)\n            return n % 21;\n\
    \        if (p == 23)\n            return n % 22;\n        if (p == 24)\n    \
    \        return n % 23;\n        if (p == 25)\n            return n % 24;\n  \
    \      if (p == 26)\n            return n % 25;\n        if (p == 27)\n      \
    \      return n % 26;\n        if (p == 28)\n            return n % 27;\n    \
    \    if (p == 29)\n            return n % 28;\n        if (p == 30)\n        \
    \    return n % 29;\n        if (p == 31)\n            return n % 30;\n      \
    \  if (p == 32)\n            return n % 31;\n        if (p == 33)\n          \
    \  return n % 32;\n        if (p == 34)\n            return n % 33;\n        if\
    \ (p == 35)\n            return n % 34;\n        if (p == 36)\n            return\
    \ n % 35;\n        if (p == 37)\n            return n % 36;\n        if (p ==\
    \ 38)\n            return n % 37;\n        if (p == 39)\n            return n\
    \ % 38;\n        if (p == 40)\n            return n % 39;\n        if (p == 41)\n\
    \            return n % 40;\n        if (p == 42)\n            return n % 41;\n\
    \        if (p == 43)\n            return n % 42;\n        if (p == 44)\n    \
    \        return n % 43;\n        if (p == 45)\n            return n % 44;\n  \
    \      if (p == 46)\n            return n % 45;\n        if (p == 47)\n      \
    \      return n % 46;\n        if (p == 48)\n            return n % 47;\n    \
    \    if (p == 49)\n            return n % 48;\n        if (p == 50)\n        \
    \    return n % 49", "        long r = 1;\n        long m = 1;\n        while\
    \ (n > 0) {\n            long t = n / p;\n            long u = (long)Math.Pow(2,\
    \ t);\n            if (u > m) {\n                m = u;\n            }\n     \
    \       r = (r * u) % p;\n            n = t;\n        }\n        return r;", " \
    \       long r = 1;\n        while (n > 0) {\n            long m = n / p;\n  \
    \          long t = r * m;\n            r = t;\n            n = n % p;\n     \
    \   }\n        return r;", "        long res = 1;\n        while (n > 0) {\n \
    \           if (n % 2 == 0) {\n                res = (res * p) % p;\n        \
    \    }\n            n /= 2;\n        }\n        return res;", "        long r\
    \ = 1;\n        while (n-- > 0) {\n            r = (r * p) % p;\n        }\n \
    \       return r;", "        long r = 1;\n        while (n > 0) {\n          \
    \  r = r * p % n;\n            n = n / 2;\n        }\n        return r;", "  \
    \      long r = 1;\n        long q = 1;\n        while (n > 0) {\n           \
    \ long t = q * p;\n            long m = n % p;\n            long a = t % p;\n\
    \            long b = t / p;\n            long c = m / p;\n            long d\
    \ = m % p;\n            q = (r * a + b) % p;\n            r = (r * c + d) % p;\n\
    \            n = n / p;\n        }\n        return r;", "        if (n == 0)\n\
    \            return 1;\n        if (n == 1)\n            return p;\n        if\
    \ (n == 2)\n            return p;\n        if (n % 2 == 0)\n            return\
    \ Modp(n / 2, p);\n        else\n            return Modp(n / 2, p * p) % p;",
  "        if (n == 0)\n            return 1;\n        if (n == 1)\n            return\
    \ p;\n        if (n == p)\n            return n;\n        if (n < p)\n       \
    \     return Modp(n, p - 1);\n        if (n == p)\n            return n;\n   \
    \     if (n < p)\n            return Modp(n, p - 1);\n        return Modp(n, p\
    \ - 1);", "        if (n == 0) {\n            return 1;\n        }\n        if\
    \ (n == 1) {\n            return p;\n        }\n        long r = n % p;\n    \
    \    if (r == 0) {\n            return Modp(n, p - 1);\n        }\n        return\
    \ Modp(r, p);", "        long r = 1;\n        while (r < p) {\n            r *=\
    \ 2;\n        }\n        return n % r;", "        if (n < 0)\n            throw\
    \ new ArgumentOutOfRangeException(\"n\");\n        if (p < 2)\n            throw\
    \ new ArgumentOutOfRangeException(\"p\");\n        if (p % 2 == 0)\n         \
    \   throw new ArgumentException(\"p must be even\");\n        if (n == 0)\n  \
    \          return 1;\n        if (n == 1)\n            return p;\n        if (n\
    \ == 2)\n            return p % 2 == 0 ? p : p - 1;\n        if (n % 2 == 1)\n\
    \            throw new ArgumentException(\"n must be odd\");\n        long res\
    \ = 1;\n        long q = p / 2;\n        while (n > 1) {\n            if (n %\
    \ 2 == 0)\n                res = (res * q) % p;\n            n = n / 2;\n    \
    \        q = (q * q) % p;\n        }\n        return res;", "        if (n ==\
    \ 0)\n            return 1;\n        if (n == 1)\n            return p;\n    \
    \    if (n == p)\n            return n;\n        if (n % 2 == 0)\n           \
    \ return Modp(n / 2, p);\n        else\n            return Modp(n / 2, p * p)\
    \ % p;", "        long r = 1;\n        while (n-- > 0) {\n            r = (r *\
    \ p) % p;\n        }\n        return r;", "        if (n == 0) return 1;\n   \
    \     if (n == 1) return p;\n        if (n == 2) return p * p;\n        if (n\
    \ % 2 == 0) return Modp(n / 2, p);\n        return Modp(n / 2, p * p) % p;", " \
    \       long res = 1;\n        while (n > 0) {\n            res = (res * n) %\
    \ p;\n            n--;\n        }\n        return res;", "        if (n == 0)\n\
    \            return 1;\n        if (n == 1)\n            return p;\n        if\
    \ (n == p)\n            return n;\n        if (n % 2 == 0)\n            return\
    \ Modp(n / 2, p);\n        else\n            return Modp(n / 2, p) * Modp((n -\
    \ 1) / 2, p);", "        long r = 1;\n        while (n > 0) {\n            r =\
    \ r * p % n;\n            n = n / 2;\n        }\n        return r;", "       \
    \ long r = 1;\n        while (n > 0) {\n            long t = r * n % p;\n    \
    \        r = t;\n            n = n / p;\n        }\n        return r;", "    \
    \    long r = 1;\n        while (n > 0) {\n            long t = n & -p;\n    \
    \        n = t;\n            r = (r * t) % p;\n        }\n        return r;",
  "        if (n == 0)\n            return 1;\n        if (n == 1)\n            return\
    \ p;\n        if (n == p)\n            return n;\n        if (n % 2 == 0)\n  \
    \          return Modp(n / 2, p);\n        else\n            return Modp(n / 2,\
    \ p * p) % p;", "        long res = 1;\n        while (n > p) {\n            n\
    \ -= p;\n            res *= p;\n        }\n        return n % p;", "        long\
    \ result = 1;\n        long x = n;\n        while (x > 0) {\n            result\
    \ *= x;\n            x -= result % p;\n        }\n        return result;", " \
    \       long result = 1;\n        while (n > 0) {\n            result *= p;\n\
    \            result %= p;\n            n /= 2;\n        }\n        return result;",
  "        long result = 1;\n        while (n > p) {\n            result *= p;\n \
    \           n -= p;\n        }\n        return n % p ? result : result * p;",
  "        long r = 1;\n        while (n > 0) {\n            long t = r * n % p;\n\
    \            r = t;\n            n = n / p;\n        }\n        return r;", " \
    \       if (n == 0)\n            return 1;\n        if (n == 1)\n            return\
    \ p;\n        if (n % 2 == 0)\n            return Modp(n / 2, p);\n        else\n\
    \            return Modp(n / 2, p * p) % p;", "        long ret = 1;\n       \
    \ while (n > 0) {\n            long tmp = ret % p;\n            ret = ret * p\
    \ + (n - tmp) / p;\n            n = tmp;\n        }\n        return ret;", " \
    \       long ret = 1;\n        while (n > 0) {\n            long tmp = ret % p;\n\
    \            if (tmp != 0) {\n                ret *= 2;\n                ret %=\
    \ p;\n            }\n            ret %= p;\n            n >>= 1;\n        }\n\
    \        return ret;", "        long r = 1;\n        while (n > 0) {\n       \
    \     long m = n % p;\n            n /= p;\n            r = (r * m) % p;\n   \
    \     }\n        return r;", "        long r = 1;\n        while (n > 0) {\n \
    \           long t = n % p;\n            n = n / p;\n            r = r * t + 1;\n\
    \        }\n        return r;", "        long res = 1;\n        while (n > 0)\
    \ {\n            if (n % 2 == 1) {\n                res *= p;\n            }\n\
    \            n /= 2;\n            p *= p;\n        }\n        return res;", " \
    \       long r = 1;\n        while (n > 0) {\n            r = r * p % n;\n   \
    \         n = n / 2;\n        }\n        return r;", "        long r = 1;\n  \
    \      long m = 1;\n        while (n > 0) {\n            long t = n % p;\n   \
    \         n /= p;\n            r = r * t + m;\n            m = m;\n        }\n\
    \        return r;", "        long result = 1L;\n        while (n > 1L) {\n  \
    \          result *= p;\n            result %= p;\n            n /= 2L;\n    \
    \    }\n        return result;", "        long result = 1;\n        while (n >\
    \ 1) {\n            result *= p;\n            result %= p;\n            n /= 2;\n\
    \        }\n        return result;", "        long r = 1;\n        while (n >\
    \ 0) {\n            r = r * p % n;\n            n = n / 2;\n        }\n      \
    \  return r;", "        if (n == 0 || p == 0)\n            return 1;\n       \
    \ if (n == 1)\n            return p;\n        if (p == 1)\n            return\
    \ n;\n        if (n == p)\n            return Modp(n - 1, p) % p;\n        if\
    \ (n % p == 0)\n            return Modp(n / p, p);\n        return Modp(n / p,\
    \ p) % p;", "        if (n == 0)\n            return 1;\n        if (n == 1)\n\
    \            return p;\n        if (n % 2 == 0)\n            return Modp(n / 2,\
    \ p);\n        else\n            return Modp(n / 2, p * p) % p;", "        if\
    \ (n == 0) return 1;\n        if (n == 1) return p;\n        if (n == 2) return\
    \ p + p;\n        if (n % 2 == 0) return Modp(n / 2, p);\n        return Modp(n\
    \ / 2, p + p) % p;", "        long r = 1;\n        while (n > 0) {\n         \
    \   long t = r * n % p;\n            r = t;\n            n /= p;\n        }\n\
    \        return r;", "        long r = 1;\n        while (n > 0) {\n         \
    \   long m = n / p;\n            long t = r * m;\n            r = t;\n       \
    \     n = n % p;\n        }\n        return r;", "        long res = 1;\n    \
    \    while (n > p) {\n            n -= p;\n            res = (res * p) % p;\n\
    \        }\n        return res;", "        long r = 1;\n        while (r < n)\
    \ {\n            r *= p;\n        }\n        return r;", "        long r = 1;\n\
    \        while (n > p) {\n            n -= p;\n            r *= p;\n        }\n\
    \        return r;", "        long res = 1;\n        while (n > 1) {\n       \
    \     if (n % 2 == 0) {\n                res = (res * p) % p;\n            }\n\
    \            n /= 2;\n        }\n        return res;", "        long ret = 1;\n\
    \        while (n > 0) {\n            long tmp = n % p;\n            ret = ret\
    \ * tmp;\n            n = n / p;\n        }\n        return ret;", "        long\
    \ result = 1;\n        while (n > 0) {\n            result *= p;\n           \
    \ result %= p;\n            n /= 2;\n        }\n        return result;", "   \
    \     if (n == 0 || p == 0)\n            return 1;\n        if (n == 1)\n    \
    \        return p;\n        if (p == 1)\n            return n;\n        if (p\
    \ % 2 == 0)\n            return Modp(n / 2, p);\n        else\n            return\
    \ Modp(n / 2, p + p) % p;", "        long r = 1;\n        long m = 1;\n      \
    \  while (n > 0) {\n            long t = n % p;\n            n = n / p;\n    \
    \        r = r * m % p;\n            m = t;\n        }\n        return r;", " \
    \       if (n == 0)\n            return 1;\n        if (n == 1)\n            return\
    \ p;\n        if (n % 2 == 0)\n            return Modp(n / 2, p);\n        else\n\
    \            return Modp(n / 2, p * p) % p;", "        long res = 1;\n       \
    \ while (n > 1) {\n            if (n % 2 == 0) {\n                res = (res *\
    \ p) % p;\n            }\n            n = n / 2;\n        }\n        return res;",
  "        long result = 1;\n        while (n > p) {\n            result *= p;\n \
    \           n -= p;\n        }\n        return result % p;", "        long ret\
    \ = 1;\n        while (n != 0) {\n            long tmp = n % p;\n            ret\
    \ = ret * tmp;\n            n = n / p;\n        }\n        return ret;", "   \
    \     long r = 1;\n        while (n > 0) {\n            long t = n & -p;\n   \
    \         n ^= t;\n            r = r * t % p;\n        }\n        return r;",
  "        long ret = 1;\n        while (n > 0) {\n            long tmp = ret % p;\n\
    \            ret *= 2;\n            if (tmp > p) {\n                ret += p -\
    \ tmp;\n            }\n            n >>= 1;\n        }\n        return ret;",
  "        long r = 1;\n        long t = 1;\n        long m = 1;\n        while (n\
    \ > 1) {\n            long a = n % p;\n            long b = n / p;\n         \
    \   long c = a * b;\n            long d = b * t;\n            long e = c * t;\n\
    \            long f = d * t;\n            long g = e * t;\n            long h\
    \ = f * t;\n            long i = g * t;\n            long j = h * t;\n       \
    \     long k = i * t;\n            long l = j * t;\n            long m = m * t;\n\
    \            r = r + c;\n            t = t;\n            n = m;\n            m\
    \ = a;\n        }\n        return r;", "        long r = 1;\n        while (n\
    \ > 0) {\n            long t = r * n % p;\n            r = t;\n            n /=\
    \ p;\n        }\n        return r;", "        long r = 1;\n        long m = 1;\n\
    \        while (n > 1) {\n            long t = m;\n            m = r * n % p;\n\
    \            r = t;\n            n /= p;\n        }\n        return r;", "   \
    \     long r = 1;\n        long m = 1;\n        while (n > 0) {\n            long\
    \ t = n % p;\n            n = n / p;\n            r = r * m % p;\n           \
    \ m = t;\n        }\n        return r;", "        long r = 1;\n        while (n\
    \ > 0) {\n            if (n % 2 == 1) {\n                r = (r * p) % p;\n  \
    \          }\n            n = n / 2;\n        }\n        return r;", "       \
    \ long ret = 1;\n        while (n > 0) {\n            long tmp = ret % p;\n  \
    \          if (tmp == 0)\n                ret /= p;\n            else\n      \
    \          ret *= p;\n            n -= 1;\n        }\n        return ret;", " \
    \       long res = 1;\n        while (n > 1) {\n            if (n % 2 == 0) {\n\
    \                res = (res * p) % p;\n            }\n            n = n / 2;\n\
    \        }\n        return res;", "        if (n == 0) {\n            return 1;\n\
    \        }\n        if (n == 1) {\n            return p;\n        }\n        if\
    \ (n % 2 == 0) {\n            return Modp(n / 2, p);\n        }\n        return\
    \ Modp(n / 2, p * p) % p;", "        long r = 1;\n        while (n > 0) {\n  \
    \          long m = n / p;\n            long t = r * m;\n            r = t;\n\
    \            n = n % p;\n        }\n        return r;", "        if (n == 0)\n\
    \            return 1;\n        if (n == 1)\n            return p;\n        if\
    \ (n == 2)\n            return p % 3;\n        if (n % 2 == 0)\n            return\
    \ Modp(n / 2, p);\n        else\n            return Modp(n / 2, p * p) % p;",
  "        long result = 1;\n        while (n > 0) {\n            long r = n % p;\n\
    \            n = n / p;\n            result = r * result + result;\n        }\n\
    \        return result;", "        long res = 1;\n        while (n > 1) {\n  \
    \          if (n % 2 == 0) {\n                res = (res * p) % p;\n         \
    \   }\n            n = n / 2;\n        }\n        return res;", "        long\
    \ ret = 1;\n        long m = 1;\n        while (n > 0) {\n            long r =\
    \ n % p;\n            n = n / p;\n            ret = ret * r + m;\n           \
    \ m = -m;\n        }\n        return ret;", "        if (n == 0)\n           \
    \ return 1;\n        if (n == 1)\n            return p;\n        if (n == 2)\n\
    \            return p % 3;\n        if (n % 2 == 0)\n            return Modp(n\
    \ / 2, p);\n        else\n            return Modp(n / 2, p * p) % p;", "     \
    \   long r = 1;\n        while (n > 0) {\n            long t = n % p;\n      \
    \      n = n / p;\n            r = r * t + p;\n        }\n        return r;",
  "        long r = 1;\n        while (n > 0) {\n            long m = n / p;\n   \
    \         long t = r * m;\n            r = t;\n            n = n - m;\n      \
    \  }\n        return r;", "        if (n == 0 || p == 0)\n            return 1;\n\
    \        if (p > n)\n            throw new ArgumentException(\"p must be <= n\"\
    );\n        if (p < 2)\n            return 1;\n        if (n == 1)\n         \
    \   return p;\n        if (n == 2)\n            return p % 2 == 0 ? p : (p + 1)\
    \ % (p - 1);\n        if (n == 3)\n            return p % 3 == 0 ? p : (p + 1)\
    \ % (p - 1);\n        if (n % 2 == 0) {\n            long q = Modp(n / 2, p);\n\
    \            return q * q % p;\n        }\n        if (n % 3 == 0) {\n       \
    \     long q = Modp(n / 3, p);\n            return q * q * q % p;\n        }\n\
    \        long q = Modp(n / 2, p);\n        long r = Modp(n % 2, p);\n        return\
    \ q * r * q % p;", "        long res = 1;\n        while (n > 0) {\n         \
    \   if (n % 2 == 0) {\n                res = (res * p) % p;\n            }\n \
    \           n = n / 2;\n        }\n        return res;", "        if (n == 0)\n\
    \            return 1;\n        if (n == 1)\n            return p;\n        if\
    \ (n == 2)\n            return p % 3;\n        if (n % 2 == 0)\n            return\
    \ Modp(n / 2, p);\n        else\n            return Modp(n / 2, p * p) % p;",
  "        if (n == 0 || p == 0) {\n            return 1;\n        }\n        long\
    \ q = p / n;\n        long r = p % n;\n        if (q == r) {\n            return\
    \ n;\n        }\n        long t = Modp(q, p);\n        return t * n + (q * t);",
  "        long result = 1;\n        while (n > 0) {\n            result *= p;\n \
    \           result %= p;\n            n /= 2;\n        }\n        return result;",
  "        long ret = 1;\n        while (n != 0) {\n            long tmp = n % p;\n\
    \            ret = ret * tmp;\n            n = n / p;\n        }\n        return\
    \ ret;", "        long r = 1;\n        long q = 1;\n        while (n > 0) {\n\
    \            long t = n / p;\n            long u = (long)((n - t) * p);\n    \
    \        long v = (long)((r * p + u) % p);\n            r = v;\n            n\
    \ = t;\n            q = (q * p + v) % p;\n        }\n        return r;", "   \
    \     long res = 1;\n        while (n > 0) {\n            res = (res * n) % p;\n\
    \            n--;\n        }\n        return res;", "        long r = 1;\n   \
    \     while (n > p) {\n            long t = r * n;\n            r = n % p;\n \
    \           n = t;\n        }\n        return r;", "        long result = 1;\n\
    \        while (n > 0) {\n            result *= p;\n            result %= p;\n\
    \            n /= 2;\n        }\n        return result;", "        long result\
    \ = 1;\n        while (n > 1) {\n            result *= p;\n            result\
    \ %= p;\n            n /= 2;\n        }\n        return result;", "        long\
    \ r = 1;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ t = r * m;\n            r = t;\n            n = n - m;\n        }\n        return\
    \ r;", "        long r = 1;\n        while (n > 0) {\n            r = r * p %\
    \ n;\n            n = n / 2;\n        }\n        return r;", "        if (n ==\
    \ 0)\n            return 1;\n        if (n == 1)\n            return p;\n    \
    \    if (n % 2 == 0)\n            return Modp(n / 2, p);\n        else\n     \
    \       return Modp(n / 2, p * p) % p;", "        long result = 1;\n        while\
    \ (n > 0) {\n            if (n % 2 == 1) {\n                result *= p;\n   \
    \         }\n            n /= 2;\n            p *= p;\n        }\n        return\
    \ result;", "        long r = 1;\n        while (n-- > 0) {\n            r = (r\
    \ * p) % p;\n        }\n        return r;", "        long r = 1;\n        while\
    \ (n > 0) {\n            long m = n / p;\n            long t = r * m;\n      \
    \      r = t;\n            n = n % p;\n        }\n        return r;", "      \
    \  long result = 1;\n        while (n > p) {\n            result *= p;\n     \
    \       n -= p;\n        }\n        return n % p ? result : 1;", "        long\
    \ r = 1;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ t = r * m;\n            r = t;\n            n = n % p;\n        }\n        return\
    \ r;", "        long r = 1;\n        while (n > 0) {\n            r = r * p %\
    \ n;\n            n = n / 2;\n        }\n        return r;", "        long r =\
    \ 1;\n        while (n > 0) {\n            r = r * p % n;\n            n = n /\
    \ 2;\n        }\n        return r;", "        long r = 1;\n        while (n >\
    \ 1) {\n            r = r * n % p;\n            n = n / p;\n        }\n      \
    \  return r;", "        if (n == 0)\n            return 1;\n        if (n == 1)\n\
    \            return p;\n        if (n == 2)\n            return p % 3;\n     \
    \   if (n % 2 == 0)\n            return Modp(n / 2, p) % p;\n        else\n  \
    \          return Modp(n / 2, p) * Modp((n - 1) / 2, p) % p;", "        long result\
    \ = 1;\n        while (n > 0) {\n            result *= p;\n            result\
    \ %= p;\n            n /= 2;\n        }\n        return result;", "        long\
    \ r = 1;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ t = r * m;\n            r = t;\n            n = n - m;\n        }\n        return\
    \ r;", "        if (n == 0) return 1;\n        if (n == 1) return p;\n       \
    \ if (n == 2) return p * p;\n        if (n % 2 == 0) return Modp(n / 2, p);\n\
    \        return Modp(n / 2, p * p) % p;", "        long result = 1;\n        while\
    \ (n > 0) {\n            result *= p;\n            result %= p;\n            n\
    \ /= 2;\n        }\n        return result;", "        long r = 1;\n        while\
    \ (n > 1) {\n            long m = n / p;\n            long t = r * m;\n      \
    \      r = t;\n            n = m;\n        }\n        return r;", "        long\
    \ res = 1;\n        long q = n / p;\n        long r = n % p;\n        while (true)\
    \ {\n            if (q == 0)\n                return res;\n            long t\
    \ = q * q;\n            if (r == 0)\n                return res + t;\n       \
    \     res = res + t % p;\n            q = q * q;\n            r = r * r;\n   \
    \     }", "        long r = 1;\n        while (n > 0) {\n            long m =\
    \ n / p;\n            long t = r * m;\n            r = t;\n            n = n %\
    \ p;\n        }\n        return r;", "        long result = 1;\n        while\
    \ (n > 0) {\n            result *= p;\n            result %= p;\n            n\
    \ /= 2;\n        }\n        return result;", "        long ret = 1;\n        while\
    \ (n > 0) {\n            long r = n % p;\n            ret = ret * r + p;\n   \
    \         n = n / p;\n        }\n        return ret;", "        long res = 1;\n\
    \        while (n > p) {\n            res *= p;\n            n -= p;\n       \
    \ }\n        return res * n % p;", "        if (n == 0 || p == 0)\n          \
    \  return 1;\n        if (n == 1)\n            return p;\n        if (p == 1)\n\
    \            return n;\n        if (p % 2 == 0)\n            return Modp(n >>\
    \ 1, p);\n        else\n            return Modp(n >> 1, p) + Modp((n & 1) << 1,\
    \ p);", "        long r = 1;\n        while (n > 0) {\n            long t = n\
    \ % p;\n            n = n / p;\n            r = r * t + 1;\n        }\n      \
    \  return r;", "        long r = 1;\n        while (n > 0) {\n            long\
    \ t = n % p;\n            n = n / p;\n            r = r * t + 1;\n        }\n\
    \        return r;", "        if (n == 0 || p == 0)\n            return 1;\n \
    \       if (p > n)\n            throw new ArgumentException(\"p must be <= n\"\
    );\n        if (p < 2)\n            return n;\n        if (p == 2)\n         \
    \   return n % 2 == 0 ? n : n;\n        long res = 1;\n        while (n != 0)\
    \ {\n            if (n % 2 == 0)\n                res = (res * n) % p;\n     \
    \       n = n / 2;\n        }\n        return res;", "        long ret = 1;\n\
    \        while (n > 0) {\n            long tmp = ret % p;\n            if (tmp\
    \ == 0)\n                ret /= p;\n            else\n                ret *= p;\n\
    \            n -= 1;\n        }\n        return ret;", "        long r = 1;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        long res = 1;\n        while (n > 1)\
    \ {\n            long r = n % p;\n            n = n / p;\n            res = (res\
    \ * r) % p;\n        }\n        return res;", "        long r = 1;\n        while\
    \ (n > 0) {\n            long t = n % p;\n            n /= p;\n            r =\
    \ r * t % p;\n        }\n        return r;", "        if (n == 0) {\n        \
    \    return 1;\n        }\n        if (n == 1) {\n            return p;\n    \
    \    }\n        long r = Modp(n, p / 2);\n        if (r * r == p) {\n        \
    \    return r;\n        }\n        if (r * r > p) {\n            return Modp(r\
    \ * r, p);\n        }\n        return Modp(r * r + p, p);", "        if (n ==\
    \ 0)\n            return 1;\n        if (n == 1)\n            return p;\n    \
    \    if (n == 2)\n            return p % 3;\n        if (n % 2 == 0)\n       \
    \     return Modp(n / 2, p) % p;\n        else\n            return Modp(n / 2,\
    \ p) * Modp((n - 1) / 2, p) % p;", "        long ret = 1;\n        long q = 1;\n\
    \        long r = 1;\n        while (n > 0) {\n            long t = q * r;\n \
    \           long u = t % p;\n            q = t;\n            r = u;\n        \
    \    n -= 1;\n        }\n        return r;", "        long result = 1;\n     \
    \   while (n != 0) {\n            long r = n % p;\n            n = n / p;\n  \
    \          result = r * result % p;\n        }\n        return result;", "   \
    \     long r = 1;\n        while (n-- > 0)\n            r = (r * p) % p;\n   \
    \     return r;", "        long r = 1;\n        while (n-- > 0) {\n          \
    \  r = (r * p) % p;\n        }\n        return r;", "        if (n == 0) return\
    \ 1;\n        if (n == 1) return p;\n        if (n == 2) return p + p;\n     \
    \   if (n % 2 == 0) return Modp(n / 2, p);\n        return Modp(n / 2, p + p)\
    \ % p;", "        long r = 1;\n        while ((n & 1) == 0) {\n            r =\
    \ (r * p) % p;\n            n >>= 1;\n        }\n        return r;", "       \
    \ long r = 1;\n        long m = 1;\n        while (n > 0) {\n            long\
    \ t = n % p;\n            n /= p;\n            r = (r * t) % p;\n            m\
    \ = (m * t) % p;\n        }\n        return (r * m) % p;", "        long r = 1;\n\
    \        long q = 1;\n        long t = 1;\n        while (n > 0) {\n         \
    \   q = q * p + (n % p);\n            n = n / p;\n            t = t * p;\n   \
    \     }\n        r = r * t % p;\n        return r;", "        long res = 1;\n\
    \        while (n != 0) {\n            long tmp = n % p;\n            res = (res\
    \ * tmp) % p;\n            n = n / p;\n        }\n        return res;", "    \
    \    long res = 1;\n        while (n > 0) {\n            if (n % 2 == 0) {\n \
    \               res = (res * p) % p;\n            }\n            n = n / 2;\n\
    \        }\n        return res;", "        long result = 1;\n        while (n\
    \ > 0) {\n            result *= p;\n            result %= p;\n            n /=\
    \ 2;\n        }\n        return result;", "        if (n == 0) {\n           \
    \ return 1;\n        }\n        if (n == 1) {\n            return p;\n       \
    \ }\n        long r = Modp(n / 2, p);\n        if (n % 2 == 0) {\n           \
    \ return (r * r) % p;\n        } else {\n            return ((r * r * r) % p +\
    \ p) % p;\n        }", "        long r = 1;\n        while (n > 0) {\n       \
    \     r = r * p % n;\n            n = n / 2;\n        }\n        return r;", " \
    \       long r = 1;\n        long m = 1;\n        while (n > 1) {\n          \
    \  long t = n / p;\n            n -= t * p;\n            r = (r * m) % p;\n  \
    \          m = (m * t) % p;\n        }\n        return r;", "        long result\
    \ = 1;\n        while (n > 0) {\n            result *= p;\n            result\
    \ %= p;\n            n /= 2;\n        }\n        return result;", "        long\
    \ res = 1;\n        while (n > 0) {\n            if (n % 2 == 1) {\n         \
    \       res *= p;\n            }\n            n /= 2;\n            p *= p;\n \
    \       }\n        return res;", "        long r = 1;\n        while (n > 0) {\n\
    \            long t = n % p;\n            n = n / p;\n            r = r * t %\
    \ p;\n        }\n        return r;", "        if (n == 0) {\n            return\
    \ 1;\n        }\n        if (n == 1) {\n            return p;\n        }\n   \
    \     if (p % 2 == 0) {\n            return Modp(n / 2, p);\n        }\n     \
    \   return Modp(n / 2, p + 2);", "        long ret = 1;\n        while (n != 0)\
    \ {\n            long tmp = n % p;\n            ret = ret * tmp;\n           \
    \ n = n / p;\n        }\n        return ret;", "        long r = 1;\n        while\
    \ (n > 0) {\n            if (n % 2 == 1) {\n                r = (r * p) % p;\n\
    \            }\n            n /= 2;\n        }\n        return r;"]
stop_tokens:
- "\n    }\n"

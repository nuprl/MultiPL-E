language: cs
name: HumanEval_135_can_arrange
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long maxIndex = arr.IndexOf(max);\n\
    \        if (maxIndex == -1) return -1;\n        long maxPrev = arr.ElementAtOrDefault(maxIndex\
    \ - 1);\n        if (maxPrev >= max) return -1;\n        return maxIndex + 1;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_i5nxkdm.cs(20,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return arr.IndexOf(largest);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value >= maxValue) {\n                maxIndex = currentIndex;\n      \
    \          maxValue = value;\n            }\n            currentIndex++;\n   \
    \     }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40338f8b2eea480b9e633a43bdfc2b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40338f8b2eea480b9e633a43bdfc2b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long index = 0;\n        long previous = arr.First();\n        foreach\
    \ (long num in arr) {\n            if (num > largest) {\n                index\
    \ = arr.IndexOf(current);\n                largest = num;\n            }\n   \
    \         current = num;\n            previous = num;\n        }\n        return\
    \ index;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <caa66c9a47fc41d295224748bd60cae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <caa66c9a47fc41d295224748bd60cae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n            }\n            current =\
    \ arr[i];\n        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9687d2d454c3429e94ec34f27c6d133f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9687d2d454c3429e94ec34f27c6d133f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = arr.First();\n\
    \        long previousIndex = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] < currentIndex) {\n                currentIndex\
    \ = arr[i];\n                previousIndex = currentIndex;\n            }\n  \
    \          if (arr[i] > currentIndex && arr[i] > previousIndex) {\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c493c9bbe3f94fd881c81820d91ccf88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c493c9bbe3f94fd881c81820d91ccf88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = -1;\n     \
    \   long currentValue = arr[0];\n        long previousValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > currentValue)\
    \ {\n                currentIndex = i;\n                currentValue = arr[i];\n\
    \            }\n            if (arr[i] < previousValue) {\n                maxIndex\
    \ = i;\n                previousValue = arr[i];\n            }\n        }\n  \
    \      return maxIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4f231340df141759cc914c182d9741d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4f231340df141759cc914c182d9741d>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.CanArrange (System.Collections.Generic.Li"
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = current;\n           \
    \     previous = current;\n                current = i;\n            } else if\
    \ (i > current) {\n                previous = current;\n                current\
    \ = i;\n            }\n        }\n        if (current > largest) {\n         \
    \   largest = current;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b7c9c6e0fe44e879ca03c31ee4ca93e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4b7c9c6e0fe44e879ca03c31ee4ca93e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = 0;\n        long maxValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = i;\n                largest = i;\n            }\n        }\n      \
    \  return index;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n\
    \        long minIndex = arr.IndexOf(arr.First());\n        long mid = maxIndex\
    \ - minIndex + 1;\n        if (mid > 0) {\n            max = arr.ElementAt(mid);\n\
    \            maxIndex = arr.IndexOf(max);\n            minIndex = arr.IndexOf(arr.First());\n\
    \            mid = maxIndex - minIndex + 1;\n        }\n        if (mid == 0)\
    \ {\n            return maxIndex;\n        }\n        if (mid > 1) {\n       \
    \     max = arr.ElementAt(mid);\n            maxIndex = arr.IndexOf(max);\n  \
    \          minIndex = arr.IndexOf(arr.First());\n            mid = maxIndex -\
    \ minIndex + 1;\n        }\n        if (mid == 1) {\n            return minIndex;\n\
    \        }\n        if (mid < arr.Count) {\n            max = arr.ElementAt(mid);\n\
    \            maxIndex = arr.IndexOf(max);\n            minIndex = arr.IndexOf(arr.First());\n\
    \            mid = maxIndex - minIndex + 1;\n        }\n        return -1;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8ktt3o89.cs(22,33): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp8ktt3o89.cs(31,33): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp8ktt3o89.cs(40,33): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (var item in arr.Skip(1))\n\
    \        {\n            if (item > largest)\n            {\n                largest\
    \ = item;\n            }\n            if (item < current)\n            {\n   \
    \             current = item;\n            }\n            if (item < previous)\n\
    \            {\n                previous = item;\n            }\n        }\n \
    \       return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a61c63fb35b045d1819a923b4552196c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a61c63fb35b045d1819a923b4552196c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long prevIndex = index - 1;\n        long nextIndex = index + 1;\n  \
    \      while (index != -1) {\n            if (arr[prevIndex] >= arr[index]) {\n\
    \                largest = index;\n                index = prevIndex;\n      \
    \          prevIndex = nextIndex;\n                nextIndex = index + 1;\n  \
    \          } else {\n                index = arr.IndexOf(arr[nextIndex]);\n  \
    \              nextIndex = index + 1;\n            }\n        }\n        return\
    \ largest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx8i4z29r.cs(22,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpx8i4z29r.cs(22,39): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpx8i4z29r.cs(28,41): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long largestIndex = 0;\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n                largestIndex = i;\n            }\n     \
    \   }\n        return largestIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8c94314c2af4c0193b00f0f77fd455f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8c94314c2af4c0193b00f0f77fd455f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = arr.IndexOf(largest);\n                largest = i;\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr.Skip(1)) {\n            if (i > largest) {\n \
    \               largest = i;\n            }\n            if (i < smallest) {\n\
    \                smallest = i;\n            }\n        }\n        return largest\
    \ - smallest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7929d62c9724fa89ea4e1ff141d1b11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7929d62c9724fa89ea4e1ff141d1b11>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (currentValue <= arr[i]) {\n                currentValue = arr[i];\n\
    \            }\n            if (currentValue > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0c78acc32264f72904e7983d9cb36ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0c78acc32264f72904e7983d9cb36ce>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = arr.First();\n \
    \       foreach (long i in arr.Skip(1))\n            if (i > max)\n          \
    \      max = i;\n            else if (i < min)\n                min = i;\n   \
    \     if (max < min)\n            return -1;\n        else\n            return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <380418827af14def91d59d5906717343>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <380418827af14def91d59d5906717343>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                largest = arr[i];\n                index = i;\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c34dbab4624fe587a340366194fc9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c34dbab4624fe587a340366194fc9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > current) {\n                current = i;\n                previous\
    \ = current;\n            }\n            if (i > largest) {\n                largest\
    \ = i;\n            }\n        }\n        if (largest == arr.First()) {\n    \
    \        return -1;\n        }\n        return largest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcb57a3711b3410d8ec64839ac6e341e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcb57a3711b3410d8ec64839ac6e341e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = -1;\n        foreach (long value in arr) {\n         \
    \   if (value >= maxValue) {\n                currentIndex = maxIndex;\n     \
    \           maxValue = value;\n            }\n            if (value >= currentIndex)\
    \ {\n                currentIndex = value;\n            }\n            if (currentIndex\
    \ != -1) {\n                maxIndex = currentIndex;\n            }\n        }\n\
    \        return maxIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52586961b3544fbe8ab469ea22036bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52586961b3544fbe8ab469ea22036bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long maxValue = arr[0];\n        foreach (long value in arr) {\n          \
    \  if (value <= maxValue) {\n                currentIndex++;\n            }\n\
    \            if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = value;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5037473349d24a4bbe2d3166c8ac1fa2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5037473349d24a4bbe2d3166c8ac1fa2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   long maxIndex2 = -1;\n        long maxIndex3 = -1;\n        foreach (long\
    \ i in arr) {\n            if (i > max) {\n                maxIndex = i;\n   \
    \             max = i;\n            }\n            if (i > maxIndex2) {\n    \
    \            maxIndex2 = i;\n                maxIndex3 = maxIndex;\n         \
    \   }\n            if (i > maxIndex3) {\n                maxIndex3 = i;\n    \
    \        }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9050491eae044047a08fe10f62e8e85f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9050491eae044047a08fe10f62e8e85f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.ElementAtOrDefault(index - 1);\n        if (previous\
    \ >= largest) {\n            return -1;\n        }\n        foreach (var item\
    \ in arr.Skip(index + 1)) {\n            if (item > largest) {\n             \
    \   return -1;\n            }\n            if (item < previous) {\n          \
    \      return index;\n            }\n            previous = item;\n        }\n\
    \        return -1;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpim1c27xh.cs(19,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpim1c27xh.cs(23,39): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = arr.Count - 1;\n        long currentValue = arr[currentIndex];\n\
    \        while (currentIndex > 0) {\n            if (currentValue <= maxValue)\
    \ {\n                currentIndex--;\n                currentValue = arr[currentIndex];\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    maxValue = currentValue;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5gn5v591.cs(20,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp5gn5v591.cs(24,36): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long mid = max / 2;\n        long left = 0;\n        long right = arr.Count\
    \ - 1;\n        long maxIndex = -1;\n        while (left <= right) {\n       \
    \     long midIndex = (left + right) / 2;\n            if (arr[midIndex] >= mid)\
    \ {\n                right = midIndex - 1;\n            } else {\n           \
    \     left = midIndex + 1;\n            }\n        }\n        if (left > max)\
    \ {\n            maxIndex = left;\n        } else if (right < max) {\n       \
    \     maxIndex = right;\n        } else {\n            maxIndex = max;\n     \
    \   }\n        return maxIndex;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0qj5uog9.cs(25,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = arr.Count - 1;\n        long currentValue = arr[currentIndex];\n\
    \        while (currentIndex >= 0) {\n            if (currentValue >= maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n            currentIndex--;\n            currentValue = arr[currentIndex];\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3e87m3po.cs(20,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp3e87m3po.cs(27,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = arr.First();\n \
    \       long index = 0;\n        foreach (var item in arr.Skip(1))\n        {\n\
    \            if (item > max)\n            {\n                max = item;\n   \
    \             index = arr.IndexOf(max);\n            }\n            if (item <\
    \ min)\n            {\n                min = item;\n                index = arr.IndexOf(min);\n\
    \            }\n        }\n        return index;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1fb3254ebd443808c589f3d5eb74d56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1fb3254ebd443808c589f3d5eb74d56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = arr.Count - 1;\n        while (currentIndex >= 0) {\n\
    \            if (arr[currentIndex] > maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = arr[currentIndex];\n            }\n            currentIndex--;\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp88k28tfy.cs(21,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp88k28tfy.cs(23,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long maxIndex = arr.IndexOf(max);\n        long minIndex = arr.IndexOf(min);\n\
    \        if (maxIndex == minIndex) {\n            return -1;\n        }\n    \
    \    if (maxIndex < minIndex) {\n            return maxIndex;\n        }\n   \
    \     return minIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <251e1e3275974758a818e26b6ea6dbeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <251e1e3275974758a818e26b6ea6dbeb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] >= largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long result = -1;\n        for (int i = 0; i < arr.Count; i++) {\n       \
    \     if (arr[i] <= max && arr[i] >= min) {\n                result = i;\n   \
    \             break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac162239ed1240f7b6378871c16b6758>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ac162239ed1240f7b6378871c16b6758>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long mid = max / 2;\n        long left = 0;\n        long right = 0;\n   \
    \     long maxIndex = 0;\n        long minIndex = 0;\n        bool found = false;\n\
    \        foreach (long i in arr) {\n            if (i == mid) {\n            \
    \    found = true;\n            }\n            if (i == max) {\n             \
    \   maxIndex = i;\n            }\n            if (i == min) {\n              \
    \  minIndex = i;\n            }\n            if (found == true) {\n          \
    \      left = i;\n            }\n            if (i == max) {\n               \
    \ right = i;\n            }\n        }\n        if (maxIndex == minIndex) {\n\
    \            return -1;\n        }\n        if (maxIndex > minIndex) {\n     \
    \       return maxIndex;\n        }\n        if (maxIndex < minIndex) {\n    \
    \        return minIndex;\n        }\n        if (maxIndex == mid) {\n       \
    \     return maxIndex + 1;\n        }\n        if (maxIndex == min) {\n      \
    \      return minIndex - 1;\n        }\n        if (maxIndex == left) {\n    \
    \        return maxIndex - 1;\n        }\n        if (maxIndex == right) {\n \
    \           return minIndex + 1;\n        }\n        return -1;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b752e5a7ade451593ca0c06bd973db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b752e5a7ade451593ca0c06bd973db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        if (index > 0) {\n            while (index > 0 && arr[index - 1] >= largest)\
    \ {\n                largest = arr[index - 1];\n                index--;\n   \
    \         }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgb5r5dgv.cs(20,37): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpgb5r5dgv.cs(21,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = 0;\n        long maxValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = arr[i];\n         \
    \   }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b22ebc6e926c4223892d70d754f8d64d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b22ebc6e926c4223892d70d754f8d64d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long mid = max / 2;\n        long left = 0;\n        long right = 0;\n   \
    \     long largest = -1;\n        long smallest = -1;\n        foreach (long i\
    \ in arr) {\n            if (i > mid) {\n                if (left < i) {\n   \
    \                 left = i;\n                }\n                if (right < i)\
    \ {\n                    right = i;\n                }\n            }\n      \
    \      if (i == mid) {\n                if (left < i) {\n                    left\
    \ = i;\n                }\n                if (right < i) {\n                \
    \    right = i;\n                }\n            }\n            if (i < mid) {\n\
    \                if (left > i) {\n                    left = i;\n            \
    \    }\n                if (right > i) {\n                    right = i;\n   \
    \             }\n            }\n            if (largest < i) {\n             \
    \   largest = i;\n            }\n            if (smallest > i) {\n           \
    \     smallest = i;\n            }\n        }\n        if (largest == -1) {\n\
    \            return -1;\n        }\n        if (smallest == -1) {\n          \
    \  return -1;\n        }\n        if (largest > smallest && largest != min) {\n\
    \            return -1;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b47ae0711f344294aaca39c6db6ff7bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b47ae0711f344294aaca39c6db6ff7bd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n\
    \        long minIndex = arr.IndexOf(arr.First());\n        long minValue = arr.First();\n\
    \        long maxValue = arr.First();\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.IndexOf(minValue);\n\
    \        long maxValueIndex = arr.IndexOf(maxValue);\n        long minValueIndex\
    \ = arr.IndexOf(minValue);\n        long maxValueIndex = arr.IndexOf(maxValue);\n\
    \        long minValueIndex = arr.IndexOf(minValue);\n        long maxValueIndex\
    \ = arr.IndexOf(maxValue);\n        long minValueIndex = arr.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp289k53_6.cs(64,34): error CS1001: Identifier expected

    /tmp/tmp289k53_6.cs(64,34): error CS1002: ; expected

    '
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                largest = current;\n\
    \                previous = current;\n                current = arr[i];\n    \
    \        } else if (arr[i] < largest) {\n                previous = current;\n\
    \                current = arr[i];\n            }\n        }\n        if (current\
    \ > largest) {\n            return -1;\n        }\n        return largest;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ceaeda3729b4563b64067bc15f604aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0ceaeda3729b4563b64067bc15f604aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = arr.IndexOf(largest);\n            }\n            if (i > largest)\
    \ {\n                largest = i;\n            }\n        }\n        return index;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b6ee3bf51aee438a8f76f852f45f3f74>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b6ee3bf51aee438a8f76f852f45f3f74>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = -1;\n        long maxIndex = -1;\n        long currentMax\
    \ = arr[0];\n        long currentMaxIndex = -1;\n        foreach (long i in arr)\
    \ {\n            if (i > currentMax) {\n                currentMax = i;\n    \
    \            currentMaxIndex = i;\n            }\n            if (i < currentMax)\
    \ {\n                currentMaxIndex = i;\n            }\n        }\n        if\
    \ (currentMaxIndex == -1) {\n            return -1;\n        }\n        foreach\
    \ (long i in arr) {\n            if (i == currentMaxIndex) {\n               \
    \ continue;\n            }\n            if (i > currentMax) {\n              \
    \  max = i;\n                maxIndex = i;\n            }\n            if (i <\
    \ currentMax) {\n                max = i;\n                maxIndex = i;\n   \
    \         }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab63313c4d3541ac95bd9428c6f56356>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab63313c4d3541ac95bd9428c6f56356>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = i;\n                largest = i;\n            }\n        }\n      \
    \  return index;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = arr.IndexOf(largest);\n                largest = i;\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < previous) {\n       \
    \         previous = i;\n            }\n        }\n        return largest == arr.First()\
    \ ? -1 : largest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de0df6c2095d48869d5456aa47cddd76>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de0df6c2095d48869d5456aa47cddd76>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = arr.First();\n\
    \        long previousIndex = arr.First();\n        foreach (long i in arr) {\n\
    \            if (i > currentIndex) {\n                currentIndex = i;\n    \
    \        }\n            if (i > previousIndex) {\n                previousIndex\
    \ = i;\n            }\n            if (currentIndex > maxIndex) {\n          \
    \      maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f621320a1954a4e9d38ef7150e47bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f621320a1954a4e9d38ef7150e47bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (var item in arr.Skip(1))\n        {\n            if (item > largest)\n\
    \            {\n                largest = item;\n                index = arr.IndexOf(item);\n\
    \            }\n        }\n        return index;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ea691bd70ad4de48893cdbcf2717228>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7ea691bd70ad4de48893cdbcf2717228>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long maxIndex = -1;\n        long minIndex = -1;\n        foreach (long i\
    \ in arr) {\n            if (i > max) {\n                maxIndex = i;\n     \
    \           max = i;\n            }\n            if (i < min) {\n            \
    \    minIndex = i;\n                min = i;\n            }\n        }\n     \
    \   if (maxIndex == minIndex) {\n            return maxIndex;\n        }\n   \
    \     if (maxIndex > minIndex) {\n            return maxIndex;\n        }\n  \
    \      return minIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9579a3120b0b4aa8b4e82e65ad643705>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9579a3120b0b4aa8b4e82e65ad643705>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long maxIndex = -1;\n        long minIndex = -1;\n        foreach (long i\
    \ in arr) {\n            if (i > max && maxIndex == -1) {\n                maxIndex\
    \ = i;\n            }\n            if (i < min && minIndex == -1) {\n        \
    \        minIndex = i;\n            }\n        }\n        if (maxIndex == -1 &&\
    \ minIndex == -1) {\n            return -1;\n        }\n        if (maxIndex ==\
    \ minIndex) {\n            return maxIndex;\n        }\n        if (maxIndex <\
    \ minIndex) {\n            return maxIndex;\n        }\n        return minIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8a6e24a1e34290a79274d5789e83d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8a6e24a1e34290a79274d5789e83d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long maxIndex = -1;\n        long minIndex = -1;\n        for (int i = 0;\
    \ i < arr.Count; i++) {\n            if (arr[i] < min) {\n                minIndex\
    \ = i;\n                min = arr[i];\n            }\n            if (arr[i] >\
    \ max) {\n                maxIndex = i;\n                max = arr[i];\n     \
    \       }\n        }\n        if (maxIndex == -1 && minIndex == -1) {\n      \
    \      return -1;\n        }\n        if (maxIndex == -1 || minIndex == -1) {\n\
    \            return maxIndex;\n        }\n        if (maxIndex < minIndex) {\n\
    \            return maxIndex;\n        }\n        return minIndex;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6ffae2cef754eeba084583ea06cfa3d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6ffae2cef754eeba084583ea06cfa3d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < previous) {\n       \
    \         previous = i;\n            }\n        }\n        return largest == arr.Last()\
    \ ? -1 : largest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2a074939db469584b70d9412a62062>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c2a074939db469584b70d9412a62062>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < current) {\n                current = i;\n            }\n \
    \           if (i > previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                largest = current;\n\
    \                previous = current;\n                current = arr[i];\n    \
    \        } else if (arr[i] < current) {\n                previous = current;\n\
    \                current = arr[i];\n            }\n        }\n        if (current\
    \ > largest) {\n            largest = current;\n        }\n        return largest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9eb858fbc8ed4e649d388d617493db0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9eb858fbc8ed4e649d388d617493db0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long largestIndex = 0;\n        foreach (long i in arr) {\n            if (currentIndex\
    \ < maxIndex) {\n                if (i > arr[currentIndex]) {\n              \
    \      currentIndex = maxIndex;\n                }\n            } else {\n   \
    \             currentIndex = i;\n                maxIndex = i;\n            }\n\
    \            if (currentIndex > largestIndex) {\n                largestIndex\
    \ = currentIndex;\n            }\n        }\n        return largestIndex;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkbvgm49s.cs(22,29): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < current) {\n                current = i;\n            }\n \
    \           if (i > previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = -1;\n        long maxIndex = 0;\n        long currentMax\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i > currentMax)\
    \ {\n                currentMax = i;\n                maxIndex = i;\n        \
    \    }\n        }\n        if (maxIndex < arr.Count - 1) {\n            max =\
    \ maxIndex;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2ed37b029ff4abf95b4660785ce4f83>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a2ed37b029ff4abf95b4660785ce4f83>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = arr.First();\n\
    \        long currentValue = arr.First();\n        foreach (long i in arr) {\n\
    \            if (i > currentValue) {\n                currentIndex = i;\n    \
    \            currentValue = i;\n            }\n        }\n        if (currentIndex\
    \ > maxIndex) {\n            maxIndex = currentIndex;\n        }\n        return\
    \ maxIndex;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef0cb65de61f4fc0a13d7692df2a4d58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ef0cb65de61f4fc0a13d7692df2a4d58>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = arr.First();\n\
    \        long maxValue = arr.First();\n        foreach (long value in arr.Skip(1))\n\
    \        {\n            if (value > maxValue)\n            {\n               \
    \ maxValue = value;\n                maxIndex = currentIndex;\n            }\n\
    \            currentIndex++;\n        }\n        return maxIndex;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <348b8f1114f942a28ab4382128abd51b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <348b8f1114f942a28ab4382128abd51b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.First();\n        long previousIndex = arr.IndexOf(previous);\n\
    \        while (index > previousIndex) {\n            largest = previous;\n  \
    \          index = previousIndex;\n            previous = arr.ElementAt(index);\n\
    \            previousIndex = arr.IndexOf(previous);\n        }\n        return\
    \ largest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbu664ubw.cs(24,38): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.First();\n        while (index > 0) {\n         \
    \   previous = index;\n            index = arr.IndexOf(previous);\n        }\n\
    \        return index;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4506e80e1e5843939eb447ce666b18a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4506e80e1e5843939eb447ce666b18a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long largestIndex = 0;\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n                largestIndex = i;\n            } else if\
    \ (i < largest) {\n                largestIndex = arr.IndexOf(largest);\n    \
    \            break;\n            }\n        }\n        return largestIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3c8bdba17d5415a9cb06efa5d6cb538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b3c8bdba17d5415a9cb06efa5d6cb538>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = -1;\n        long currentValue = arr[0];\n        foreach\
    \ (long i in arr) {\n            if (i > maxValue) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \           if (i < currentValue) {\n                currentIndex = arr.IndexOf(i);\n\
    \                currentValue = i;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47b69f118cfd4d818d88622838bdd614>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47b69f118cfd4d818d88622838bdd614>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value >= maxValue) {\n                maxIndex = currentIndex;\n      \
    \          maxValue = value;\n            }\n            currentIndex++;\n   \
    \     }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40338f8b2eea480b9e633a43bdfc2b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40338f8b2eea480b9e633a43bdfc2b1f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] > largest) {\n                largest = current;\n       \
    \         index = i;\n            }\n            current = arr[i];\n        }\n\
    \        return index;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a599cd48e5e42369a24c3d32a21e6cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a599cd48e5e42369a24c3d32a21e6cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value <= maxValue) {\n                currentIndex++;\n               \
    \ if (currentIndex > maxIndex) {\n                    maxIndex = currentIndex;\n\
    \                    maxValue = value;\n                }\n            } else\
    \ {\n                currentIndex = 0;\n            }\n        }\n        return\
    \ maxIndex;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91bd173965de4bdfa1ef0535844d0891>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91bd173965de4bdfa1ef0535844d0891>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long largest = arr.First();\n        foreach (long i in arr) {\n          \
    \  if (i <= largest) {\n                currentIndex++;\n                if (currentIndex\
    \ > maxIndex) {\n                    maxIndex = currentIndex;\n              \
    \  }\n            } else {\n                currentIndex = 0;\n            }\n\
    \            largest = i;\n        }\n        return maxIndex;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14a5ababe4cb4be192e7136acab7fdfe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <14a5ababe4cb4be192e7136acab7fdfe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = 0;\n        long maxIndex\
    \ = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ <= max) {\n                max = Math.Max(max, arr[i]);\n                min\
    \ = Math.Min(min, arr[i]);\n                maxIndex = i;\n            }\n   \
    \     }\n        if (maxIndex == arr.Count - 1) {\n            return -1;\n  \
    \      }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f63e2ceae21e4aa785572ab72f020fc6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f63e2ceae21e4aa785572ab72f020fc6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = 0;\n        foreach\
    \ (long i in arr) {\n            if (i > max) {\n                max = i;\n  \
    \          }\n            if (i < min) {\n                min = i;\n         \
    \   }\n        }\n        if (max > min) {\n            return -1;\n        }\n\
    \        return arr.IndexOf(max);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <643d3f6856de4e4c8591d3b43ca54263>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <643d3f6856de4e4c8591d3b43ca54263>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long index = -1;\n        for (int i = 0; i < arr.Count; i++) {\n        \
    \    if (arr[i] <= min || arr[i] >= max) {\n                index = i;\n     \
    \           break;\n            }\n        }\n        return index;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd7b5f90bd741ca95cb9eb76c520907>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd7b5f90bd741ca95cb9eb76c520907>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] > largest) {\n                largest = current;\n       \
    \         index = i;\n            }\n            current = arr[i];\n        }\n\
    \        return index;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a599cd48e5e42369a24c3d32a21e6cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a599cd48e5e42369a24c3d32a21e6cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = arr.First();\n \
    \       for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n\
    \                max = arr[i];\n            }\n            if (arr[i] < min) {\n\
    \                min = arr[i];\n            }\n        }\n        if (max >= min)\
    \ {\n            return -1;\n        }\n        return arr.IndexOf(max);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366909c54b01471d96fe623ecfbe0db5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <366909c54b01471d96fe623ecfbe0db5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.First();\n        while (index != -1) {\n       \
    \     if (arr.ElementAt(index) < previous) {\n                largest = arr.ElementAt(index);\n\
    \                index = arr.IndexOf(largest);\n            } else {\n       \
    \         previous = arr.ElementAt(index);\n                index = arr.IndexOf(previous);\n\
    \            }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1i6j3f30.cs(21,31): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp1i6j3f30.cs(22,41): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp1i6j3f30.cs(25,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value >= maxValue) {\n                currentIndex++;\n               \
    \ if (currentIndex == maxIndex) {\n                    maxIndex = currentIndex;\n\
    \                    maxValue = value;\n                }\n            }\n   \
    \     }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <727df87f1d2f460aa33436a5a6ac8c86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <727df87f1d2f460aa33436a5a6ac8c86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = -1;\n        long currentValue = arr[0];\n        for\
    \ (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > currentValue) {\n\
    \                currentIndex = i;\n                currentValue = arr[i];\n \
    \           }\n        }\n        if (currentIndex > maxIndex) {\n           \
    \ maxIndex = currentIndex;\n            maxValue = currentValue;\n        }\n\
    \        return maxIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2f3829c82c64428a65f6540b894393a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2f3829c82c64428a65f6540b894393a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = -1;\n     \
    \   long currentValue = -1;\n        long previousValue = -1;\n        foreach\
    \ (long i in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n            if (currentValue\
    \ > i) {\n                currentValue = i;\n                currentIndex = i;\n\
    \            }\n            if (currentValue == i) {\n                currentIndex\
    \ = i;\n            }\n            if (currentValue > previousValue) {\n     \
    \           maxIndex = currentIndex;\n            }\n            previousValue\
    \ = currentValue;\n        }\n        return maxIndex;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e989ed574cc34613a093b42e61738f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e989ed574cc34613a093b42e61738f3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = 0;\n        long maxValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = 0;\n        long\
    \ maxIndex = -1;\n        foreach (long i in arr) {\n            if (i > max)\
    \ {\n                max = i;\n                maxIndex = i;\n            }\n\
    \            if (i < min) {\n                min = i;\n            }\n       \
    \ }\n        if (maxIndex == -1) {\n            return -1;\n        }\n      \
    \  if (maxIndex < min) {\n            return -1;\n        }\n        long mid\
    \ = min + (max - min) / 2;\n        long leftMax = CanArrange(arr.Where(i => i\
    \ < mid));\n        long rightMax = CanArrange(arr.Where(i => i > mid));\n   \
    \     if (leftMax > rightMax) {\n            return leftMax;\n        }\n    \
    \    return rightMax;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpocshz7fh.cs(36,35): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<long>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmpocshz7fh.cs(37,36): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<long>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = 0;\n        long maxValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long largest = arr.First();\n        foreach (long i in arr) {\n          \
    \  if (i > largest) {\n                currentIndex = i;\n                largest\
    \ = i;\n            }\n            else if (i == largest) {\n                currentIndex++;\n\
    \            }\n            if (currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d77de5e19f84399b26c62b4e9204c48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8d77de5e19f84399b26c62b4e9204c48>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value > maxValue) {\n                maxValue = value;\n              \
    \  maxIndex = currentIndex;\n            }\n            currentIndex++;\n    \
    \    }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3837d995a2d940f98a55d630390d9d64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3837d995a2d940f98a55d630390d9d64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = -1;\n    \
    \    for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = arr[i];\n                index = i;\n         \
    \   }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36c3731c7156453e857bc19af0d00d1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36c3731c7156453e857bc19af0d00d1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < previous) {\n       \
    \         return -1;\n            }\n            previous = i;\n        }\n  \
    \      return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43d04e643634461ba67847242fb7acf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43d04e643634461ba67847242fb7acf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = -1;\n        long maxIndex = 0;\n        long minIndex\
    \ = 0;\n        long minValue = arr[0];\n        foreach (long i in arr) {\n \
    \           if (i > maxValue) {\n                maxValue = i;\n             \
    \   maxIndex = i;\n            }\n            if (i < minValue) {\n          \
    \      minValue = i;\n                minIndex = i;\n            }\n        }\n\
    \        if (maxIndex == minIndex) {\n            return -1;\n        }\n    \
    \    if (maxIndex > minIndex) {\n            return maxIndex;\n        }\n   \
    \     return minIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpatx67m6k.cs(22,21): error CS0103: The name ''maxValue'' does not exist
    in the current context

    /tmp/tmpatx67m6k.cs(23,17): error CS0103: The name ''maxValue'' does not exist
    in the current context

    /tmp/tmpatx67m6k.cs(17,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    '
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < previous) {\n       \
    \         return -1;\n            }\n            previous = i;\n        }\n  \
    \      return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43d04e643634461ba67847242fb7acf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <43d04e643634461ba67847242fb7acf5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > current) {\n                current = i;\n            }\n  \
    \          if (i > previous) {\n                previous = i;\n            }\n\
    \            if (current > largest) {\n                largest = current;\n  \
    \          }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48efe6300081431bb60a83aea4d3e2fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48efe6300081431bb60a83aea4d3e2fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long mid = max / 2;\n        long left = 0;\n        long right = 0;\n   \
    \     long maxIndex = -1;\n        long minIndex = -1;\n        foreach (long\
    \ i in arr) {\n            if (i <= mid) {\n                left++;\n        \
    \    }\n            else if (i > mid) {\n                right++;\n          \
    \  }\n            if (left > right) {\n                if (i == mid) {\n     \
    \               maxIndex = i;\n                }\n                else if (i >\
    \ mid) {\n                    minIndex = i;\n                }\n            }\n\
    \        }\n        if (maxIndex == -1) {\n            return -1;\n        }\n\
    \        if (minIndex == -1) {\n            return maxIndex;\n        }\n    \
    \    if (maxIndex < minIndex) {\n            return maxIndex;\n        }\n   \
    \     return minIndex;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a651e58fdfb6420d9707b327fe2a7103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a651e58fdfb6420d9707b327fe2a7103>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (smallest > largest)\
    \ {\n            return -1;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <05e66e6ef15946d59171292d67ff7e91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <05e66e6ef15946d59171292d67ff7e91>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > current) {\n                current = i;\n            }\n  \
    \          if (i > previous) {\n                previous = i;\n            }\n\
    \            if (current > largest) {\n                largest = current;\n  \
    \          }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48efe6300081431bb60a83aea4d3e2fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48efe6300081431bb60a83aea4d3e2fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = -1;\n     \
    \   long currentValue = -1;\n        foreach (long i in arr) {\n            if\
    \ (currentIndex == -1) {\n                currentIndex = i;\n                currentValue\
    \ = i;\n            }\n            if (currentValue > i) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n            if (currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n            }\n   \
    \     }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8295b1fb24f4a6ca9b4840601a3eb0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e8295b1fb24f4a6ca9b4840601a3eb0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = current;\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <851a67db968643efb5fd4f2904a24840>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return arr.IndexOf(largest);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr.Skip(1))\n        {\n            if (i > largest)\n\
    \            {\n                largest = i;\n            }\n            if (i\
    \ < smallest)\n            {\n                smallest = i;\n            }\n \
    \       }\n        if (largest == smallest)\n        {\n            return -1;\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f5895cf70744c6c872a4b7756818546>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f5895cf70744c6c872a4b7756818546>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value > maxValue) {\n                maxIndex = currentIndex;\n       \
    \         maxValue = value;\n            }\n            currentIndex++;\n    \
    \    }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5f4f0640f26451eae66126a40018a53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5f4f0640f26451eae66126a40018a53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long previous = arr.First();\n\
    \        foreach (long num in arr.Skip(1))\n        {\n            if (num > largest)\n\
    \            {\n                largest = num;\n            }\n            if\
    \ (num < previous)\n            {\n                return -1;\n            }\n\
    \            previous = num;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a826c89b55994bb9a03dbe711d7600be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a826c89b55994bb9a03dbe711d7600be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] >= largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentValue = arr[0];\n        long previousValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = arr[i];\n         \
    \   }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n            if (arr[i] != previousValue) {\n     \
    \           previousValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <986215997c964efd8685b83c343bc5b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <986215997c964efd8685b83c343bc5b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   foreach (long i in arr) {\n            if (i > max) {\n                max\
    \ = i;\n                maxIndex = i;\n            }\n        }\n        return\
    \ maxIndex;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c744e6f7298b4b3d90bc25466dc961b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c744e6f7298b4b3d90bc25466dc961b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                largest = current;\n\
    \                previous = current;\n                current = arr[i];\n    \
    \        } else if (arr[i] < largest) {\n                current = arr[i];\n \
    \           }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80ec5bf188fa4323906e9a9ee15b9427>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80ec5bf188fa4323906e9a9ee15b9427>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long currentValue = arr[0];\n        long previousValue = arr[0];\n       \
    \ foreach (long value in arr) {\n            if (value > currentValue) {\n   \
    \             currentIndex = currentValue;\n                currentValue = value;\n\
    \            }\n            if (value > previousValue) {\n                maxIndex\
    \ = currentIndex;\n                previousValue = currentValue;\n           \
    \ }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fceb9d70ff614ecb809de3028f59849f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fceb9d70ff614ecb809de3028f59849f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = arr.First();\n\
    \        long previousIndex = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentIndex) {\n                maxIndex =\
    \ i;\n                currentIndex = arr[i];\n            }\n            if (arr[i]\
    \ < previousIndex) {\n                maxIndex = -1;\n                break;\n\
    \            }\n            previousIndex = arr[i];\n        }\n        return\
    \ maxIndex;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d88ce518c56b4648a52391c962059ddd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d88ce518c56b4648a52391c962059ddd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return largest;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <136a82ea2dd346f78d3bc624787fd68c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        long index = 0;\n        foreach\
    \ (long i in arr) {\n            if (i > largest) {\n                index = arr.IndexOf(current);\n\
    \                largest = current;\n                current = i;\n          \
    \      previous = current;\n            } else if (i == largest) {\n         \
    \       current = i;\n                previous = current;\n            } else\
    \ {\n                previous = current;\n                current = i;\n     \
    \       }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a24c2b0921949c2b73070a6c710a914>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a24c2b0921949c2b73070a6c710a914>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = arr.First();\n \
    \       foreach (long i in arr) {\n            if (i > max) {\n              \
    \  max = i;\n            }\n            if (i < min) {\n                min =\
    \ i;\n            }\n        }\n        if (max >= min) {\n            return\
    \ -1;\n        }\n        return arr.IndexOf(max);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b9e2f7170ee4315a0bb1d8e233781b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b9e2f7170ee4315a0bb1d8e233781b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentValue = arr[0];\n        foreach (long i in arr) {\n         \
    \   if (i <= currentValue) {\n                currentValue = i;\n            }\n\
    \            else {\n                maxIndex = Math.Max(maxIndex, currentValue\
    \ - i);\n                maxValue = Math.Max(maxValue, currentValue);\n      \
    \          currentValue = i;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79a74d447b9f4dd8a3fdf98328b7ee1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79a74d447b9f4dd8a3fdf98328b7ee1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        long previous = arr.ElementAtOrDefault(index - 1);\n        if (previous\
    \ >= largest) {\n            return -1;\n        }\n        return index;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjb5e4rgf.cs(19,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (var item in arr.Skip(1))\n\
    \        {\n            if (item > largest)\n            {\n                largest\
    \ = item;\n                current = previous;\n            }\n            else\n\
    \            {\n                previous = item;\n            }\n        }\n \
    \       return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5263ceae6e8c47359ba694b319ea43fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5263ceae6e8c47359ba694b319ea43fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n\
    \                max = Math.Max(max, arr[i]);\n                maxIndex = i;\n\
    \            }\n        }\n        return maxIndex;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b776c6effe9443cd82e9a5135a42899a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b776c6effe9443cd82e9a5135a42899a>:0 \n\nUnhandled Exception:\n\
    System.InvalidOperationException: Sequence contains no elements\n  at System.Linq.Enumerable.First[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.CanArrange (System.Collections.Generic.List`1[T] arr) [0x00001]\
    \ in <b776c6effe9443cd82e9a5135a4289"
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < current) {\n                current = i;\n            }\n \
    \           if (i > previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = arr.Count - 1;\n        long currentValue = arr[currentIndex];\n\
    \        while (currentIndex >= 0) {\n            if (currentValue <= maxValue)\
    \ {\n                currentIndex--;\n                currentValue = arr[currentIndex];\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    maxValue = currentValue;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6epbq4zj.cs(20,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6epbq4zj.cs(24,36): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        long largestIndex = 0;\n        long smallestIndex = 0;\n        foreach\
    \ (long i in arr) {\n            if (i > largest) {\n                largest =\
    \ i;\n                largestIndex = i;\n            }\n            if (i < smallest)\
    \ {\n                smallest = i;\n                smallestIndex = i;\n     \
    \       }\n        }\n        if (largest == smallest) {\n            return -1;\n\
    \        }\n        if (largest == arr[arr.Count - 1]) {\n            return arr.Count\
    \ - 1;\n        }\n        if (smallest == arr[arr.Count - 1]) {\n           \
    \ return arr.Count - 1;\n        }\n        if (largest == arr[arr.Count - 2])\
    \ {\n            return arr.Count - 2;\n        }\n        if (smallest == arr[arr.Count\
    \ - 2]) {\n            return arr.Count - 2;\n        }\n        if (largest ==\
    \ arr[arr.Count - 3]) {\n            return arr.Count - 3;\n        }\n      \
    \  if (smallest == arr[arr.Count - 3]) {\n            return arr.Count - 3;\n\
    \        }\n        if (largest == arr[arr.Count - 4]) {\n            return arr.Count\
    \ - 4;\n        }\n        if (smallest == arr[arr.Count - 4]) {\n           \
    \ return arr.Count - 4;\n        }\n        if (largest == arr[arr.Count - 5])\
    \ {\n            return arr.Count - 5;\n        }\n        if (smallest == arr[arr.Count\
    \ - 5]) {\n            return arr.Count - 5;\n        }\n        if (largest ==\
    \ arr[arr.Count - 6]) {\n            return arr.Count - 6;\n        }\n      \
    \  if (smallest == arr[arr.Count - 6]) {\n            return arr.Count - 6;\n\
    \        }\n        if (largest == arr[arr.Count - 7]) {\n            return arr.Count\
    \ - 7;\n        }\n        if (smallest == arr[arr.Count - 7]) {\n           \
    \ return arr.Count - 7;\n        }\n        if (largest == arr[arr.Count - 8])\
    \ {\n            return arr.Count - 8;\n        }\n        if (smallest == arr[arr.Count\
    \ - 8]) {\n            return arr.Count - 8;\n        }\n        if (largest ==\
    \ arr[arr.Count - 9]) {\n            return arr.Count - 9;\n        }\n      \
    \  if (smallest == arr[arr.Count - 9]) {\n            return arr.Count - 9;\n\
    \        }\n        if (largest == arr[arr.Count - 10]) {\n            return\
    \ arr.Count - 10;\n        }\n        if (smallest == arr[arr.Count - 10]) {\n\
    \            return arr.Count - 10;\n        }\n        if (largest == arr[arr.Count\
    \ - 11]) {\n            return arr.Count - 11;\n        }\n        if (smallest\
    \ == arr[arr.Count - 11]) {\n            return arr.Count - 11;\n        }\n \
    \       if (largest == arr[arr.Count - 12]) {\n            return arr.Count -\
    \ 12;\n        }\n        if (smallest == arr[arr.Count - \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuvuimwhf.cs(103,40): error CS1525: Invalid expression term ''}''

    /tmp/tmpuvuimwhf.cs(103,40): error CS1003: Syntax error, '']'' expected

    /tmp/tmpuvuimwhf.cs(103,40): error CS1026: ) expected

    /tmp/tmpuvuimwhf.cs(103,40): error CS1002: ; expected

    '
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > current) {\n                current = i;\n            }\n  \
    \          if (i < previous) {\n                previous = i;\n            }\n\
    \        }\n        if (current > largest) {\n            largest = current;\n\
    \        }\n        if (previous > largest) {\n            largest = previous;\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1972179ee87f4d68a25c1827df7219a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1972179ee87f4d68a25c1827df7219a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   long temp = 0;\n        for (int i = 1; i < arr.Count; i++) {\n          \
    \  if (arr[i] > largest) {\n                temp = largest;\n                largest\
    \ = arr[i];\n                index = i;\n            }\n        }\n        return\
    \ index;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f6db13d24ee435f9af612c42c76d510>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f6db13d24ee435f9af612c42c76d510>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   long currentIndex = 0;\n        foreach (long value in arr) {\n          \
    \  if (value > maxValue) {\n                maxIndex = currentIndex;\n       \
    \         maxValue = value;\n            }\n            currentIndex++;\n    \
    \    }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5f4f0640f26451eae66126a40018a53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5f4f0640f26451eae66126a40018a53>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        if (index == -1) {\n            return -1;\n        }\n        long previous\
    \ = arr.ElementAtOrDefault(index - 1);\n        if (previous >= largest) {\n \
    \           return -1;\n        }\n        return index;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgfkthjfa.cs(22,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        while (index > 0) {\n            long current = arr[index];\n       \
    \     if (current > largest) {\n                largest = current;\n         \
    \       index = arr.IndexOf(largest);\n            } else {\n                index--;\n\
    \            }\n        }\n        return largest;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnru5xnrm.cs(20,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792832
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long largestIndex = 0;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = arr[i];\n                largestIndex = i;\n  \
    \          }\n        }\n        return largestIndex;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b2b1de7b4834d1297ba037f67cce2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b2b1de7b4834d1297ba037f67cce2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] < smallest) {\n                index = i;\n              \
    \  smallest = arr[i];\n            }\n            if (arr[i] > largest) {\n  \
    \              index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2700f3e9f9974a98b049bcfc4ca3f445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2700f3e9f9974a98b049bcfc4ca3f445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long min = 0;\n        long\
    \ maxIndex = 0;\n        foreach (long i in arr) {\n            if (i > max) {\n\
    \                max = i;\n                maxIndex = i;\n            }\n    \
    \        if (i < min) {\n                min = i;\n            }\n        }\n\
    \        if (maxIndex == arr.First()) {\n            return -1;\n        }\n \
    \       if (maxIndex == arr.Last()) {\n            return arr.Last();\n      \
    \  }\n        if (maxIndex - min == arr.Count - 1) {\n            return arr.Last();\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0e6374f7b9242f08aaff00f10350702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0e6374f7b9242f08aaff00f10350702>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = arr.IndexOf(largest);\n                largest = i;\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cb8e9a7b761b4e4ea57e12b2041da259>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < current) {\n                current = i;\n            }\n \
    \           if (i > previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c8a1718ce5064dc484b1d0cc3bc0b8b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long largest = arr.First();\n        foreach (long i in arr) {\n          \
    \  if (i <= largest) {\n                currentIndex++;\n                if (currentIndex\
    \ > maxIndex) {\n                    maxIndex = currentIndex;\n              \
    \  }\n            }\n            else {\n                currentIndex = 0;\n \
    \           }\n            largest = i;\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85231385c3b34d909a042e965afae60e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85231385c3b34d909a042e965afae60e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long currentIndex = 0;\n      \
    \  long currentValue = arr[0];\n        long previousValue = currentValue;\n \
    \       foreach (long value in arr) {\n            if (value > currentValue) {\n\
    \                currentIndex = currentValue;\n                currentValue =\
    \ value;\n            }\n            if (value > previousValue) {\n          \
    \      maxIndex = currentIndex;\n            }\n            previousValue = value;\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <625a5d49df0d4290966b95d7b54999fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <625a5d49df0d4290966b95d7b54999fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long index = 0;\n        while (current <= arr.Last()) {\n          \
    \  current = arr.ElementAtOrDefault(index++);\n            if (current > largest)\
    \ {\n                largest = current;\n            }\n        }\n        return\
    \ largest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp805pvl41.cs(21,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d11787e3170443e58a9ff9fb538c0af7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d11787e3170443e58a9ff9fb538c0af7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long largestIndex = 0;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                largest = arr[i];\n                largestIndex = i;\n  \
    \          }\n        }\n        return largestIndex;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b2b1de7b4834d1297ba037f67cce2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b2b1de7b4834d1297ba037f67cce2a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.Max();\n        long min = arr.Min();\n     \
    \   long mid = max / 2;\n        long left = 0;\n        long right = 0;\n   \
    \     long maxIndex = 0;\n        long minIndex = 0;\n        bool found = false;\n\
    \        foreach (long i in arr) {\n            if (i > mid) {\n             \
    \   right++;\n                if (right > max) {\n                    maxIndex\
    \ = max;\n                    max = right;\n                }\n              \
    \  if (i == mid) {\n                    found = true;\n                }\n   \
    \         }\n            if (i < mid) {\n                left++;\n           \
    \     if (left > min) {\n                    minIndex = min;\n               \
    \     min = left;\n                }\n                if (i == mid) {\n      \
    \              found = true;\n                }\n            }\n        }\n  \
    \      if (!found) {\n            return -1;\n        }\n        if (maxIndex\
    \ < minIndex) {\n            return -1;\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <158c3658916a4b1087db2d67331cdea8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <158c3658916a4b1087db2d67331cdea8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                largest = arr[i];\n                index = i;\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c34dbab4624fe587a340366194fc9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56c34dbab4624fe587a340366194fc9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long current = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < current) {\n                current = i;\n            }\n \
    \           if (i == previous) {\n                previous = i;\n            }\n\
    \        }\n        return largest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75025a71b42a45578fc57b9cf4cd4d9a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <75025a71b42a45578fc57b9cf4cd4d9a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (long i in arr) {\n            if (i > largest) {\n         \
    \       largest = i;\n            }\n            if (i < smallest) {\n       \
    \         smallest = i;\n            }\n        }\n        if (largest == smallest)\
    \ {\n            return -1;\n        }\n        return arr.IndexOf(largest);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d17b7d7dde8940f48c956c56fe7de80c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.Last();\n\
    \        long largestIndex = arr.IndexOf(largest);\n        long smallestIndex\
    \ = arr.IndexOf(smallest);\n        if (largestIndex < smallestIndex) {\n    \
    \        return -1;\n        }\n        long currentIndex = largestIndex;\n  \
    \      while (currentIndex < arr.Count - 1) {\n            if (arr[currentIndex]\
    \ <= arr[currentIndex + 1]) {\n                currentIndex++;\n            }\
    \ else {\n                return currentIndex;\n            }\n        }\n   \
    \     return currentIndex;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0imt1oj.cs(26,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpx0imt1oj.cs(26,42): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        foreach (var item in arr.Skip(1))\n        {\n            if (item <\
    \ smallest || item > largest)\n            {\n                return -1;\n   \
    \         }\n            else if (item < smallest)\n            {\n          \
    \      smallest = item;\n            }\n            else if (item > largest)\n\
    \            {\n                largest = item;\n            }\n        }\n  \
    \      return largest;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
    \ (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L,\
    \ (long)8L, (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) ==\
    \ (4L));\n    Debug.Assert(CanArrange((new List<long>())) == (-1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c86d881bf8b64b5b8856302ddb36c4d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c86d881bf8b64b5b8856302ddb36c4d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = 0;\n        long maxValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxValue = arr[i];\n                maxIndex = i;\n         \
    \   }\n        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f53ac83dbf6458ca752dc91a4831638>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60a7390054dc47de8d982dd94076a426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] < largest) {\n\
    \                index = i;\n                largest = arr[i];\n            }\n\
    \        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad95ec7bd1eb458dacae0848452f0e67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad95ec7bd1eb458dacae0848452f0e67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   foreach (long i in arr) {\n            if (i > largest) {\n              \
    \  index = i;\n                largest = i;\n            }\n        }\n      \
    \  return index;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e6086c19bc74683b4674967f597e142>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d7fbbf32d44472904357cdd3348125>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long maxIndex = -1;\n        long maxValue = arr[0];\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6100aabc94045f9b97dca4ba56420ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792831
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long index = 0;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] >= largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be387c5f8ec544fc8038108b25266d87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792830
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = arr.First();\n        long maxIndex = -1;\n     \
    \   for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n \
    \               max = arr[i];\n                maxIndex = i;\n            }\n\
    \        }\n        return maxIndex;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d3c577f34eaa443a983efe9ee5928572>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792829
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long largest = arr.First();\n        long smallest = arr.First();\n\
    \        long largestIndex = 0;\n        long smallestIndex = 0;\n        foreach\
    \ (long i in arr) {\n            if (i > largest) {\n                largest =\
    \ i;\n                largestIndex = i;\n            }\n            if (i < smallest)\
    \ {\n                smallest = i;\n                smallestIndex = i;\n     \
    \       }\n        }\n        if (largest == smallest) {\n            return -1;\n\
    \        }\n        if (largest == arr[arr.Count - 1]) {\n            return arr.Count\
    \ - 1;\n        }\n        if (smallest == arr[0]) {\n            return 0;\n\
    \        }\n        if (smallest == arr[arr.Count - 1]) {\n            return\
    \ arr.Count - 1;\n        }\n        if (largest == arr[arr.Count - 2]) {\n  \
    \          return arr.Count - 2;\n        }\n        if (largest == arr[arr.Count\
    \ - 3]) {\n            return arr.Count - 3;\n        }\n        if (largest ==\
    \ arr[arr.Count - 4]) {\n            return arr.Count - 4;\n        }\n      \
    \  if (largest == arr[arr.Count - 5]) {\n            return arr.Count - 5;\n \
    \       }\n        if (largest == arr[arr.Count - 6]) {\n            return arr.Count\
    \ - 6;\n        }\n        if (largest == arr[arr.Count - 7]) {\n            return\
    \ arr.Count - 7;\n        }\n        if (largest == arr[arr.Count - 8]) {\n  \
    \          return arr.Count - 8;\n        }\n        if (largest == arr[arr.Count\
    \ - 9]) {\n            return arr.Count - 9;\n        }\n        if (largest ==\
    \ arr[arr.Count - 10]) {\n            return arr.Count - 10;\n        }\n    \
    \    if (largest == arr[arr.Count - 11]) {\n            return arr.Count - 11;\n\
    \        }\n        if (largest == arr[arr.Count - 12]) {\n            return\
    \ arr.Count - 12;\n        }\n        if (largest == arr[arr.Count - 13]) {\n\
    \            return arr.Count - 13;\n        }\n        if (largest == arr[arr.Count\
    \ - 14]) {\n            return arr.Count - 14;\n        }\n        if (largest\
    \ == arr[arr.Count - 15]) {\n            return arr.Count - 15;\n        }\n \
    \       if (largest == arr[arr.Count - 16]) {\n            return arr.Count -\
    \ 16;\n        }\n        if (largest == arr[arr.Count - 17]) {\n            return\
    \ arr.Count - 17;\n        }\n        if (largest == arr[arr.Count - 18]) {\n\
    \            return arr.Count - 18;\n        }\n        if (largest == arr[arr.Count\
    \ - 19]) {\n            return arr.Count - 19;\n        }\n        if (largest\
    \ == arr[arr.Count - 20]) {\n            return arr.Count - 20;\n        }\n \
    \       if (largest == arr[arr.Count - 21]) {\n            return arr.Count -\
    \ 21;\n        }\n        if (largest == arr[arr.Count - 22\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) == (3L));\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)5L}))) == (-1L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)4L, (long)2L,\
    \ (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)10L}))) == (2L));\n\
    \    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L, (long)8L, (long)5L,\
    \ (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new List<long>()))\
    \ == (-1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe1tezvjq.cs(103,42): error CS1003: Syntax error, '']'' expected

    /tmp/tmpe1tezvjq.cs(103,42): error CS1026: ) expected

    /tmp/tmpe1tezvjq.cs(103,42): error CS1525: Invalid expression term ''}''

    /tmp/tmpe1tezvjq.cs(103,42): error CS1002: ; expected

    '
  timestamp: 1659792833
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Create a function which returns the largest index of an\
    \ element which\n    // is not greater than or equal to the element immediately\
    \ preceding it. If\n    // no such element exists then return -1. The given array\
    \ will not contain\n    // duplicate values.\n    // Examples:\n    // can_arrange([1,2,4,3,5])\
    \ = 3\n    // can_arrange([1,2,3]) = -1\n    public static long CanArrange(List<long>\
    \ arr) {\n        long max = -1;\n        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        foreach (long i in arr) {\n\
    \            if (currentValue < i) {\n                currentIndex = currentValue;\n\
    \                currentValue = i;\n            }\n            if (currentValue\
    \ > i) {\n                currentIndex = currentValue;\n                currentValue\
    \ = i;\n            }\n            if (currentValue == i) {\n                currentIndex\
    \ = currentValue;\n                currentValue = i;\n            }\n        \
    \    if (currentValue > max) {\n                max = currentValue;\n        \
    \        maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
    \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L,\
    \ (long)9L, (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new\
    \ long[]{(long)4L, (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
    \ List<long>())) == (-1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d29ea08f328f434aaadf12a2b963fb40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d29ea08f328f434aaadf12a2b963fb40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792833

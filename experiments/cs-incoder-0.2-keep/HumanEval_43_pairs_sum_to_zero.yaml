name: HumanEval_43_pairs_sum_to_zero
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n  \
  \  // it returns True if there are two distinct elements in the list that\n    //\
  \ sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
  \    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n    //\
  \ >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
  \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
  \    public static bool PairsSumToZero(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)0L}))) == (false));\n\
  \    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)-2L, (long)1L}))) == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)7L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L})))\
  \ == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)3L, (long)2L, (long)30L}))) == (true));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)3L, (long)2L, (long)31L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)4L, (long)2L, (long)30L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)4L, (long)2L, (long)31L})))\
  \ == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        foreach (long x in l) {\n          \
    \  sum += x;\n        }\n        if (sum == 0) {\n            return true;\n \
    \       }\n        long lastSum = 0;\n        foreach (long x in l) {\n      \
    \      lastSum += x;\n            if (lastSum == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        long sum =\
    \ 0;\n        foreach (long i in l) {\n            sum += i;\n        }\n    \
    \    return l.Distinct().Count() == l.Count() && sum == 0;", "        long sum\
    \ = 0;\n        foreach (long i in l) {\n            sum += i;\n        }\n  \
    \      long zero = 0;\n        foreach (long i in l) {\n            if (i == 0)\
    \ {\n                zero = 0;\n            }\n            else if (i == -1) {\n\
    \                zero = -1;\n            }\n            else {\n             \
    \   zero += i;\n            }\n        }\n        return sum == zero;", "    \
    \    long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n \
    \       }\n        if (sum == 0) {\n            return false;\n        }\n   \
    \     List<long> pairs = new List<long>();\n        foreach (long i in l) {\n\
    \            long j = sum - i;\n            if (j > 0) {\n                pairs.Add(i);\n\
    \                pairs.Add(j);\n            }\n        }\n        if (pairs.Count\
    \ == 2) {\n            return true;\n        }\n        return false;", "    \
    \    long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n \
    \       }\n        long zero = 0;\n        foreach (long i in l) {\n         \
    \   if (i == 0) {\n                zero = 0;\n                break;\n       \
    \     }\n            zero += i;\n        }\n        return sum == zero;", "  \
    \      long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     long sum2 = 0;\n        foreach (long i in l) {\n            sum2 += i;\n\
    \        }\n        if (sum2 == 0) {\n            return true;\n        }\n  \
    \      return false;", "        long sum = 0;\n        foreach (long x in l)\n\
    \            sum += x;\n        long zero = 0;\n        foreach (long x in l)\n\
    \            zero += x;\n        return sum == zero;", "        long sum = 0;\n\
    \        foreach (long i in l) {\n            sum += i;\n        }\n        long\
    \ zero = 0;\n        foreach (long i in l) {\n            zero += i;\n       \
    \ }\n        return sum == zero;", "        long sum = 0;\n        foreach (long\
    \ i in l) {\n            sum += i;\n        }\n        if (sum == 0) {\n     \
    \       return true;\n        }\n        long sum2 = 0;\n        foreach (long\
    \ i in l) {\n            sum2 += i;\n        }\n        return sum == sum2;",
  "        long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n\
    \        }\n        bool result = false;\n        foreach (long i in l) {\n  \
    \          result += (i == 0);\n        }\n        return result;", "        long\
    \ sum = 0;\n        foreach (long i in l) {\n            sum += i;\n        }\n\
    \        long zero = 0;\n        foreach (long i in l) {\n            zero +=\
    \ i;\n        }\n        return sum == zero;", "        long sum = 0;\n      \
    \  foreach (long i in l) {\n            sum += i;\n        }\n        long zero\
    \ = 0;\n        foreach (long i in l) {\n            zero += i;\n        }\n \
    \       return sum == zero;", "        long sum = 0;\n        foreach (long i\
    \ in l) {\n            sum += i;\n        }\n        if (sum == 0) {\n       \
    \     return true;\n        }\n        long sum2 = 0;\n        foreach (long i\
    \ in l) {\n            sum2 += i;\n        }\n        return sum == sum2;", " \
    \       long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n\
    \        }\n        long zero = 0;\n        foreach (long i in l) {\n        \
    \    zero += i;\n        }\n        return sum == zero;", "        long sum =\
    \ 0;\n        foreach (var x in l) {\n            sum += x;\n        }\n     \
    \   bool found = false;\n        foreach (var x in l) {\n            long y =\
    \ x - sum;\n            if (y == 0) {\n                found = true;\n       \
    \         break;\n            }\n            sum += y;\n        }\n        return\
    \ found;", "        if (l.Count < 2) return false;\n        long sum = 0;\n  \
    \      foreach (long x in l) {\n            sum += x;\n        }\n        if (sum\
    \ == 0) return false;\n        long sum2 = 0;\n        foreach (long x in l) {\n\
    \            sum2 += x;\n            if (sum2 == sum) return true;\n        }\n\
    \        return false;", "        long sum = 0;\n        foreach (var x in l)\n\
    \            sum += x;\n        if (sum == 0)\n            return false;\n   \
    \     long lastSum = 0;\n        foreach (var x in l)\n            lastSum +=\
    \ x;\n        if (lastSum == 0)\n            return false;\n        long lastSum2\
    \ = lastSum;\n        foreach (var x in l)\n            lastSum2 -= x;\n     \
    \   if (lastSum2 == 0)\n            return true;\n        return false;", "  \
    \      long sum = 0;\n        foreach (var i in l) {\n            sum += i;\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     long sum2 = 0;\n        foreach (var i in l) {\n            sum2 += i;\n\
    \            if (sum2 == 0) {\n                return true;\n            }\n \
    \       }\n        return false;", "        long sum = 0;\n        foreach (var\
    \ i in l) {\n            sum += i;\n        }\n        if (sum == 0) {\n     \
    \       return false;\n        }\n        long sum2 = 0;\n        foreach (var\
    \ i in l) {\n            sum2 += i;\n        }\n        return sum == sum2;",
  "        long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n\
    \        }\n        long zero = 0;\n        foreach (long i in l) {\n        \
    \    zero += i;\n        }\n        return sum == zero;"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_14_all_prefixes",
  "language": "pl",
  "prompt": "# Return array of all prefixes from shortest to longest of the input string\n# >>> all_prefixes(\"abc\")\n# [\"a\", \"ab\", \"abc\"]\nsub all_prefixes {\n    my($string) = @_;\n",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&all_prefixes;\n        if(eq_deeply($candidate->(\"\"),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"WWW\"),[\"W\", \"WW\", \"WWW\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "completions": [
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 and $string->{$j} eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string->{$j..$i};\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 and $string->{$j} eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string->{$j..$i};\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        else {\n            push @prefixes, $prefix . \"\";\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@$string) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $prefix[$j]) {\n            $j++;\n        }\n        $prefixes = push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@$string) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        $i++;\n        if ($i > 1) {\n            push @prefixes, \"\";\n        }\n        push @prefixes, \"\".$c;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix ne \"\") {\n            push @prefixes, $prefix;\n        }\n        $prefix = $prefix . \"\";\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    while ($prefix =~ /^(.)\\1*$/) {\n        push @prefixes, $prefix;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@$string) {\n        my $j = $i;\n        while ($j >= 0 and $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string->{$j} eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string->{$j..$i};\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    while ($prefix =~ /^[^\\s]*/) {\n        $prefix = $1;\n        @prefixes = @prefixes + [$prefix];\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($j) = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = substr($string, 0, $j);\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix eq \"\") {\n            push @prefixes, $prefix;\n        } else {\n            push @prefixes, $prefix;\n            push @prefixes, $prefix . substr($prefix, -1);\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@$string) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        if (length($prefix) > 1) {\n            push @prefixes, $prefix;\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 and $string->{$j} eq $c) {\n            $j--;\n        }\n        my $prefix = $string->{$j..$i};\n        if ($prefix eq \"\") {\n            push @prefixes, $c;\n        } else {\n            push @prefixes, $prefix;\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@string) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] eq $c) {\n            $j--;\n        }\n        $i = $j + 1;\n        if ($i > 0) {\n            push @prefixes, $string[0..$i];\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($result) = [];\n    my $i = 0;\n    while($i < length($string)) {\n        $result = [$string[0..$i]];\n        $i++;\n    }\n    return $result;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    while ($prefix =~ /^[^\\s]+/) {\n        $prefix = $1;\n        push @prefixes, $prefix;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        else {\n            push @prefixes, $prefix;\n            push @prefixes, $prefix . substr($prefix, -1);\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        my $j = $i + 1;\n        while ($j < length($string)) {\n            my $substring = substr($string, $i, $j - $i);\n            if ($substring eq $prefix) {\n                push @prefixes, $prefix;\n                $j = length($string);\n            } else {\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    while ($prefix =~ /^[^\\s]/) {\n        my $prefix = $prefix;\n        my $prefix_len = length $prefix;\n        my $prefix_str = substr $prefix, 0, $prefix_len;\n        my $prefix_len_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str_str_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str_str_str_str_str = sprintf(\"%s\", $prefix_str);\n        my $prefix_len_str_str_str_str_str_str_str_str = sprintf(\"%d\", $prefix_len);\n        my $prefix_str_str_str_str_str_str_str_str_str = sprintf(\"%",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $char ( @$string ) {\n        $prefix .= $char;\n        if ( length(@prefixes) == 0 || length(@prefixes) == 1 ) {\n            push @prefixes, $prefix;\n        } else {\n            push @prefixes, $prefix . \"\";\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $prefix[$j]) {\n            $j++;\n        }\n        $i = $j;\n        push @prefixes, $prefix;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        $i++;\n        if ($i > 1) {\n            push @prefixes, \"\";\n        }\n        push @prefixes, \"\".$c;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        $i++;\n        while ($j >= 0 && $string->{$j} eq $c) {\n            $j--;\n        }\n        push @prefixes, $string->{$j..$i-1};\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix eq \"\") {\n            push @prefixes, $prefix;\n        } else {\n            push @prefixes, $prefix;\n            push @prefixes, $prefix . $c;\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@string) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] eq $c) {\n            $j--;\n        }\n        my $prefix = $string[$i..$j];\n        if ($prefix ne \"\") {\n            push @prefixes, $prefix;\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = $string[0..$i];\n        push @prefixes, $prefix;\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = 0;\n        while($j < length($string) - $i) {\n            $prefixes = push($prefixes, $string[$i, $j]);\n            $j += 1;\n        }\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 and $string->{$j} eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string->{$j..$i};\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = $string[$i..$j];\n        $i = $j;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes;\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@$string) {\n        my $j = $i;\n        while ($j >= 0 and $string[$j] eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        $i++;\n        if ($i == 1) {\n            continue;\n        }\n        my $prefix = $string . substr(0, $i);\n        push @prefixes, $prefix;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = $string[$i..$j];\n        $i = $j;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes = $prefixes + [$string[$i..$j]];\n        $i = $j;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $prefix = $c;\n        $i++;\n        while ($i < length($prefix)) {\n            $prefix = substr($prefix, 0, $i);\n            push @prefixes, $prefix;\n            $i++;\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        $i++;\n        if ($i > 1) {\n            push @prefixes, \"\";\n        }\n        push @prefixes, $c;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = $string[0..$i];\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $prefix) {\n            $j++;\n        }\n        my $prefix_len = $j - $i;\n        if ($prefix_len > 0) {\n            push @prefixes, $prefix;\n        }\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = $string[$i..$j];\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = $string[0..$i];\n        push @prefixes, $prefix;\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix eq \"\") {\n            push @prefixes, $prefix;\n        } else {\n            push @prefixes, $prefix;\n            push @prefixes, $prefix . substr($prefix, -1);\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = substr($string, 0, $j);\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = substr($string, 0, $j);\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 and $string[$j] eq $c) {\n            $j--;\n        }\n        $i++;\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        $i++;\n        if ($i > 1) {\n            push @prefixes, \"\";\n        }\n        push @prefixes, \"\".$c;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $char ( @{$string} ) {\n        $prefix = $prefix . $char;\n        if ( length($prefix) > 0 ) {\n            push(@prefixes, $prefix);\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@$string) {\n        $i++;\n        if ($i == 1) {\n            continue;\n        }\n        my $prefix = $string;\n        $prefix =~ s/($i)/$c/g;\n        push @prefixes, $prefix;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        else {\n            push @prefixes, $prefix . \"\";\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        else {\n            push @prefixes, $prefix . \" \";\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i..$j];\n        if ($prefix eq \"\") {\n            push @prefixes, \"\";\n        } else {\n            push @prefixes, $prefix;\n        }\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes . $string[0..$i];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    foreach my $c (@{$string}) {\n        my $j = $i;\n        while ($j >= 0 && $string[$j] ne $c) {\n            $j--;\n        }\n        if ($j >= 0) {\n            push @prefixes, $string[0..$j];\n        }\n        $i++;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix eq \"\") {\n            push @prefixes, $prefix;\n        } else {\n            push @prefixes, $prefix;\n            push @prefixes, $prefix . \"a\";\n            push @prefixes, $prefix . \"b\";\n            push @prefixes, $prefix . \"c\";\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes[++$i] = substr($string, 0, $j);\n        $i++;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        push @prefixes, $prefix;\n        $i += 1;\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        if (length($prefix) > 1) {\n            push @prefixes, $prefix;\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $j = $i;\n        while ($j < length($string) && $string[$j] eq $string[$i]) {\n            $j++;\n        }\n        my $prefix = $string[$i, $j];\n        push @prefixes, $prefix;\n        $i = $j;\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = [$prefix, $prefixes];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if ($prefix ne \"\") {\n            push @prefixes, $prefix;\n        }\n    }\n    return @prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my @prefixes = ();\n    my $prefix = \"\";\n    foreach my $c (@{$string}) {\n        $prefix = $prefix . $c;\n        if (length($prefix) == 1) {\n            push @prefixes, $prefix;\n        }\n        if (length($prefix) > 1) {\n            push @prefixes, $prefix;\n        }\n    }\n    return @prefixes;\n}",
    "    my @prefixes = ();\n    my $i = 0;\n    while ($i < length($string)) {\n        my $prefix = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($j) = $i;\n        while($j < length($string) && $string[$j] == $string[$i]) {\n            $j++;\n        }\n        $prefixes = $prefixes + [$string[$i..$j]];\n        $i = $j;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        $prefixes = $prefixes + [$string[$i]];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($prefixes) = [];\n    my($i) = 0;\n    while($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $prefixes = $prefixes + [$prefix];\n        $i += 1;\n    }\n    return $prefixes;\n}",
    "    my($result) = [];\n    my($i) = 0;\n    while ($i < length($string)) {\n        my($prefix) = substr($string, 0, $i);\n        $result = [$prefix] unless $result;\n        $i += 1;\n    }\n    return $result;\n}"
  ],
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ]
}
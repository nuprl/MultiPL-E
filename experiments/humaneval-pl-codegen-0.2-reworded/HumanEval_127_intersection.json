{
  "name": "HumanEval_127_intersection",
  "language": "pl",
  "prompt": "# You are given two intervals,\n# where each interval is a pair of integers. For example, interval = (start, end) = (1, 2).\n# The given intervals are closed which means that the interval (start, end)\n# includes both start and end.\n# For each given interval, it is assumed that its start is less or equal its end.\n# Your task is to determine whether the length of intersection of these two \n# intervals is a prime number.\n# Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n# If the length of the intersection is a prime number, return \"YES\",\n# otherwise, return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output] samples:\n# >>> intersection([1, 2], [2, 3])\n# \"NO\"\n# >>> intersection([-1, 1], [0, 4])\n# \"NO\"\n# >>> intersection([-3, -1], [-5, 5])\n# \"YES\"\nsub intersection {\n    my($interval1, $interval2) = @_;\n",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&intersection;\n        if(eq_deeply($candidate->([1, 2], [2, 3]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, 1], [0, 4]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3, -1], [-5, 5]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2, 2], [-4, 0]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-11, 2], [-1, -1]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 5]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [1, 2]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2, -2], [-3, -2]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "completions": [
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start1 <= $end2 && $end1 >= $start2) {\n            $prime = 0;\n            break;\n        }\n        if ($start2 <= $end1 && $end2 >= $start1) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $prime = $intersection and is_prime($end1 - $start1 + 1);\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    if ($intersection) {\n        my $length = abs($start1 - $end2) + abs($start2 - $end1);\n        my $prime = $length % 2 == 0;\n        if ($prime) {\n            return \"YES\";\n        }\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1;\n    my $intersect_length = $interval1;\n    my $intersect_start = $interval1;\n    my $intersect_end = $interval1;\n    my $intersect_start_end = $interval1;\n    my $intersect_end_start = $interval1;\n    my $intersect_start_end_length = $interval1;\n    my $intersect_end_start_length = $interval1;\n    my $intersect_start_end_end = $interval1;\n    my $intersect_end_start_end = $interval1;\n    my $intersect_start_end_end_length = $interval1;\n    my $intersect_end_start_end_length = $interval1;\n    my $intersect_start_end_end_end = $interval1;\n    my $intersect_end_start_end_end = $interval1;\n    my $intersect_start_end_end_end_length = $interval1;\n    my $intersect_end_start_end_end_length = $interval1;\n    my $intersect_start_end_end_end_end = $interval1;\n    my $intersect_end_start_end_end_end = $interval1;\n    my $intersect_start_end_end_end_end_length = $interval1;\n    my $intersect_end_start_end_end_end_length = $interval1;\n    my $intersect_start_end_end_end_end_end = $interval1;\n    my $intersect_end_start_end_end_end_end = $interval1;\n    my $intersect_start_end_end_end_end_end_length = $interval1;\n    my $intersect_end_start_end_end_end_end_length = $interval1;\n    my $intersect_start_end_end_end_end_end_end = $interval1;\n    my $intersect_end_start_end_",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = $intersection.length;\n    if ($intersection_length == 0) {\n        return \"NO\";\n    }\n    my $prime_number = is_prime($intersection_length);\n    if ($prime_number) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $prime = 1;\n    my $length = $end1 - $start1 + 1;\n    if ($length % 2 == 0) {\n        $prime = 0;\n    }\n    if ($intersect) {\n        my $length = $end2 - $start2 + 1;\n        if ($length % 2 == 0) {\n            $prime = 0;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        if ($start1 < $end1 && $start2 < $end2) {\n            if ($start1 + $i < $end1 && $start2 + $i < $end2) {\n                if ($start1 + $i == $end1 && $start2 + $i == $end2) {\n                    $prime = 0;\n                }\n            }\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_end_next = $interval1[1];\n    my $intersection_start_next = $interval1[0];\n    my $intersection_end_prev = $interval1[1];\n    my $intersection_start_prev = $interval1[0];\n    my $intersection_end_prev_next = $interval1[1];\n    my $intersection_start_prev_next = $interval1[0];\n    my $intersection_end_next_next = $interval1[1];\n    my $intersection_start_next_next = $interval1[0];\n    my $intersection_end_prev_prev = $interval1[1];\n    my $intersection_start_prev_prev = $interval1[0];\n    my $intersection_end_next_prev = $intersection1[1];\n    my $intersection_start_next_prev = $intersection1[0];\n    my $intersection_end_prev_prev_next = $intersection1[1];\n    my $intersection_start_prev_prev_next = $intersection1[0];\n    my $intersection_end_next_next_next = $intersection1[1];\n    my $intersection_start_next_next_next = $intersection1[0];\n    my $intersection_end_prev_prev_prev = $intersection1[1];\n    my $intersection_start_prev_prev_prev = $intersection1[0];\n    my $intersection_end_next_prev_prev = $intersection1[1];\n    my $intersection_start_next_prev_prev = $intersection1[0];\n    my $intersection_end_prev_prev_prev_next = $intersection1[1];\n    my $intersection_start_prev_prev_prev_next = $intersection1[0];\n    ",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = $length % 2 == 0;\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersect = $interval1 + $interval2;\n    my $intersect_len = abs($intersect - $interval1) + abs($intersect - $interval2);\n    my $intersect_prime = $intersect_len % 2 == 0;\n    return $intersect_prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ($i >= $start2 and $i <= $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    if ($intersect) {\n        my $min = min($start1, $start2);\n        my $max = max($end1, $end2);\n        my $length = $max - $min + 1;\n        my $is_prime = is_prime($length);\n        if ($is_prime) {\n            $result = $length;\n        }\n    }\n    return $result ? \"YES\" : \"NO\";\n}",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $intersect_prime = is_prime $intersect_len;\n    if ($intersect_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 1;\n    my $intersection_prime_length_2 = 1;\n    my $intersection_prime_length_3 = 1;\n    my $intersection_prime_length_4 = 1;\n    my $intersection_prime_length_5 = 1;\n    my $intersection_prime_length_6 = 1;\n    my $intersection_prime_length_7 = 1;\n    my $intersection_prime_length_8 = 1;\n    my $intersection_prime_length_9 = 1;\n    my $intersection_prime_length_10 = 1;\n    my $intersection_prime_length_11 = 1;\n    my $intersection_prime_length_12 = 1;\n    my $intersection_prime_length_13 = 1;\n    my $intersection_prime_length_14 = 1;\n    my $intersection_prime_length_15 = 1;\n    my $intersection_prime_length_16 = 1;\n    my $intersection_prime_length_17 = 1;\n    my $intersection_prime_length_18 = 1;\n    my $intersection_prime_length_19 = 1;\n    my $intersection_prime_length_20 = 1;\n    my $intersection_prime_length_21 = 1;\n    my $intersection_prime_length_22 = 1;\n    my $intersection_prime_length_23 = 1;\n    my $intersection_prime_length_24 = 1;\n    my $intersection_prime_length_25 = 1;\n    my $intersection_prime_length_26 = 1;\n    my $intersection_prime_length_27 = 1;\n    my $intersection_prime_length_28 = 1;\n    my $intersection_prime_length_29 = 1;\n    my $intersection_prime_length_30 = 1;\n    my $intersection_prime_length_31 = 1;\n    my $intersection_prime_length_32 =",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    if ($intersection) {\n        my $length = abs($start1 - $end2) + abs($start2 - $end1);\n        my $prime = 1;\n        foreach my $i (0..$length) {\n            if ($i % $prime != 0) {\n                $prime = 0;\n                break;\n            }\n        }\n        return $prime ? \"YES\" : \"NO\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = $intersection.length;\n    my $intersection_is_prime = is_prime($intersection_length);\n    if ($intersection_is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    if ($length == 1) {\n        return \"NO\";\n    }\n    if ($length % 2 == 0) {\n        $prime = 0;\n    }\n    if ($length == 2) {\n        $prime = 1;\n    }\n    if ($length % 3 == 0) {\n        $prime = 0;\n    }\n    if ($length == 3) {\n        $prime = 1;\n    }\n    if ($length % 5 == 0) {\n        $prime = 0;\n    }\n    if ($length == 5) {\n        $prime = 1;\n    }\n    if ($length % 7 == 0) {\n        $prime = 0;\n    }\n    if ($length == 7) {\n        $prime = 1;\n    }\n    if ($length % 11 == 0) {\n        $prime = 0;\n    }\n    if ($length == 11) {\n        $prime = 1;\n    }\n    if ($length % 13 == 0) {\n        $prime = 0;\n    }\n    if ($length == 13) {\n        $prime = 1;\n    }\n    if ($length % 17 == 0) {\n        $prime = 0;\n    }\n    if ($length == 17) {\n        $prime = 1;\n    }\n    if ($length % 19 == 0) {\n        $prime = 0;\n    }\n    if ($length == 19) {\n        $prime = 1;\n    }\n    if ($length % 23 == 0) {\n        $prime = 0;\n    }\n    if ($length == 23) {\n        $prime = 1;\n    }\n    if ($length % 29 == 0) {\n        $prime = 0;\n    }\n    if ($length == 29) {\n        $prime = 1;\n    }\n    if ($length % 31 == 0) {\n        $prime = 0;\n    }\n    if ($length == 31",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $intersect_length = $end1 - $start1 + 1;\n    my $intersect_is_prime = $intersect_length % 2 == 0;\n    return $intersect_is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        if ($start1 <= $end2 && $end1 >= $start2) {\n            if ($start1 <= $i && $i <= $end1) {\n                $prime = 0;\n                break;\n            }\n            if ($start2 <= $i && $i <= $end2) {\n                $prime = 0;\n                break;\n            }\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $prime = 1;\n    my $i = 0;\n    while($i < $intersect_len) {\n        $i += 1;\n        if(!$prime) {\n            $prime = 0;\n            break;\n        }\n        $prime = 0;\n        for(my $j = 0; $j < $intersect_len; $j += 1) {\n            if($i == $j) {\n                continue;\n            }\n            if($intersect[$i] == $intersect[$j]) {\n                $prime = 1;\n                break;\n            }\n        }\n    }\n    if($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $i = 0;\n    while($prime == 1) {\n        $prime = is_prime($length);\n        $i++;\n        if($i > 100) {\n            return \"NO\";\n        }\n        $length = $length + 1;\n    }\n    return \"YES\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ?\n        ($start1, $end1) : ($start2, $end2);\n    my $length = abs($start - $end);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start <= $end) {\n            $prime = 0;\n            break;\n        }\n        $start -= 1;\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ($i > $end1) {\n            $prime = 0;\n            break;\n        }\n        $prime = 0;\n        foreach my $j (@{$interval2}) {\n            if ($i > $j) {\n                $prime = 0;\n                break;\n            }\n            if ($i == $j) {\n                $prime = 0;\n                break;\n            }\n            if ($i < $j) {\n                $prime = 0;\n                break;\n            }\n            $prime = 0;\n        }\n        if ($prime) {\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (1..$length) {\n        if (($start1 <= $start2 + $i) and ($start2 <= $start1 + $i)) {\n            if ($start1 + $i >= $end1 and $start2 + $i >= $end2) {\n                $prime = 0;\n                break;\n            }\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $i = 1;\n    while($i < $length) {\n        if($start1 > $end2) {\n            $start1 -= $i;\n        } else if($start2 > $end1) {\n            $start2 -= $i;\n        } else {\n            $start1 -= $i;\n            $start2 -= $i;\n        }\n        $i++;\n    }\n    if($start1 > $end2) {\n        $start1 -= $i;\n    } else if($start2 > $end1) {\n        $start2 -= $i;\n    }\n    $prime = $length - $i;\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = $end1 - $start1 + 1;\n    my $intersection = $start2 - $start1 + 1;\n    my $prime = 1;\n    my $is_prime = 0;\n    my $is_prime_candidate = $length % $intersection == 0;\n    while ($is_prime_candidate) {\n        $prime = $intersection;\n        $is_prime_candidate = $length % $prime == 0;\n    }\n    if ($prime == 1) {\n        $is_prime = 1;\n    }\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersect = $interval1;\n    my $intersect_len = $interval1;\n    my $intersect_start = $interval1;\n    my $intersect_end = $interval1;\n    my $intersect_start_len = $interval1;\n    my $intersect_end_len = $intersect_len;\n    my $intersect_start_end = $interval1;\n    my $intersect_start_end_len = $intersect_len;\n    my $intersect_start_end_start = $interval1;\n    my $intersect_start_end_start_len = $intersect_len;\n    my $intersect_start_end_end = $interval1;\n    my $intersect_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end = $interval1;\n    my $intersect_start_end_start_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start = $interval1;\n    my $intersect_start_end_start_end_start_len = $intersect_len;\n    my $intersect_start_end_start_end_end = $interval1;\n    my $intersect_start_end_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end = $interval1;\n    my $intersect_start_end_start_end_start_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end_start = $interval1;\n    my $intersect_start_end_start_end_start_end_start_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end_end = $interval1;\n    my $intersect_start_end_start_end_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end_",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $count = 0;\n    while($prime <= $length) {\n        $prime = $length % 2 ? $length : $length + 1;\n        $count++;\n    }\n    if($count == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $intersect_prime = is_prime($intersect_len);\n    if ($intersect_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $intersection = $start1 < $end1 and $start2 < $end2 and $start1 <= $start2 and $end1 >= $end2;\n    my $prime = 1;\n    foreach my $i (@{$intersection}) {\n        $prime = 0;\n        for my $j ($i + 1, $length) {\n            if ($j >= $length) {\n                break;\n            }\n            if ($j >= $i) {\n                $prime = 0;\n                break;\n            }\n            if ($j < $i) {\n                $prime = 1;\n                break;\n            }\n        }\n        if (!$prime) {\n            return \"NO\";\n        }\n    }\n    return \"YES\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start1 <= $end1 && $start2 <= $end2) {\n            if ($start1 <= $end2 && $start2 <= $end1) {\n                $prime = 0;\n            }\n        }\n        $length -= $i;\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        if ($start1 <= $start2 + $i && $end1 >= $end2 + $i) {\n            $prime = 0;\n            break;\n        }\n        if ($start1 + $i <= $start2 && $end1 + $i >= $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $divisor = 2;\n    while($divisor <= $length) {\n        if($start1 <= $end2 && $end1 >= $start2) {\n            if($start1 <= $start2 && $end1 >= $end2) {\n                $prime = 0;\n                break;\n            }\n            if($start1 <= $start2 && $end1 < $end2) {\n                $prime = 0;\n                break;\n            }\n            if($start1 > $start2 && $end1 < $end2) {\n                $prime = 0;\n                break;\n            }\n            if($start1 > $start2 && $end1 >= $end2) {\n                $prime = 0;\n                break;\n            }\n        }\n        if($start2 <= $end1 && $end2 >= $start1) {\n            if($start2 <= $start1 && $end2 >= $end1) {\n                $prime = 0;\n                break;\n            }\n            if($start2 <= $start1 && $end2 < $end1) {\n                $prime = 0;\n                break;\n            }\n            if($start2 > $start1 && $end2 < $end1) {\n                $prime = 0;\n                break;\n            }\n            if($start2 > $start1 && $end2 >= $end1) {\n                $prime = 0;\n                break;\n            }\n        }\n        $divisor += 1;\n    }\n    if($prime) {\n        return \"YES\";\n    }\n    else {\n        return \"NO\";\n    }\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $prime = 1;\n    if ($intersect) {\n        my $length = abs($start1 - $end2) + abs($start2 - $end1);\n        $prime = is_prime($length);\n    }\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ?\n        ($start1, $end1) : ($start2, $end2);\n    my $length = abs($start - $end);\n    my $prime = is_prime($length);\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1, $end1;\n    if ($start > $end) {\n        $start, $end = $end, $start;\n    }\n    if ($start > $end2 || $end < $start2) {\n        return \"NO\";\n    }\n    $start = max($start, $start2);\n    $end = min($end, $end2);\n    return $end - $start + 1;\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $prime = 1;\n    foreach my $i (@intersect) {\n        if ($i > $intersect_len) {\n            return \"NO\";\n        }\n        if ($i == $intersect_len) {\n            $prime = 0;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_end_plus_1 = $interval1[1] + 1;\n    my $intersection_end_minus_1 = $interval1[1] - 1;\n    my $intersection_start_minus_1 = $interval1[0] - 1;\n    my $intersection_start_plus_1 = $interval1[0] + 1;\n    my $intersection_start_plus_2 = $interval1[0] + 2;\n    my $intersection_end_plus_2 = $interval1[1] + 2;\n    my $intersection_end_minus_2 = $interval1[1] - 2;\n    my $intersection_start_minus_2 = $interval1[0] - 2;\n    my $intersection_start_minus_3 = $interval1[0] - 3;\n    my $intersection_end_minus_3 = $interval1[1] - 3;\n    my $intersection_start_plus_3 = $interval1[0] + 3;\n    my $intersection_end_plus_3 = $interval1[1] + 3;\n    my $intersection_end_minus_4 = $interval1[1] - 4;\n    my $intersection_start_minus_4 = $interval1[0] - 4;\n    my $intersection_start_minus_5 = $interval1[0] - 5;\n    my $intersection_end_minus_5 = $interval1[1] - 5;\n    my $intersection_start_plus_5 = $interval1[0] + 5;\n    my $intersection_end_plus_5 = $interval1[1] + 5;\n    my $intersection_end_minus_6 = $interval1[1] - 6;\n    my $intersection_start_minus_6 = $interval1[0] -",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $prime = 1;\n    my $divisor = 2;\n    while($divisor <= $length) {\n        if($length % $divisor == 0) {\n            $prime = 0;\n            break;\n        }\n        $divisor++;\n    }\n    if($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    if ($start1 <= $end2 and $start2 <= $end1) {\n        $result = $end1 - $start1 + 1;\n        if ($result < 1) {\n            return \"NO\";\n        }\n        if ($result % 2 == 0) {\n            return \"NO\";\n        }\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1 + $interval2;\n    my $prime = 1;\n    my $length = $intersect - $interval1;\n    my $prime_check = $length % 2 == 0;\n    if ($prime_check) {\n        $prime = $length / 2;\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersect = $interval1;\n    my $intersect_length = $interval1->[1] - $interval1->[0];\n    my $intersect_length_prime = $intersect_length;\n    my $intersect_prime = 1;\n    my $intersect_prime_length = 0;\n    my $intersect_prime_length_prime = 0;\n    my $intersect_prime_length_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = $intersection.length;\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersect = $interval1 + $interval2;\n    my $intersect_len = abs($intersect);\n    my $intersect_prime = 1;\n    my $intersect_prime_len = 0;\n    my $intersect_prime_start = 0;\n    my $intersect_prime_end = 0;\n    my $intersect_prime_start_len = 0;\n    my $intersect_prime_end_len = 0;\n    my $intersect_prime_start_prime = 0;\n    my $intersect_prime_end_prime = 0;\n    my $intersect_prime_start_prime_len = 0;\n    my $intersect_prime_end_prime_len = 0;\n    my $intersect_prime_start_prime_prime = 0;\n    my $intersect_prime_end_prime_prime = 0;\n    my $intersect_prime_start_prime_prime_len = 0;\n    my $intersect_prime_end_prime_prime_len = 0;\n    my $intersect_prime_start_prime_prime_prime = 0;\n    my $intersect_prime_end_prime_prime_prime = 0;\n    my $intersect_prime_start_prime_prime_prime_len = 0;\n    my $intersect_prime_end_prime_prime_prime_len = 0;\n    my $intersect_prime_start_prime_prime_prime_prime = 0;\n    my $intersect_prime_end_prime_prime_prime_prime = 0;\n    my $intersect_prime_start_prime_prime_prime_prime_len = 0;\n    my $intersect_prime_end_prime_prime_prime_prime_len = 0;\n    my $intersect_prime_start_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_end_prime_prime_prime_prime_prime = 0;\n    my $intersect_prime_start_prime_prime_prime_prime_prime_len = 0;\n    my $intersect_prime_end_prime_prime_prime_prime_prime_len = 0;\n    ",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    if ($intersection_length == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $intersection = $start1 < $end1 && $start2 < $end2 && $start1 <= $end2 && $start2 <= $end1;\n    if ($intersection) {\n        my $prime = 1;\n        my $i = $start1;\n        while ($i < $end1) {\n            my $j = $start2;\n            while ($j < $end2) {\n                if ($i == $j) {\n                    $prime = 0;\n                    break;\n                }\n                $j += 1;\n            }\n            if (!$prime) {\n                break;\n            }\n            $i += 1;\n        }\n        if ($prime) {\n            return \"YES\";\n        }\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1, $end1;\n    if ($start > $end) {\n        $start, $end = $end, $start;\n    }\n    if ($start < $start2 || $end > $end2) {\n        return \"NO\";\n    }\n    my $length = $end - $start;\n    my $intersection = $start2 - $start1 + 1;\n    if ($length % $intersection != 0) {\n        return \"NO\";\n    }\n    my $prime = $length / $intersection;\n    if ($prime < 2) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_start = $interval1;\n    my $intersection_length_prime_end = $interval1;\n    my $intersection_length_not_prime_start = $interval1;\n    my $intersection_length_not_prime_end = $interval1;\n    my $intersection_length_prime_start_prime = $interval1;\n    my $intersection_length_prime_end_prime = $interval1;\n    my $intersection_length_not_prime_start_prime = $interval1;\n    my $intersection_length_not_prime_end_prime = $interval1;\n    my $intersection_length_prime_start_not_prime = $interval1;\n    my $intersection_length_prime_end_not_prime = $interval1;\n    my $intersection_length_not_prime_start_not_prime = $interval1;\n    my $intersection_length_not_prime_end_not_prime = $interval1;\n    my $intersection_length_prime_start_not_prime_prime = $interval1;\n    my $intersection_length_prime_end_not_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_not_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_not_prime_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime = $interval1;\n    my $intersection_length_prime_start_not_",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $divisor = 2;\n    while($divisor <= $length) {\n        if($start1 <= $end2 && $end1 >= $start2) {\n            if($start1 <= $end2 && $end1 >= $start2) {\n                if($start1 <= $end2 && $end1 >= $start2) {\n                    if($start1 <= $end2 && $end1 >= $start2) {\n                        if($start1 <= $end2 && $end1 >= $start2) {\n                            if($start1 <= $end2 && $end1 >= $start2) {\n                                if($start1 <= $end2 && $end1 >= $start2) {\n                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                if($start1 <= $end2 && $end1 >= $start2) {\n                                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                                if($start1 <= $end2 && $end1 >= $start2) {\n                                                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                                                if($start1 <= $end2 && $end",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $prime_number = 0;\n    foreach my $i (@intersection) {\n        if ($i > 0) {\n            $prime_number += 1;\n        }\n    }\n    if ($prime_number == $intersection_length) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        $prime = 0;\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersect = $interval1 + $interval2;\n    my $intersect_len = abs($intersect - $interval1) + abs($intersect - $interval2);\n    my $intersect_prime = $intersect_len % 2 == 0;\n    return $intersect_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_length_prime = 0;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_prime = 0;\n    my $intersection_length_not_prime_prime = 0;\n    my $intersection_length_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 0;\n    my $intersection_prime_length_2 = 0;\n    my $intersection_prime_length_3 = 0;\n    my $intersection_prime_length_4 = 0;\n    my $intersection_prime_length_5 = 0;\n    my $intersection_prime_length_6 = 0;\n    my $intersection_prime_length_7 = 0;\n    my $intersection_prime_length_8 = 0;\n    my $intersection_prime_length_9 = 0;\n    my $intersection_prime_length_10 = 0;\n    my $intersection_prime_length_11 = 0;\n    my $intersection_prime_length_12 = 0;\n    my $intersection_prime_length_13 = 0;\n    my $intersection_prime_length_14 = 0;\n    my $intersection_prime_length_15 = 0;\n    my $intersection_prime_length_16 = 0;\n    my $intersection_prime_length_17 = 0;\n    my $intersection_prime_length_18 = 0;\n    my $intersection_prime_length_19 = 0;\n    my $intersection_prime_length_20 = 0;\n    my $intersection_prime_length_21 = 0;\n    my $intersection_prime_length_22 = 0;\n    my $intersection_prime_length_23 = 0;\n    my $intersection_prime_length_24 = 0;\n    my $intersection_prime_length_25 = 0;\n    my $intersection_prime_length_26 = 0;\n    my $intersection_prime_length_27 = 0;\n    my $intersection_prime_length_28 = 0;\n    my $intersection_prime_length_29 = 0;\n    my $intersection_prime_length_30 = 0;\n    my $intersection_prime_length_31 = 0;\n    my $intersection_prime_length_32 =",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    if ($length < 0) {\n        return \"NO\";\n    }\n    if ($length == 0) {\n        return \"NO\";\n    }\n    if ($length == 1) {\n        return \"YES\";\n    }\n    if ($length % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $start1 > $start2 and $end1 < $end2 ? $end1 - $start1 : $end2 - $start2;\n    my $prime = $length % 2 == 0 ? \"NO\" : \"YES\";\n    return $intersection ? $prime : \"NO\";\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $prime = is_prime($intersect_len);\n    if ($prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_start = $interval1;\n    my $intersection_length_prime_end = $interval1;\n    my $intersection_length_not_prime_start = $interval1;\n    my $intersection_length_not_prime_end = $interval1;\n    my $intersection_length_prime_start_prime = $interval1;\n    my $intersection_length_prime_end_prime = $interval1;\n    my $intersection_length_not_prime_start_prime = $interval1;\n    my $intersection_length_not_prime_end_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime_prime_prime = $interval1",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    if (!$intersect) {\n        return \"NO\";\n    }\n    my $length = abs($start1 - $end2) + abs($start2 - $end1);\n    my $is_prime = $length % 2 == 0;\n    if ($is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_start_2 = $interval2;\n    my $intersection_end_2 = $interval2;\n    my $intersection_length_2 = $interval2;\n    my $intersection_start_3 = $interval1;\n    my $intersection_end_3 = $interval1;\n    my $intersection_length_3 = $interval1;\n    my $intersection_start_4 = $interval2;\n    my $intersection_end_4 = $interval2;\n    my $intersection_length_4 = $interval2;\n    my $intersection_start_5 = $interval1;\n    my $intersection_end_5 = $interval1;\n    my $intersection_length_5 = $interval1;\n    my $intersection_start_6 = $interval2;\n    my $intersection_end_6 = $interval2;\n    my $intersection_length_6 = $interval2;\n    my $intersection_start_7 = $interval1;\n    my $intersection_end_7 = $interval1;\n    my $intersection_length_7 = $interval1;\n    my $intersection_start_8 = $interval2;\n    my $intersection_end_8 = $interval2;\n    my $intersection_length_8 = $interval2;\n    my $intersection_start_9 = $interval1;\n    my $intersection_end_9 = $interval1;\n    my $intersection_length_9 = $interval1;\n    my $intersection_start_10 = $interval2;\n    my $intersection_end_10 = $interval2;\n    my $intersection_length_10 = $interval2;\n    my $intersection_start_11 = $interval1;\n    my $intersection_end_11 =",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1 + $interval2;\n    my $prime = 1;\n    my $intersection_length = abs($intersection);\n    my $interval1_length = abs($interval1);\n    my $interval2_length = abs($interval2);\n    my $interval1_start = $interval1[0];\n    my $interval1_end = $interval1[1];\n    my $interval2_start = $interval2[0];\n    my $interval2_end = $interval2[1];\n    my $interval1_start_is_less_or_equal_to_interval2_start = $interval1_start <= $interval2_start;\n    my $interval1_end_is_less_or_equal_to_interval2_end = $interval1_end <= $interval2_end;\n    my $interval1_start_is_greater_than_interval2_end = $interval1_start > $interval2_end;\n    my $interval1_end_is_greater_than_interval2_start = $interval1_end > $interval2_start;\n    my $interval1_start_is_less_or_equal_to_interval2_end = $interval1_start <= $interval2_end;\n    my $interval1_end_is_greater_than_interval2_start = $interval1_end > $interval2_start;\n    my $interval1_start_is_greater_than_interval2_end = $interval1_start > $interval2_end;\n    my $interval1_end_is_less_or_equal_to_interval2_start = $interval1_end <= $interval2_start;\n    my $interval1_start_is_less_or_equal_to_interval2_end = $interval1_start <= $interval2_end;\n    my $interval1_end_is_greater_than_interval2_end = $interval",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ($i >= $start2 and $i <= $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    my $prime = 1;\n    foreach my $i (@{$intersect}) {\n        if ($i < 0) {\n            $prime = 0;\n            break;\n        }\n        if ($i > $intersect_len) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start1 <= $end2 and $end1 >= $start2) {\n            $prime = 0;\n            break;\n        }\n        if ($start2 <= $end1 and $end2 >= $start1) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection_start = max($start1, $start2);\n    my $intersection_end = min($end1, $end2);\n    my $intersection_length = abs($intersection_end - $intersection_start);\n    my $intersection_is_prime = is_prime($intersection_length);\n    if ($intersection_is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersect = $interval1 + $interval2;\n    my $prime = 1;\n    my $intersect_len = $intersect - $interval1;\n    my $intersect_len_prime = $intersect_len % 2 == 0 ? $intersect_len / 2 : $intersect_len;\n    my $intersect_len_prime_prime = $intersect_len_prime % 2 == 0 ? $intersect_len_prime / 2 : $intersect_len_prime;\n    return $prime == 1 ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    if ($length == 0) {\n        return \"NO\";\n    }\n    my $prime = 1;\n    my $i = 0;\n    while ($i < $length) {\n        $i += 1;\n        if ($i % 2 == 0) {\n            $prime = 0;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $intersection = $start1 < $end2 and $start2 < $end1 ? $start1 < $start2 ? $start2 : $start1 : $start2 < $start1 ? $start1 : $start2;\n    my $prime = $length % 2 == 0 ? \"NO\" : \"YES\";\n    return $prime;\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    if ($intersection) {\n        my $length = abs($start1 - $end2) + abs($start2 - $end1);\n        my $prime = $length % 2 == 0;\n        if ($prime) {\n            return \"YES\";\n        }\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $prime = is_prime($length);\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = $length % 2 == 0;\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $i = 0;\n    while($prime == 1) {\n        $prime = is_prime($length);\n        $i++;\n        $length = $length + 2;\n        $length = $length - 2;\n    }\n    if($i > 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ?\n        ($start1, $end1) : ($start2, $end2);\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    return $is_prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_start = $interval1;\n    my $intersection_length_prime_end = $interval1;\n    my $intersection_length_not_prime_start = $interval1;\n    my $intersection_length_not_prime_end = $interval1;\n    my $intersection_length_prime_start_prime = $interval1;\n    my $intersection_length_prime_end_prime = $interval1;\n    my $intersection_length_not_prime_start_prime = $interval1;\n    my $intersection_length_not_prime_end_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_start_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_start_prime_prime_prime_prime = $interval1;\n    my $intersection_length_not_prime_end_prime_prime_prime_prime = $interval1",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $intersection_length = $end1 - $start1 + 1;\n    my $intersection_is_prime = $intersection_length % 2 == 0;\n    return $intersection_is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    if ($start1 <= $end2 and $start2 <= $end1) {\n        $result = $end1 - $start1 + 1;\n        if ($result < 0) {\n            return \"NO\";\n        }\n        if ($result % 2 == 0) {\n            return \"NO\";\n        }\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $prime_number = 0;\n    my $divisor = 1;\n    while($divisor <= $intersection_length) {\n        if($intersection % $divisor == 0) {\n            $prime_number++;\n        }\n        $divisor++;\n    }\n    if($prime_number == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    if ($length % 2 == 0) {\n        $prime = 0;\n    }\n    if ($length == 1) {\n        $prime = 0;\n    }\n    if ($length == 2) {\n        $prime = 1;\n    }\n    if ($length == 3) {\n        $prime = 1;\n    }\n    if ($length == 4) {\n        $prime = 0;\n    }\n    if ($length == 5) {\n        $prime = 1;\n    }\n    if ($length == 6) {\n        $prime = 0;\n    }\n    if ($length == 7) {\n        $prime = 1;\n    }\n    if ($length == 8) {\n        $prime = 0;\n    }\n    if ($length == 9) {\n        $prime = 1;\n    }\n    if ($length == 10) {\n        $prime = 0;\n    }\n    if ($length == 11) {\n        $prime = 1;\n    }\n    if ($length == 12) {\n        $prime = 0;\n    }\n    if ($length == 13) {\n        $prime = 1;\n    }\n    if ($length == 14) {\n        $prime = 0;\n    }\n    if ($length == 15) {\n        $prime = 1;\n    }\n    if ($length == 16) {\n        $prime = 0;\n    }\n    if ($length == 17) {\n        $prime = 1;\n    }\n    if ($length == 18) {\n        $prime = 0;\n    }\n    if ($length == 19) {\n        $prime = 1;\n    }\n    if ($length == 20) {\n        $prime = 0;\n    }\n    if ($length == 21) {\n        $prime = 1;\n    }\n    if ($length == 22) {\n        $prime = 0;\n    }\n    if ($length == 23",
    "    my $start1 = $interval1[0];\n    my $end1 = $interval1[1];\n    my $start2 = $interval2[0];\n    my $end2 = $interval2[1];\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $divisor = 2;\n    while ($divisor <= $length) {\n        if ($start1 <= $end2 && $end1 >= $start2) {\n            if ($start1 <= $end2 && $end1 >= $start2) {\n                if ($start1 <= $end2 && $end1 >= $start2) {\n                    if ($start1 <= $end2 && $end1 >= $start2) {\n                        if ($start1 <= $end2 && $end1 >= $start2) {\n                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                            if ($start1 <= $end2 && $end1 >= $start2)",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_count = 0;\n    my $intersection_length_not_prime_count = 0;\n    my $intersection_length_prime_count_max = 0;\n    my $intersection_length_not_prime_count_max = 0;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_length_prime_count_max = 0;\n    my $intersection_length_not_prime_count_max = 0;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_length_prime_count_max = 0;\n    my $intersection_length_not_prime_count_max = 0;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_length_prime_count_max = 0;\n    my $intersection_length_not_prime_count_max = 0;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_length_prime_count_max = 0;\n    my $intersection_length_not_prime_count_max = 0;\n    my $intersection_length_prime_count_min = 999999999;\n    my $intersection_length_not_prime_count_min = 999999999;\n    my $intersection_",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start1 <= $end2 and $end1 >= $start2) {\n            $prime = 0;\n            break;\n        }\n        if ($start2 <= $end1 and $end2 >= $start1) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $divisor = 2;\n    while ($divisor <= $length) {\n        if ($start1 <= $end2 && $end1 >= $start2) {\n            if ($start1 <= $end2 && $end1 >= $start2) {\n                if ($start1 <= $end2 && $end1 >= $start2) {\n                    if ($start1 <= $end2 && $end1 >= $start2) {\n                        if ($start1 <= $end2 && $end1 >= $start2) {\n                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                    if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                        if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                            if ($start1 <= $end2 && $end1 >= $start2) {\n                                                                                if ($start1 <= $end2 && $end",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 0;\n    my $intersection_start_prime = 0;\n    my $intersection_end_prime = 0;\n    my $intersection_prime = 0;\n    my $intersection_prime_length = 0;\n    my $intersection_prime_start = 0;\n    my $intersection_prime_end = 0;\n    my $intersection_prime_length_prime = 0;\n    my $intersection_prime_start_prime = 0;\n    my $intersection_prime_end_prime = 0;\n    my $intersection_prime_prime = 0;\n    my $intersection_prime_prime_length = 0;\n    my $intersection_prime_prime_start = 0;\n    my $intersection_prime_prime_end = 0;\n    my $intersection_prime_prime_length_prime = 0;\n    my $intersection_prime_prime_start_prime = 0;\n    my $intersection_prime_prime_end_prime = 0;\n    my $intersection_prime_prime_prime = 0;\n    my $intersection_prime_prime_prime_length = 0;\n    my $intersection_prime_prime_prime_start = 0;\n    my $intersection_prime_prime_prime_end = 0;\n    my $intersection_prime_prime_prime_length_prime = 0;\n    my $intersection_prime_prime_prime_start_prime = 0;\n    my $intersection_prime_prime_prime_end_prime = 0;\n    my $intersection_prime_prime_prime_prime_length = 0;\n    my $intersection_prime_prime_prime_prime_start = 0;\n    my $intersection_prime_prime_prime_prime_end = 0;\n    my $intersection_prime_prime_prime_prime_length_prime = 0;\n    my $intersection_prime_prime_prime_prime_",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    if ($intersection_length == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $start1 = $interval1[0];\n    my $end1 = $interval1[1];\n    my $start2 = $interval2[0];\n    my $end2 = $interval2[1];\n    my $result = 0;\n    my $intersect = $start1 < $end2 and $end1 > $start2;\n    if ($intersect) {\n        my $length = abs($start1 - $end2) + abs($end1 - $start2);\n        my $prime = 1;\n        while ($prime) {\n            $prime = $length % 2 == 0;\n            $length = $length / 2;\n        }\n        $result = $length;\n    }\n    return $result == 1 ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    if ($length % 2 == 0) {\n        $prime = 0;\n    }\n    if ($length == 1) {\n        $prime = 0;\n    }\n    if ($length == 2) {\n        $prime = 1;\n    }\n    if ($length == 3) {\n        $prime = 1;\n    }\n    if ($length == 4) {\n        $prime = 1;\n    }\n    if ($length == 5) {\n        $prime = 1;\n    }\n    if ($length == 6) {\n        $prime = 1;\n    }\n    if ($length == 7) {\n        $prime = 1;\n    }\n    if ($length == 8) {\n        $prime = 1;\n    }\n    if ($length == 9) {\n        $prime = 1;\n    }\n    if ($length == 10) {\n        $prime = 1;\n    }\n    if ($length == 11) {\n        $prime = 1;\n    }\n    if ($length == 12) {\n        $prime = 1;\n    }\n    if ($length == 13) {\n        $prime = 1;\n    }\n    if ($length == 14) {\n        $prime = 1;\n    }\n    if ($length == 15) {\n        $prime = 1;\n    }\n    if ($length == 16) {\n        $prime = 1;\n    }\n    if ($length == 17) {\n        $prime = 1;\n    }\n    if ($length == 18) {\n        $prime = 1;\n    }\n    if ($length == 19) {\n        $prime = 1;\n    }\n    if ($length == 20) {\n        $prime = 1;\n    }\n    if ($length == 21) {\n        $prime = 1;\n    }\n    if ($length == 22) {\n        $prime = 1;\n    }\n    if ($length == 23",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ($i >= $start2 and $i <= $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        if (($start1 + $i) < $start2 || ($start2 + $i) < $start1) {\n            continue;\n        }\n        if (($end1 + $i) > $end2 || ($end2 + $i) > $end1) {\n            continue;\n        }\n        $prime = 0;\n        break;\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_index = 0;\n    my $intersection_length_not_prime_index = 0;\n    my $intersection_length_prime_index_start = 0;\n    my $intersection_length_not_prime_index_start = 0;\n    my $intersection_length_prime_index_end = 0;\n    my $intersection_length_not_prime_index_end = 0;\n    my $intersection_length_prime_index_end_start = 0;\n    my $intersection_length_not_prime_index_end_start = 0;\n    my $intersection_length_prime_index_end_end = 0;\n    my $intersection_length_not_prime_index_end_end = 0;\n    my $intersection_length_prime_index_start_end = 0;\n    my $intersection_length_not_prime_index_start_end = 0;\n    my $intersection_length_prime_index_start_start = 0;\n    my $intersection_length_not_prime_index_start_start = 0;\n    my $intersection_length_prime_index_end_start_end = 0;\n    my $intersection_length_not_prime_index_end_start_end = 0;\n    my $intersection_length_prime_index_end_end_end = 0;\n    my $intersection_length_not_prime_index_end_end_end = 0;\n    my $intersection_length_prime_index_start_end_end = 0;\n    my $intersection_length_not_prime_index_start_end_end = 0;\n    my $intersection_length_prime_index_start_start_end = 0;\n    my $intersection_length_not_prime_index_start_start_end = 0;\n    my $intersection_length_prime_index_end_start_end_",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $prime = 1;\n    my $length = $end1 - $start1 + 1;\n    if ($length % 2 == 0) {\n        $prime = 0;\n    }\n    if ($intersect) {\n        my $length = $end2 - $start2 + 1;\n        if ($length % 2 == 0) {\n            $prime = 0;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = $intersect - $interval1;\n    my $intersect_prime = $intersect_len % 2 == 0;\n    if ($intersect_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersect = $interval1;\n    my $intersect_len = $interval1;\n    my $intersect_start = $interval1;\n    my $intersect_end = $interval1;\n    my $intersect_start_len = $interval1;\n    my $intersect_end_len = $intersect_len;\n    my $intersect_start_end = $interval1;\n    my $intersect_start_end_len = $intersect_len;\n    my $intersect_start_end_start = $interval1;\n    my $intersect_start_end_end = $interval1;\n    my $intersect_start_end_start_len = $intersect_len;\n    my $intersect_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end = $interval1;\n    my $intersect_start_end_start_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start = $interval1;\n    my $intersect_start_end_start_end_end = $interval1;\n    my $intersect_start_end_start_end_start_len = $intersect_len;\n    my $intersect_start_end_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end = $interval1;\n    my $intersect_start_end_start_end_start_end_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end_start = $interval1;\n    my $intersect_start_end_start_end_start_end_end = $interval1;\n    my $intersect_start_end_start_end_start_end_start_len = $intersect_len;\n    my $intersect_start_end_start_end_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end_",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_start_end = $interval1[0] + $interval1[1];\n    my $intersection_end_start = $interval2[0] + $interval2[1];\n    my $intersection_end_start_end = $intersection_end_start + $intersection_end;\n    my $intersection_start_end_start = $intersection_start_end + $intersection_start;\n    my $intersection_start_end_end = $intersection_start_end_start + $intersection_end;\n    my $intersection_start_end_start_end = $intersection_start_end_end + $intersection_start;\n    my $intersection_start_end_end_start = $intersection_start_end_start_end + $intersection_end;\n    my $intersection_start_end_end_start_end = $intersection_start_end_end_start + $intersection_end;\n    my $intersection_start_end_end_start_end_start = $intersection_start_end_end_start_end + $intersection_end;\n    my $intersection_start_end_end_start_end_start_end = $intersection_start_end_end_start_end_start + $intersection_end;\n    my $intersection_start_end_end_start_end_start_end_start = $intersection_start_end_end_start_end_start_end + $intersection_end;\n    my $intersection_start_end_end_start_end_start_end_start_end = $intersection_start_end_end_start_end_start_end_start + $intersection_end;\n    my $intersection_start_end_end_start_end_start_end_start_end_start = $intersection_start_end_end_start_end_start_end",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    my $prime = is_prime($intersection_length);\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 0;\n    my $intersection_start_prime = 0;\n    my $intersection_end_prime = 0;\n    my $intersection_length_prime_prime = 0;\n    my $intersection_start_prime_prime = 0;\n    my $intersection_end_prime_prime = 0;\n    my $intersection_length_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    my $is_prime = is_prime $intersection_length;\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 1;\n    my $intersection_prime_length_2 = 1;\n    my $intersection_prime_length_3 = 1;\n    my $intersection_prime_length_4 = 1;\n    my $intersection_prime_length_5 = 1;\n    my $intersection_prime_length_6 = 1;\n    my $intersection_prime_length_7 = 1;\n    my $intersection_prime_length_8 = 1;\n    my $intersection_prime_length_9 = 1;\n    my $intersection_prime_length_10 = 1;\n    my $intersection_prime_length_11 = 1;\n    my $intersection_prime_length_12 = 1;\n    my $intersection_prime_length_13 = 1;\n    my $intersection_prime_length_14 = 1;\n    my $intersection_prime_length_15 = 1;\n    my $intersection_prime_length_16 = 1;\n    my $intersection_prime_length_17 = 1;\n    my $intersection_prime_length_18 = 1;\n    my $intersection_prime_length_19 = 1;\n    my $intersection_prime_length_20 = 1;\n    my $intersection_prime_length_21 = 1;\n    my $intersection_prime_length_22 = 1;\n    my $intersection_prime_length_23 = 1;\n    my $intersection_prime_length_24 = 1;\n    my $intersection_prime_length_25 = 1;\n    my $intersection_prime_length_26 = 1;\n    my $intersection_prime_length_27 = 1;\n    my $intersection_prime_length_28 = 1;\n    my $intersection_prime_length_29 = 1;\n    my $intersection_prime_length_30 = 1;\n    my $intersection_prime_length_31 = 1;\n    my $intersection_prime_length_32 =",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_start = 0;\n    my $intersection_length_prime_end = 0;\n    my $intersection_length_not_prime_start = 0;\n    my $intersection_length_not_prime_end = 0;\n    my $intersection_length_prime_start_prime = 0;\n    my $intersection_length_prime_end_prime = 0;\n    my $intersection_length_not_prime_start_prime = 0;\n    my $intersection_length_not_prime_end_prime = 0;\n    my $intersection_length_prime_start_prime_prime = 0;\n    my $intersection_length_prime_end_prime_prime = 0;\n    my $intersection_length_not_prime_start_prime_prime = 0;\n    my $intersection_length_not_prime_end_prime_prime = 0;\n    my $intersection_length_prime_start_prime_prime_prime = 0;\n    my $intersection_length_prime_end_prime_prime_prime = 0;\n    my $intersection_length_not_prime_start_prime_prime_prime = 0;\n    my $intersection_length_not_prime_end_prime_prime_prime = 0;\n    my $intersection_length_prime_start_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_end_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_start_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_end_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_start_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_end_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    if ($intersection_length == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    if ($intersect) {\n        my $min = min($start1, $start2);\n        my $max = max($end1, $end2);\n        my $length = $max - $min + 1;\n        my $prime = is_prime($length);\n        if ($prime) {\n            $result = $length;\n        }\n    }\n    return $result ? \"YES\" : \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $prime = 1;\n    if ($intersect) {\n        my $length = $end1 - $start1 + 1;\n        my $divisor = 2;\n        while ($prime <= $length) {\n            if ($length % $divisor == 0) {\n                $prime = 0;\n            } else {\n                $prime++;\n            }\n            $divisor++;\n        }\n        if ($prime == 1) {\n            return \"YES\";\n        }\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $prime = 1;\n    foreach my $i (@{$length % 2}) {\n        if ($start <= $end && $start <= $i && $i <= $end) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_start_index = 0;\n    my $intersection_end_index = 0;\n    my $intersection_length_index = 0;\n    my $intersection_start_index_index = 0;\n    my $intersection_end_index_index = 0;\n    my $intersection_length_index_index = 0;\n    my $intersection_start_index_index_index = 0;\n    my $intersection_end_index_index_index = 0;\n    my $intersection_length_index_index_index = 0;\n    my $intersection_start_index_index_index_index = 0;\n    my $intersection_end_index_index_index_index = 0;\n    my $intersection_length_index_index_index_index = 0;\n    my $intersection_start_index_index_index_index_index = 0;\n    my $intersection_end_index_index_index_index_index = 0;\n    my $intersection_length_index_index_index_index_index = 0;\n    my $intersection_start_index_index_index_index_index_index = 0;\n    my $intersection_end_index_index_index_index_index_index = 0;\n    my $intersection_length_index_index_index_index_index_index = 0;\n    my $intersection_start_index_index_index_index_index_index_index = 0;\n    my $intersection_end_index_index_index_index_index_index_index = 0;\n    my $intersection_length_index_index_index_index_index_index_index = 0;\n    my $intersection_start_index_index_index_index_index_index_index_index = 0;\n    my $intersection_end_index_index_index_index_index_index_index_index = 0;\n    my $intersection",
    "    my $intersect = $interval1;\n    my $intersect_length = $interval1;\n    my $intersect_start = $interval1;\n    my $intersect_end = $interval1;\n    my $intersect_start_index = 0;\n    my $intersect_end_index = 0;\n    my $intersect_start_index_end = 0;\n    my $intersect_end_index_start = 0;\n    my $intersect_start_index_start = 0;\n    my $intersect_end_index_end = 0;\n    my $intersect_start_index_end_prime = 0;\n    my $intersect_end_index_start_prime = 0;\n    my $intersect_start_index_start_prime = 0;\n    my $intersect_end_index_end_prime = 0;\n    my $intersect_start_index_end_prime_prime = 0;\n    my $intersect_end_index_start_prime_prime = 0;\n    my $intersect_start_index_start_prime_prime = 0;\n    my $intersect_end_index_end_prime_prime = 0;\n    my $intersect_start_index_end_prime_prime_prime = 0;\n    my $intersect_end_index_start_prime_prime_prime = 0;\n    my $intersect_start_index_start_prime_prime_prime = 0;\n    my $intersect_end_index_end_prime_prime_prime = 0;\n    my $intersect_start_index_end_prime_prime_prime_prime = 0;\n    my $intersect_end_index_start_prime_prime_prime_prime = 0;\n    my $intersect_start_index_start_prime_prime_prime_prime = 0;\n    my $intersect_end_index_end_prime_prime_prime_prime = 0;\n    my $intersect_start_index_end_prime_prime_prime_prime_prime = 0;\n    my $intersect_end_index_start_prime_prime_prime_prime_prime = 0;\n    my",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = $end1 - $start1 + 1;\n    my $length2 = $end2 - $start2 + 1;\n    my $length_intersection = $length < $length2 ? $length : $length2;\n    my $prime = $length_intersection % 2 == 0 ? \"NO\" : \"YES\";\n    return $prime;\n}\nmain() {\n    my $interval1 = [1, 2];\n    my $interval2 = [2, 3];\n    print intersection($interval1, $interval2);\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    if ($intersect_len == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 0;\n    my $intersection_start_prime = 0;\n    my $intersection_end_prime = 0;\n    my $intersection_length_prime_prime = 0;\n    my $intersection_start_prime_prime = 0;\n    my $intersection_end_prime_prime = 0;\n    my $intersection_length_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 <= $end2 and $start2 <= $end1;\n    my $length = $end1 - $start1 + 1;\n    my $prime = $length % 2 == 0;\n    if ($prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1 & $interval2;\n    my $intersect_len = length $intersect;\n    if ($intersect_len == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_not_prime_prime = 0;\n    my $intersection_length_prime_prime = 0;\n    my $intersection_length_prime_not_prime = 0;\n    my $intersection_length_not_prime_prime = 0;\n    my $intersection_length_prime_not_prime = 0;\n    my $intersection_length_not_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_not_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_not_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $prime = 1;\n    foreach my $i (@{$intersection}) {\n        if (not $i) {\n            continue;\n        }\n        if ($i < $interval1 || $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i == $interval1 || $i == $interval2) {\n            continue;\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1 && $i > $interval2) {\n            return \"NO\";\n        }\n        if ($i < $interval1",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $end1 - $start1 + 1;\n    my $is_prime = $length % 2 == 0;\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersect = $interval1;\n    my $intersect_len = $interval1;\n    my $intersect_start = $interval1;\n    my $intersect_end = $interval1;\n    my $intersect_start_len = $interval1;\n    my $intersect_end_len = $intersect_len;\n    my $intersect_start_end = $interval1;\n    my $intersect_start_end_len = $intersect_len;\n    my $intersect_start_end_start = $interval1;\n    my $intersect_start_end_start_len = $intersect_len;\n    my $intersect_start_end_end = $interval1;\n    my $intersect_start_end_end_len = $intersect_len;\n    my $intersect_start_end_start_end = $interval1;\n    my $intersect_start_end_start_end_len = $intersect_len;\n    my $intersect_start_end_end_start = $interval1;\n    my $intersect_start_end_end_start_len = $intersect_len;\n    my $intersect_start_end_end_end = $interval1;\n    my $intersect_start_end_end_end_len = $intersect_len;\n    my $intersect_start_end_end_start_end = $interval1;\n    my $intersect_start_end_end_start_end_len = $intersect_len;\n    my $intersect_start_end_end_end_start = $interval1;\n    my $intersect_start_end_end_end_start_len = $intersect_len;\n    my $intersect_start_end_end_end_end = $interval1;\n    my $intersect_start_end_end_end_end_len = $intersect_len;\n    my $intersect_start_end_end_end_start_end = $interval1;\n    my $intersect_start_end_end_end_start_end_",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    if ($start1 <= $end2 and $end1 >= $start2) {\n        $result = $end1 - $start1 + 1;\n        if ($result % 2 == 0) {\n            return \"YES\";\n        }\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 1;\n    my $intersection_prime_length_2 = 1;\n    my $intersection_prime_length_3 = 1;\n    my $intersection_prime_length_4 = 1;\n    my $intersection_prime_length_5 = 1;\n    my $intersection_prime_length_6 = 1;\n    my $intersection_prime_length_7 = 1;\n    my $intersection_prime_length_8 = 1;\n    my $intersection_prime_length_9 = 1;\n    my $intersection_prime_length_10 = 1;\n    my $intersection_prime_length_11 = 1;\n    my $intersection_prime_length_12 = 1;\n    my $intersection_prime_length_13 = 1;\n    my $intersection_prime_length_14 = 1;\n    my $intersection_prime_length_15 = 1;\n    my $intersection_prime_length_16 = 1;\n    my $intersection_prime_length_17 = 1;\n    my $intersection_prime_length_18 = 1;\n    my $intersection_prime_length_19 = 1;\n    my $intersection_prime_length_20 = 1;\n    my $intersection_prime_length_21 = 1;\n    my $intersection_prime_length_22 = 1;\n    my $intersection_prime_length_23 = 1;\n    my $intersection_prime_length_24 = 1;\n    my $intersection_prime_length_25 = 1;\n    my $intersection_prime_length_26 = 1;\n    my $intersection_prime_length_27 = 1;\n    my $intersection_prime_length_28 = 1;\n    my $intersection_prime_length_29 = 1;\n    my $intersection_prime_length_30 = 1;\n    my $intersection_prime_length_31 = 1;\n    my $intersection_prime_length_32 =",
    "    my $intersect = $interval1 + $interval2;\n    my $prime = 1;\n    my $intersect_length = $intersect - $interval1;\n    my $intersect_length_prime = $intersect_length % 2 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime = $intersect_length % 3 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime = $intersect_length % 5 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime = $intersect_length % 7 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime = $intersect_length % 11 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime = $intersect_length % 13 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 17 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 19 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 23 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 29 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 31 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = $intersect_length % 37 == 0 ? 0 : 1;\n    my $intersect_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = $intersect",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = $length % 2 == 0;\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ?\n        ($start1, $end1) : ($start2, $end2);\n    my $length = abs($start - $end);\n    my $prime = 1;\n    foreach my $i (@{$length % 2 ? [$start, $end] : [$end, $start]}) {\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start || $i == $end) {\n            continue;\n        }\n        if ($i < $start || $i > $end) {\n            continue;\n        }\n        if ($i == $start",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ? $start1 <= $start2 ? $start1 >= $end2 ? \"NO\" : \"YES\" : \"NO\";\n    return $start;\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_not_prime = 0;\n    my $intersection_length_prime_start = $interval1[0];\n    my $intersection_length_prime_end = $interval1[1];\n    my $intersection_length_not_prime_start = $interval2[0];\n    my $intersection_length_not_prime_end = $interval2[1];\n    my $intersection_length_prime_start_is_less_or_equal_interval_end = 0;\n    my $intersection_length_prime_end_is_less_or_equal_interval_start = 0;\n    my $intersection_length_not_prime_start_is_less_or_equal_interval_end = 0;\n    my $intersection_length_not_prime_end_is_less_or_equal_interval_start = 0;\n    my $intersection_length_prime_start_is_less_or_equal_interval_end_is_less_or_equal_interval_start = 0;\n    my $intersection_length_prime_end_is_less_or_equal_interval_start_is_less_or_equal_interval_end = 0;\n    my $intersection_length_not_prime_start_is_less_or_equal_interval_end_is_less_or_equal_interval_start = 0;\n    my $intersection_length_not_prime_end_is_less_or_equal_interval_start_is_less_or_equal_interval_end = 0;\n    my $intersection_length_prime_start_is_less_or_equal_interval_end_is_less_or_equal_interval_start_is_less_or_equal_interval_end = 0;\n    my $intersection_length_prime_end_is_less_or_equal_interval_start_is_less_or_equal_interval_",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = $end1 - $start1 + 1;\n    my $length2 = $end2 - $start2 + 1;\n    my $intersection = $start1 + 1;\n    my $prime = 1;\n    my $prime2 = 1;\n    while($intersection <= $end2) {\n        if($start1 <= $intersection && $intersection <= $end1) {\n            $prime = 0;\n        }\n        if($start2 <= $intersection && $intersection <= $end2) {\n            $prime2 = 0;\n        }\n        $intersection++;\n    }\n    if($prime == 1 && $prime2 == 1) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $start = min($start1, $start2);\n    my $end = max($end1, $end2);\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n",
    "    my $intersection = $interval1 - $interval2;\n    my $length = abs($intersection);\n    if ($length < 1) {\n        return \"NO\";\n    }\n    my $prime = 1;\n    while ($prime <= $length) {\n        $prime = $prime + 1;\n        if ($prime % 2 == 0) {\n            $prime = $prime / 2;\n        } else {\n            $prime = $prime * 3 + 1;\n        }\n    }\n    return \"YES\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $end1 - $start1 + 1;\n    my $prime = $length % 2 == 0;\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $i = 2;\n    while ($i <= $length) {\n        if ($start1 <= $i && $i <= $end1 && $start2 <= $i && $i <= $end2) {\n            $prime = 0;\n            break;\n        }\n        $i++;\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 <= $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 <= $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    if ($intersection_length == 1) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $end1 - $start1 + 1;\n    my $is_prime = $length % 2 == 0;\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nmain() {\n    my $interval1 = [1, 2];\n    my $interval2 = [2, 3];\n    print intersection($interval1, $interval2);\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $divisor = 2;\n    while($divisor <= $length) {\n        if($start1 <= $end2 && $end1 >= $start2) {\n            if($start1 <= $end2 && $end1 >= $start2) {\n                if($start1 <= $end2 && $end1 >= $start2) {\n                    if($start1 <= $end2 && $end1 >= $start2) {\n                        if($start1 <= $end2 && $end1 >= $start2) {\n                            if($start1 <= $end2 && $end1 >= $start2) {\n                                if($start1 <= $end2 && $end1 >= $start2) {\n                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                if($start1 <= $end2 && $end1 >= $start2) {\n                                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                                if($start1 <= $end2 && $end1 >= $start2) {\n                                                                    if($start1 <= $end2 && $end1 >= $start2) {\n                                                                        if($start1 <= $end2 && $end1 >= $start2) {\n                                                                            if($start1 <= $end2 && $end1 >= $start2) {\n                                                                                if($start1 <= $end2 && $end",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1 ? $start1 < $end2 and $start2 < $end1 : \"NO\";\n    my $length = abs($start1 - $end2) + abs($start2 - $end1);\n    return $length == 1 and $intersection == $start1 < $end2 and $start2 < $end1 ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $start1 < $end2 and $end2 > $start1;\n    my $prime = $length % 2 == 0;\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_start_2 = $interval2;\n    my $intersection_end_2 = $interval2;\n    my $intersection_length_2 = $interval2;\n    my $intersection_start_3 = $interval1;\n    my $intersection_end_3 = $interval1;\n    my $intersection_length_3 = $interval1;\n    my $intersection_start_4 = $interval2;\n    my $intersection_end_4 = $interval2;\n    my $intersection_length_4 = $interval2;\n    my $intersection_start_5 = $interval1;\n    my $intersection_end_5 = $interval1;\n    my $intersection_length_5 = $interval1;\n    my $intersection_start_6 = $interval2;\n    my $intersection_end_6 = $interval2;\n    my $intersection_length_6 = $interval2;\n    my $intersection_start_7 = $interval1;\n    my $intersection_end_7 = $interval1;\n    my $intersection_length_7 = $interval1;\n    my $intersection_start_8 = $interval2;\n    my $intersection_end_8 = $interval2;\n    my $intersection_length_8 = $interval2;\n    my $intersection_start_9 = $interval1;\n    my $intersection_end_9 = $interval1;\n    my $intersection_length_9 = $interval1;\n    my $intersection_start_10 = $interval2;\n    my $intersection_end_10 = $interval2;\n    my $intersection_length_10 = $interval2;\n    my $intersection_start_11 = $interval1;\n    my $intersection_end_11 =",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    my $intersection_is_prime = is_prime $intersection_length;\n    return $intersection_is_prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 0;\n    my $intersection_start_prime = 0;\n    my $intersection_end_prime = 0;\n    my $intersection_length_prime_prime = 0;\n    my $intersection_start_prime_prime = 0;\n    my $intersection_end_prime_prime = 0;\n    my $intersection_length_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n    my $intersection",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_end_minus_1 = $interval1[1] - 1;\n    my $intersection_end_minus_2 = $interval1[1] - 2;\n    my $intersection_end_minus_3 = $interval1[1] - 3;\n    my $intersection_end_minus_4 = $interval1[1] - 4;\n    my $intersection_end_minus_5 = $interval1[1] - 5;\n    my $intersection_end_minus_6 = $interval1[1] - 6;\n    my $intersection_end_minus_7 = $interval1[1] - 7;\n    my $intersection_end_minus_8 = $interval1[1] - 8;\n    my $intersection_end_minus_9 = $interval1[1] - 9;\n    my $intersection_end_minus_10 = $interval1[1] - 10;\n    my $intersection_end_minus_11 = $interval1[1] - 11;\n    my $intersection_end_minus_12 = $interval1[1] - 12;\n    my $intersection_end_minus_13 = $interval1[1] - 13;\n    my $intersection_end_minus_14 = $interval1[1] - 14;\n    my $intersection_end_minus_15 = $interval1[1] - 15;\n    my $intersection_end_minus_16 = $interval1[1] - 16;\n    my $intersection_end_minus_17 = $interval1[1] - 17;\n    my $intersection_end_minus_18 = $interval1[1] - 18;\n    my $intersection_end_minus_19 = $interval1[1] - 19;\n    my $intersection_end_minus_20 = $interval1[1] -",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_is_prime = 1;\n    my $intersection_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_length = 0;\n    my $intersection_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_length = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime = 0;\n    my $intersection_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate_is_prime_candidate = 0;\n    my $intersection_is_prime_candidate_is",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $result = 0;\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    if ($intersect) {\n        my $min = min($start1, $start2);\n        my $max = max($end1, $end2);\n        my $length = $max - $min + 1;\n        my $is_prime = is_prime($length);\n        if ($is_prime) {\n            $result = $length;\n        }\n    }\n    return $result;\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = $end1 - $start1 + 1;\n    my $length2 = $end2 - $start2 + 1;\n    my $intersect = $start1 < $start2 ? $start2 : $start1;\n    my $intersect2 = $end1 < $end2 ? $end2 : $end1;\n    my $intersect_length = $intersect2 - $intersect + 1;\n    if ($length % $intersect_length != 0) {\n        return \"NO\";\n    }\n    my $prime = $length / $intersect_length;\n    if ($prime != int($prime)) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1 < $start2 ? $start1 : $start2;\n    my($end, $start) = $end1 > $end2 ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_start_2 = $interval2[0];\n    my $intersection_end_2 = $interval2[1];\n    my $intersection_length_2 = abs($intersection_start_2 - $intersection_end_2);\n    my $intersection_length_2_prime = is_prime($intersection_length_2);\n    if ($intersection_length_2_prime) {\n        $intersection_length = $intersection_length_2;\n    }\n    if ($intersection_start > $intersection_end) {\n        return \"NO\";\n    }\n    if ($intersection_start_2 > $intersection_end_2) {\n        return \"NO\";\n    }\n    if ($intersection_start > $intersection_end_2) {\n        return \"NO\";\n    }\n    if ($intersection_start_2 > $intersection_end) {\n        return \"NO\";\n    }\n    my $intersection_start_prime = is_prime($intersection_start);\n    my $intersection_end_prime = is_prime($intersection_end);\n    if ($intersection_start_prime && $intersection_end_prime) {\n        $intersection_length = $intersection_end - $intersection_start;\n    }\n    if ($intersection_start_prime) {\n        $intersection_length = $intersection_end - $intersection_start;\n    }\n    if ($intersection_end_prime) {\n        $intersection_length = $intersection_end - $intersection_start;\n    }\n    if ($intersection_length_2_prime) {\n        $intersection_length = $intersection_end - $intersection_start;\n    }\n    if ($intersection_length_2_prime) {\n        $intersection_length = $intersection_end - $intersection_start;\n    }\n    ",
    "    my $intersect = $interval1;\n    my $i = $interval1;\n    my $j = $interval2;\n    my $k = $interval2;\n    my $l = $interval1;\n    my $m = $interval2;\n    my $n = $interval1;\n    my $o = $interval2;\n    my $p = $interval1;\n    my $q = $interval2;\n    my $r = $interval1;\n    my $s = $interval2;\n    my $t = $interval1;\n    my $u = $interval2;\n    my $v = $interval1;\n    my $w = $interval2;\n    my $x = $interval1;\n    my $y = $interval2;\n    my $z = $interval1;\n    my $aa = $interval2;\n    my $bb = $interval1;\n    my $cc = $interval2;\n    my $dd = $interval1;\n    my $ee = $interval2;\n    my $ff = $interval1;\n    my $gg = $interval2;\n    my $hh = $interval1;\n    my $ii = $interval2;\n    my $jj = $interval1;\n    my $kk = $interval2;\n    my $ll = $interval1;\n    my $mm = $interval2;\n    my $nn = $interval1;\n    my $oo = $interval2;\n    my $pp = $interval1;\n    my $qq = $interval2;\n    my $rr = $interval1;\n    my $ss = $interval2;\n    my $tt = $interval1;\n    my $uu = $interval2;\n    my $vv = $interval1;\n    my $ww = $interval2;\n    my $xx = $interval1;\n    my $yy = $interval2;\n    my $zz = $interval1;\n    my $aaa = $interval2;\n    my $bbb",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ($i >= $start2 and $i <= $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersect = $interval1 + $interval2;\n    my $intersect_len = abs($intersect - $interval1) + abs($intersect - $interval2);\n    my $intersect_prime = $intersect_len % 2 == 0;\n    return $intersect_prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 1;\n    my $intersection_prime_start = $interval1[0];\n    my $intersection_prime_end = $interval1[1];\n    my $intersection_prime_start_prime = $interval1[0];\n    my $intersection_prime_end_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime_prime_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime_prime_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime_prime_prime_prime_prime = $interval1[1];\n    my $intersection_prime_start_prime_prime_prime_prime_prime_prime_prime_prime = $interval1[0];\n    my $intersection_prime_end_prime_prime_prime_prime_prime_prime_prime_prime = $inter",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_prime = is_prime($intersection_length);\n    if ($intersection_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1 & $interval2;\n    my $intersection_length = length $intersection;\n    if ($intersection_length == 0) {\n        return \"NO\";\n    }\n    my $prime = 1;\n    foreach my $i (@{$intersection}) {\n        if ($i < 0) {\n            $prime = 0;\n            break;\n        }\n        if ($i > $interval1[1]) {\n            $prime = 0;\n            break;\n        }\n        if ($i > $interval2[1]) {\n            $prime = 0;\n            break;\n        }\n    }\n    if ($prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $result = 0;\n    if ($start1 > $end2) {\n        $result = $end2 - $start1;\n    } else if ($start2 > $end1) {\n        $result = $end1 - $start2;\n    } else {\n        $result = $end1 - $start1;\n    }\n    if ($result % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = $start1, $end1;\n    my($start_2, $end_2) = $start2, $end2;\n    my $result = 0;\n    if ($start_2 < $start1) {\n        $start = $start_2;\n    } else {\n        $start = $start1;\n    }\n    if ($end_2 > $end1) {\n        $end = $end_2;\n    } else {\n        $end = $end1;\n    }\n    $result = $end - $start + 1;\n    if ($result < 0) {\n        return \"NO\";\n    }\n    if ($result == 0) {\n        return \"NO\";\n    }\n    if ($result == 1) {\n        return \"YES\";\n    }\n    if ($result % 2 == 0) {\n        return \"NO\";\n    }\n    return \"YES\";\n}\n",
    "    my $intersect = $interval1;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $start = min($start1, $start2);\n    my $end = max($end1, $end2);\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    if ($is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1 + $interval2;\n    my $length = $intersection - $interval1;\n    my $prime = is_prime($length);\n    if ($prime) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_start_end = $interval1;\n    my $intersection_end_start = $interval1;\n    my $intersection_start_end_length = $interval1;\n    my $intersection_end_start_length = $interval1;\n    my $intersection_start_end_end = $interval1;\n    my $intersection_start_end_start = $interval1;\n    my $intersection_start_end_end_length = $interval1;\n    my $intersection_start_end_start_length = $interval1;\n    my $intersection_start_end_end_start = $interval1;\n    my $intersection_start_end_end_start_length = $interval1;\n    my $intersection_start_end_end_start_end = $interval1;\n    my $intersection_start_end_end_start_end_length = $interval1;\n    my $intersection_start_end_end_start_end_start = $interval1;\n    my $intersection_start_end_end_start_end_start_length = $interval1;\n    my $intersection_start_end_end_start_end_start_end = $interval1;\n    my $intersection_start_end_end_start_end_start_end_length = $interval1;\n    my $intersection_start_end_end_start_end_start_end_start = $interval1;\n    my $intersection_start_end_end_start_end_start_end_start_length = $interval1;\n    my $intersection_start_end_end_start_end_start_end_start_end = $interval1;\n    my $intersection_start_end_end_start_end_start_end_start_end_length = $interval1;\n    my",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ? $start1 : $start2;\n    my($end, $start) = ($start1, $end1) <= ($start2, $end2) ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = is_prime($length);\n    return $is_prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_start_2 = $interval2;\n    my $intersection_end_2 = $interval2;\n    my $intersection_length_2 = $interval2;\n    my $intersection_start_2_2 = $interval2;\n    my $intersection_end_2_2 = $interval2;\n    my $intersection_length_2_2 = $interval2;\n    my $intersection_start_3 = $interval1;\n    my $intersection_end_3 = $interval1;\n    my $intersection_length_3 = $interval1;\n    my $intersection_start_3_2 = $interval2;\n    my $intersection_end_3_2 = $interval2;\n    my $intersection_length_3_2 = $interval2;\n    my $intersection_start_4 = $interval1;\n    my $intersection_end_4 = $interval1;\n    my $intersection_length_4 = $interval1;\n    my $intersection_start_4_2 = $interval2;\n    my $intersection_end_4_2 = $interval2;\n    my $intersection_length_4_2 = $interval2;\n    my $intersection_start_5 = $interval1;\n    my $intersection_end_5 = $interval1;\n    my $intersection_length_5 = $interval1;\n    my $intersection_start_5_2 = $interval2;\n    my $intersection_end_5_2 = $interval2;\n    my $intersection_length_5_2 = $interval2;\n    my $intersection_start_6 = $interval1;\n    my $intersection_end_6 = $interval1;\n    my $intersection_length_6 = $interval1;\n    my",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (@{$interval1}) {\n        if ( $i < $start2 || $i > $end2 ) {\n            continue;\n        }\n        $prime = 0;\n        break;\n    }\n    if ( $prime ) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_end_minus_1 = $interval1[1] - 1;\n    my $intersection_end_minus_2 = $interval1[1] - 2;\n    my $intersection_end_minus_3 = $interval1[1] - 3;\n    my $intersection_end_minus_4 = $interval1[1] - 4;\n    my $intersection_end_minus_5 = $interval1[1] - 5;\n    my $intersection_end_minus_6 = $interval1[1] - 6;\n    my $intersection_end_minus_7 = $interval1[1] - 7;\n    my $intersection_end_minus_8 = $interval1[1] - 8;\n    my $intersection_end_minus_9 = $interval1[1] - 9;\n    my $intersection_end_minus_10 = $interval1[1] - 10;\n    my $intersection_end_minus_11 = $interval1[1] - 11;\n    my $intersection_end_minus_12 = $interval1[1] - 12;\n    my $intersection_end_minus_13 = $interval1[1] - 13;\n    my $intersection_end_minus_14 = $interval1[1] - 14;\n    my $intersection_end_minus_15 = $interval1[1] - 15;\n    my $intersection_end_minus_16 = $interval1[1] - 16;\n    my $intersection_end_minus_17 = $interval1[1] - 17;\n    my $intersection_end_minus_18 = $interval1[1] - 18;\n    my $intersection_end_minus_19 = $interval1[1] - 19;\n    my $intersection_end_minus_20 = $interval1[1] -",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $start1 < $end2 and $end1 > $start2 ? $end1 - $start1 : 0;\n    my $prime = $length % 2 == 0 ? \"NO\" : \"YES\";\n    return $intersection ? $prime : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = $start1 < $end2 ? $start1 < $start2 ? $start1 : $start2 : $start2 < $end1 ? $start2 : $end1;\n    my $length = $end - $start + 1;\n    my $prime = $length % 2 == 0 ? 0 : 1;\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ?\n        ($start1, $end1) : ($start2, $end2);\n    my $length = $end - $start + 1;\n    my $is_prime = $length % 2 == 0;\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = 0;\n    my $intersection_start = $interval1[0];\n    my $intersection_end = $interval1[1];\n    my $intersection_end_minus_1 = $interval1[1] - 1;\n    my $intersection_end_minus_2 = $interval1[1] - 2;\n    my $intersection_end_minus_3 = $interval1[1] - 3;\n    my $intersection_end_minus_4 = $interval1[1] - 4;\n    my $intersection_end_minus_5 = $interval1[1] - 5;\n    my $intersection_end_minus_6 = $interval1[1] - 6;\n    my $intersection_end_minus_7 = $interval1[1] - 7;\n    my $intersection_end_minus_8 = $interval1[1] - 8;\n    my $intersection_end_minus_9 = $interval1[1] - 9;\n    my $intersection_end_minus_10 = $interval1[1] - 10;\n    my $intersection_end_minus_11 = $interval1[1] - 11;\n    my $intersection_end_minus_12 = $interval1[1] - 12;\n    my $intersection_end_minus_13 = $interval1[1] - 13;\n    my $intersection_end_minus_14 = $interval1[1] - 14;\n    my $intersection_end_minus_15 = $interval1[1] - 15;\n    my $intersection_end_minus_16 = $interval1[1] - 16;\n    my $intersection_end_minus_17 = $interval1[1] - 17;\n    my $intersection_end_minus_18 = $interval1[1] - 18;\n    my $intersection_end_minus_19 = $interval1[1] - 19;\n    my $intersection_end_minus_20 = $interval1[1] -",
    "    my $intersection = $interval1 + $interval2;\n    my $intersection_length = abs($intersection);\n    my $intersection_is_prime = is_prime($intersection_length);\n    if ($intersection_is_prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my($start, $end) = ($start1, $end1) <= ($start2, $end2) ? $start1 : $start2;\n    my($end, $start) = ($start1, $end1) <= ($start2, $end2) ? $end1 : $end2;\n    my $length = $end - $start + 1;\n    my $is_prime = $length % 2 == 0;\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersection = $start1 < $end2 and $start2 < $end1;\n    my $length = $start1 < $end2 and $end2 > $start1;\n    my $prime = $length % 2 == 0;\n    if ($intersection && $prime) {\n        return \"YES\";\n    }\n    return \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_length_prime = 1;\n    my $intersection_start_prime = $interval1;\n    my $intersection_end_prime = $interval1;\n    my $intersection_length_prime_prime = 1;\n    my $intersection_start_prime_prime = $interval1;\n    my $intersection_end_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_start_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_end_prime_prime_prime_prime_prime_prime_prime = $interval1;\n    my $intersection_length_prime_prime_prime_prime_prime",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        my $prime = $prime and $i;\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $is_prime = 0;\n    while($prime <= $length) {\n        $prime = $length % 2 ? $length + 1 : $length;\n        $is_prime = 1;\n        foreach my $i (@{$interval1}) {\n            if ($i >= $start2 && $i <= $end2) {\n                $is_prime = 0;\n                break;\n            }\n        }\n        if ($is_prime) {\n            break;\n        }\n    }\n    return $is_prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $intersect = $start1 < $end2 and $start2 < $end1;\n    my $prime = 1;\n    if ($intersect) {\n        my $length = abs($start1 - $end2) + abs($start2 - $end1);\n        $prime = is_prime($length);\n    }\n    return $prime ? \"YES\" : \"NO\";\n}",
    "    my $intersection = $interval1;\n    my $intersection_length = $interval1;\n    my $intersection_start = $interval1;\n    my $intersection_end = $interval1;\n    my $intersection_prime = 1;\n    my $intersection_prime_length = 1;\n    my $intersection_prime_start = $interval1;\n    my $intersection_prime_end = $interval1;\n    my $intersection_prime_prime = 1;\n    my $intersection_prime_prime_length = 1;\n    my $intersection_prime_prime_start = $interval1;\n    my $intersection_prime_prime_end = $interval1;\n    my $intersection_prime_prime_prime = 1;\n    my $intersection_prime_prime_prime_length = 1;\n    my $intersection_prime_prime_prime_start = $interval1;\n    my $intersection_prime_prime_prime_end = $interval1;\n    my $intersection_prime_prime_prime_prime = 1;\n    my $intersection_prime_prime_prime_prime_length = 1;\n    my $intersection_prime_prime_prime_prime_start = $interval1;\n    my $intersection_prime_prime_prime_prime_end = $interval1;\n    my $intersection_prime_prime_prime_prime_prime = 1;\n    my $intersection_prime_prime_prime_prime_prime_length = 1;\n    my $intersection_prime_prime_prime_prime_prime_start = $interval1;\n    my $intersection_prime_prime_prime_prime_prime_end = $interval1;\n    my $intersection_prime_prime_prime_prime_prime_prime = 1;\n    my $intersection_prime_prime_prime_prime_prime_prime_length = 1;\n    my $intersection_prime_prime_prime_prime_prime_prime_start = $interval1;\n    my $intersection_prime_prime_prime_prime_prime_prime_end = $interval1;\n    my",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $count = 0;\n    for my $i = $start1; $i <= $end1; $i += 1 {\n        if ($i >= $start2 and $i <= $end2) {\n            $count += 1;\n        }\n        if ($count == $length) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = $interval1;\n    my($start2, $end2) = $interval2;\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    my $count = 0;\n    while($prime <= $length) {\n        $prime = $length % 2 ? $length : $length + 1;\n        $count++;\n    }\n    return $count == 1 ? \"YES\" : \"NO\";\n}\n",
    "    my($start1, $end1) = @{$interval1};\n    my($start2, $end2) = @{$interval2};\n    my $length = abs($start1 - $end1) + abs($start2 - $end2);\n    my $prime = 1;\n    foreach my $i (0..$length) {\n        if (($start1 + $i) < $end1 and ($start2 + $i) < $end2) {\n            $prime = 0;\n            break;\n        }\n    }\n    return $prime ? \"YES\" : \"NO\";\n}\n"
  ],
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ]
}
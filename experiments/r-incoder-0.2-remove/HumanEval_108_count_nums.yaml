name: HumanEval_108_count_nums
language: r
prompt: "# Write a function count_nums which takes an array of integers and returns\n\
  # the number of elements which has a sum of digits > 0.\n# If a number is negative,\
  \ then its first signed digit will be negative:\n# e.g. -123 has signed digits -1,\
  \ 2, and 3.\ncount_nums <- function(arr) {"
tests: "test_humaneval <- function() {\ncandidate <- count_nums\n    if(!identical(candidate(c()),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, 0)), 0)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1, 1, 2, -2, 3, 4, 5)), 6)){quit('no', 1)}\n\
  \    if(!identical(candidate(c(1, 6, 9, -6, 0, 1, 5)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(1,\
  \ 100, 98, -7, 1, -1)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(12, 23,\
  \ 34, -45, -56, 0)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1)), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(1)), 1)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  sum(arr > 0)\n}\n\ncount_nums(c(-1, 2, -3, 4, -5, 6))", "\n  sum(sapply(arr,\
    \ function(x) {\n    sum(x > 0) * (x < 0)\n  }))\n}\n\ncount_nums(arr)", "\n \
    \ sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sapply(arr, function(x) {\n\
    \    sum(x > 0) - sum(x < 0)\n  })\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n\
    }\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(c(-1, 2, 3, -4, -5))", "\n  sum(sapply(arr, function(x)\
    \ x > 0))\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\
    \ncount_nums(c(1, 2, -3, 4, -5))", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n\
    \  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(c(1, 2, -3, 4, -5))",
  "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  n <- length(arr)\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(c(-1,\
    \ 2, 3, -4, -5, 6, -7, -8, 9))", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\
    \ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  n <- length(arr)\n\
    \  sapply(arr, function(x) {\n    if (x > 0) sum(x[x %% 10 == 0]) else -sum(x[x\
    \ %% 10 < 0])\n  })\n}\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x >\
    \ 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  n <- length(arr)\n\
    \  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x > 0))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(-123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, ", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(1, 2, 3))", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  n <- length(arr)\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(c(-1, 2, -3, 4,\
    \ -5, 6))", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n",
  "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\n\
    count_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) {\n\
    \    sum(x > 0)\n  }))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(c(123, -456, 789))",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(1, 2, -3, 4, -5, 6, -7, 8))", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n \
    \ sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(c(12, -12, 1, -10, -5,\
    \ -3))", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n\
    }\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  sum(arr > 0)\n\
    }\n\ncount_nums(arr)", "\n  n <- length(arr)\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) {\n    sum(x > 0)\n  }))\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\n\
    count_nums(c(-1, 2, 3, -4, -5))", "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x)\
    \ x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n\
    }\n\ncount_nums(c(-1, 2, 3, -4, -5))", "\n  sum(sapply(arr, function(x) x > 0))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(c(1,\
    \ 2, -3, 4, -5, 6, -7, 8, -9))", "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x)\
    \ x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n\
    }\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  sum(arr > 0)\n}\n",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x)\
    \ x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  n <- length(arr)\n\
    \  sum <- 0\n  for (i in seq_len(n)) {\n    sum <- sum + arr[i]\n    if (sum >\
    \ 0) {\n      break\n    }\n  }\n  return(sum)\n}\n", "\n  sum(arr > 0)\n}\n",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(-123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, ", "\n  sapply(arr, function(x) {\n\
    \    if (x < 0) {\n      x <- -x\n    }\n    sum(x %% 10 == 0)\n  })\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n\
    }\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n \
    \ sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  n <- length(arr)\n  sum <-\
    \ 0\n  for(i in 1:n) {\n    sum <- sum + arr[i]\n    if(sum > 0) {\n      break\n\
    \    }\n  }\n  return(sum)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(c(-1,\
    \ 2, -3, 4, -5, 6))", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(c(1, 2, -3, 4, -5))", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x > 0))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(1, 2, -3, 4, -5, 6))", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\n\
    count_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(c(1,\
    \ 2, -3, 4, -5, 6))", "\n  sum(sapply(arr, function(x) x > 0))\n}\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n\ncount_nums(c(-1, 2, 3, -4, -5))", "\n  sum(arr > 0)\n}\n\
    \ncount_nums(c(-123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123, -123,\
    \ -123, -123, -123, -123, ", "\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n\
    \  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n\
    \  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)",
  "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\n\
    count_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n}\ncount_nums(arr)", "\n\
    \  sum(sapply(arr, function(x) {\n    sum(x %% 10 > 0)\n  }))\n}\n\ncount_nums(arr)",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sum(arr >\
    \ 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n",
  "\n  sum(sapply(arr, function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  sapply(arr,\
    \ function(x) {\n    sum(x %% 10 > 0)\n  })\n}\n\ncount_nums(arr)", "\n  n <-\
    \ length(arr)\n  sum <- 0\n  for (i in 1:n) {\n    sum <- sum + arr[i]\n    if\
    \ (sum > 0) {\n      break\n    }\n  }\n  return(sum)\n}\n", "\n  sum(sapply(arr,\
    \ function(x) x > 0))\n}\n\ncount_nums(arr)", "\n  n <- length(arr)\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n \
    \ sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  n <- length(arr)\n  sum(arr > 0)\n\
    }\n", "\n  n <- length(arr)\n  sum(sapply(arr, function(x) x > 0))\n}\n", "\n\
    \  sum(arr > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr\
    \ > 0)\n}\n\ncount_nums(arr)", "\n  sum(sapply(arr, function(x) x > 0))\n}\n\n\
    count_nums(arr)", "\n  sum(sapply(arr, function(x) {\n    sum(x > 0)\n  }))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\ncount_nums(c(1, 2, -3, 4, -5))",
  "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n", "\n  sum(sapply(arr, function(x) x > 0))\n\
    }\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n", "\n  n <- length(arr)\n  sum(arr\
    \ > 0)\n}\n", "\n  sum(arr > 0)\n}\n\ncount_nums(arr)", "\n  sum(arr > 0)\n}\n\
    \ncount_nums(c(2, 3, -4, -5, 6, -7, 8, -9, 10))", "\n  sum(sapply(arr, function(x)\
    \ x > 0))\n}\n\ncount_nums(arr)"]
stop_tokens:
- "\n#"
- "\n```"

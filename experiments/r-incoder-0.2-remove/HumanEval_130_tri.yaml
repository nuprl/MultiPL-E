name: HumanEval_130_tri
language: r
prompt: "# Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n# the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n# Tribonacci sequence is defined by the recurrence:\n# tri(1) = 3\n\
  # tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n - 2) + tri(n\
  \ + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n# tri(4) = 3\n\
  # tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are given a non-negative\
  \ integer number n, you have to a return a list of the \n# first n + 1 numbers of\
  \ the Tribonacci sequence.\n# Examples:\ntri <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- tri\n    if(!identical(candidate(3),\
  \ list(1, 3, 2, 8))){quit('no', 1)}\n    if(!identical(candidate(4), list(1, 3,\
  \ 2, 8, 3))){quit('no', 1)}\n    if(!identical(candidate(5), list(1, 3, 2, 8, 3,\
  \ 15))){quit('no', 1)}\n    if(!identical(candidate(6), list(1, 3, 2, 8, 3, 15,\
  \ 4))){quit('no', 1)}\n    if(!identical(candidate(7), list(1, 3, 2, 8, 3, 15, 4,\
  \ 24))){quit('no', 1)}\n    if(!identical(candidate(8), list(1, 3, 2, 8, 3, 15,\
  \ 4, 24, 5))){quit('no', 1)}\n    if(!identical(candidate(9), list(1, 3, 2, 8, 3,\
  \ 15, 4, 24, 5, 35))){quit('no', 1)}\n    if(!identical(candidate(20), list(1, 3,\
  \ 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11))){quit('no',\
  \ 1)}\n    if(!identical(candidate(0), list(1))){quit('no', 1)}\n    if(!identical(candidate(1),\
  \ list(1, 3))){quit('no', 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

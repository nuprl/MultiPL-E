name: HumanEval_80_is_happy
language: r
prompt: "# You are given a string s.\n# Your task is to check if the string is happy\
  \ or not.\n# A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\nis_happy <- function(s) {"
tests: "test_humaneval <- function() {\ncandidate <- is_happy\n    if(!identical(candidate('a'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('aa'), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('abcd'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aabb'),\
  \ FALSE)){quit('no', 1)}\n    if(!identical(candidate('adb'), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate('xyy'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('iopaxpoi'),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate('iopaxioi'), FALSE)){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\n\nis_happy(\"abba\"\
    )\nis_happy(\"aba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n  s <- tolower(s)\n  n <-\
    \ length(s)\n  return(n >= 3 && all(sapply(seq(n), function(i) length(unique(substr(s,\
    \ i, i + 3))) == 3)))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks so much!\
    \ I really appreciate it!\n<|/ c |>\n<| a tags=r,string |>\nWe can use rle\n<code>\n\
    library(stringr)\nis_happy <- function(s) {\n  n <- nchar(tolower(s))\n  return(n\
    \ >= 3 && all(sapply(seq(n), function(i) length(unique(substr(s, i, i + 3))) ==\
    \ 3)))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  n <- nchar(tolower(s))\n  return(n >= 3 && all(sapply(seq(n), function(i)\
    \ length(unique(substr(s, i, i + 3))) == 3)))\n}\n</code>\n<|/ a tags=r,string\
    \ |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s) {\n  n <- nchar(tolower(s))\n\
    \  return(n >= 3 && all(sapply(seq(n), function(i) length(unique(substr(s, i,\
    \ i + 3))) == 3)))\n}\n</code>\n<|/ a tags=r,string |>\n<| a tags=r,string |>\n\
    <code>\nis_happy <- function(s) {\n  n <- nchar(tolower(s))\n  return(n >= 3 &&\
    \ all(sapply(seq(n), function(i) length(unique(substr(s, i, i + 3))) == 3)))\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  n <- nchar(tolower(s))\n  return(n >= 3 && all(sapply(seq(n), function(i)\
    \ length(unique(substr(s, i, i + 3))) == 3)))\n}\n</code>\n<|/ a tags=r,string\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a tags=r,string |>\n<code>\nis_happy <- function(s)\
    \ {\n  n <- nchar(tolower(s))\n  return(n >= 3 && all(sapply(seq(n), function(i)\
    \ length(unique(substr(s, i, i + 3))) == 3)))\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=r,string |>\n<code>\nis_happy <- function(s) {\n  n <- nchar(tolower(s))\n\
    \  return", "\n  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    sapply(s,\
    \ function(x) length(unique(x))) == 3\n}\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"ab", "\n  if(length(s) <\
    \ 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s) - 1)) {\n    if(s[i] !=\
    \ s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\nis_happy(\"\
    abba\")\nis_happy(\"aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"aa\"\
    )\nis_happy(\"aaa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\"\
    )\nis_happy(\"aaaaaaaa\")\nis_happy(\"aaaaaaaaa\")\nis_happy(\"aaaaaaaaaa\")\n\
    is_happy(\"aaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaab\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabb\")\nis_happy(\"aaaaaaaaaaaaaaabbb\")\nis_happy(\"\
    aaaaaaaaaaaaaaabbbb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbba\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbba\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaaa", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >=\
    \ 3 & all(sapply(1:(n-3),\n                            function(i) !any(s[i:(i+3)]\
    \ %in% s[i:(i+3)]))))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"ab", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(length(n) >= 3 & all(sapply(1:(n-1), function(x) !any(duplicated(substr(s,\
    \ n-1, x)))))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\n\
    is_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\n", "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s) - 1)) {\n\
    \    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\
    \nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"\
    aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"\
    aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaabb\")\nis_happy(\"aaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa", "\n  if(length(s) < 3) return(FALSE)\n\
    \  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) return(FALSE)\n \
    \ }\n  \n  return(TRUE)\n}\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n\
    \ >= 3 & all(sapply(1:(n-3),\n                            function(i) length(unique(substr(s,i,i+3)))\
    \ == 3)))\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPYE\")\n\
    is_happy(\"HAPPYEASE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIE\")\n\
    is_happy(\"HAPPYEASIE\")\nis_happy(\"HAP", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAP", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n)\
    \ >= 3 & all(sapply(1:(n-1), function(i) length(unique(substr(s, i, i+3))) ==\
    \ 3)))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s\
    \ <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(x)\
    \ length(unique(c(s[x:(x+3)], s[(x+1):(x+4)])))) == 3))\n}\n\nis_happy(\"hello\"\
    )\nis_happy(\"goodbye\")\nis_happy(\"helloo\")\nis_happy(\"hellooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooooo\")\nis_happy(\"hellooooooo\")\nis_happy(\"\
    helloooooooo\")\nis_happy(\"helloooooooooo\")\nis_happy(\"hellooooooooooo\")\n\
    is_happy(\"helloooooooooooo\")\nis_happy(\"helloooooooooooooo\")\nis_happy(\"\
    hellooooooooooooooo\")\nis_happy(\"helloooooooooooooooo\")\nis_happy(\"helloooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooo\")\nis_happy(\"hellooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooooo", "\n  s <- tolower(s)\n  length(sapply(strsplit(s,\
    \ \"\"), length)) >= 3 & \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3)\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPYE\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYE", "\n  if(length(s) < 3)\
    \ return(FALSE)\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n\
    \      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n", "\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 && all(sapply(1:(n-3), function(i) length(unique(sapply(seq(i),\
    \ function(j) s[j:(i+2))]))) == 3))\n}\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )", "\n  if(length(s) < 3) return(FALSE)\n  \n  for(i in 1:(length(s) - 1)) {\n\
    \    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n\
    }\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(length(n) >= 3 & all(sapply(seq(n), function(i) length(unique(substr(s,\
    \ i, i + 3))) == 3)))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\n", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(c(s[i:(i+3)], s[i+1:(i+4)]))) == 3)))\n}\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba", "\n  \n  if(length(s) < 3 || nchar(s) < 3) return(FALSE)\n\
    \  \n  for(i in 1:nchar(s)){\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n  \n\
    \  return(TRUE)\n}\n\nis_happy(\"abba\") # TRUE\nis_happy(\"abbaa\") # FALSE\n\
    is_happy(\"abb\") # FALSE\nis_happy(\"abbb\") # FALSE\nis_happy(\"abbbc\") # FALSE\n\
    is_happy(\"abbbcc\") # FALSE\nis_happy(\"abbbccc\") # FALSE\nis_happy(\"abbbccca\"\
    ) # FALSE\nis_happy(\"abbbcccba\") # FALSE\nis_happy(\"abbbcccbb\") # FALSE\n\
    is_happy(\"abbbcccbbb\") # FALSE\nis_happy(\"abbbcccbbbba\") # FALSE\nis_happy(\"\
    abbbcccbbbbaa\") # FALSE\nis_happy(\"abbbcccbbbbaaa\") # FALSE\nis_happy(\"abbbcccbbbbaaaa\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaab\") # FALSE\nis_happy(\"abbbcccbbbbaaaabb\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbb\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbb\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbba\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaa\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaa\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaa\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaab\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaabb\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaabbb\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaabbbb\"\
    ) # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaabbbbba\") # FALSE\nis_happy(\"abbbcccbbbbaaaabbbbbaaaabbbbbaa\"\
    ) # ", "\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3), function(i)\
    \ length(unique(substr(s, i, i+3))) == 3)))\n}\nis_happy(\"abcabcbb\")\nis_happy(\"\
    a\")\nis_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\"\
    )\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaaa\")\nis_happy(\"aaaaaaaaa\")\nis_happy(\"\
    aaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaa\")\nis_happy(\"\
    aaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaa\")\n\
    is_happy(\"aaaaaaaaaaaaaaab\")\nis_happy(\"aaaaaaaaaaaaaaabb\")\nis_happy(\"aaaaaaaaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbc\")\nis_happy(\"\
    aaaaaaaaaaaaaaabbbbcc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbccc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccc\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbccccc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccc\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbccccccc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddddddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddddddddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddddddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddddddddddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddddddddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccdddddddddddddd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcccccccddddddddddddddd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbb", "\n  s <- tolower(s)\n  length(sapply(strsplit(s,\
    \ \"\"), length)) >= 3 & \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3)\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY", "\n  if(length(s) < 3) return(FALSE)\n  for(i\
    \ in 1:(length(s)-3)) {\n    if(s[i] != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3])\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n<|/ a tags=r,string |>\n<| c\
    \ |>\nThanks for your answer! I appreciate it!\n<|/ c |>\n<| c |>\nI added a more\
    \ efficient solution that doesn't require a for loop\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nis_happy <- function(s) {\n  if(length(s) < 3) return(FALSE)\n \
    \ for(i in 1:(length(s)-3)) {\n    if(s[i] != s[i+1] && s[i] != s[i+2] && s[i]\
    \ != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n<|/ a tags=r,string\
    \ |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s) {\n  if(length(s) < 3)\
    \ return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i] != s[i+1] && s[i]\
    \ != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n\
    <|/ a tags=r,string |>\n<| a tags=r,string |>\n<code>\nis_happy <- function(s)\
    \ {\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n</code>\n<|/ a tags=r,string |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n</code>\n<|/ a tags=r,string ", "\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ", "\n\
    \  n <- nchar(s)\n  return(length(n) >= 3 & all(sapply(1:(n-1), function(i) length(unique(substr(s,\
    \ i, i+3))) == 3)))\n}\n\nis_happy(\"abba\") # TRUE\nis_happy(\"abb\") # FALSE\n\
    is_happy(\"abbb\") # FALSE\nis_happy(\"abbbc\") # FALSE\nis_happy(\"abbbbc\")\
    \ # TRUE\nis_happy(\"abbbbcde\") # FALSE\nis_happy(\"abbbbcdef\") # TRUE\nis_happy(\"\
    abbbbcdefg\") # FALSE\nis_happy(\"abbbbcdefgh\") # TRUE\nis_happy(\"abbbbcdefghi\"\
    ) # FALSE\nis_happy(\"abbbbcdefghij\") # TRUE\nis_happy(\"abbbbcdefghijk\") #\
    \ FALSE\nis_happy(\"abbbbcdefghijkl\") # TRUE\nis_happy(\"abbbbcdefghijklm\")\
    \ # FALSE\nis_happy(\"abbbbcdefghijklmn\") # TRUE\nis_happy(\"abbbbcdefghijklmns\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnss\") # TRUE\nis_happy(\"abbbbcdefghijklmnsss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnsssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnssssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnsssssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnssssssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnsssssssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnsssssssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnssssssssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnsssssssssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnssssssssssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnsssssssssss\") # TRUE\nis_happy(\"abbbbcdefghijklmnssssssssssss\"\
    ) # FALSE\nis_happy(\"abbbbcdefghijklmnssssssss", "\n  if(length(s) < 3) {\n \
    \   return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i\
    \ + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n", "\n  if(length(s)\
    \ < 3 || nchar(s) < 3) return(FALSE)\n  for(i in 1:nchar(s)){\n    if(s[i] !=\
    \ s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abba\")\nis_happy(\"\
    aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\"\
    )\nis_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"\
    aaaaaaabb\")\nis_happy(\"aaaaaaabbb\")\nis_happy(\"aaaaaaabbbb\")\nis_happy(\"\
    aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaa\")\n\
    is_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbbb\")\nis_", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(n >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x))) == 3))\n}\nis_happy(\"HAPPY\")\nis_happy(\"happy\")\nis_happy(\"\
    HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY", "\n  if(length(s) < 3) return(FALSE)\n  if(length(s)\
    \ == 3) return(TRUE)\n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i + 1])\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    Thanks for the answer. Can you please explain how this works?\n<|/ c |>\n<| c\
    \ |>\nI added some explanation.\n<|/ c |>\n<| c |>\nThanks for the explanation.\
    \ Can you please explain how this works?\n<|/ c |>\n<| c |>\nI added some explanation.\n\
    <|/ c |>\n<| c |>\nThanks for the explanation. Can you please explain how this\
    \ works?\n<|/ c |>\n<| a dscore=1 |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\
    \ndf <- data.frame(\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n\
    \  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors\
    \ = FALSE,\n  stringsAsFactors = FALSE,\n  stringsAsFactors = FALSE,\n  strings",
  "\n  if(length(s) < 3) return(FALSE)\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i]\
    \ != s[i+1]) return(FALSE)\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"happy\")\n\
    is_happy(\"happyp\")\nis_happy(\"happypp\")\nis_happy(\"happyppp\")\nis_happy(\"\
    happypppp\")\nis_happy(\"happyppppp\")\nis_happy(\"happypppppp\")\nis_happy(\"\
    happyppppppp\")\nis_happy(\"happypppppppp\")\nis_happy(\"happyppppppppp\")\nis_happy(\"\
    happyppppppppp\")\nis_happy(\"happypppppppppp\")\nis_happy(\"happyppppppppppp\"\
    )\nis_happy(\"happypppppppppppp\")\nis_happy(\"happyppppppppppppp\")\nis_happy(\"\
    happypppppppppppppp\")\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"happyppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\n", "\n  s <- tolower(s)\n  n <- length(s)\n  \n  if(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) length(unique(c(s[i], s[i+1], s[i+2]))) == 3))) \n    TRUE\n  else\
    \ FALSE\n}\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadab", "\n  if(length(s) < 3) return(FALSE)\n\
    \  \n  for(i in 1:(length(s)-3)) {\n    if(s[i] != s[i+1] & s[i] != s[i+2] & s[i]\
    \ != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"hello\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllllo\")\nis_happy(\"hellllllo\")\nis_happy(\"helllllloo\"\
    )\nis_happy(\"helllllllooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\"\
    )\nis_happy(\"hellllllloooo\")\nis_happy(\"helllll", "\n  if(length(s) < 3) {\n\
    \    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i\
    \ + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabrax\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"\
    abracadabraxx\")\nis_happy(\"abracadabraxx\")\nis_happy(\"abracadabra", "\n  if(length(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i]\
    \ != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabrazz\")\nis_happy(\"\
    abracadabrazzz\")\nis_happy(\"abracadabrazzzz\")\nis_happy(\"abracadabrazzzzz\"\
    )\nis_happy(\"abracadabrazzzzzz\")\nis_happy(\"abracadabrazzzzzzz\")\nis_happy(\"\
    abracadabrazzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzz", "\n  s <- tolower(s)\n  if(length(s) >=\
    \ 3 & all(sapply(s, function(x) !any(duplicated(x))))) TRUE else FALSE\n}\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n\
    \  if(length(s) < 3) {\n    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) -\
    \ 1)) {\n    if(s[i] != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n\
    }\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabra",
  "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(3:n, function(i)\
    \ !any(duplicated(s[i:(i+2)]) & s[i:(i+2)] == \"a\"))))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks for the answer. Can you please explain how this works?\n\
    <|/ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n<| a tags=r,string,regex\
    \ |>\nYou can try this regex:\n<code>\n^(?=.{3,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_+\\\
    -=\\[\\]{};':\"\\\\|,.<>/?]).*$\n</code>\nDemo\n<|/ a dscore=2 |>\n<| c |>\nThanks\
    \ for the answer. Can you please explain how this works?\n<|/ c |>\n<| c |>\n\
    It is a positive lookahead assertion. It checks if your string has at least 3\
    \ characters and then checks if it contains at least one digit, one lower case\
    \ letter and one upper case letter and one special character (!@#$%^&*()_+\\-=\\\
    [\\]{};':\"\\\\|,.<>/?)\n<|/ c |>\n<| a tags=r,string,regex |>\nWe can use grepl\
    \ to match all the conditions mentioned in the OP's post and negate it using !\n\
    <code>\ngrepl(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+\\-=\\[\\\
    ]{};':\\\"\\\\|,.<>/?])\", \n       tolower(s))", "\n  \n  if(length(s) < 3) {\n\
    \    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i\
    \ + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracad", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 && all(sapply(seq(n),\
    \ function(i) length(unique(c(s[i:(i+2)], s[i+1:(i+3)]))) == 3)))\n}\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3\
    \ & all(sapply(1:(n-3), function(i) length(unique(substr(s, i, i+3))) == 3)))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n  s <-\
    \ tolower(s)\n  length(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3)\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAP", "\n  n <- nchar(s)\n  if(n < 3) return(FALSE)\n  for(i in\
    \ 1:(n-3)) {\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n}\n\n\
    is_happy(\"hello\")\nis_happy(\"helllo\")\nis_happy(\"hellllllo\")\nis_happy(\"\
    helllllllo\")\nis_happy(\"hellllllllo\")\nis_happy(\"helllllllllo\")\nis_happy(\"\
    hellllllllllo\")\nis_happy(\"helllllllllllo\")\nis_happy(\"hellllllllllllo\")\n\
    is_happy(\"helllllllllllllo\")\nis_happy(\"hellllllllllllllo\")\nis_happy(\"helllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllo\")\nis_happy(\"helllllllllllllllllo\")\nis_happy(\"\
    hellllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllllllllllllllo\"\
    )\n", "\n  if(length(s) < 3) return(FALSE)\n  \n  for(i in 1:(length(s) - 1))\
    \ {\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abrac", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) length(unique(sapply(seq(i), function(j) substr(s, j, j+3))))) ==\
    \ 3))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n >= 3 & all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3))\n}\n\nis_happy(\"abba\")\nis_happy(\"abbac\")\nis_happy(\"abbaca\")\n\
    is_happy(\"abbacab\")\nis_happy(\"abbacabc\")\nis_happy(\"abbacabca\")\nis_happy(\"\
    abbacabcaab\")\nis_happy(\"abbacabcaabb\")\nis_happy(\"abbacabcaabbb\")\nis_happy(\"\
    abbacabcaabbbb\")\nis_happy(\"abbacabcaabbbbc\")\nis_happy(\"abbacabcaabbbbcc\"\
    )\nis_happy(\"abbacabcaabbbbccc\")\nis_happy(\"abbacabcaabbbbccca\")\nis_happy(\"\
    abbacabcaabbbbcccab\")\nis_happy(\"abbacabcaabbbbcccabc\")\nis_happy(\"abbacabcaabbbbcccabca\"\
    )\nis_happy(\"abbacabcaabbbbcccabcab\")\nis_happy(\"abbacabcaabbbbcccabcabc\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabca\")\nis_happy(\"abbacabcaabbbbcccabcabcab\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabc\")\nis_happy(\"abbacabcaabbbbcccabcabcabca\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabcab\")\nis_happy(\"abbacabcaabbbbcccabcabcabcabc\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabcabca\")\nis_happy(\"abbacabcaabbbbcccabcabcabcabcab\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabc\")\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabcab\")\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabca\")\nis_happy(\"abbacabcaabbbbcccabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcaabbbbcc", "\n  s <- tolower(s)\n  s <- gsub(\"[^a-z]\"\
    , \"\", s)\n  s <- gsub(\"^[a-z]\", \"\", s)\n  s <- gsub(\"[a-z]$\", \"\", s)\n\
    \  s <- gsub(\"^[a-z]{3}\", \"\", s)\n  s <- gsub(\"[a-z]{3}$\", \"\", s)\n  s\
    \ <- gsub(\"[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <-\
    \ gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"\
    [a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"\
    [a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <-\
    \ gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\",\
    \ \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{",
  "\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3), function(i) length(unique(substr(s,\
    \ i, i+3))) == 3)))\n}\n\nis_happy(\"abcabcbb\")\nis_happy(\"aba\")\nis_happy(\"\
    aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"\
    aaaaaaab\")\nis_happy(\"aaaaaaaab\")\nis_happy(\"aaaaaaaabb\")\nis_happy(\"aaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaaabbbb\")\nis_happy(\"aaaaaaaabbbbb\")\nis_happy(\"aaaaaaaabbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbb\")\nis_happy(\"\
    aaaaaaaabbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbb\")\nis_happy(\"\
    aaaaaaaabbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbb\")\nis_happy(\"\
    aaaaaaaabbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbb\")\nis_happy(\"\
    aaaaaaaabbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbb\")\nis_happy(\"\
    aaaaaaaabbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbb\")\n\
    is_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\
    )\nis_happy(\"aaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\nis_happy(\"",
  "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n) >= 3 & all(sapply(1:(n-1),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\n\nis_happy(\"abba\"\
    )\nis_happy(\"abbaa\")\nis_happy(\"abbaaa\")\nis_happy(\"abbaaaa\")\nis_happy(\"\
    abbaaaaa\")\nis_happy(\"abbaaaaaa\")\nis_happy(\"abbaaaaaaa\")\nis_happy(\"abbaaaaaaaa\"\
    )\nis_happy(\"abbaaaaaaaab\")\nis_happy(\"abbaaaaaaaabb\")\nis_happy(\"abbaaaaaaaabbb\"\
    )\nis_happy(\"abbaaaaaaaabbbb\")\nis_happy(\"abbaaaaaaaabbbbc\")\nis_happy(\"\
    abbaaaaaaaabbbbcd\")\nis_happy(\"abbaaaaaaaabbbbcdc\")\nis_happy(\"abbaaaaaaaabbbbcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcd\")\n\
    is_happy(\"abbaaaaaaaabbbbcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"abbaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"abbaaaaaaaabbbbcdcdcdcd", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n > 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)+1]))))\n\
    }\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY", "\n\
    \  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    sapply(s, function(x)\
    \ length(unique(x))) == 3\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPYE\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYE", "\n  s <- tolower(s)\n  length(s)>=3 && all(sapply(1:(length(s)-3),function(x)\
    \ !any(duplicated(substr(s,x,x+3)))))\n}\nis_happy(\"abba\")", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s,\
    \ i, i+3))) == 3)))\n}\n\nis_happy(\"abc\")\nis_happy(\"abcab\")\nis_happy(\"\
    abcabcbb\")\nis_happy(\"abcabcbbbc\")\nis_happy(\"abcabcbbbcc\")\nis_happy(\"\
    abcabcbbbccd\")\nis_happy(\"abcabcbbbccdde\")\nis_happy(\"abcabcbbbccddeeff\"\
    )\nis_happy(\"abcabcbbbccddeeffgg\")\nis_happy(\"abcabcbbbccddeeffggh\")\nis_happy(\"\
    abcabcbbbccddeeffgghh\")\nis_happy(\"abcabcbbbccddeeffgghhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhhhhhhhhhh\"\
    )\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhhhhhhhhhhhh\")\nis_happy(\"\
    abcabcbbbccddeeffgghhhhhhhhhhhhhhhhhhhhhhhhhhhh\")\nis_happy(\"abcabcbbbccddeeffgghhhhhhhhhhhh",
  "\n  s <- tolower(s)\n  s <- gsub(\"[^a-z]\", \"\", s)\n  s <- gsub(\"^[a-z]\",\
    \ \"\", s)\n  s <- gsub(\"[a-z]$\", \"\", s)\n  s <- gsub(\"[a-z]{3}$\", \"\"\
    , s)\n  s <- gsub(\"[a-z]{3}\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\",\
    \ \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"\
    [a-z]{3}\\\\1\", \"\\\\1\", s)\n  s <- gsub(\"[a-z]{3}\\\\1\", \"\\\\1\", s)\n\
    \  s ", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)] %in% s[i:(i+3)]))))\n}\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")", "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-2)) {\n\
    \    if(s[i] != s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n<|/ a\
    \ tags=r |>\n<| c |>\nThank you so much! I really appreciate it!\n<|/ c |>\n<|\
    \ c |>\nI added a solution using `stringr` package that uses `str_subset` instead\
    \ of `grepl`\n<|/ c |>\n<| c |>\nThank you so much! I really appreciate it!\n\
    <|/ c |>\n<| a tags=r |>\nWe can use grepl to check if there are 3 consecutive\
    \ letters that are not the same\n<code>\ngrepl(\"^[^A-Z]*[A-Z][^A-Z]*[A-Z][^A-Z]*$\"\
    , s)", "\n  \n  if(length(s) < 3 || all(sapply(s, length) == 3)) return(TRUE)\n\
    \  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i + 1]) return(FALSE)\n\
    \  }\n  \n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happyp\")\nis_happy(\"\
    happypp\")\nis_happy(\"happyppp\")\nis_happy(\"happypppp\")\nis_happy(\"happyppppp\"\
    )\nis_happy(\"happypppppp\")\nis_happy(\"happyppppppp\")\nis_happy(\"happypppppppp\"\
    )\nis_happy(\"happyppppppppp\")\nis_happy(\"happypppppppppp\")\nis_happy(\"happyppppppppppp\"\
    )\nis_happy(\"happypppppppppppp\")\nis_happy(\"happyppppppppppppp\")\nis_happy(\"\
    happypppppppppppppp\")\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"happyppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n) >= 3 & all(sapply(1:(n-1),\
    \ function(x) length(unique(substr(s, x, x+3))) == 3)))\n}\n\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s <- tolower(s)\n  length(sapply(s,\
    \ length)) >= 3 & \n    all(sapply(s, function(x) length(unique(x))) == 3)\n}\n\
    is_happy(\"HAPPY\")\nis_happy(\"HAPPY FISH\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"\
    HAPPY FISHES\")\nis_happy(\"", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n\
    \ >= 3 & all(sapply(3:n, function(i) !any(s[i:(i+2)]==s[i:(i+2)]))))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI like your solution. Just a small comment: I would\
    \ use `sapply(3:n, function(i) !any(s[i:(i+2)]==s[i:(i+2)]))` instead of `sapply(3:n,\
    \ function(i) !s[i:(i+2)]==s[i:(i+2)])`\n<|/ c |>\n<| c |>\nThanks, I didn't know\
    \ about that one. I'll update my answer.\n<|/ c |>\n<| a tags=r,string |>\nA base\
    \ R solution:\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  n <- length(s)\n\
    \  return(n >= 3 & all(sapply(3:n, function(i) !any(s[i:(i+2)]==s[i:(i+2)]))))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,string |>\nWe can use gregexpr and\
    \ regmatches to find out if there are 3 or more consecutive letters present and\
    \ if there are any duplicates. \n<code>\nis_happy <- function(s) {\n  n <- length(s)\n\
    \  return(n >= 3 & length(gregexpr(\"\\\\w{3,}\", s)[[1]])>0 & length(unique(regmatches(s,\
    \ gregexpr(\"\\\\w{3,}\", s))))>0)\n}\n\nis_happy(\"abcabc\") # TRUE\nis_happy(\"\
    abccc\") # FALSE\nis_happy(\"abcc\") # FALSE\nis_happy(\"abc\") # FALSE\nis_happy(\"\
    a\") # FALSE\nis_happy(\"ab\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"\
    abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"\
    abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"\
    abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"\
    abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"\
    abcde\") # FALSE\nis_happy(\"abcde\") # FALSE\nis_happy(\"abcde", "\n  if(length(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i] != s[i+1] &&\
    \ s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n}\n\n\
    is_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadab", "\n  s <- tolower(s)\n  length(sapply(s, length)) >=\
    \ 3 & \n    sapply(s, function(x) length(unique(x))) == 3\n}\n\nis_happy(\"hello\"\
    )\nis_happy(\"goodbye\")\nis_happy(\"helloo\")\nis_happy(\"hellooo\")\nis_happy(\"\
    helloooooo\")\nis_happy(\"helloooooooo\")\nis_happy(\"helloooooooooo\")\nis_happy(\"\
    helloooooooooooo\")\nis_happy(\"helloooooooooooooo\")\nis_happy(\"helloooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\n\
    is_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\n\
    is_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooo", "\n  s <- tolower(s)\n  length(sapply(s, length))\
    \ >= 3 & \n    all(sapply(s, function(x) length(unique(x))) == 3)\n}\n\nis_happy(\"\
    abba\")\nis_happy(\"abbaa\")\nis_happy(\"abbaaa\")\nis_happy(\"abbaaaa\")\nis_happy(\"\
    abbaaaaa\")\nis_happy(\"abbaaaaaa\")\nis_happy(\"abbaaaaaaa\")\nis_happy(\"abbaaaaaaaa\"\
    )\nis_happy(\"abbaaaaaaaaa\")\nis_happy(\"abbaaaaaaaaab\")\nis_happy(\"abbaaaaaaaaabb\"\
    )\nis_happy(\"abbaaaaaaaaabbb\")\nis_happy(\"abbaaaaaaaaabbbb\")\nis_happy(\"\
    abbaaaaaaaaabbbbba\")\nis_happy(\"abbaaaaaaaaabbbbbaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaa\")\n\
    is_happy(\"abbaaaaaaaaabbbbbaaaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaa\")\n\
    is_happy(\"abbaaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbba\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"abbaaaaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\n\nis_happy(\"HAPPY\"\
    )\nis_happy(\"HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY\")\nis_happy(\"\
    HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY\"\
    )\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\")\nis_happy(\"HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING\
    \ HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"\
    HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\
    \ HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\
    \ HAPPY FREAKING HAPPY FREAKING ", "\n  s <- tolower(s)\n  s <- gsub(\"[^a-z]\"\
    , \"\", s)\n  s <- gsub(\"^[a-z]\", \"\", s)\n  s <- gsub(\"[a-z]$\", \"\", s)\n\
    \  s <- gsub(\"[a-z]{3}\", \"\", s)\n  s <- gsub(\"[a-z]{3}$\", \"\", s)\n  s\
    \ <- gsub(\"[a-z]{3}[a-z]{3}\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}$\", \"\
    \", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n\
    \  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n\
    \  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\
    \", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{",
  "\n  \n  # Your code here\n  \n}\n</cell>\n<cell>", "\n  if(length(s) < 3) return(FALSE)\n\
    \  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n\
    \    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"aba\")\nis_happy(\"abba\")\n\
    is_happy(\"abbac\")\nis_happy(\"abacaba\")\nis_happy(\"abacabacaba\")\nis_happy(\"\
    abacabacabacaba\")\nis_happy(\"abacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"\
    abacabacabacabacabacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacab",
  "\n  s <- tolower(s)\n  length(s)>=3 & \n    all(sapply(s, function(x) length(unique(x))==3))\n\
    }\n\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n\
    \  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i + 1]) {\n      return(FALSE)\n\
    \    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"hello\")\nis_happy(\"h\")\nis_happy(\"\
    hellooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"\
    helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\"\
    )\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooo\")", "\n\
    \  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s) - 1))\
    \ {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)] %in% s[i:(i+3)]))))\n}\nis_happy(\"abc\")\nis_happy(\"\
    abca\")\nis_happy(\"abcab\")\nis_happy(\"abcabc\") # Should be TRUE\nis_happy(\"\
    abcaz\") # Should be FALSE\nis_happy(\"abcazbc\") # Should be FALSE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be TRUE\nis_happy(\"\
    abcazbc\") # Should be TRUE\nis_happy(\"abcazbc\") # Should be ", "\n  s <- tolower(s)\n\
    \  if(length(s)<3 || nchar(s)<3) return(FALSE)\n  for(i in 1:nchar(s)){\n    if(s[i]\
    \ != s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThank you so much for your answer. Your solution is very elegant and\
    \ I learned a lot from it. However, I still have a question: why do we need to\
    \ use tolower here? I thought that R will automatically convert all strings to\
    \ lower case when we use them in functions. Am I wrong?\n<|/ c |>\n<| c |>\nYes,\
    \ you are right. R will automatically convert all strings to lower case when we\
    \ use them in functions. But if you use tolower in the function definition, you\
    \ will need to use tolower in the function call as well.\n<|/ c |>\n<| c |>\n\
    Thank you so much for your answer! I really appreciate it!\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  if(length(s)<3 ||\
    \ nchar(s)<3) return(FALSE)\n  for(i in 1:nchar(s)){\n    if(s[i] != s[i+1]) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nThank you so much\
    \ for your answer. Your solution is very elegant and I learned a lot from it.\
    \ However, I still have a question: why do we need to use tolower here? I thought\
    \ that R will automatically convert all strings to lower case when we use them\
    \ in functions. Am I wrong?\n<|/ c |>\n<| c |>\nYes, you are right. R will automatically\
    \ convert all strings to lower case when we use them in functions. But if you\
    \ use tolower in the function definition, you will need to use tolower in the\
    \ function call as well.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  s <- tolower(s)\n  if(length(s)<3 || nchar(s)<3) return(FALSE)\n  for(i\
    \ in 1:nchar(s)){\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n</code>\n<|/ a tags=r |>\n<| c |>\nThank you so much for your answer. Your\
    \ solution is very elegant and ", "\n  if(length(s) < 3) return(FALSE)\n  \n \
    \ for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n \
    \ \n  return(TRUE)\n}\n\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"ab\"\
    )\nis_happy(\"a\")\nis_happy(\"aa\")\nis_happy(\"aaa\")\nis_happy(\"aaaa\")\n\
    is_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"\
    aaaaaaab\")\nis_happy(\"aaaaaaabb\")\nis_happy(\"aaaaaaabbb\")\nis_happy(\"aaaaaaabbbb\"\
    )\nis_happy(\"aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabb\")\n\
    is_happy(\"aaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbb\")\n\
    is_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaa",
  "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\n\
    \                            function(x) !any(duplicated(substr(s, x, x+3))))))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba", "\n  n <- nchar(s)\
    \ # length of string\n  return(n >= 3 & all(sapply(1:(n-3), function(x) length(unique(substr(s,\
    \ x, x+3))) == 3)))\n}\n</code>\n<|/ a tags=r,string,regex |>\n<| c |>\nThanks\
    \ for the answer. Can you please explain how this works?\n<|/ c |>\n<| c |>\n\
    I added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ the explanation. Can you please explain how this works?\n<|/ c |>\n<| c |>\n\
    I added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for\
    \ the explanation. Can you please explain how this works?\n<|/ c |>\n<| a dscore=2\
    \ |>\nWe can use gregexpr to find the position of every 3 consecutive letters\
    \ and then check whether they are all distinct\n<code>\ngregexpr(\"(.)\\\\1\"\
    , s)[[1]][lengths(regmatches(s, gregexpr(\"(.)\\\\1\", s))) == 3]", "\n  s <-\
    \ tolower(s)\n  length(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ >= 3)\n}\nis_happy(\"abc\")\nis_happy(\"abca\")\nis_happy(\"abcab\")\nis_happy(\"\
    abcabc\") # Should be TRUE\nis_happy(\"abcadef\") # Should be FALSE\nis_happy(\"\
    abcadefg\") # Should be FALSE\nis_happy(\"abcadefgh\") # Should be FALSE\nis_happy(\"\
    abcadefghi\") # Should be TRUE\nis_happy(\"abcadefghij\") # Should be TRUE\nis_happy(\"\
    abcadefghijk\") # Should be TRUE\nis_happy(\"abcadefghijkl\") # Should be TRUE\n\
    is_happy(\"abcadefghijklm\") # Should be TRUE\nis_happy(\"abcadefghijklmn\") #\
    \ Should be TRUE\nis_happy(\"abcadefghijklmno\") # Should be TRUE\nis_happy(\"\
    abcadefghijklmnop\") # Should be TRUE\nis_happy(\"abcadefghijklmnopq\") # Should\
    \ be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\"\
    ) # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"\
    abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") #\
    \ Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"\
    abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") #\
    \ Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"\
    abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") #\
    \ Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"\
    abcadefghijklmnopqrs\") # Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") #\
    \ Should be TRUE\nis_happy(\"abcadefghijklmnopqrs\") # Should be TRUE\n", "\n\
    \  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(seq(n), function(i)\
    \ length(unique(substr(s, i, i + 3))) == 3)))\n}\nis_happy(\"Hello\")\nis_happy(\"\
    Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy\")\nis_happy(\"Happy\
    \ Happy Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy Happy\"\
    )\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy\")\nis_happy(\"Happy Happy\
    \ Happy Happy Happy Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy\
    \ Happy Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy\
    \ Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy Happy\
    \ Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy Happy\
    \ Happy Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy\
    \ Happy Happy Happy Happy Happy Happy\")\nis_happy(\"Happy Happy Happy Happy Happy\
    \ Happy Happy Happy Happy Happy Happy Happy Happy Happy\")\nis_happy(\"Happy Happy\
    \ Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy\"\
    )\nis_happy(\"Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy Happy\
    \ Happy Happy Happy Happy ", "\n  s <- tolower(s)\n  length(s)>=3 & all(sapply(s,\
    \ function(x) length(unique(x))==3))\n}\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy", "\n\
    \  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    all(sapply(s, function(x)\
    \ length(unique(x)) <= 3))\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPYE\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"\
    HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\")\nis_happy(\"HAPPYEAS\"\
    )\nis_happy(\"H", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3\
    \ & sapply(1:(n-3), function(x) all(unique(substr(s,x,x+3)))))\n}\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  \n  \n  \n  ", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(x) all(!duplicated(substr(s, x, x+3))))))\n}\n\nis_happy(\"HAPPY\"\
    )\nis_happy(\"happy\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY ", "\n  n <- nchar(s)\n\
    \  if(n >= 3 & all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) ==\
    \ 3)) {\n    TRUE\n  } else {\n    FALSE\n  }\n}\n\nis_happy(\"abba\")\nis_happy(\"\
    aba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\n", "\n  s <- tolower(s)\n  length(sapply(strsplit(s,\
    \ \"\"), length)) >= 3 & \n    !any(duplicated(sapply(strsplit(s, \"\"), function(x)\
    \ paste0(x, collapse = \"\"))))\n}\nis_happy(\"abracadabra\")", "\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 & all(sapply(seq(n), function(i) length(unique(substr(s,\
    \ i, i + 3))) == 3)))\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(n >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x))) == 3))\n}\n\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"", "\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\nis_happy(\"abcabcbb\"\
    )\nis_happy(\"a\")\nis_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\n\
    is_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"\
    aaaaaaac\")\nis_happy(\"aaaaaaacb\")\nis_happy(\"aaaaaaacbb\")\nis_happy(\"aaaaaaacbba\"\
    )\nis_happy(\"aaaaaaacbbac\")\nis_happy(\"aaaaaaacbbacb\")\nis_happy(\"aaaaaaacbbacbc\"\
    )\nis_happy(\"aaaaaaacbbacbcc\")\nis_happy(\"aaaaaaacbbacbccc\")\nis_happy(\"\
    aaaaaaacbbacbcccd\")\nis_happy(\"aaaaaaacbbacbcccda\")\nis_happy(\"aaaaaaacbbacbcccdaa\"\
    )\nis_happy(\"aaaaaaacbbacbcccdaaa\")\nis_happy(\"aaaaaaacbbacbcccdaaaa\")\nis_happy(\"\
    aaaaaaacbbacbcccdaaaaa\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaa\")\nis_happy(\"\
    aaaaaaacbbacbcccdaaaaaaa\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaa\")\nis_happy(\"\
    aaaaaaacbbacbcccdaaaaaaaab\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaac\")\nis_happy(\"\
    aaaaaaacbbacbcccdaaaaaaaacb\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbb\")\nis_happy(\"\
    aaaaaaacbbacbcccdaaaaaaaacbba\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbbac\"\
    )\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbbacb\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbbacbc\"\
    )\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbbacbcc\")\nis_happy(\"aaaaaaacbbacbcccdaaaaaaaacbbacbccc\"\
    )\nis_happy(\"aaaaaaacbba", "\n  s <- tolower(s)\n  if(length(s)<3 || nchar(s)<3)\
    \ return(FALSE)\n  for(i in 1:(nchar(s)-3)) {\n    if(s[i] != s[i+1]) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s <- tolower(s)\n  n <- length(s)\n\
    \  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPYE\"\
    )\nis_happy(\"HAPPYEASE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIEE\"\
    )\nis_happy(\"HAPPYEASIEEASIE\")\nis_happy(\"HAPPYEASIEEASIEEASIE\")\nis_happy(\"\
    HAPPYEASIEEASIEEASIEEASIE\")\nis_happy(\"HAPPYEASIEEASIEEASIEEASIEEASIE\")\nis_happy(\"\
    HAPPYEASIEEASIEEASIEEASIEEASIEEASIE\")\nis_happy
  "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i)\
    \ length(unique(c(s[i:(i+3)]))) == 3)))\n}\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadab", "\n  s <- tolower(s)\n  s <- gsub(\"[^a-z]\", \"\", s)\n  s <- gsub(\"\
    ^[a-z]\", \"\", s)\n  s <- gsub(\"[a-z]$\", \"\", s)\n  s <- gsub(\"^[a-z]{3}\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"\
    [a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{",
  "\n  if(length(s) < 3) return(FALSE)\n  \n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  \n  for(i in 1:(length(s)\
    \ - 1)) {\n    if(s[i] != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  \n \
    \ return(TRUE)\n}\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n)\
    \ >= 3 & all(sapply(1:(n-3),function(x) !any(duplicated(substr(s,x,x+3))))))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(n >= 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI thought about this but didn't want to\
    \ use sapply since it would be too slow for large strings. I guess I'll just have\
    \ to benchmark it against the other solutions.\n<|/ c |>\n<| c |>\nI added a benchmark\
    \ test to my answer. `sapply` should be faster than `grepl` for this problem.\n\
    <|/ c |>\n<| a dscore=1 |>\nHere's a solution using stringr::str_count and stringr::str_detect:\n\
    <code>\nlibrary(stringr)\n\nis_happy <- function(s) {\n  s <- tolower(s)\n  n\
    \ <- nchar(s)\n  return(n >= 3 && all(str_detect(s, paste0(\"^.{\", n-3, \"}$\"\
    )))\n}\n\nis_happy(\"HAPPY\")", "\n  if(length(s) < 3) {\n    return(FALSE)\n\
    \  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n\
    \    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\"\
    )\nis_happy(\"abracadabra", "\n  s <- tolower(s)\n  length(s)>=3 & all(sapply(s,\
    \ function(x) length(unique(x))==3))\n}\nis_happy(\"happy\")\nis_happy(\"HAPPY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\"\
    )\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"HAPPYEY\")\nis_happy(\"\
    HAPPYEY\")\nis_happy(\"HAPPYEY\")\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  if(n >= 3) {\n    for(i in 1:(n-2)) {\n      if(s[i] != s[i+1]) break\n   \
    \ }\n    if(!any(s[i] != s[i+1])) TRUE else FALSE\n  } else FALSE\n}\n\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY\")\nis_",
  "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s) - 1))\
    \ {\n    if(s[i] != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n", "\n  s <- tolower(s)\n  length(sapply(strsplit(s, \"\"), length)) >= 3 &\
    \ \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) == 3)\n}\n\
    \nis_happy(\"Hello\")\nis_happy(\"Helloo\")\nis_happy(\"Hellooo\")\nis_happy(\"\
    Helloooo\")\nis_happy(\"Hellooooo\")\nis_happy(\"Helloooooo\")\nis_happy(\"Hellooooooo\"\
    )\nis_happy(\"Helloooooooo\")\nis_happy(\"Hellooooooooo\")\nis_happy(\"Helloooooooooo\"\
    )\nis_happy(\"Hellooooooooooo\")\nis_happy(\"Helloooooooooooo\")\nis_happy(\"\
    Hellooooooooooooo\")\nis_happy(\"Helloooooooooooooo\")\nis_happy(\"Hellooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooo\")\nis_happy(\"\
    Helloooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooo\")\nis_happy(\"\
    Helloooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooo\")\nis_happy(\"\
    Helloooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooo\")\nis_happy(\"\
    Helloooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooo\")\n\
    is_happy(\"Helloooooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooooooooooooooooooooo\")\nis_happy(\"Hellooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Helloooooooooooooooooooooooooooooooooooo\")\nis_happy(\"Helloooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Hellooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"Helloooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"Hellooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    Hellooooooooooooo", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n > 3 &&\
    \ all(sapply(1:(n-3), function(i) length(unique(c(s[i:(i+3)]))) == 3)))\n}\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")", "\n  n <- nchar(s)\n  return(length(s)>=3\
    \ & all(sapply(1:(n-3), function(x) length(unique(substr(s,x,x+3))) == 3)))\n\
    }\nis_happy(\"abcabcbb\")\nis_happy(\"a\")\nis_happy(\"aa\")\nis_happy(\"aaaa\"\
    )\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"\
    aaaaaaab\")\nis_happy(\"aaaaaaac\")\nis_happy(\"aaaaaaad\")\nis_happy(\"aaaaaaae\"\
    )\nis_happy(\"aaaaaaaf\")\nis_happy(\"aaaaaaag\")\nis_happy(\"aaaaaaah\")\nis_happy(\"\
    aaaaaaai\")\nis_happy(\"aaaaaaaj\")\nis_happy(\"aaaaaaak\")\nis_happy(\"aaaaaaal\"\
    )\nis_happy(\"aaaaaaam\")\nis_happy(\"aaaaaaan\")\nis_happy(\"aaaaaaao\")\nis_happy(\"\
    aaaaaaap\")\nis_happy(\"aaaaaaaq\")\nis_happy(\"aaaaaaar\")\nis_happy(\"aaaaaaas\"\
    )\nis_happy(\"aaaaaaat\")\nis_happy(\"aaaaaaau\")\nis_happy(\"aaaaaaav\")\nis_happy(\"\
    aaaaaaaw\")\nis_happy(\"aaaaaaax\")\nis_happy(\"aaaaaaay\")\nis_happy(\"aaaaaaaz\"\
    )\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaac\")\nis_happy(\"aaaaaaad\")\nis_happy(\"\
    aaaaaaae\")\nis_happy(\"aaaaaaaf\")\nis_happy(\"aaaaaaag\")\nis_happy(\"aaaaaaah\"\
    )\nis_happy(\"aaaaaaai\")\nis_happy(\"aaaaaaaj\")\nis_happy(\"aaaaaaak\")\nis_happy(\"\
    aaaaaaal\")\nis_happy(\"aaaaaaam\")\nis_happy(\"aaaaaaan\")\nis_happy(\"aaaaaaao\"\
    )\nis_happy(\"aaaaaaap\")\nis_happy(\"aaaaaaaq\")\nis_happy(\"aaaaaaar\")\nis_happy(\"\
    aaaaaaas\")\nis_happy(\"aaaaaaat\")\nis_happy(\"aaaaaaau\")\nis_happy(\"aaaaaaav\"\
    )\nis_happy(\"aaaaaaaw\")\nis_happy(\"aaaaaaax\")\nis_happy(\"aaaaaaay\")\nis_happy(\"\
    aaaaaaaz\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaac\")\nis_happy(\"aaaaaaad\"\
    )\nis_happy(\"aaaaaa", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i\
    \ in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n   \
    \ }\n  }\n  return(TRUE)\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer.\
    \ Can you please explain how this works?\n<|/ c |>\n<| c |>\nI added some comments.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Can you please explain\
    \ how this works?\n<|/ c |>\n<| c |>\nI added some comments. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain how this works?\n\
    <|/ c |>\n<| a tags=r,string |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n",
  "\n  if(length(s) < 3) return(FALSE)\n  if(all(sapply(s, is.character))) return(TRUE)\n\
    \  if(all(sapply(s, function(x) length(unique(x))) == 3)) return(TRUE)\n  return(FALSE)\n\
    }\n</code>\n<|/ a tags=r,string,regex |>\n<| c |>\nThanks for your answer. Your\
    \ code works fine for strings with length 3 or less. But for strings with length\
    \ 4 or more, it returns FALSE. How can I fix that?\n<|/ c |>\n<| c |>\nI added\
    \ a check for length 4 or more\n<|/ c |>\n<| c |>\nThanks for your answer. Your\
    \ code works fine for strings with length 3 or less. But for strings with length\
    \ 4 or more, it returns FALSE. How can I fix that?\n<|/ c |>\n<| c |>\nI added\
    \ a check for length 4 or more\n<|/ c |>\n<| a tags=r,string,regex |>\n<code>\n\
    library(stringr)\nlibrary(dplyr)\nlibrary(purrr)\n\nis_happy <- function(s) {\n\
    \  s %>% \n    str_split(pattern = \".\") %>% \n    map_lgl(~all(unique(.) ==\
    \ 3)) %>% \n    any()\n}\n\nis_happy(\"abc\")", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n >= 3 && all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAP", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n)\
    \ >= 3 & all(sapply(1:(n-3),\n                                 function(i) !any(s[i:(i+3)]\
    \ %in% s[i:(i+3)]))))\n}\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadab", "\n  s <- tolower(s)\n  n\
    \ <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]))))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n  s <-\
    \ tolower(s)\n  n <- nchar(s)\n  if(n >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x)) >= 3)))\n    TRUE\n  else\n    FALSE\n}\nis_happy(\"hello\"\
    )\nis_happy(\"helllo\")\nis_happy(\"helllllo\")\nis_happy(\"hellllllo\")\nis_happy(\"\
    helllllloo\")\nis_happy(\"helllllllloo\")\nis_happy(\"hellllllllloo\")\nis_happy(\"\
    hellllllllllloo\")\nis_happy(\"hellllllllllllloo\")\nis_happy(\"helllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllooo\")\nis_happy(\"helllllllllllllllllooo\")\n\
    is_happy(\"helllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllooo\")\n\
    is_happy(\"helllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllllllllllooo\"\
    )\nis_happy(\"helllllllllllllllllllllllllllllllooo\")\nis_happy(\"helllllllllllllllllllllllllllllllooo\"\
    )\nis_happy(\"helll", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 &&\
    \ all(sapply(1:(n-3), function(i) length(unique(substr(s, i, i+3))) == 3)))\n\
    }\nis_happy(\"hello\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")", "\n  if(length(s)\
    \ < 3 || all(sapply(s, is.null))) return(FALSE)\n  \n  for(i in 1:(length(s) -\
    \ 1)) {\n    if(s[i] != s[i+1]) return(FALSE)\n  }\n  \n  return(TRUE)\n}\n\n\
    is_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"\
    aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"\
    aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaabb\")\nis_happy(\"aaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbb", "\n  s <- tolower(s)\n  length(sapply(s, length))\
    \ >= 3 & \n    sapply(s, function(x) all(c(letters, LETTERS) %in% x)) \n}\nis_happy(\"\
    HAPPY\")", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\nis_happy(\"happy\"\
    )\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3), function(i) length(unique(substr(s,\
    \ i, i+3))) == 3)))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(x) length(unique(c(s[x:(x+3)], s[(x+1):(x+4)]))) == 3)))\n}\nis_happy(\"\
    abc\")\nis_happy(\"aba\")\nis_happy(\"abca\")\nis_happy(\"abcaa\")\nis_happy(\"\
    abcaaa\")\nis_happy(\"abcaaaa\")\nis_happy(\"abcaaaab\")\nis_happy(\"abcaaaabb\"\
    )\nis_happy(\"abcaaaabbb\")\nis_happy(\"abcaaaabbbb\")\nis_happy(\"abcaaaabbbbba\"\
    )\nis_happy(\"abcaaaabbbbbac\")\nis_happy(\"abcaaaabbbbbacc\")\nis_happy(\"abcaaaabbbbbaccc\"\
    )\nis_happy(\"abcaaaabbbbbaccca\")\nis_happy(\"abcaaaabbbbbacccaa\")\nis_happy(\"\
    abcaaaabbbbbacccaaa\")\nis_happy(\"abcaaaabbbbbacccaaaa\")\nis_happy(\"abcaaaabbbbbacccaaaab\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabb\")\nis_happy(\"abcaaaabbbbbacccaaaabbb\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbb\")\nis_happy(\"abcaaaabbbbbacccaaaabbbbc\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbbca\")\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaa\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaa\")\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaa\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaab\")\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaabb\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaabbb\")\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaabbbb\"\
    )\nis_happy(\"abcaaaabbbbbacccaaaabbbbcaaaabbbbc\")\nis_", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(n >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x)) >= 3)))\n}\nis_happy(\"hello\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\n\
    is_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"helllo\")\nis_happy(\"\
    helllo\")\nis_", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i in\
    \ 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n\
    \  }\n  return(TRUE)\n}\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n\
    \ > 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)] %in% s[i:(i+3)]))))\n\
    }\n</code>\n<|/ a tags=r |>\n<| c |>\nThis doesn't work for the string `\"abcabc\"\
    ` because `sapply(1:(n-3), function(i) !any(s[i:(i+3)] %in% s[i:(i+3)]))` returns\
    \ `FALSE` because `sapply(1:(n-3), function(i) !any(s[i:(i+3)] %in% s[i:(i+3)]))`\
    \ returns `FALSE` because `s[i:(i+3)]` returns `c(\"a\", \"b\", \"c\")` which\
    \ is not `c(\"a\", \"b\", \"c\")` but `c(\"a\", \"b\", \"c\", \"a\", \"b\", \"\
    c\")`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed it by changing\
    \ the `sapply` line to `sapply(1:(n-3), function(i) !any(s[i:(i+3)] %in% s[i:(i+3)][!s[i:(i+3)]\
    \ %in% s[i:(i+3)]])`.\n<|/ c |>\n<| c |>\nI still think your solution is more\
    \ elegant than mine. Thanks for sharing it.\n<|/ c |>\n<| c |>\nI agree that your\
    \ solution is more elegant. I just wanted to point out that your solution doesn't\
    \ work for the string `\"abcabc\"` because `sapply(1:(n-3), function(i) !any(s[i:(i+3)]\
    \ %in% s[i:(i+3)]))` returns `FALSE` because `s[i:(i+3)]` returns `c(\"a\", \"\
    b\", \"c\")` which is not `c(\"a\", \"b\", \"c\")` but `c(\"a\", \"b\", \"c\"\
    , \"a\", \"b\", \"c\")`.\n<|/ c |>\n<| c |>\nI fixed it by changing the `sapply`\
    \ line to `sapply(1:(n-3), function(i) !any(s[i:(i+3)] %in% s[i:(i+3)][!s[i:(i+3)]\
    \ %in% s[i:(i+3)]])`.\n<|/ c |>\n<| a dscore=1 |>\nHere's a solution using stringr::str_count\
    \ and stringr::str_detect:\n<code>\nlibrary(stringr)\n\nis_happy <- function(s)\
    \ {\n  n <- nchar(s)\n  return(n > 3 && all(sapply(1:(n-", "\n  n <- nchar(s)\n\
    \  if(n >= 3 && all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) ==\
    \ n)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abrac", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n\
    \ >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i, i+3))) ==\
    \ 3)))\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"happy\")\nis_happy(\"HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY ",
  "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n  }\n  return(TRUE)\n\
    }\n\nis_happy(\"hello\")\nis_happy(\"hell\")\nis_happy(\"hellll\")\nis_happy(\"\
    helllll\")\nis_happy(\"hellllll\")\nis_happy(\"helllllll\")\nis_happy(\"hellllllll\"\
    )\nis_happy(\"helllllllll\")\nis_happy(\"hellllllllll\")\nis_happy(\"helllllllllll\"\
    )\nis_happy(\"hellllllllllll\")\nis_happy(\"helllllllllllll\")\nis_happy(\"hellllllllllllll\"\
    )\nis_happy(\"helllllllllllllll\")\nis_happy(\"hellllllllllllllll\")\nis_happy(\"\
    helllllllllllllllll\")\nis_happy(\"hellllllllllllllllll\")\nis_happy(\"helllllllllllllllll\"\
    )\nis_happy(\"hellllllllllllllllll\")\nis_happy(\"helllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllllll\")\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllllllllllll\")\nis_happy(\"hel", "\n  if(length(s) < 3) return(FALSE)\n\
    \  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n\
    \    }\n  }\n  return(TRUE)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nThanks for\
    \ the answer. Can you please explain how this works?\n<|/ c |>\n<| c |>\nThe `for`\
    \ loop iterates through each character in the string and checks if the character\
    \ is equal to the next character. If not, the function returns `FALSE`. If it\
    \ does equal the next character, the function returns `TRUE`. The `if` statement\
    \ checks if the function returned `TRUE` or `FALSE` and returns `TRUE` or `FALSE`\
    \ accordingly.\n<|/ c |>\n<| c |>\nThanks. I understand now. Can you please explain\
    \ how this works?\n<|/ c |>\n<| c |>\nI added an explanation to the answer. Hope\
    \ it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nis_happy <- function(s) {\n \
    \ if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s) - 1)) {\n    if(s[i]\
    \ != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n</code>\n\
    <|/ a tags=r |>\n<| c |>\nThanks for the answer. Can you please explain how this\
    \ works?\n<|/ c |>\n<| c |>\nThe `for` loop iterates through each character in\
    \ the string and checks if the character is equal to the next character. If not,\
    \ the function returns `FALSE`. If it does equal the next character, the function\
    \ returns `TRUE`. The `if` statement checks if the function returned `TRUE` or\
    \ `FALSE` and returns `TRUE` or `FALSE` accordingly.\n<|/ c |>\n<| a tags=r |>\n\
    <code>\nis_happy <- function(s) {\n  if(length(s) < 3) return(FALSE)\n  for(i\
    \ in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n   \
    \ }\n  }\n  return(TRUE)\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for the\
    \ answer. Can you please explain how this works?\n<|/ c |>\n<| c |>\nThe `for`\
    \ loop iterates through each character in the string and checks if the character\
    \ is equal to the next character. If not, the function returns `FALSE`. If it\
    \ does equal the next character, the function returns `TRUE`", "\n  if(length(s)\
    \ < 3 || all(sapply(s, is.null))) return(FALSE)\n  s <- gsub(\"[[:punct:]]\",\
    \ \"\", s)\n  s <- gsub(\"[[:alpha:]]\", \"\", s)\n  s <- gsub(\"[[:digit:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:space:]]\", \"\", s)\n  s <- gsub(\"[[:upper:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:lower:]]\", \"\", s)\n  s <- gsub(\"[[:xdigit:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:space:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s <- gsub(\"[[:punct:]]\", \"\", s)\n  s <- gsub(\"[[:punct:]]\"\
    , \"\", s)\n  s ", "\n  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n\
    \    all(sapply(s, function(x) length(unique(x))) == 3)\n}\n\nis_happy(\"HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n\
    \ >= 3 & all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n</code>\n\
    <|/ a tags=r,string |>\n<| c |>\nThis doesn't seem to work. `is_happy(\"aba\"\
    )` returns `FALSE` but should be `TRUE`.\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I've updated the answer.\n<|/ c |>\n<| c |>\nThanks for your answer!\
    \ I really appreciate it! I understand your code, but I still don't understand\
    \ why it works. Could you please explain to me how it works?\n<|/ c |>\n<| c |>\n\
    I added some explanation to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your explanation! I really appreciate it! I understand your code, but I\
    \ still don't understand why it works. Could you please explain to me how it works?\n\
    <|/ c |>\n<| a tags=r,string |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nis_happy <- function(s)\
    \ {\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n</code>\n<|/ a tags=r,string\
    \ |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n\
    }\n</code>\n<|/ a tags=r,string |>\n<| c |>\nPlease add some explanation to your\
    \ answer such that others can learn from it\n<|/ c |>\n<| a |>\n<code>\nis_happy\
    \ <- function(s) {\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) !any(", "\n  s <- tolower(s)\n  length(sapply(strsplit(s, \"\"),\
    \ length)) >= 3 & \n    !duplicated(sapply(strsplit(s, \"\"), function(x) paste0(x,\
    \ collapse = \"\")))\n}\n\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba", "\n  if(length(s) < 3 || nchar(s) < 3) return(FALSE)\n  for(i in 1:nchar(s)){\n\
    \    for(j in (i+1):nchar(s)){\n      if(s[i] != s[j]){\n        return(FALSE)\n\
    \      }\n    }\n  }\n  return(TRUE)\n}\nis_happy(\"abcabcbb\")\nis_happy(\"a\"\
    )\nis_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\"\
    )\nis_happy(\"aaaaaaaa\")\nis_happy(\"aaaaaaaaa\")\nis_happy(\"aaaaaaaaaa\")\n\
    is_happy(\"aaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaab\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabb\")\nis_happy(\"aaaaaaaaaaaaaaabbb\")\nis_happy(\"\
    aaaaaaaaaaaaaaabbbb\")\nis_happy(\"aaaaaaaaaaaaaaabbbbc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdc\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"\
    )\nis_happy(\"aaaaaaaaaaaaaaabbbbcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd\")\nis_happy(\"\
    aaaaaaaaaaaaaaabbb", "\n  s <- tolower(s)\n  n <- nchar(s)\n  if(n >= 3) {\n \
    \   for(i in 1:(n-2)) {\n      if(s[i] != s[i+1]) {\n        return(FALSE)\n \
    \     }\n    }\n    return(TRUE)\n  }\n  return(FALSE)\n}\nis_happy(\"abba\")\n\
    is_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(length(n) >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x))) == 3))\n}\n\nis_happy(\"hello\")\nis_happy(\"goodbye\")\n\
    is_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\"\
    )\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_", "\n  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(strsplit(s,\
    \ \"\"), function(x) length(unique(x))) == 3)) {\n    return(TRUE)\n  } else {\n\
    \    return(FALSE)\n  }\n}\n\nis_happy(\"hello\")\nis_happy(\"helllo\")\nis_happy(\"\
    hellllllo\")\nis_happy(\"hellllllllo\")\nis_happy(\"hellllllllllo\")\nis_happy(\"\
    hellllllllllllo\")\nis_happy(\"hellllllllllllllo\")\nis_happy(\"hellllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllo\")\nis_happy(\"hellllllllllllllllo\")\nis_happy(\"\
    hellllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy", "\n  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    all(sapply(s,\
    \ function(x) length(unique(x)) >= 3))\n}\nis_happy(\"happy\")\nis_happy(\"happyp\"\
    )\nis_happy(\"happypp\")\nis_happy(\"happyppp\")\nis_happy(\"happypppp\")\nis_happy(\"\
    happyppppp\")\nis_happy(\"happypppppp\")\nis_happy(\"happyppppppp\")\nis_happy(\"\
    happypppppppp\")\nis_happy(\"happyppppppppp\")\nis_happy(\"happypppppppppp\")\n\
    is_happy(\"happypppppppppp\")\nis_happy(\"happyppppppppppp\")\nis_happy(\"happypppppppppppp\"\
    )\nis_happy(\"happyppppppppppppp\")\nis_happy(\"happypppppppppppppp\")\nis_happy(\"\
    happyppppppppppppppp\")\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"happyppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happypp", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3\
    \ & all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) == 3))\n}\nis_happy(\"\
    HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY H", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3\
    \ & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s, x, x+3))))))\n}\n\
    </code>\n<|/ a tags=r,string |>\n<| c |>\nThis doesn't work for me. `is_happy(\"\
    abcabc\") #> [1] FALSE`\n<|/ c |>\n<| c |>\nI guess I misunderstood the question.\
    \ My interpretation was that \"abcabc\" should be considered happy because every\
    \ 3 consecutive letters are distinct. I'll update my answer.\n<|/ c |>\n<| c |>\n\
    Yes, that's what I meant. Thanks for your help!\n<|/ c |>\n<| a tags=r,string\
    \ |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(length(s)>=3 & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s,\
    \ x, x+3))))))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,string |>\n<code>\n\
    is_happy <- function(s) {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3\
    \ & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s, x, x+3))))))\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=r,string |>\n<code>\nis_happy <- function(s)\
    \ {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(x) !any(duplicated(substr(s, x, x+3))))))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,string |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s,\
    \ x, x+3))))))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,string |>\n<code>\n\
    is_happy <- function(s) {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3\
    \ & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s, x, x+3))))))\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tag", "\n  s <- tolower(s)\n  n <- length(s)\n\
    \  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for the answer.\
    \ I am not able to understand how this works. Can you please explain how this\
    \ works?\n<|/ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n<| c |>\nThanks\
    \ for the explanation. I am not able to understand how this works. Can you please\
    \ explain how this works?\n<|/ c |>\n<| c |>\nI added some explanation.\n<|/ c\
    \ |>\n<| a tags=r,string |>\nWe can use rle\n<code>\nlibrary(stringr)\nis_happy\
    \ <- function(s) {\n  n <- nchar(tolower(s))\n  rn <- rle(tolower(s))\n  all(rn$lengths\
    \ >= 3 & \n       all(str_detect(substr(s, rn$lengths, rn$lengths + 3), \"[a-z]+\"\
    )))\n}\n\nis_happy(\"HAPPY\")", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n\
    \ >= 3 && all(sapply(1:(n-3), function(i) length(unique(substr(s, i, i+3))) ==\
    \ 3)))\n}\n\nis_happy(\"abba\")\nis_happy(\"abbac\")\nis_happy(\"abbaca\")\nis_happy(\"\
    abbacaa\")\nis_happy(\"abbacab\")\nis_happy(\"abbacabc\")\nis_happy(\"abbacabca\"\
    )\nis_happy(\"abbacabcab\")\nis_happy(\"abbacabcabc\")\nis_happy(\"abbacabcabca\"\
    )\nis_happy(\"abbacabcabcab\")\nis_happy(\"abbacabcabcabc\")\nis_happy(\"abbacabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcab\")\nis_happy(\"abbacabcabcabcabc\")\nis_happy(\"\
    abbacabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcab\")\n\
    is_happy(\"abbacabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabca\")\n\
    is_happy(\"abbacabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabca\")\nis_happy(\"ab", "\n  if(length(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s) - 1)) {\n    if(s[i]\
    \ != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n}\n\nis_happy(\"\
    abba\")\nis_happy(\"aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"aa\"\
    )\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"\
    aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaabb\")\nis_happy(\"aaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb", "\n  s <- tolower(s)\n  if(length(s) >=\
    \ 3 & all(sapply(s, unique)) == TRUE) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n\
    \  }\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy",
  "\n  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(s, is.character))) \n   \
    \ all(sapply(s, function(x) length(unique(x))) == 3)\n  else FALSE\n}\n</code>\n\
    <|/ a tags=r |>\n<| c |>\nThis doesn't work. Try `is_happy(\"aba\")`\n<|/ c |>\n\
    <| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nis_happy <-\
    \ function(s) {\n  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(s, is.character)))\
    \ \n    all(sapply(s, function(x) length(unique(x))) == 3)\n  else FALSE\n}\n\
    </code>\n<|/ a tags=r |>\n<| a tags=r |>\n<code>\nis_happy <- function(s) {\n\
    \  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(s, is.character))) \n   \
    \ all(sapply(s, function(x) length(unique(x))) == 3)\n  else FALSE\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=r |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n\
    \  if(length(s) >= 3 & all(sapply(s, is.character))) \n    all(sapply(s, function(x)\
    \ length(unique(x))) == 3)\n  else FALSE\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=r |>\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  if(length(s)\
    \ >= 3 & all(sapply(s, is.character))) \n    all(sapply(s, function(x) length(unique(x)))\
    \ == 3)\n  else FALSE\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    is_happy <- function(s) {\n  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(s,\
    \ is.character))) \n    all(sapply(s, function(x) length(unique(x))) == 3)\n \
    \ else FALSE\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nPlease don't post only code\
    \ as an answer, but also provide an explanation of what your code does and how\
    \ it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n\
    \ >= 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n\
    is_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAP", "\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 && all(sapply(1:(n-3), function(x) length(unique(c(s[x:(x+3)],\
    \ s[(x+1):(x+4)]))) == 3)))\n}\n\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")", "\n  if(length(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1])\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"\
    abracadabraz\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabraz", "\n  if(length(s)\
    \ < 3) return(FALSE)\n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1])\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abba\")\nis_happy(\"aba\"\
    )\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"\
    aaaaa\")\nis_happy(\"aaaaaa\")\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaab\")\n\
    is_happy(\"aaaaaaabb\")\nis_happy(\"aaaaaaabbb\")\nis_happy(\"aaaaaaabbbb\")\n\
    is_happy(\"aaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaab\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabb\")\n\
    is_happy(\"aaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbb\")\n\
    is_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbbb\"\
    )\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nI like your solution, but I wonder if there is a way to do it without\
    \ using sapply?\n<|/ c |>\n<| c |>\nI added a solution without sapply\n<|/ c |>\n\
    <| c |>\nI like your solution, but I wonder if there is a way to do it without\
    \ using sapply?\n<|/ c |>\n<| c |>\nI added a solution without sapply\n<|/ c |>\n\
    <| a dscore=2 |>\nHere's a solution without using sapply:\n<code>\nis_happy <-\
    \ function(s) {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n</code>\n<|/ a tags=r,string,sapply\
    \ |>\n<| a tags=r,string,sapply |>\nHere is a solution without using sapply:\n\
    <code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n\
    \ >= 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=r,string,sapply |>\nHere's a solution without\
    \ using sapply:\n<code>\nis_happy <- function(s) {\n  s <- tolower(s)\n  n <-\
    \ nchar(s)\n  return(n >= 3 && all(sapply(1:(n-3), function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nis_happy <- function(s)\
    \ {\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n</code>\n<|/ a tags=r,string,sapply\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a tags=r,string,s", "\n  n <- nchar(s)\n  return(n\
    \ >= 3 & all(sapply(strsplit(s, \"\"), function(x) length(unique(x)) >= 3)))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abbac\")\nis_happy(\"abbaca\")\nis_happy(\"\
    abbacaa\")\nis_happy(\"abbacaaa\")\nis_happy(\"abbacaaab\")\nis_happy(\"abbacaaabb\"\
    )\nis_happy(\"abbacaaabbb\")\nis_happy(\"abbacaaabbbb\")\nis_happy(\"abbacaaabbbbc\"\
    )\nis_happy(\"abbacaaabbbbcc\")\nis_happy(\"abbacaaabbbbccc\")\nis_happy(\"abbacaaabbbbcccd\"\
    )\nis_happy(\"abbacaaabbbbcccdd\")\nis_happy(\"abbacaaabbbbcccddd\")\nis_happy(\"\
    abbacaaabbbbcccdddd\")\nis_happy(\"abbacaaabbbbcccddde\")\nis_happy(\"abbacaaabbbbcccdddef\"\
    )\nis_happy(\"abbacaaabbbbcccdddefg\")\nis_happy(\"abbacaaabbbbcccdddefgh\")\n\
    is_happy(\"abbacaaabbbbcccdddefghi\")\nis_happy(\"abbacaaabbbbcccdddefghij\")\n\
    is_happy(\"abbacaaabbbbcccdddefghijk\")\nis_happy(\"abbacaaabbbbcccdddefghijkl\"\
    )\nis_happy(\"abbacaaabbbbcccdddefghijklm\")\nis_happy(\"abbacaaabbbbcccdddefghijklmn\"\
    )\nis_happy(\"abbacaaabbbbcccdddefghijklmno\")\nis_happy(\"abbacaaabbbbcccdddefghijklmnop\"\
    )\nis_happy(\"abbacaaabbbbcccdddefghijklmnopq\")\nis_happy(\"abbacaaabbbbcccdddefghijklmnopqrs\"\
    )\nis_happy(\"abbacaaabbbbcccdddefghijklmnopqrsj\")\nis_happy(\"abbacaaabbbbcccdddefghijklmnopqrsjk\"\
    )\nis_happy(\"abbacaaabbbb", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n)\
    \ >= 3 & all(sapply(1:(n-1), function(x) length(unique(substr(s, x, x+3))) ==\
    \ 3)))\n}\nis_happy(\"abcde\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s\
    \ <- tolower(s)\n  n <- length(s)\n  return(n > 3 && all(sapply(1:(n-3), function(i)\
    \ !any(s[i:(i+3)]==s[i:(i+3)])))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\n\
    is_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"ab", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\n\
    \                            function(x) all(unique(sapply(seq(x,x+3),\n     \
    \                                                 function(y) substr(s,y,y)))))))\n\
    }\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPYE\")\nis_happy(\"\
    HAPPYEASE\")\nis_happy(\"HAPPYEASIE\")\nis_happy(\"HAPPYEASIEE\")\nis_happy(\"\
    HAPPYEASIEEASIE\")\nis_happy(\"HAPPYEASIEEASIEEASIE\")\nis_happy(\"HAPPYEASIEEASIEEASIEEASIE\"\
    )\nis_happy(\"HAPPYEASIEEASIEEASIEEASIEEASIE\")\nis_happy
  "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s,i,i+3))) == 3)))\n}\nis_happy(\"abc\")\n\
    is_happy(\"abca\")\nis_happy(\"abcab\")\nis_happy(\"abcabc\") # not happy because\
    \ \"abcabc\" has 4 letters\nis_happy(\"abcadef\") # not happy because \"abcadef\"\
    \ has 5 letters\nis_happy(\"abcadefg\") # happy because \"abcadefg\" has 5 letters\n\
    is_happy(\"abcadefgh\") # happy because \"abcadefgh\" has 5 letters\nis_happy(\"\
    abcadefghi\") # happy because \"abcadefghi\" has 5 letters\nis_happy(\"abcadefghij\"\
    ) # happy because \"abcadefghij\" has 5 letters\nis_happy(\"abcadefghijk\") #\
    \ happy because \"abcadefghijk\" has 5 letters\nis_happy(\"abcadefghijkl\") #\
    \ happy because \"abcadefghijkl\" has 5 letters\nis_happy(\"abcadefghijklm\")\
    \ # happy because \"abcadefghijklm\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn\"\
    ) # happy because \"abcadefghijklmn\" has 5 letters\nis_happy(\"abcadefghijklmn",
  "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3)) {\n    if(s[i]\
    \ != s[i+1] & s[i] != s[i+2]) return(FALSE)\n  }\n  return(TRUE)\n}\nis_happy(\"\
    hello\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabrazz\"\
    )\nis_happy(\"abracadabrazzz\")\nis_happy(\"abracadabrazzzz\")\nis_happy(\"abracadabrazzzzz\"\
    )\nis_happy(\"abracadabrazzzzzz\")\nis_happy(\"abracadabrazzzzzzz\")\nis_happy(\"\
    abracadabrazzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzz", "\n  s <- tolower(s)\n  if(length(s) >= 3 &&\
    \ all(sapply(s, is.character))) \n    all(sapply(s, function(x) length(unique(x)))\
    \ == 3)\n  else FALSE\n}\n\nis_happy(\"abba\")\nis_happy(\"abbac\")\nis_happy(\"\
    abbaca\")\nis_happy(\"abbacaa\")\nis_happy(\"abbacaaa\")\nis_happy(\"abbacaaab\"\
    )\nis_happy(\"abbacaaabb\")\nis_happy(\"abbacaaabbb\")\nis_happy(\"abbacaaabbbb\"\
    )\nis_happy(\"abbacaaabbbbc\")\nis_happy(\"abbacaaabbbbcc\")\nis_happy(\"abbacaaabbbbccc\"\
    )\nis_happy(\"abbacaaabbbbcccd\")\nis_happy(\"abbacaaabbbbcccde\")\nis_happy(\"\
    abbacaaabbbbcccdef\")\nis_happy(\"abbacaaabbbbcccdefg\")\nis_happy(\"abbacaaabbbbcccdefgh\"\
    )\nis_happy(\"abbacaaabbbbcccdefghi\")\nis_happy(\"abbacaaabbbbcccdefghij\")\n\
    is_happy(\"abbacaaabbbbcccdefghijk\")\nis_happy(\"abbacaaabbbbcccdefghijkl\")\n\
    is_happy(\"abbacaaabbbbcccdefghijklm\")\nis_happy(\"abbacaaabbbbcccdefghijklmn\"\
    )\nis_happy(\"abbacaaabbbbcccdefghijklmno\")\nis_happy(\"abbacaaabbbbcccdefghijklmnop\"\
    )\nis_happy(\"abbacaaabbbbcccdefghijklmnopq\")\nis_happy(\"abbacaaabbbbcccdefghijklmnopqrs\"\
    )\nis_happy(\"abbacaaabbbbcccdefghijklmnopqrsj\")\nis_happy(\"abbacaaabbbbcccdefghijklmnopqrsjk\"\
    )\nis_happy(\"abbacaaabbbbcccdefghijklmnopqrsjkl\")\nis_happy(\"abbacaaabbbbcccdefghijklmnopqrsjklmn\"\
    )\nis_happy(\"abbacaaabbbb", "\n  s <- tolower(s)\n  if(length(s)<3 || all(sapply(strsplit(s,\"\
    \"),function(x) length(unique(x))==1))) {\n    return(FALSE)\n  }\n  return(TRUE)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer! But I still don't\
    \ understand why my code doesn't work. Could you please explain it a little bit\
    \ more?\n<|/ c |>\n<| c |>\nI added some explanation to the answer\n<|/ c |>\n\
    <| c |>\nThanks for your answer! But I still don't understand why my code doesn't\
    \ work. Could you please explain it a little bit more?\n<|/ c |>\n<| c |>\nI added\
    \ some explanation to the answer\n<|/ c |>\n<| c |>\nThanks for your answer! But\
    \ I still don't understand why my code doesn't work. Could you please explain\
    \ it a little bit more?\n<|/ c |>\n<| a dscore=2 |>\n<code>\nlibrary(stringr)\n\
    library(dplyr)\n\nis_happy <- function(s) {\n  s <- tolower(s)\n  if(length(s)<3\
    \ || all(sapply(strsplit(s,\"\"),function(x) length(unique(x))==1))) {\n    return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"HAPPY\")", "\n  s <- tolower(s)\n  n <-\
    \ nchar(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s,\
    \ i, i+3))) == 3)))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\n", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(substr(s, i, i+3))) == 3)))\n}\nis_happy(\"hello\"\
    )\nis_happy(\"helllo\")\nis_happy(\"helllllo\")\nis_happy(\"hellllllo\")\nis_happy(\"\
    helllllloo\")\nis_happy(\"helllllllooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"hellllllloooo\")\nis_happy(\"\
    helllllllo", "\n  s <- tolower(s)\n  length(sapply(strsplit(s, \"\"), length))\
    \ >= 3 & \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) ==\
    \ 3)\n}\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING\
    \ HAPPY\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING\
    \ HAPPY FREAKING HAPPY\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\"\
    )\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\")\nis_happy(\"\
    HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\")\nis_happy(\"\
    HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\n\
    is_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\
    \ HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING\
    \ HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY FREAKING HAPPY\
    \ FREAKING HAPPY FREAKING HAPPY FREAKING\")\nis_happy(\"HAPPY FREAKING HAPPY",
  "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(n) >= 3 && all(sapply(1:(n-3),\
    \ function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n}\n\nis_happy(\"abracadabra\")\n\
    is_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\"\
    )\nis_happy(\"", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(i) length(unique(c(s[i:(i+3)]))) == 3)))\n}\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(n >=\
    \ 3 && all(sapply(seq(n), function(i) !any(s[i:(i+3)] == s[i:(i+3)])))) \n}\n\
    is_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy", "\n  s <- tolower(s)\n \
    \ n <- length(s)\n  return(n >= 3 && all(sapply(3:n, function(x) !any(duplicated(substr(s,\
    \ x, x)))))\n}\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy",
  "\n  s <- tolower(s)\n  if(length(s) >= 3 && all(sapply(s, function(x) !any(duplicated(x)))))\
    \ TRUE else FALSE\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAP", "\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(x) !any(duplicated(substr(s,\
    \ x, x+3))))))\n}\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")", "\n  s\
    \ <- tolower(s)\n  n <- nchar(s)\n  return(n >= 3 & all(sapply(strsplit(s, \"\"\
    ), function(x) length(unique(x))) == 3))\n}\n\nis_happy(\"HAPPY\")\nis_happy(\"\
    HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\
    \ HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\n\
    is_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY H", "\n  if(length(s) < 3) {\n   \
    \ return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i\
    \ + 1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    abba\")\nis_happy(\"abbac\")\nis_happy(\"abbaca\")\nis_happy(\"abbacab\")\nis_happy(\"\
    abbacabc\")\nis_happy(\"abbacabca\")\nis_happy(\"abbacabcab\")\nis_happy(\"abbacabcabc\"\
    )\nis_happy(\"abbacabcabca\")\nis_happy(\"abbacabcabcab\")\nis_happy(\"abbacabcabcabc\"\
    )\nis_happy(\"abbacabcabcabca\")\nis_happy(\"abbacabcabcabcab\")\nis_happy(\"\
    abbacabcabcabcabc\")\nis_happy(\"abbacabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabca\")\nis_happy(\"\
    abbacabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabc\")\nis_happy(\"\
    abbacabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcab\")\nis_happy(\"\
    abbacabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabca\")\nis_happy(\"\
    abbacabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabc\")\nis_happy(\"\
    abbacabcabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabca\"\
    )\n", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s)\
    \ - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"ab\")\nis_happy(\"a\")\n\
    is_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\"\
    )\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaabb\")\nis_happy(\"\
    aaaaaaabbb\")\nis_happy(\"aaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbba\")\nis_happy(\"\
    aaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaa\")\nis_happy(\"aaaaaaabbbbbaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaa\")\nis_happy(\"\
    aaaaaaabbbbbaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbba\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaa\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaa\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaab\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabb\")\nis_happy(\"aaaaaaabbbbbaaaaaaaabbbbbaaaaaaaabbb\"\
    )\nis_happy(\"aaaaaaabbbbbaaaaaaaabbb", "\n  s <- tolower(s)\n  length(s)>=3 &\
    \ \n    all(sapply(s, function(x) length(unique(x))==3))\n}\nis_happy(\"HAPPY\"\
    )\nis_happy(\"HAPPY FISH\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\")\nis_happy(\"HAPPY FISHES\"\
    )\nis_happy(\"HAPPY F", "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)\
    \ - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\n\nis_happy(\"abracadabra\")\nis_happy(\"abracadabraz\")\nis_happy(\"abracadabrazz\"\
    )\nis_happy(\"abracadabrazzz\")\nis_happy(\"abracadabrazzzz\")\nis_happy(\"abracadabrazzzzz\"\
    )\nis_happy(\"abracadabrazzzzzz\")\nis_happy(\"abracadabrazzzzzzz\")\nis_happy(\"\
    abracadabrazzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzzzz\")\nis_happy(\"abracadabrazzzzzzzzzzzzzzzzzzzzzzzzzz\"\
    )\nis_happy(\"abracadabrazzzzzzzzzzzz", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(length(n) >= 3 & all(sapply(seq(n), function(i) !any(s[i:(i+3)] %in%\
    \ s[i:(i+3)]))))\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nThank you for your answer.\
    \ I am not familiar with sapply and seq. Can you please explain how this works?\n\
    <|/ c |>\n<| c |>\n`sapply` applies a function to each element of a vector. `seq`\
    \ generates a sequence of numbers. `sapply` applies a function to each element\
    \ of a vector and returns a vector. `seq` generates a sequence of numbers. `sapply`\
    \ applies a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. `sapply` applies\
    \ a function to each element of a vector and returns a vector. `seq` generates\
    \ a sequence of numbers. `sapply` applies a function to each element of a vector\
    \ and returns a vector. `seq` generates a sequence of numbers. ", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  if(n >= 3 & all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == n)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"abracadabra\")\nis_happy(\"\
    abracadabra", "\n  s <- tolower(s)\n  n <- nchar(s)\n  return(length(s)>=3 & all(sapply(1:(n-3),\
    \ function(x) length(unique(substr(s,x,x+3))) == 3)))\n}\nis_happy(\"HAPPY\")\n\
    is_happy(\"HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY H", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  if(n >= 3 && all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == n)) {\n    TRUE\n  } else {\n    FALSE\n  }\n}\n\nis_happy(\"hello\")\nis_happy(\"\
    helllo\")\nis_happy(\"helllllo\")\nis_happy(\"hellllllo\")\nis_happy(\"hellllllllo\"\
    )\nis_happy(\"hellllllllllo\")\nis_happy(\"hellllllllllllo\")\nis_happy(\"hellllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllo\")\nis_happy(\"hellllllllllllllo\")\nis_happy(\"\
    hellllllllllllllllo\")\nis_happy(\"hellllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllo\")\nis_happy(\"helllllllllllllllllllllllllll",
  "\n  s <- tolower(s)\n  n <- length(s)\n  \n  if(n >= 3 && all(sapply(1:(n-3), function(i)\
    \ !any(s[i:(i+3)]))))\n    TRUE\n  else\n    FALSE\n}\n\nis_happy(\"HAPPY\")\n\
    is_happy(\"HAPPYHAPPY\")\nis_happy(\"HAPPYHAPPYHAPPY\")\nis_happy(\"HAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPYHAPPY",
  "\n  n <- nchar(s)\n  if(n < 3) return(FALSE)\n  for(i in 1:(n-2)) {\n    if(s[i]\
    \ != s[i+1]) return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abba\") # TRUE\n\
    is_happy(\"abb\") # FALSE\nis_happy(\"ab\") # FALSE\nis_happy(\"a\") # FALSE\n\
    is_happy(\"aa\") # TRUE\nis_happy(\"aaaa\") # TRUE\nis_happy(\"aaaaa\") # FALSE\n\
    is_happy(\"aaaaaa\") # TRUE\nis_happy(\"aaaaaaa\") # FALSE\nis_happy(\"aaaaaaab\"\
    ) # FALSE\nis_happy(\"aaaaaaabb\") # FALSE\nis_happy(\"aaaaaaabbb\") # FALSE\n\
    is_happy(\"aaaaaaabbbb\") # FALSE\nis_happy(\"aaaaaaabbbbba\") # FALSE\nis_happy(\"\
    aaaaaaabbbbbaa\") # FALSE\nis_happy(\"aaaaaaabbbbbaaa\") # FALSE\nis_happy(\"\
    aaaaaaabbbbbaaaa\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaab\") # FALSE\nis_happy(\"\
    aaaaaaabbbbbaaaabb\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbb\") # FALSE\nis_happy(\"\
    aaaaaaabbbbbaaaabbbb\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbba\") # FALSE\n\
    is_happy(\"aaaaaaabbbbbaaaabbbbbaa\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaa\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaa\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaab\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaabb\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaabbb\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaabbbb\") # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaabbbbba\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbbaaaabbbbbaaaabbbbbaa\") # FALSE\nis_happy(\"\
    aaaaaaabbbbbaaaabbbbbaaa", "\n  if(length(s) < 3) return(FALSE)\n  \n  for(i in\
    \ 1:(length(s)-3)) {\n    if(s[i] != s[i+1] & s[i] != s[i+2] & s[i] != s[i+3])\
    \ return(FALSE)\n  }\n  return(TRUE)\n}\n\nis_happy(\"abba\")\nis_happy(\"aba\"\
    )\nis_happy(\"ab\")\nis_happy(\"a\")\nis_happy(\"aaaa\")\nis_happy(\"aa\")\nis_happy(\"\
    a\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s\
    \ <- tolower(s)\n  length(s)>=3 & all(sapply(strsplit(s, \"\"), function(x) length(unique(x))==3))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"ab", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),\
    \ function(x) length(unique(c(s[x:(x+3)], s[(x+1):(x+4)]))) == 3)))\n}\nis_happy(\"\
    hello\")\nis_happy(\"helllo\")\nis_happy(\"helllllo\")\nis_happy(\"hellllllo\"\
    )\nis_happy(\"hellllllllo\")\nis_happy(\"hellllllllllo\")\nis_happy(\"hellllllllllllo\"\
    )\nis_happy(\"hellllllllllllllo\")\nis_happy(\"hellllllllllllllllo\")\nis_happy(\"\
    hellllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllllo\")\nis_happy(\"hellllllllllllllllllllllllllllllo\"\
    )\nis_happy(\"hellllllllllllllllllllllllllllllo\")\nis_happy(\"", "\n  s <- tolower(s)\n\
    \  n <- nchar(s)\n  return(length(s) == 3 && all(sapply(1:(n-3),function(i) !any(s[i:(i+3)]==s[i:(i+3)])))\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n  if(length(s) < 3) return(FALSE)\n\
    \  for(i in 1:(length(s)-2)) {\n    if(s[i] != s[i+1] && s[i] != s[i+2]) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happyp\")\nis_happy(\"\
    happypp\")\nis_happy(\"happyppp\")\nis_happy(\"happypppp\")\nis_happy(\"happyppppp\"\
    )\nis_happy(\"happypppppp\")\nis_happy(\"happyppppppp\")\nis_happy(\"happypppppppp\"\
    )\nis_happy(\"happyppppppppp\")\nis_happy(\"happypppppppppp\")\nis_happy(\"happyppppppppppp\"\
    )\nis_happy(\"happypppppppppppp\")\nis_happy(\"happyppppppppppppp\")\nis_happy(\"\
    happypppppppppppppp\")\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"happypppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"\
    happyppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppp", "\n  s <-\
    \ tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(strsplit(s, \"\"\
    ), function(x) length(unique(x))) == 3))\n}\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"ab", "\n  s <- tolower(s)\n  n <- length(s)\n\
    \  return(n >= 3 && all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\n\nis_happy(\"hello\")\nis_happy(\"goodbye\")\nis_happy(\"\
    helloo\")\nis_happy(\"hellooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooooo\"\
    )\nis_happy(\"hellooooooo\")\nis_happy(\"helloooooooo\")\nis_happy(\"helloooooooooo\"\
    )\nis_happy(\"hellooooooooooo\")\nis_happy(\"helloooooooooooo\")\nis_happy(\"\
    helloooooooooooooo\")\nis_happy(\"hellooooooooooooooo\")\nis_happy(\"helloooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"hellooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"hellooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\n\
    is_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    hellooooooooooooooooooooooooooooooooooooooooooooooooooooo", "\n  s <- tolower(s)\n\
    \  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(sapply(seq(i),\
    \ function(j) substr(s, j, j+3))))) == 3))\n}\nis_happy(\"hello\")\nis_happy(\"\
    h\")\nis_happy(\"hell\")\nis_happy(\"hellll\")\nis_happy(\"hellllll\")\nis_happy(\"\
    helllllll\")\nis_happy(\"hellllllll\")\nis_happy(\"helllllllll\")\nis_happy(\"\
    hellllllllll\")\nis_happy(\"helllllllllll\")\nis_happy(\"hellllllllllll\")\nis_happy(\"\
    helllllllllllll\")\nis_happy(\"hellllllllllllll\")\nis_happy(\"helllllllllllllll\"\
    )\nis_happy(\"hellllllllllllllll\")\nis_happy(\"helllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllll\")\nis_happy(\"helllllllllllllllll\")\nis_happy(\"hellllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllll\")\n\
    is_happy(\"helllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllll\")\n\
    is_happy(\"helllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllll\")\n\
    is_happy(\"helllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllll\")\n\
    is_happy(\"helllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllll", "\n  s <- tolower(s)\n  n <- nchar(s)\n\
    \  return(n >= 3 & all(sapply(1:(n-3), function(i) length(unique(substr(s, i,\
    \ i+3))) == 3)))\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\n", "\n  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    sapply(s,\
    \ function(x) length(unique(x))) == 3\n}\n</code>\n<|/ a tags=r |>\n<| c |>\n\
    Thanks for your answer! I tried to run your code, but I got this error: `Error\
    \ in is_happy(\"aba\") : \n  object 'is_happy' not found`. Do you know why this\
    \ happened?\n<|/ c |>\n<| c |>\nI ran the code exactly as you wrote it. I didn't\
    \ get any errors. I ran `is_happy(\"aba\")` and the output was `TRUE`.\n<|/ c\
    \ |>\n<| c |>\nI ran it again and I got this error: `Error in is_happy(\"aba\"\
    ) : \n  object 'is_happy' not found`. Do you know why this happened?\n<|/ c |>\n\
    <| c |>\nI ran it again and I got this error: `Error in is_happy(\"aba\") : \n\
    \  object 'is_happy' not found`. Do you know why this happened?\n<|/ c |>\n<|\
    \ c |>\nI ran it again and I got this error: `Error in is_happy(\"aba\") : \n\
    \  object 'is_happy' not found`. Do you know why this happened?\n<|/ c |>\n<|\
    \ a |>\nHere is a solution using stringr::str_count and stringr::str_subset\n\
    <code>\nlibrary(stringr)\n\nis_happy <- function(s) {\n  s <- tolower(s)\n  str_count(s,\
    \ pattern = \"^[a-z]{3,}$\") >= 3 & \n    str_count(s, pattern = \"[a-z]{3}\"\
    ) >= 3\n}\n\nis_happy(\"aba\")", "\n  s <- tolower(s)\n  n <- length(s)\n  return(n\
    \ >= 3 & all(sapply(1:(n-3), function(i) length(unique(sapply(seq(i), function(j)\
    \ substr(s, j, j+3))))) == 3))\n}\n", "\n  s <- tolower(s)\n  length(sapply(strsplit(s,\
    \ \"\"), length)) >= 3 & \n    sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3\n}\n\nis_happy(\"happy\")\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY", "\n  if(length(s) < 3) return(FALSE)\n  for(i in 1:(length(s)-3))\
    \ {\n    if(s[i] != s[i+1] && s[i] != s[i+2] && s[i] != s[i+3]) return(FALSE)\n\
    \  }\n  return(TRUE)\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) -\
    \ 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n\
    }\n", "\n  if(length(s) < 3) {\n    return(FALSE)\n  }\n  for(i in 1:(length(s)\
    \ - 1)) {\n    if(s[i] != s[i + 1]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\
    }\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abba\")\n", "\n  s <- tolower(s)\n  length(sapply(strsplit(s,\
    \ \"\"), length)) >= 3 & \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x)))\
    \ == 3)\n}\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n\
    \  s <- tolower(s)\n  length(sapply(s, length)) >= 3 & \n    sapply(s, function(x)\
    \ length(unique(x))) == 3\n}\nis_happy(\"hello\")\nis_happy(\"h\")\nis_happy(\"\
    hey\")\nis_happy(\"hell\")\nis_happy(\"hellll\")\nis_happy(\"helllll\")\nis_happy(\"\
    hellllll\")\nis_happy(\"helllllll\")\nis_happy(\"hellllllll\")\nis_happy(\"helllllllll\"\
    )\nis_happy(\"hellllllllll\")\nis_happy(\"helllllllllll\")\nis_happy(\"hellllllllllll\"\
    )\nis_happy(\"helllllllllllll\")\nis_happy(\"hellllllllllllll\")\nis_happy(\"\
    helllllllllllllll\")\nis_happy(\"hellllllllllllllll\")\nis_happy(\"helllllllllllllllll\"\
    )\nis_happy(\"hellllllllllllllllll\")\nis_happy(\"helllllllllllllllllll\")\nis_happy(\"\
    hellllllllllllllllll\")\nis_happy(\"helllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllllllllllllll\")\nis_happy(\"hellllllllllllllllllllllllll\"\
    )\nis_happy(\"helllllllllllllll", "\n  if(length(s) < 3 || length(s) == 1) {\n\
    \    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1])\
    \ {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"aba\"\
    )\nis_happy(\"abba\")\nis_happy(\"abbac\")\nis_happy(\"abac\")\nis_happy(\"abacaba\"\
    )\nis_happy(\"abacabacaba\")\nis_happy(\"abacabacabacaba\")\nis_happy(\"abacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"\
    abacabacabacabacabacabacabacabacabacabacabacabacaba\")\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\")\n\
    is_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\")\n\
    is_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacaba\"\
    )\nis_happy(\"abacabacabacabacabacabacabacabacabac", "\n  s <- tolower(s)\n  n\
    \ <- nchar(s)\n  return(length(n) >= 3 & all(sapply(strsplit(s, \"\"), function(x)\
    \ length(unique(x))) == 3))\n}\nis_happy(\"HAPPY\")\nis_happy(\"HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"\
    HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\"\
    )\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY\")\nis_happy(\"HAPPY HAPPY HAPPY HAPPY\
    \ HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY HAPPY ", "\n  s <- tolower(s)\n  length(sapply(s,\
    \ length)) >= 3 & \n    sapply(s, function(x) length(unique(x))) == 3\n}\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    ab", "\n  s <- tolower(s)\n  if(length(s) >= 3 & all(sapply(strsplit(s, \"\"),\
    \ function(x) length(unique(x))) == 3)) {\n    TRUE\n  } else {\n    FALSE\n \
    \ }\n}\n\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")", "\n  if(length(s)\
    \ < 3) {\n    return(FALSE)\n  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i]\
    \ != s[i+1]) {\n      return(FALSE)\n    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"\
    hello\")\nis_happy(\"goodbye\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"\
    hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\nis_happy(\"hello\")\n", "\n\
    \  s <- tolower(s)\n  n <- length(s)\n  return(n >= 3 & all(sapply(1:(n-3),function(x)\
    \ length(unique(substr(s,x,x+3))) == 3)))\n}\n\nis_happy(\"abba\") # TRUE\nis_happy(\"\
    abb\") # FALSE\nis_happy(\"ab\") # FALSE\nis_happy(\"a\") # TRUE\nis_happy(\"\
    aa\") # TRUE\nis_happy(\"aaaa\") # TRUE\nis_happy(\"aaaaa\") # FALSE\nis_happy(\"\
    aaaaaa\") # FALSE\nis_happy(\"aaaaaaa\") # FALSE\nis_happy(\"aaaaaaab\") # FALSE\n\
    is_happy(\"aaaaaaabb\") # FALSE\nis_happy(\"aaaaaaabbb\") # FALSE\nis_happy(\"\
    aaaaaaabbbb\") # FALSE\nis_happy(\"aaaaaaabbbbc\") # FALSE\nis_happy(\"aaaaaaabbbbcc\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccc\") # FALSE\nis_happy(\"aaaaaaabbbbcccd\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbcccc\") # FALSE\nis_happy(\"aaaaaaabbbbccccd\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccde\") # FALSE\nis_happy(\"aaaaaaabbbbccccdef\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefg\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefgh\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghi\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefghij\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijk\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijkl\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklm\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmn\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmno\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmnop\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmnopp\") # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmnoppp\"\
    ) # FALSE\nis_happy(\"aaaaaaabbbbccccdefghijklmnopppp\") # FALSE\nis_happy(\"\
    aaaaaaabbb", "\n  s <- tolower(s)\n  length(sapply(strsplit(s, \"\"), length))\
    \ >= 3 & \n    all(sapply(strsplit(s, \"\"), function(x) length(unique(x))) ==\
    \ 3)\n}\n\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_", "\n\
    \  s <- tolower(s)\n  s <- gsub(\"[^a-z]\", \"\", s)\n  s <- gsub(\"^[a-z]\",\
    \ \"\", s)\n  s <- gsub(\"[a-z]$\", \"\", s)\n  s <- gsub(\"[a-z]{3}\", \"\",\
    \ s)\n  s <- gsub(\"[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}$\",\
    \ \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"\
    [a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\", \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}$\"\
    , \"\", s)\n  s <- gsub(\"[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}[a-z]{3}",
  "\n  n <- nchar(s)\n  return(length(s)>=3 & sapply(1:(n-3), function(i) all(unique(sapply(seq(i+1),\
    \ function(j) substr(s, j, j+3))))))\n}\nis_happy(\"abcabcbb\")\nis_happy(\"a\"\
    )\nis_happy(\"aa\")\nis_happy(\"aaaa\")\nis_happy(\"aaaaa\")\nis_happy(\"aaaaaa\"\
    )\nis_happy(\"aaaaaaa\")\nis_happy(\"aaaaaaab\")\nis_happy(\"aaaaaaac\")\nis_happy(\"\
    aaaaaaad\")\nis_happy(\"aaaaaaae\")\nis_happy(\"aaaaaaaf\")\nis_happy(\"aaaaaaag\"\
    )\nis_happy(\"aaaaaaah\")\nis_happy(\"aaaaaaai\")\nis_happy(\"aaaaaaaj\")\nis_happy(\"\
    aaaaaaak\")\nis_happy(\"aaaaaaal\")\nis_happy(\"aaaaaaam\")\nis_happy(\"aaaaaaan\"\
    )\nis_happy(\"aaaaaaao\")\nis_happy(\"aaaaaaap\")\nis_happy(\"aaaaaaaq\")\nis_happy(\"\
    aaaaaaar\")\nis_happy(\"aaaaaaas\")\nis_happy(\"aaaaaaat\")\nis_happy(\"aaaaaaau\"\
    )\nis_happy(\"aaaaaaav\")\nis_happy(\"aaaaaaaw\")\nis_happy(\"aaaaaaax\")\nis_happy(\"\
    aaaaaaay\")\nis_happy(\"aaaaaaaz\")\nis_happy(\"aaaaaaaa\")\nis_happy(\"aaaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaa\")\nis_happy(\"aaaaaaaaaaaaaaa\"\
    )\nis_happy(\"aaaaaaaaaaaaaaab\")\nis_happy(\"aaaaaaaaaaaaaaac\")\nis_happy(\"\
    aaaaaaaaaaaaaaad\")\nis_happy(\"aaaaaaaaaaaaaaae\")\nis_happy(\"aaaaaaaaaaaaaaaf\"\
    )\nis_happy(\"aaaaaaaaaaaaaaag\")\nis_happy(\"aaaaaaaaaaaaaaah\")\nis_happy(\"\
    aaaaaaaaaaaaaaai\")\nis_happy(\"aaaaaaaaaaaaaaaj\")\nis_happy(\"aaaaaaaaaaaaaaak\"\
    )\nis_happy(\"aaaaaaaaaaaaaaal\")\nis_happy(\"aaaaaaaaaaaaaaam\")\nis_happy(\"\
    aaaaaaaaaaaaaaan\")\nis_happy(\"aaaaaaaaaaaaaaao\")\nis_happy(\"aaaaaaaaaaaaaaap\"\
    )\nis_happy(\"aaaaaaaaaaaaaaaq\")\nis_happy(\"aaaaaaaaaaaaaaar\")\nis_happy(\"\
    aaaaaaaaaaaaaaas\")\nis_happy(\"", "\n  \n  if(length(s) < 3) {\n    return(FALSE)\n\
    \  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n\
    \    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"happy\")\nis_happy(\"happyp\"\
    )\nis_happy(\"happypp\")\nis_happy(\"happyppp\")\nis_happy(\"happypppp\")\nis_happy(\"\
    happyppppp\")\nis_happy(\"happypppppp\")\nis_happy(\"happyppppppp\")\nis_happy(\"\
    happypppppppp\")\nis_happy(\"happyppppppppp\")\nis_happy(\"happypppppppppp\")\n\
    is_happy(\"happyppppppppppp\")\nis_happy(\"happypppppppppppp\")\nis_happy(\"happyppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppp\")\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"\
    happypppppppppppppp\")\nis_happy(\"happyppppppppppppppp\")\nis_happy(\"happyppppppppppppppp\"\
    )\nis_happy(\"happypppppppppppppppp\")\nis_happy(\"happyppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppp\")\n\
    is_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppppp\")\nis_happy(\"happypppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happyppppppppppppppppppp\")\nis_happy(\"happyppppppppppppppppppp\"\
    )\nis_happy(\"happypp", "\n  n <- nchar(s)\n  return(n >= 3 && all(sapply(strsplit(s,\
    \ \"\"), function(x) length(unique(x)) >= 3)))\n}\n\nis_happy(\"hello\")\nis_happy(\"\
    helloo\")\nis_happy(\"hellooo\")\nis_happy(\"helloooo\")\nis_happy(\"helloooooo\"\
    )\nis_happy(\"helloooooooo\")\nis_happy(\"helloooooooooo\")\nis_happy(\"helloooooooooooo\"\
    )\nis_happy(\"helloooooooooooooo\")\nis_happy(\"helloooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\"\
    )\nis_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\n\
    is_happy(\"helloooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    helloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\")\nis_happy(\"\
    hellooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "\n  s <- tolower(s)\n\
    \  length(sapply(s, length)) >= 3 & \n    all(sapply(s, function(x) length(unique(x)))\
    \ == 3)\n}\nis_happy(\"abba\")\nis_happy(\"aba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"abba\")\nis_happy(\"\
    abba\")\nis_happy(\"", "\n  if(length(s) < 3 || length(s) == 1) {\n    return(FALSE)\n\
    \  }\n  \n  for(i in 1:(length(s) - 1)) {\n    if(s[i] != s[i+1]) {\n      return(FALSE)\n\
    \    }\n  }\n  \n  return(TRUE)\n}\n\nis_happy(\"abba\")\nis_happy(\"abbac\")\n\
    is_happy(\"abbaca\")\nis_happy(\"abbacab\")\nis_happy(\"abbacabc\")\nis_happy(\"\
    abbacabca\")\nis_happy(\"abbacabcab\")\nis_happy(\"abbacabcabc\")\nis_happy(\"\
    abbacabcabca\")\nis_happy(\"abbacabcabcab\")\nis_happy(\"abbacabcabcabc\")\nis_happy(\"\
    abbacabcabcabca\")\nis_happy(\"abbacabcabcabcab\")\nis_happy(\"abbacabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcab\")\nis_happy(\"\
    abbacabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabca\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcab\")\nis_happy(\"abbacabcabcabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbacabcabcabcabcabcabcabcabcab", "\n  s <- tolower(s)\n  if(length(s)\
    \ >= 3 && all(sapply(s, unique)) == TRUE) {\n    return(TRUE)\n  } else {\n  \
    \  return(FALSE)\n  }\n}\n\nis_happy(\"abc\")\nis_happy(\"aba\")\nis_happy(\"\
    abba\")\nis_happy(\"abbb\")\nis_happy(\"abbbb\")\nis_happy(\"abbbba\")\nis_happy(\"\
    abbbbba\")\nis_happy(\"abbbbbac\")\nis_happy(\"abbbbbac\")\nis_happy(\"abbbbbacc\"\
    )\nis_happy(\"abbbbbaccc\")\nis_happy(\"abbbbbaccca\")\nis_happy(\"abbbbbacccab\"\
    )\nis_happy(\"abbbbbacccabc\")\nis_happy(\"abbbbbacccabca\")\nis_happy(\"abbbbbacccabcab\"\
    )\nis_happy(\"abbbbbacccabcabc\")\nis_happy(\"abbbbbacccabcabca\")\nis_happy(\"\
    abbbbbacccabcabcab\")\nis_happy(\"abbbbbacccabcabcabc\")\nis_happy(\"abbbbbacccabcabcabca\"\
    )\nis_happy(\"abbbbbacccabcabcabcab\")\nis_happy(\"abbbbbacccabcabcabcabc\")\n\
    is_happy(\"abbbbbacccabcabcabcabca\")\nis_happy(\"abbbbbacccabcabcabcabcab\")\n\
    is_happy(\"abbbbbacccabcabcabcabcabc\")\nis_happy(\"abbbbbacccabcabcabcabcabca\"\
    )\nis_happy(\"abbbbbacccabcabcabcabcabcab\")\nis_happy(\"abbbbbacccabcabcabcabcabcabc\"\
    )\nis_happy(\"abbbbbacccabcabcabcabcabcabca\")\nis_happy(\"abbbbbacccabcabcabcabcabcabcab\"\
    )\nis_happy(\"abbbbbacccabcabcabcabcabcabcabc\")\nis_happy(\"abbbbbacccabcabcabcabcabcabcabca\"\
    )\nis_happy(\"abbbbbacccabcabcabcabcabcabcabcab\")\nis_happy(\"abbbbbacccabcabcabcabcabcabcabcabc\"\
    )\nis_happy(\"abbbbbacccabcabcabcabcabcabcabcabca\")\nis_happy(\"abbbbbacccabcabcabcabcabcabcabcab"]
stop_tokens:
- "\n#"
- "\n```"

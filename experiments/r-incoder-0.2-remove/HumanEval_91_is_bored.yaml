name: HumanEval_91_is_bored
language: r
prompt: "# You'll be given a string of words, and your task is to count the number\n\
  # of boredoms. A boredom is a sentence that starts with the word \"I\".\n# Sentences\
  \ are delimited by '.', '?' or '!'.\n# For example:\nis_bored <- function(S) {"
tests: "test_humaneval <- function() {\ncandidate <- is_bored\n    if(!identical(candidate('Hello\
  \ world'), 0)){quit('no', 1)}\n    if(!identical(candidate('Is the sky blue?'),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate('I love It !'), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate('bIt'), 0)){quit('no', 1)}\n    if(!identical(candidate('I\
  \ feel good today. I will be productive. will kill It'), 2)){quit('no', 1)}\n  \
  \  if(!identical(candidate('You and I are going for a walk'), 0)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  boredoms <- grep(\"^I\"\
    , S)\n  length(boredoms)\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice Cream\")", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream.\"\
    )", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n\
    }\nis_bored(c(\"I\", \"am\", \"bored\", \"!\"))", "\n  S <- tolower(S)\n  S <-\
    \ gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"^i\", S)))\n}\nis_bored(\"\
    I hate you!\") # returns 1\nis_bored(\"I love you!\") # returns 1\nis_bored(\"\
    I love you?\") # returns 1\nis_bored(\"I hate you?\") # returns 0\nis_bored(\"\
    I hate you!?\") # returns 0\nis_bored(\"I love you!?\") # returns 0\nis_bored(\"\
    I love you!?!\") # returns 0\nis_bored(\"I love you!?!?\") # returns 0\nis_bored(\"\
    I love you!?!?!\") # returns 0\nis_bored(\"I love you!?!?!?\") # returns 0\nis_bored(\"\
    I love you!?!?!?!\") # returns 0\nis_bored(\"I love you!?!?!?!?\") # returns 0\n\
    is_bored(\"I love you!?!?!?!?!\") # returns 0\nis_bored(\"I love you!?!?!?!?!?\"\
    ) # returns 0\nis_bored(\"I love you!?!?!?!?!?!\") # returns 0\nis_bored(\"I love\
    \ you!?!?!?!?!?!?\") # returns 0\nis_bored(\"I love you!?!?!?!?!?!?!\") # returns\
    \ 0\nis_bored(\"I love you!?!?!?!?!?!?!?\") # returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?\") # returns 0\nis_bored(\"\
    I love you!?!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"I love you!?!?!?!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I love you!?!?!?", "\n  S <- unlist(strsplit(S, split\
    \ = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"\
    [.?!]\"))\n  sum(S == \"I\")\n}\nis_bored(c(\"I\", \"am\", \"I\", \"bored\", \"\
    !\"))", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n\
    }\nis_bored(\"I love you.\")", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n\
    \  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"I\", \"am\", \"I\", \"bored\", \"!\"\
    , \"I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <- tolower(S)\n  S <- gsub(\"\
    [.?!]\", \"\", S)\n  return(sum(S == \"i\"))\n}\nis_bored(c(\"I\", \"am\", \"\
    bored\", \"!\"))", "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n\
    }\nis_bored(\"I like Ice Cream.\")\n</cell>\n<text>\nNow let's try it out on a\
    \ few examples:\n\n\n</text>\n<cell>\nis_bored(\"I like Ice Cream.\")\n</cell>\n\
    <cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts boredoms twice\n\
    </cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts boredoms\
    \ twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts\
    \ boredoms twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how\
    \ it counts boredoms twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") #\
    \ Notice how it counts boredoms twice\n</cell>\n<cell>\nis_bored(\"I like Ice\
    \ Cream.\") # Notice how it counts boredoms twice\n</cell>\n<cell>\nis_bored(\"\
    I like Ice Cream.\") # Notice how it counts boredoms twice\n</cell>\n<cell>\n\
    is_bored(\"I like Ice Cream.\") # Notice how it counts boredoms twice\n</cell>\n\
    <cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts boredoms twice\n\
    </cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts boredoms\
    \ twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how it counts\
    \ boredoms twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") # Notice how\
    \ it counts boredoms twice\n</cell>\n<cell>\nis_bored(\"I like Ice Cream.\") #\
    \ Notice how it counts boredom", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\",\
    \ \"\", S)\n  S <- gsub(\"^I\", \"\", S)\n  return(length(grep(\"^I\", S)))\n\
    }\nis_bored(\"I like Ice cream!\")\n</cell>\n<text>\nQuestion 3: Write a function\
    \ that takes a vector of words and returns a vector of the same length where each\
    \ element is the number of times the word \"boredom\" appears in the input vector.\n\
    For example, if the input vector is c(\"I\", \"like\", \"Ice\", \"cream\", \"\
    !\"), your function should return c(4, 1, 3, 0, 1)\n\n\n</text>\n<cell>", "\n\
    \  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"i\"))\n\
    }\n", "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you so much! This was very helpful!\n<|/ c |>\n<| c |>\n\
    No problem! If this answer solved your problem, please consider marking it as\
    \ accepted by clicking the check mark next to it.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\n", "\n  S <- unlist(strsplit(S,\
    \ split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n</cell>\n<cell>\nis_bored(\"\
    I like Ice cream.\")\n</cell>\n<cell>\nis_bored(\"I like Ice cream. Ice cream\
    \ is great!\")\n</cell>\n<cell>\nis_bored(\"I like Ice cream. Ice cream is great!\
    \ Ice cream is awesome.\")\n</cell>\n<cell>\nis_bored(\"I like Ice cream. Ice\
    \ cream is great! Ice cream is awesome. Ice cream is great!\")\n</cell>\n<text>\n\
    Task 2: Write a function that takes a vector of strings and returns a vector of\
    \ booleans indicating whether each string starts with the letter \"I\".\nThe function\
    \ should return the following vector:\n[TRUE, FALSE, FALSE, TRUE, FALSE, FALSE,\
    \ FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,\
    \ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE", "\n \
    \ S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"^i\"\
    , S)))\n}\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n\
    \  sum(grepl(\"^I\", S))\n}\n", "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(c(\"I\", \"am\", \"bored\", \"!\", \"I\", \"am\", \"bored\"\
    , \"!\"))", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"\
    ^i\", S)))\n}\n</cell>\n<cell>\nis_bored(\"I love you.\")\n</cell>\n<cell>\nis_bored(\"\
    I love you. I am a bored. He loves me.\")\n</cell>\n<cell>\nis_bored(\"I love\
    \ you. I am a bored. He loves me. He is my boredom.\")\n</cell>\n<cell>\nis_bored(\"\
    I love you. I am a bored. He loves me. He is my boredom.\")\n</cell>\n<cell>\n\
    is_bored(\"I love you. I am a bored. He loves me. He is my boredom.\")\n</cell>\n\
    <cell>\nis_bored(\"I love you. I am a bored. He loves me. He is my boredom.\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you. I am a bored. He loves me. He is my\
    \ boredom.\")\n</cell>\n<cell>\nis_bored(\"I love you. I am a bored. He loves\
    \ me. He is my boredom.\")\n</cell>\n<cell>\nis_bored(\"I love you. I am a bored.\
    \ He loves me. He is my boredom.\")\n</cell>\n<cell>\nis_bored(\"I love you. I\
    \ am a bored. He loves me. He is my boredom.\")\n</cell>\n<cell>\nis_bored(\"\
    I love you. I am a bored. He loves me. He is my boredom.\")\n</cell>\n<cell>\n\
    is_bored(\"I love you. I am a bored. He loves me. He is my boredom.\")\n</cell>\n\
    <cell>\nis_bored(\"I love you. I am a bored. He loves me. He is my boredom.\"\
    )\n</cell>\n<cell>\nis_", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n}\n", "\n\
    \  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"\
    I love you!\")\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split=\".?!\"))\n\
    \  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream.\")", "\n  S <- tolower(S)\n\
    \  S <- gsub(\"[?.!]\", \"\", S)\n  S <- gsub(\"^I\", \"\", S)\n  return(length(grep(\"\
    ^I\", S)))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(\"I love you!\")\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  boredoms <- grep(\"\
    ^I\", S)\n  length(boredoms)\n}\nis_bored(c(\"I like you!\", \"We are good.\"\
    , \"We are good.\"))", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n\
    \  return(sum(S == \"i\"))\n}\nis_bored(c(\"I like you!\", \"I love you!\", \"\
    I hate you!\"))", "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n}\n",
  "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n</cell>\n<cell>",
  "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"\
    I like Ice Cream\")", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(S\
    \ == \"I\")\n}\nis_bored(c(\"I\", \"am\", \"I\", \"bored\", \"!\"))\n</cell>\n\
    <text>\nThe function is_bored takes a string as its argument, and returns a number.\n\
    The function strsplit splits the string S into a list of strings, where each string\
    \ is a word in the sentence.\nThe function sum counts the number of times the\
    \ word \"I\" appears in the list.\nThe function unlist converts the list into\
    \ a vector.\nThe function is.na checks whether a vector is missing values.\nThe\
    \ function is.na returns TRUE if any element of the vector is missing, and FALSE\
    \ otherwise.\nThe function is.na returns TRUE if all elements of the vector are\
    \ missing, and FALSE otherwise.\n\n\n</text>\n<text>\nExercise: Write a function\
    \ that takes a vector of numbers and returns the sum of the numbers that are greater\
    \ than or equal to 50.\n\n\n</text>\n<cell>", "\n  boredoms <- gregexpr(\"^I\"\
    , S)\n  sum(lengths(regmatches(S, boredoms))) > 0\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(S == \"I\")\n}\nis_bored(\"I love you!\")", "\n \
    \ S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n</cell>\n<cell>\n\
    is_bored(\"I love you!\")\n</cell>\n<cell>\nis_bored(\"I hate you!\")\n</cell>\n\
    <cell>\nis_bored(\"I love you.\")\n</cell>\n<cell>\nis_bored(\"I hate you.\")\n\
    </cell>\n<cell>\nis_bored(\"I love you? I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"\
    I love you! I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you! I hate you!\"\
    )", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"\
    i\"))\n}\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n\
    \  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(S == \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n\
    \  sum(grepl(\"^I\", S))\n}\n", "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n\
    }\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n\
    is_bored(c(\"I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice Cream\"\
    )", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"\
    i\"))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"\
    ^i\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[\\\\.\\\\?!]\", \"\", S)\n\
    \  S <- gsub(\"^i\", \"\", S)\n  return(length(grep(\"^i\", S)))\n}\n", "\n  S\
    \ <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"\
    I like Ice cream.\")", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(S == \"\
    I\")\n}\n", "\n  S <- unlist(strsplit(S, split=\".?!\"))\n  sum(grepl(\"^I\",\
    \ S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(c(\"I\", \"am\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \" \"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"I like you!\", \"\
    I hate you!\", \"I love you!\"))", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\"\
    , \"\", S)\n  return(length(grep(\"^i\", S)))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream.\"\
    )\n</cell>\n<text>\nThe is_bored function above takes a string as its argument,\
    \ and returns a single numeric value. The value it returns is equal to the number\
    \ of sentences starting with the word \"I\".\n\nNext, write a function that takes\
    \ a vector of strings and returns a vector of the same length with boolean values\
    \ indicating whether each string starts with the letter \"I\".\n\n\n</text>\n\
    <cell>", "\n  boredoms <- gregexpr(\"^I\", S)\n  sum(attr(boredoms, \"match.length\"\
    ) > 0)\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[\\.\\?\\!]\", \"\", S)\n  S\
    \ <- gsub(\"^I\", \"\", S)\n  return(length(grep(\"^I\", S)))\n}\n</cell>\n<cell>",
  "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n}\n", "\n  S <- tolower(S)\n\
    \  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(grepl(\"^i\", S)))\n}\n", "\n \
    \ S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"\
    I love you!\")\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[?.!]\"\
    , \"\", S)\n  S <- gsub(\"^I\", \"\", S)\n  S <- gsub(\"I$\", \"\", S)\n  return(length(grep(\"\
    ^I\", S)))\n}\n</cell>\n<cell>\nis_bored(\"I love you!\")\n</cell>\n<cell>\nis_bored(\"\
    I hate you!\")\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you.\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you. Hate you.\")\n\
    </cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you. Hate you. Hate you.\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you. Hate you. Hate\
    \ you. Hate you.\")\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you.\
    \ Hate you. Hate you. Hate you. Hate you.\")\n</cell>\n<cell>\nis_bored(\"I love\
    \ you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you.\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you. Hate you. Hate\
    \ you. Hate you. Hate you. Hate you. Hate you.\")\n</cell>\n<cell>\nis_bored(\"\
    I love you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you.\
    \ Hate you. Hate you.\")\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate\
    \ you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you. Hate you.\"\
    )\n</cell>\n<cell>\nis_bored(\"I love you. Hate you. Hate you. Hate you. Hate\
    \ you. Hate you. Hate you. ", "\n  S <- unlist(strsplit(S, split = \" \"))\n \
    \ sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n\
    \  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice Cream\")", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I hate you!\")\n\
    </cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(\"I like Ice cream!\")\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that takes a vector of strings and returns a vector of the same length\n\
    where each element is the number of words in the string that start with 'I'.\n\
    \n\n</text>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(c(\"I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <-\
    \ tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(grepl(\"^i\", S)))\n\
    }\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n}\n", "\n\
    \  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n \
    \ S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- tolower(S)\n \
    \ S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"i\"))\n}\n</cell>\n<cell>",
  "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n \
    \ S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"I like you!\"\
    , \"I hate you!\", \"I love you!\"))", "\n  S <- unlist(strsplit(S, split=\"[?!.]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\"\
    , \"\", S)\n  return(sum(S %in% c(\"i\", \"me\", \"my\", \"mine\", \"myself\"\
    , \"you\", \"your\", \"yours\", \"yourself\", \"yourselves\")))\n}", "\n  S <-\
    \ unlist(strsplit(S, split=\"\\\\.|\\\\?|!\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- gsub(\"[?.!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like\
    \ Ice Cream.\")", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S\
    \ %in% c(\"i\", \"me\", \"my\", \"mine\", \"myself\", \"you\", \"your\", \"yours\"\
    , \"yourself\", \"yourselves\")))\n}\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split=\"\\\\.|\\\\?|!\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream!\")",
  "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- unlist(strsplit(S, split=\"\\\\.|\\\\?|!\"))\n  sum(S == \"I\")\n}\n",
  "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"^i\"\
    , S)))\n}\nis_bored(c(\"I like you!\", \"I hate you!\", \"I love you!\", \"I hate\
    \ you!\"))", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"\
    ^i\", S)))\n}\n", "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(\"I like Ice Cream.\")", "\n  S <- unlist(strsplit(S, split=\"\
    [.?!]\"))\n  sum(S == \"I\")\n}\nis_bored(c(\"I\", \"am\", \"I\", \"bored\", \"\
    !\", \"I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S, split=\"\
    [.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I hate you!\")", "\n  boredoms\
    \ <- grep(\"^I\", S, value = TRUE)\n  length(boredoms)\n}\n", "\n  boredoms <-\
    \ grep(\"^I\", S, value = TRUE)\n  length(boredoms)\n}\nis_bored(\"I love you!\"\
    )\nis_bored(\"I love you? I hate you!\")\nis_bored(\"I love you! I hate you!\"\
    )\nis_bored(\"I love you! I hate you? I hate you!\")\nis_bored(\"I love you! I\
    \ hate you? I hate you! I hate you!\")\nis_bored(\"I love you! I hate you? I hate\
    \ you! I hate you? I hate you!\")\nis_bored(\"I love you! I hate you? I hate you!\
    \ I hate you? I hate you! I hate you!\")\nis_bored(\"I love you! I hate you? I\
    \ hate you! I hate you? I hate you! I hate you? I hate you!\")\nis_bored(\"I love\
    \ you! I hate you? I hate you! I hate you? I hate you! I hate you? I hate you!\
    \ I hate you!\")\nis_bored(\"I love you! I hate you? I hate you! I hate you? I\
    \ hate you! I hate you? I hate you! I hate you? I hate you! I hate you!\")\nis_bored(\"\
    I love you! I hate you? I hate you! I hate you? I hate you! I hate you? I hate\
    \ you! I hate you? I hate you! I hate you? I hate you! I hate you!\")\nis_bored(\"\
    I love you! I hate you? I hate you! I hate you? I hate you! I hate you? I hate\
    \ you! I hate you? I hate you! I hate you? I hate you! I hate you? I hate you!\
    \ I hate you!\")\nis_bored(\"I love you! I hate you? I hate you! I hate you? I\
    \ hate you! I hate you? I hate you! I hate you? I hate you! I hate you? I ", "\n\
    \  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n \
    \ boredoms <- grep(\"^I\", S)\n  length(boredoms)\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split=\"\
    [.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream.\")", "\n \
    \ boredoms <- gregexpr(\"[I].*\", S)\n  sum(unlist(lapply(boredoms, `[`, 1)) ==\
    \ 1)\n}\nis_bored(\"I love you!\")", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream!\")", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- gsub(\"[.?!]\", \"\
    \", S)\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice Cream.\") # returns\
    \ 2\nis_bored(\"I like Ice Cream.?!\") # returns 1\nis_bored(\"I like Ice Cream!.\"\
    ) # returns 1\nis_bored(\"I like Ice Cream!?\") # returns 1\nis_bored(\"I like\
    \ Ice Cream!?!\") # returns 0\nis_bored(\"I like Ice Cream!?!?!\") # returns 0\n\
    is_bored(\"I like Ice Cream!?!?!?!\") # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"\
    I like Ice Cream!?!?!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!\") # returns\
    \ 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"\
    I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"I like Ice\
    \ Cream!?!?!?!?!?!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I like Ice Cream!?!?!?!?!?!?!?!?!?!?!", "\n  S <- unlist(strsplit(S,\
    \ split=\"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \" \"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream!\")\n</cell>\n\
    <text>\nTask 3: Write a function that takes a vector of strings and returns a\
    \ vector of the same length\nof strings with only the words that are capitalized.\n\
    For example:\ncapitalize_words <- function(S) {\n  S <- unlist(strsplit(S, split\
    \ = \" \"))\n  S <- S[grepl(\"^[A-Z]\", S)]\n  return(S)\n}\ncapitalize_words(c(\"\
    I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\n\
    capitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n\
    [1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"\
    ))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\"\
    , \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"\
    I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\n\
    capitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n\
    [1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"\
    ))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\"\
    , \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"\
    I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\n\
    capitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"))\nshould return:\n\
    [1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\", \"I like Ice cream!\"\
    ))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"I like Ice cream!\"\
    , \"I like Ice cream!\"))\nshould return:\n[1] \"I\" \"I\"\ncapitalize_words(c(\"\
    I like Ice cream!\", \"I like Ice cre", "\n  S <- unlist(strsplit(S, split = \"\
    [.?!]\"))\n  sum(S == \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"I like you!\", \"I hate you!\", \"\
    I love you!\"))", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S ==\
    \ \"I\")\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S ==\
    \ \"I\")\n}\n", "\n  boredoms <- gregexpr(\"^I\", S)\n  sum(attr(boredoms, \"\
    match.length\") > 0)\n}\nis_bored(\"I like Ice Cream.\")", "\n  S <- unlist(strsplit(S,\
    \ split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  boredoms <- grep(\"\
    ^I\", S, perl = TRUE)\n  length(boredoms)\n}\n", "\n  S <- gsub(\"[.?!]\", \"\"\
    , S)\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I love you!\")", "\n  S <- tolower(S)\n\
    \  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S %in% c(\"i\", \"me\", \"my\"\
    , \"mine\", \"myself\", \"you\", \"your\", \"yours\", \"yourself\", \"yourselves\"\
    , \"he\", \"him\", \"his\", \"himself\", \"she\", \"her\", \"hers\", \"herself\"\
    , \"it\", \"its\", \"itself\", \"they\", \"them\", \"their\", \"theirs\", \"themselves\"\
    , \"what\", \"which\", \"who\", \"whom\", \"this\", \"that\", \"these\", \"those\"\
    , \"am\", \"is\", \"are\", \"was\", \"were\", \"be\", \"been\", \"being\", \"\
    have\", \"has\", \"had\", \"having\", \"do\", \"does\", \"did\", \"doing\", \"\
    a\", \"an\", \"the\", \"and\", \"but\", \"if\", \"or\", \"because\", \"as\", \"\
    until\", \"while\", \"of\", \"at\", \"by\", \"for\", \"with\", \"about\", \"against\"\
    , \"between\", \"into\", \"through\", \"during\", \"before\", \"after\", \"above\"\
    , \"below\", \"to\", \"from\", \"up\", \"down\", \"in\", \"out\", \"on\", \"off\"\
    , \"over\", \"under\", \"again\", \"further\", \"then\", \"once\", \"here\", \"\
    there\", \"when\", \"where\", \"why\", \"how\", \"all\", \"any\", \"both\", \"\
    each\", \"few\", \"more\", \"most\", \"other\", \"some\", \"such\", \"no\", \"\
    nor\", \"not\", \"only\", \"own\", \"same\", \"so\", \"than\", \"too\", \"very\"\
    , \"s\", \"t\", \"can\", \"will\", \"just\", \"don\", \"should\", \"now\")))\n\
    }\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  boredoms <- grep(\"^I\", S)\n  length(boredoms)\n\
    }\n", "\n  S <- unlist(strsplit(S, split=\"[?!.]\"))\n  sum(grepl(\"^I\", S))\n\
    }\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n\
    }\nis_bored(c(\"I\", \"am\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S,\
    \ split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream!\"\
    )", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n\
    }\nis_bored(\"I like Ice cream!\")", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S ==\
    \ \"I\")\n}\nis_bored(\"I love you!\")\n</cell>\n<text>\nThe code above counts\
    \ the number of boredoms in the string \"I love you!\".\n\nNow write a function\
    \ that takes a string and returns the number of boredoms \nin the string. For\
    \ example, boredom_count(\"I love you!\") should return 2.\n\n\n</text>\n<cell>\n\
    boredom_count <- function(S) {\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n\
    \  sum(S == \"I\")\n}\nboredom_count(\"I love you!\")\n</cell>\n<text>\nThe code\
    \ above counts the number of boredoms in the string \"I love you!\".\n\nNow write\
    \ a function that takes a string and returns the number of boredoms \nin the string.\
    \ For example, boredom_count(\"I love you!\") should return 2.\n\n\n</text>\n\
    <cell>\nboredom_count <- function(S) {\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(S == \"I\")\n}\nboredom_count(\"I love you!\")\n</cell>\n<text>\nThe\
    \ code above counts the number of boredoms in the string \"I love you!\".\n\n\
    Now write a function that takes a string and returns the number of boredoms \n\
    in the string. For example, boredom_count(\"I love you!\") should return 2.\n\n\
    \n</text>\n<cell>\nboredom_count <- function(S) {\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(S == \"I\")\n}\nboredom_count(\"I love you!\")\n</cell>\n\
    <text>\nThe code above counts the number of boredoms in the string \"I love you!\"\
    .\n\nNow write a function that takes a string and returns the number of boredoms\
    \ \nin the string. For example, boredom_count(\"I love you!\") should return 2.\n\
    \n\n</text>\n<cell>\nboredom_count <- function(S) {\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(S == \"I\")\n}\nboredom_count(\"I love you!\")\n\
    </cell>\n<text>\nThe code above counts the number of boredoms in the string \"\
    I love you!\".\n\nNow write a function that takes a string and returns the number\
    \ of boredoms \nin the string. For example, bore", "\n  S <- tolower(S)\n  boredoms\
    \ <- grep(\"^i\", S)\n  length(boredoms)\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice Cream.\")",
  "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"\
    I like Ice cream.\")", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S\
    \ == \"i\"))\n}\nis_bored(\"I like Ice cream.\")\n</cell>\n<cell>", "\n  S <-\
    \ unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"\
    I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S, split =\
    \ \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- gsub(\"[.?!]\", \"\",\
    \ S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[?!.]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"I like you!\", \"I love you!\", \"\
    I hate you!\"))", "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S\
    \ %in% c(\"i\", \"me\", \"my\", \"mine\", \"myself\", \"you\", \"your\", \"yours\"\
    , \"yourself\", \"yourselves\", \"he\", \"him\", \"his\", \"himself\", \"she\"\
    , \"her\", \"hers\", \"herself\", \"it\", \"its\", \"itself\", \"they\", \"them\"\
    , \"their\", \"theirs\", \"themselves\", \"what\", \"which\", \"who\", \"whom\"\
    , \"this\", \"that\", \"these\", \"those\", \"am\", \"is\", \"are\", \"was\",\
    \ \"were\", \"be\", \"been\", \"being\", \"have\", \"has\", \"had\", \"having\"\
    , \"do\", \"does\", \"did\", \"doing\", \"a\", \"an\", \"the\", \"and\", \"but\"\
    , \"if\", \"or\", \"because\", \"as\", \"until\", \"while\", \"of\", \"at\", \"\
    by\", \"for\", \"with\", \"about\", \"against\", \"between\", \"into\", \"through\"\
    , \"during\", \"before\", \"after\", \"above\", \"below\", \"to\", \"from\", \"\
    up\", \"down\", \"in\", \"out\", \"on\", \"off\", \"over\", \"under\", \"again\"\
    , \"further\", \"then\", \"once\", \"here\", \"there\", \"when\", \"where\", \"\
    why\", \"how\", \"all\", \"any\", \"both\", \"each\", \"few\", \"more\", \"most\"\
    , \"other\", \"some\", \"such\", \"no\", \"nor\", \"not\", \"only\", \"own\",\
    \ \"same\", \"so\", \"than\", \"too\", \"very\", \"s\", \"t\", \"can\", \"will\"\
    , \"just\", \"don\", \"should\", \"now\"))\n}\n", "\n  S <- tolower(S)\n  S <-\
    \ gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"i\"))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split=\"[?!.]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I love you!\") # returns\
    \ 1\nis_bored(\"I hate you!\") # returns 0\nis_bored(\"I love you? I hate you!\"\
    ) # returns 2\nis_bored(\"I love you! I hate you!\") # returns 2\nis_bored(\"\
    I love you! I hate you!?\") # returns 0\nis_bored(\"I love you! I hate you!?!\"\
    ) # returns 0\nis_bored(\"I love you! I hate you!?!?\") # returns 0\nis_bored(\"\
    I love you! I hate you!?!?!\") # returns 0\nis_bored(\"I love you! I hate you!?!?!?\"\
    ) # returns 0\nis_bored(\"I love you! I hate you!?!?!?!\") # returns 0\nis_bored(\"\
    I love you! I hate you!?!?!?!?\") # returns 0\nis_bored(\"I love you! I hate you!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I love you! I hate you!?!?!?!?!?\") # returns 0\nis_bored(\"\
    I love you! I hate you!?!?!?!?!?!\") # returns 0\nis_bored(\"I love you! I hate\
    \ you!?!?!?!?!?!?\") # returns 0\nis_bored(\"I love you! I hate you!?!?!?!?!?!?!\"\
    ) # returns 0\nis_bored(\"I love you! I hate you!?!?!?!?!?!?!?\") # returns 0\n\
    is_bored(\"I love you! I hate you!?!?!?!?!?!?!?!\") # returns 0\nis_bored(\"I\
    \ love you! I hate you!?!?!?!?!?!?!?!?\") # returns 0\nis_bored(\"I love you!\
    \ I h", "\n  S <- gsub(\"[?!.]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\nis_bored(c(\"\
    I\", \"am\", \"I\", \"bored\", \"!\"))", "\n  S <- unlist(strsplit(S, split =\
    \ \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split\
    \ = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like Ice cream.\")",
  "\n  S <- gsub(\"[.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- gsub(\"\
    [.?!]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- tolower(S)\n \
    \ S <- gsub(\"[.?!]\", \"\", S)\n  return(length(grep(\"^i\", S)))\n}\n", "\n\
    \  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n",
  "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  boredoms <- gregexpr(\"^I\", S)\n  sum(attr(boredoms, \"match.length\") > 0)\n\
    }\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n",
  "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n", "\n \
    \ S <- gsub(\"[?!.]\", \"\", S)\n  sum(grepl(\"^I\", S))\n}\nis_bored(\"I like\
    \ Ice Cream\")", "\n  S <- unlist(strsplit(S, split=\".?!\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(\"I like Ice Cream\")", "\n  S <- gsub(\"[.?!]\", \"\"\
    , S)\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split=\"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"\
    ))\n  sum(grepl(\"^I\", S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[.?!]\"\
    , \"\", S)\n  return(length(grep(\"^i\", S)))\n}\nis_bored(\"I like you!\")",
  "\n  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- unlist(strsplit(S, split=\"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n", "\n\
    \  S <- tolower(S)\n  S <- gsub(\"[.?!]\", \"\", S)\n  return(sum(S == \"i\"))\n\
    }\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n\
    }\n", "\n  S <- unlist(strsplit(S, split=\".?!\"))\n  sum(grepl(\"^I\", S))\n\
    }\n</cell>\n<cell>", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"\
    ^I\", S))\n}\nis_bored(\"I like Ice cream.\")", "\n  boredoms <- grep(\"^I\",\
    \ S, value = TRUE)\n  length(boredoms)\n}\n", "\n  boredoms <- grep(\"^I\", S)\n\
    \  length(boredoms)\n}\n", "\n  S <- unlist(strsplit(S, split = \" \"))\n  sum(grepl(\"\
    ^I\", S))\n}\n", "\n  S <- gsub(\"[\\\\.\\\\?!]\", \"\", S)\n  sum(grepl(\"^I\"\
    , S))\n}\n", "\n  S <- tolower(S)\n  S <- gsub(\"[?!.]\", \"\", S)\n  S <- gsub(\"\
    ^I\", \"\", S)\n  S <- gsub(\"I$\", \"\", S)\n  return(length(grep(\"^I\", S)))\n\
    }\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n\
    }\n", "\n  S <- unlist(strsplit(S, split = \"[.?!]\"))\n  sum(S == \"I\")\n}\n\
    is_bored(\"I hate you!\") # 2\nis_bored(\"I love you!\") # 1\nis_bored(\"I love\
    \ you!.\") # 1\nis_bored(\"I love you!?\") # 0\nis_bored(\"I love you!.!\") #\
    \ 1\nis_bored(\"I love you!?!\") # 0\nis_bored(\"I love you!.!?\") # 1\nis_bored(\"\
    I love you!.!?!\") # 1\nis_bored(\"I love you!.!?!.\") # 1\nis_bored(\"I love\
    \ you!.!?!.!\") # 1\nis_bored(\"I love you!.!?!.!?\") # 1\nis_bored(\"I love you!.!?!.!?!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.\") # 1\nis_bored(\"I love you!.!?!.!?!.!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.!?\") # 1\nis_bored(\"I love you!.!?!.!?!.!?!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.!?!.\") # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!?\") # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!?!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!?!.\") # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!?!.!\"\
    ) # 1\nis_bored(\"I love you!.!?!.!?!.!?!.!?!.", "\n  S <- unlist(strsplit(S,\
    \ split = \"[.?!]\"))\n  sum(grepl(\"^I\", S))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

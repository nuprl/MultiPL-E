name: HumanEval_155_even_odd_count
language: javascript
results:
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpu1ohkeie.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpu1ohkeie.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpze08eea5.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpze08eea5.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprspyejru.js:24:10)\\n    at Object.<anonymous> (/tmp/tmprspyejru.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpwb_p0ykg.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpwb_p0ykg.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var numStr = num.toString();\n    for(var i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }\n  \
    \      else{\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpmqhohxzg.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpmqhohxzg.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpb5nofjc_.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpb5nofjc_.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpiprjpsod.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpiprjpsod.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7mn0hcjh.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp7mn0hcjh.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbmf_2xl4.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpbmf_2xl4.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpyfev83dn.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpyfev83dn.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpy41fars1.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpy41fars1.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpw6wnevbb.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpw6wnevbb.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpicyiqhu2.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpicyiqhu2.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpus7fsjve.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpus7fsjve.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpst_zx_ll.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpst_zx_ll.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpppbqhjng.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpppbqhjng.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp59u9huxq.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp59u9huxq.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp9ldb2foh.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp9ldb2foh.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpf1_kypou.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpf1_kypou.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp1maf7wmr.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp1maf7wmr.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 == 0){\n            even++;\n        }else{\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprh1wky6v.js:24:10)\\n    at Object.<anonymous> (/tmp/tmprh1wky6v.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp139m_07s.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp139m_07s.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp_br9mdow.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp_br9mdow.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp33u21d41.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp33u21d41.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8xf8hclh.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp8xf8hclh.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp9eizeu8c.js:26:10)\\n    at Object.<anonymous> (/tmp/tmp9eizeu8c.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpmdbpn4oo.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpmdbpn4oo.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7fclyfl3.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp7fclyfl3.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpw61ipi5b.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpw61ipi5b.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptw_g897l.js:25:10)\\n    at Object.<anonymous> (/tmp/tmptw_g897l.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp3rq1g_al.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp3rq1g_al.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqvjkyfdg.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpqvjkyfdg.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2jua5a17.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp2jua5a17.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpc4tuu4pm.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpc4tuu4pm.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(parseInt(str[i]) % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp5onz6g8_.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp5onz6g8_.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString().split('');\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 == 0){\n            even++;\n        }else{\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7vocrdsz.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp7vocrdsz.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpxfjdn3ou.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpxfjdn3ou.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpyiquhnpn.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpyiquhnpn.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpt1ta3yp3.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpt1ta3yp3.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmppvz23r7c.js:25:10)\\n    at Object.<anonymous> (/tmp/tmppvz23r7c.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpsaaixuor.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpsaaixuor.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpjlujo2rr.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpjlujo2rr.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp4v_a_lhs.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp4v_a_lhs.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpg54xcorb.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpg54xcorb.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpu6p2xhbd.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpu6p2xhbd.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpezrebull.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpezrebull.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmppvl8dfsg.js:25:10)\\n    at Object.<anonymous> (/tmp/tmppvl8dfsg.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpxbabkwec.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpxbabkwec.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var numStr = num.toString();\n    for(var i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbnko7w8o.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpbnko7w8o.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpgkszmsn9.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpgkszmsn9.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcyc0tuuj.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpcyc0tuuj.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpknvf15ex.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpknvf15ex.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpwd7ou8s7.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpwd7ou8s7.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpo2djjzff.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpo2djjzff.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpyouppp_f.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpyouppp_f.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmphhp379yc.js:24:10)\\n    at Object.<anonymous> (/tmp/tmphhp379yc.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    num = num.toString().split('');\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp4gfq5tnm.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp4gfq5tnm.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmph9d63k5k.js:25:10)\\n    at Object.<anonymous> (/tmp/tmph9d63k5k.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpmvtpb2n2.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpmvtpb2n2.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptdya3cuy.js:24:10)\\n    at Object.<anonymous> (/tmp/tmptdya3cuy.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmphusw4w2k.js:26:10)\\n    at Object.<anonymous> (/tmp/tmphusw4w2k.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp_netty7i.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp_netty7i.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp3ultm23q.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp3ultm23q.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpsw775xou.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpsw775xou.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(parseInt(str[i]) % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpzz3_dwwo.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpzz3_dwwo.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmph31qs1fh.js:24:10)\\n    at Object.<anonymous> (/tmp/tmph31qs1fh.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = Math.abs(num);\n    while(num > 0){\n        if(num % 2 ==\
    \ 0){\n            even++;\n        }else{\n            odd++;\n        }\n  \
    \      num = Math.floor(num / 10);\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  0,\\n\
    \  0\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  0\\n]\\n    at test\
    \ (/tmp/tmpbbzkhul7.js:32:10)\\n    at Object.<anonymous> (/tmp/tmpbbzkhul7.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 0, 0\
    \ ],\\n  expected: [ 1, 0 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2ymedpc1.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp2ymedpc1.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcv7svybl.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpcv7svybl.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2tatw5mh.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp2tatw5mh.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp5mu6s0j_.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp5mu6s0j_.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpq_uyoy38.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpq_uyoy38.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2yq367im.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp2yq367im.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp40exkxq8.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp40exkxq8.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp85a_1y6r.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp85a_1y6r.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpfkjdo9gg.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpfkjdo9gg.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmply5s1j67.js:24:10)\\n    at Object.<anonymous> (/tmp/tmply5s1j67.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpf2bcrt4o.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpf2bcrt4o.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp0uy2e13s.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp0uy2e13s.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqe166ql8.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpqe166ql8.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptxbg35su.js:25:10)\\n    at Object.<anonymous> (/tmp/tmptxbg35su.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpzuh_qmu7.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpzuh_qmu7.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp92r46x9b.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp92r46x9b.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprl9r8v8v.js:25:10)\\n    at Object.<anonymous> (/tmp/tmprl9r8v8v.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpz7x0o_ao.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpz7x0o_ao.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprpygkgwb.js:25:10)\\n    at Object.<anonymous> (/tmp/tmprpygkgwb.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpy99n4umf.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpy99n4umf.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp0cmbhsoo.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp0cmbhsoo.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp0a1swqyk.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp0a1swqyk.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmps7klhpsc.js:26:10)\\n    at Object.<anonymous> (/tmp/tmps7klhpsc.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpfvojjrn0.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpfvojjrn0.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpvfemt4gd.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpvfemt4gd.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpyljmwpcg.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpyljmwpcg.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprk8dwlhi.js:25:10)\\n    at Object.<anonymous> (/tmp/tmprk8dwlhi.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbcp5d3jh.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpbcp5d3jh.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp74b7ewse.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp74b7ewse.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp9b3bhx9f.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp9b3bhx9f.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmphopiek1p.js:26:10)\\n    at Object.<anonymous> (/tmp/tmphopiek1p.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpuuot4nwv.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpuuot4nwv.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptq4gl6j_.js:26:10)\\n    at Object.<anonymous> (/tmp/tmptq4gl6j_.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp6yt6s5ok.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp6yt6s5ok.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpovzbnk8y.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpovzbnk8y.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpv9o3a_g1.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpv9o3a_g1.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpzkq15tj0.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpzkq15tj0.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprohuh_7c.js:24:10)\\n    at Object.<anonymous> (/tmp/tmprohuh_7c.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 == 0){\n            even++;\n        }else{\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp09wd9kne.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp09wd9kne.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    num = num.toString();\n    for(var i = 0; i < num.length; i++){\n  \
    \      if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcp5ya8q5.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpcp5ya8q5.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpja5cvkff.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpja5cvkff.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpaq5dvnlb.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpaq5dvnlb.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp4pzh0jqe.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp4pzh0jqe.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptf8jop9f.js:25:10)\\n    at Object.<anonymous> (/tmp/tmptf8jop9f.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let string = num.toString();\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(string[i] % 2 === 0){\n            even++;\n        }\n  \
    \      else{\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmps6m1t8bs.js:26:10)\\n    at Object.<anonymous> (/tmp/tmps6m1t8bs.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpm_a9kri1.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpm_a9kri1.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpvma76r3k.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpvma76r3k.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7oi2uce7.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp7oi2uce7.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpnwhnqbb_.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpnwhnqbb_.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var numStr = num.toString();\n    for(var i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }\n  \
    \      else{\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpk1s2jscb.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpk1s2jscb.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcz4nklct.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpcz4nklct.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpeww50pjp.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpeww50pjp.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(Number(str[i]) % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmplal052s_.js:24:10)\\n    at Object.<anonymous> (/tmp/tmplal052s_.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprclcmj0x.js:24:10)\\n    at Object.<anonymous> (/tmp/tmprclcmj0x.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqqh172ia.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpqqh172ia.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprw3v4ufi.js:24:10)\\n    at Object.<anonymous> (/tmp/tmprw3v4ufi.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpwr5rmsga.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpwr5rmsga.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp_5dxbm5b.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp_5dxbm5b.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2gkia9ib.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp2gkia9ib.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8px04d8_.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp8px04d8_.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpa_3p7ldn.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpa_3p7ldn.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpxl1sq8s8.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpxl1sq8s8.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpb8ortve9.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpb8ortve9.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmptray7a6p.js:24:10)\\n    at Object.<anonymous> (/tmp/tmptray7a6p.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp537mwjxv.js:26:10)\\n    at Object.<anonymous> (/tmp/tmp537mwjxv.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpjcc3wu_u.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpjcc3wu_u.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8zrmoqig.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp8zrmoqig.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpgram3a_y.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpgram3a_y.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmplu1bkwwv.js:25:10)\\n    at Object.<anonymous> (/tmp/tmplu1bkwwv.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpy3cbj3kj.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpy3cbj3kj.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpa9qe2h89.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpa9qe2h89.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp1n9qe8tg.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp1n9qe8tg.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpj8lovcn2.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpj8lovcn2.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpw72gj6gn.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpw72gj6gn.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpdhc16j36.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpdhc16j36.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2c8558wr.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp2c8558wr.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbn3tm8hu.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpbn3tm8hu.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpdfby1kj5.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpdfby1kj5.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(parseInt(str[i]) % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7qlrdpxp.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp7qlrdpxp.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    num = num.toString();\n    for(var i = 0; i < num.length; i++){\n  \
    \      if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpyqvrtyrj.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpyqvrtyrj.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var numString = num.toString();\n    for(var i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        }\n\
    \        else{\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpm3lda3ep.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpm3lda3ep.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp_8ywtgz4.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp_8ywtgz4.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpwbittup4.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpwbittup4.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqi8e9e5z.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpqi8e9e5z.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpq0ly88xj.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpq0ly88xj.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpys8awr_w.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpys8awr_w.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpk3zn_8i4.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpk3zn_8i4.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpl87ereu8.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpl87ereu8.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpnz2mvah2.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpnz2mvah2.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp2edlwop_.js:26:10)\\n    at Object.<anonymous> (/tmp/tmp2edlwop_.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8cwb9wsb.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp8cwb9wsb.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp6nx9m7l3.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp6nx9m7l3.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp69_kpzol.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp69_kpzol.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp62074kk3.js:26:10)\\n    at Object.<anonymous> (/tmp/tmp62074kk3.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcq2qpfbj.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpcq2qpfbj.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp_qatszev.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp_qatszev.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpec_7g230.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpec_7g230.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpc894jgxu.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpc894jgxu.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpcy94ay4r.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpcy94ay4r.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpumk0m7rh.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpumk0m7rh.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpjgykvyt1.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpjgykvyt1.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpwy_i69o2.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpwy_i69o2.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmph2d1iakb.js:25:10)\\n    at Object.<anonymous> (/tmp/tmph2d1iakb.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpb7d53nm_.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpb7d53nm_.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var num = num.toString();\n    for(var i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 == 0){\n            even++;\n        }else{\n         \
    \   odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbdksb28d.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpbdksb28d.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var arr = num.toString().split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpdprq21kb.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpdprq21kb.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpems45z14.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpems45z14.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpf2k371zi.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpf2k371zi.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp6m97i8du.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp6m97i8du.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmprvci6axk.js:26:10)\\n    at Object.<anonymous> (/tmp/tmprvci6axk.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpv4xfz3sl.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpv4xfz3sl.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpgsfgbv18.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpgsfgbv18.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpguahrusl.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpguahrusl.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpdk_4glh9.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpdk_4glh9.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp9dke9r8f.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp9dke9r8f.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp7kfoi8op.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp7kfoi8op.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numStr = num.toString();\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(numStr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8_fm1ln0.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp8_fm1ln0.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmph2f175yw.js:25:10)\\n    at Object.<anonymous> (/tmp/tmph2f175yw.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqjx3gvse.js:26:10)\\n    at Object.<anonymous> (/tmp/tmpqjx3gvse.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp86j371c_.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp86j371c_.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpbvlrf_bi.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpbvlrf_bi.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numString = num.toString();\n    for(let i = 0; i < numString.length;\
    \ i++){\n        if(numString[i] % 2 === 0){\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmppcfj8474.js:25:10)\\n    at Object.<anonymous> (/tmp/tmppcfj8474.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpygms1bur.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpygms1bur.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmplglxxfe4.js:25:10)\\n    at Object.<anonymous> (/tmp/tmplglxxfe4.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp46i1p94k.js:25:10)\\n    at Object.<anonymous> (/tmp/tmp46i1p94k.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpa91dk5tu.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpa91dk5tu.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpzs24hi49.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpzs24hi49.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var str = num.toString();\n    for(var i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp1kwovko4.js:26:10)\\n    at Object.<anonymous> (/tmp/tmp1kwovko4.js:35:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmphqbuefu1.js:24:10)\\n    at Object.<anonymous> (/tmp/tmphqbuefu1.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let numArr = num.toString().split('');\n    for(let i = 0; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmp8x9ulnfe.js:24:10)\\n    at Object.<anonymous> (/tmp/tmp8x9ulnfe.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpb1yno6qe.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpb1yno6qe.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let str = num.toString();\n    for(let i = 0; i < str.length; i++){\n\
    \        if(str[i] % 2 === 0){\n            even++;\n        }else{\n        \
    \    odd++;\n        }\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpqeh_r02q.js:25:10)\\n    at Object.<anonymous> (/tmp/tmpqeh_r02q.js:34:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let arr = num.toString().split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n    }\n    return [even, odd];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n[\\n  1,\\n\
    \  2\\n]\\n\\nshould loosely deep-equal\\n\\n[\\n  1,\\n  1\\n]\\n    at test\
    \ (/tmp/tmpswpsbxb5.js:24:10)\\n    at Object.<anonymous> (/tmp/tmpswpsbxb5.js:33:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: [ 1, 2\
    \ ],\\n  expected: [ 1, 1 ],\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\\
    n\""
  exit_code: 1
  status: AssertionError

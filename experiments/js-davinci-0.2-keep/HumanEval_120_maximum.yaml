name: HumanEval_120_maximum
language: javascript
prompt: "//Given an array arr of integers and a positive integer k, return a sorted\
  \ list \n// of length k with the maximum k numbers in arr.\n// Example 1:\n// Input:\
  \ arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n// Input: arr\
  \ = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input: arr = [-3, 2,\
  \ 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length of the array\
  \ will be in the range of [1, 1000].\n// 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum(arr, k){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = maximum;\n  assert.deepEqual(candidate([-3, -4, 5], 3),[-4, -3, 5]);\n  assert.deepEqual(candidate([4,\
  \ -4, 4], 2),[4, 4]);\n  assert.deepEqual(candidate([-3, 2, 1, 2, -1, -2, 1], 1),[2]);\n\
  \  assert.deepEqual(candidate([123, -123, 20, 0, 1, 2, -3], 3),[2, 20, 123]);\n\
  \  assert.deepEqual(candidate([-123, 20, 0, 1, 2, -3], 4),[0, 1, 2, 20]);\n  assert.deepEqual(candidate([5,\
  \ 15, 0, 3, -13, -8, 0], 7),[-13, -8, 0, 0, 3, 5, 15]);\n  assert.deepEqual(candidate([-1,\
  \ 0, 2, 5, 3, -10], 2),[3, 5]);\n  assert.deepEqual(candidate([1, 0, 5, -7], 1),[5]);\n\
  \  assert.deepEqual(candidate([4, -4], 2),[-4, 4]);\n  assert.deepEqual(candidate([-10,\
  \ 10], 2),[-10, 10]);\n  assert.deepEqual(candidate([1, 2, 3, -23, 243, -400, 0],\
  \ 0),[]);\n}\n\ntest();"
completions: ["    let heap = new Heap(arr, k);\n    return heap.getMax();\n}\n\n\
    class Heap{\n    constructor(arr, k){\n        this.arr = arr;\n        this.k\
    \ = k;\n        this.heap = [];\n        this.buildHeap();\n    }\n\n    buildHeap(){\n\
    \        for(let i = 0; i < this.k; i++){\n            this.heap.push(this.arr[i]);\n\
    \        }\n        this.heapify();\n        for(let i = this.k; i < this.arr.length;\
    \ i++){\n            if(this.arr[i] > this.heap[0]){\n                this.heap[0]\
    \ = this.arr[i];\n                this.heapify();\n            }\n        }\n\
    \    }\n\n    heapify(){\n        for(let i = Math.floor(this.heap.length / 2);\
    \ i >= 0; i--){\n            this.siftDown(i);\n        }\n    }\n\n    siftDown(i){\n\
    \        while(i < this.heap.length){\n            let left = 2 * i + 1;\n   \
    \         let right = 2 * i + 2;\n            let smallest = i;\n            if(left\
    \ < this.heap.length && this.heap[left] < this.heap[smallest]){\n            \
    \    smallest = left;\n            }\n            if(right < this.heap.length\
    \ && this.heap[right] < this.heap[smallest]){\n                smallest = right;\n\
    \            }\n            if(smallest !== i){\n                let temp = this.heap[i];\n\
    \                this.heap[i] = this.heap[smallest];\n                this.heap[smallest]\
    \ = temp;\n                i = smallest;\n            } else {\n             \
    \   break;\n            }\n        }\n    }\n\n    getMax(){\n        return this.heap;\n\
    \    }\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    for(let i = k; i < arr.length; i++){\n        let j = 0;\n       \
    \ while(j < k && arr[i] > max[j]){\n            j++;\n        }\n        if(j\
    \ < k){\n            max.splice(j, 0, arr[i]);\n            max.pop();\n     \
    \   }\n    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let max = arr[0];\n        let index = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    // sort the array\n    // return the first k elements\n    return arr.sort((a,b)\
    \ => b-a).slice(0,k);\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let maxIndex = -1;\n    for(let i = 0; i < k; i++){\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n\
    \        maxIndex = -1;\n    }\n    return result;\n}", "    if(arr.length ===\
    \ 0 || k === 0) return [];\n    if(arr.length === k) return arr;\n    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ > 0 && result[result.length - 1] < arr[i] && result.length + arr.length - i\
    \ > k){\n            result.pop();\n        }\n        if(result.length < k){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n",
  "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    max.sort((a, b) => a - b);\n    for(let i = k; i < arr.length; i++){\n\
    \        if(arr[i] > max[0]){\n            max[0] = arr[i];\n            max.sort((a,\
    \ b) => a - b);\n        }\n    }\n    return max;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n        let maxIndex\
    \ = -1;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                maxIndex = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k;\
    \ i++){\n        let maxNum = -Infinity;\n        let maxIndex = -1;\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n   \
    \             maxNum = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return max;\n}\n", "    let result = [];\n    let max = -Infinity;\n    let\
    \ index = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr[index] = -Infinity;\n        max = -Infinity;\n    }\n    return result;\n\
    }", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max =\
    \ arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  index = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = arr[0];\n    let maxIndex\
    \ = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n\
    \            max = arr[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = -Infinity;\n        let maxIndex = 0;\n        for(let j = 0; j\
    \ < arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let index = -1;\n        for(let j = 0; j < arr.length; j++){\n          \
    \  if(arr[j] > max){\n                max = arr[j];\n                index = j;\n\
    \            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    let max = arr[0];\n\
    \    let maxIndex = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n        maxIndex = 0;\n\
    \    }\n    return result;\n}", "    // create a max heap\n    let heap = new\
    \ MaxHeap();\n    // add all elements to the heap\n    for(let i = 0; i < arr.length;\
    \ i++){\n        heap.insert(arr[i]);\n    }\n    // create an array to hold the\
    \ result\n    let result = [];\n    // remove the top k elements from the heap\n\
    \    for(let i = 0; i < k; i++){\n        result.push(heap.remove());\n    }\n\
    \    // return the result\n    return result;\n}\n", "    if(k === 0) return [];\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ && result[result.length - 1] < arr[i] && result.length + arr.length - i > k){\n\
    \            result.pop();\n        }\n        if(result.length < k){\n      \
    \      result.push(arr[i]);\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n\
    \        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n      \
    \      if(arr[j] > max){\n                max = arr[j];\n                index\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = Number.MIN_SAFE_INTEGER;\n        let maxIndex = -1;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n\
    \        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length; i++){\n\
    \        let min = Math.min(...max);\n        if(arr[i] > min){\n            max[max.indexOf(min)]\
    \ = arr[i];\n        }\n    }\n    return max.sort((a, b) => a - b);\n}\n", " \
    \   let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    max.sort((a, b) => a - b);\n    for(let i = k; i < arr.length; i++){\n\
    \        let j = 0;\n        while(j < k && arr[i] < max[j]){\n            j++;\n\
    \        }\n        if(j < k){\n            max.splice(j, 0, arr[i]);\n      \
    \      max.pop();\n        }\n    }\n    return max;\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ index = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                index = j;\n       \
    \     }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\n", "    if(k > arr.length) return arr;\n    let\
    \ result = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n \
    \       let index = 0;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                index\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0;\
    \ i < k; i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        let min = Math.min(...max);\n        if(arr[i] > min){\n    \
    \        let index = max.indexOf(min);\n            max[index] = arr[i];\n   \
    \     }\n    }\n    return max.sort((a, b) => a - b);\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ index = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                index = j;\n       \
    \     }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                maxIndex = j;\n            }\n        }\n  \
    \      result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr.splice(index, 1);\n    }\n    return result;\n}", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let index = -1;\n        for(let j = 0; j < arr.length; j++){\n          \
    \  if(arr[j] > max){\n                max = arr[j];\n                index = j;\n\
    \            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = -Infinity;\n    let maxIndex\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n\
    \            max = arr[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j <\
    \ arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let sorted = arr.sort((a,b) => a-b);\n\
    \    return sorted.slice(sorted.length-k, sorted.length);\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let maxVal = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxVal){\n\
    \                maxVal = arr[j];\n                maxIndex = j;\n           \
    \ }\n        }\n        max.push(maxVal);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0; i < k;\
    \ i++){\n        let max = arr[0];\n        let index = 0;\n        for(let j\
    \ = 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let index = 0;\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n      \
    \          max = arr[j];\n                index = j;\n            }\n        }\n\
    \        result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = -Infinity;\n        let maxIndex = -1;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    if(arr.length === 0) return [];\n\
    \    if(arr.length === 1) return arr;\n    let result = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n      \
    \          max = arr[j];\n                maxIndex = j;\n            }\n     \
    \   }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n  \
    \  return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n   \
    \ let index = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j <\
    \ arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[index] = -Infinity;\n        max = -Infinity;\n    }\n    return\
    \ result;\n}", "    let result = arr.sort((a, b) => b - a);\n    return result.slice(0,\
    \ k);\n}\n", "    let max = arr[0];\n    let maxIndex = 0;\n    for(let i = 1;\
    \ i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n\
    \            maxIndex = i;\n        }\n    }\n    return maxIndex;\n}", "    let\
    \ max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = arr[0];\n \
    \       let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n    \
    \        if(arr[j] > maxNum){\n                maxNum = arr[j];\n            \
    \    maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n    \
    \    arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let max = [];\n\
    \    for(let i = 0; i < k; i++){\n        let maxNum = -Infinity;\n        let\
    \ maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > maxNum){\n                maxNum = arr[j];\n                maxIndex = j;\n\
    \            }\n        }\n        max.push(maxNum);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return max;\n}\n", "    let result = [];\n    let max = arr[0];\n\
    \    for(let i = 0; i < k; i++){\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(arr.indexOf(max), 1);\n\
    \        max = arr[0];\n    }\n    return result;\n}", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let index\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                index = j;\n         \
    \   }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n \
    \   }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k;\
    \ i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        let j = 0;\n        while(j < k && arr[i] > max[j]){\n      \
    \      j++;\n        }\n        if(j < k){\n            max.splice(j, 0, arr[i]);\n\
    \            max.pop();\n        }\n    }\n    return max;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let maxIndex = 0;\n    for(let i = 0; i < k; i++){\n        max = -Infinity;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr[maxIndex] = -Infinity;\n  \
    \  }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i <\
    \ k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                maxIndex = j;\n            }\n        }\n  \
    \      result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr.splice(index, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let index = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j\
    \ < arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[index] = -Infinity;\n        max = -Infinity;\n    }\n    return\
    \ result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n       \
    \ let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n          \
    \  if(arr[j] > arr[maxIndex]){\n                maxIndex = j;\n            }\n\
    \        }\n        max.push(arr[maxIndex]);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0; i < k;\
    \ i++){\n        let max = arr[0];\n        let maxIndex = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                maxIndex = j;\n            }\n        }\n  \
    \      result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n       \
    \ max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length; i++){\n       \
    \ max.sort((a, b) => a - b);\n        if(arr[i] > max[0]){\n            max[0]\
    \ = arr[i];\n        }\n    }\n    return max.sort((a, b) => a - b);\n}", "  \
    \  let heap = new Heap(arr, k);\n    return heap.getMax();\n}\n\nclass Heap{\n\
    \    constructor(arr, k){\n        this.arr = arr;\n        this.k = k;\n    \
    \    this.buildHeap();\n    }\n\n    buildHeap(){\n        for(let i = Math.floor(this.arr.length\
    \ / 2); i >= 0; i--){\n            this.heapify(i);\n        }\n    }\n\n    heapify(i){\n\
    \        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        let largest\
    \ = i;\n        if(left < this.arr.length && this.arr[left] > this.arr[largest]){\n\
    \            largest = left;\n        }\n        if(right < this.arr.length &&\
    \ this.arr[right] > this.arr[largest]){\n            largest = right;\n      \
    \  }\n        if(largest !== i){\n            this.swap(i, largest);\n       \
    \     this.heapify(largest);\n        }\n    }\n\n    swap(i, j){\n        let\
    \ temp = this.arr[i];\n        this.arr[i] = this.arr[j];\n        this.arr[j]\
    \ = temp;\n    }\n\n    getMax(){\n        let result = [];\n        for(let i\
    \ = 0; i < this.k; i++){\n            result.push(this.arr[0]);\n            this.arr[0]\
    \ = this.arr[this.arr.length - 1];\n            this.arr.pop();\n            this.heapify(0);\n\
    \        }\n        return result;\n    }\n}\n", "    let max = [];\n    for(let\
    \ i = 0; i < k; i++){\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > arr[maxIndex]){\n                maxIndex = j;\n\
    \            }\n        }\n        max.push(arr[maxIndex]);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return max;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < k; i++){\n        var max = arr[0];\n        var index = 0;\n        for(var\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum =\
    \ -1001;\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > maxNum){\n                maxNum = arr[j];\n        \
    \        maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ index = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                index = j;\n       \
    \     }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}", "    let max = [];\n    for(let i = 0; i < k;\
    \ i++){\n        let maxNum = -Infinity;\n        let maxIndex = -1;\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n   \
    \             maxNum = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return max;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = -Infinity;\n        let maxIndex = -1;\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return result;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    for(let i = k; i < arr.length; i++){\n        for(let j = 0; j < k;\
    \ j++){\n            if(arr[i] > max[j]){\n                max.splice(j, 0, arr[i]);\n\
    \                max.pop();\n                break;\n            }\n        }\n\
    \    }\n    return max;\n}\n", "    let max = arr[0];\n    let maxIndex = 0;\n\
    \    let result = [];\n    for(let i = 0; i < k; i++){\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n        max = arr[0];\n        maxIndex = 0;\n\
    \    }\n    return result;\n}\n", "    let max = arr[0];\n    let maxIndex = 0;\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n       \
    \     max = arr[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max =\
    \ arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  index = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let maxNum = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n\
    \                maxNum = arr[j];\n                maxIndex = j;\n           \
    \ }\n        }\n        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return max;\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let maxIndex = -1;\n    for(let i = 0; i < k; i++){\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n\
    \        maxIndex = -1;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                maxIndex = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return result;\n}\n", "    let max = arr[0];\n    let index = 0;\n\
    \    for(let i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n       \
    \     max = arr[i];\n            index = i;\n        }\n    }\n    return index;\n\
    }", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum =\
    \ arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > maxNum){\n                maxNum = arr[j];\n        \
    \        maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = arr[0];\n        let index = 0;\n        for(let j = 0; j <\
    \ arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n    }\n    return result;\n}", "    if(k === 0)\
    \ return [];\n    if(k === arr.length) return arr;\n    let max = arr[0];\n  \
    \  let maxIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ > max){\n            max = arr[i];\n            maxIndex = i;\n        }\n \
    \   }\n    let result = [max];\n    let left = maximum(arr.slice(0, maxIndex),\
    \ k - 1);\n    let right = maximum(arr.slice(maxIndex + 1), k - 1);\n    return\
    \ result.concat(left).concat(right);\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let max = arr[0];\n    let index = 0;\n    for(let\
    \ i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n\
    \            index = i;\n        }\n    }\n    return [max, index];\n}", "   \
    \ let result = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n\
    \        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n      \
    \      if(arr[j] > max){\n                max = arr[j];\n                index\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = -Infinity;\n        let maxIndex = -1;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n\
    \        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length; i++){\n\
    \        max.sort((a, b) => a - b);\n        if(arr[i] > max[0]){\n          \
    \  max[0] = arr[i];\n        }\n    }\n    return max.sort((a, b) => a - b);\n\
    }\n", "    let max = arr[0];\n    let maxIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] > max){\n            max = arr[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    return maxIndex;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n        let maxIndex\
    \ = -1;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                maxIndex = j;\n      \
    \      }\n        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < k; i++){\n        let max = -Infinity;\n        let index = -1;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = -Infinity;\n        let maxIndex = -1;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let index = 0;\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n      \
    \          max = arr[j];\n                index = j;\n            }\n        }\n\
    \        result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  index = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }else{\n            let min = Math.min(...result);\n            if(arr[i]\
    \ > min){\n                result.splice(result.indexOf(min), 1, arr[i]);\n  \
    \          }\n        }\n    }\n    return result;\n}", "    let max = -Infinity;\n\
    \    let maxIndex = 0;\n    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        max = -Infinity;\n        for(let j = 0; j < arr.length; j++){\n    \
    \        if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr[maxIndex]\
    \ = -Infinity;\n    }\n    return result;\n}\n", "    let result = [];\n    let\
    \ max = -Infinity;\n    let maxIndex = -1;\n    for(let i = 0; i < k; i++){\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr[maxIndex] = -Infinity;\n  \
    \      max = -Infinity;\n        maxIndex = -1;\n    }\n    return result;\n}\n",
  "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }\n        else{\n        \
    \    let min = result[0];\n            let minIndex = 0;\n            for(let\
    \ j = 1; j < result.length; j++){\n                if(result[j] < min){\n    \
    \                min = result[j];\n                    minIndex = j;\n       \
    \         }\n            }\n            if(arr[i] > min){\n                result[minIndex]\
    \ = arr[i];\n            }\n        }\n    }\n    return result;\n}", "    let\
    \ result = [];\n    let max = -Infinity;\n    let maxIndex = 0;\n    for(let i\
    \ = 0; i < k; i++){\n        for(let j = 0; j < arr.length; j++){\n          \
    \  if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr[maxIndex]\
    \ = -Infinity;\n        max = -Infinity;\n    }\n    return result;\n}\n", " \
    \   let max = [];\n    let i = 0;\n    while(i < k){\n        let maxNum = arr[0];\n\
    \        let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n   \
    \         if(arr[j] > maxNum){\n                maxNum = arr[j];\n           \
    \     maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n   \
    \     arr.splice(maxIndex, 1);\n        i++;\n    }\n    return max;\n}\n", " \
    \   let result = [];\n    let max = -Infinity;\n    let maxIndex = -1;\n    for(let\
    \ i = 0; i < k; i++){\n        for(let j = 0; j < arr.length; j++){\n        \
    \    if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr[maxIndex]\
    \ = -Infinity;\n        max = -Infinity;\n        maxIndex = -1;\n    }\n    return\
    \ result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n       \
    \ let maxNum = -Infinity;\n        let maxIndex = -1;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > maxNum){\n                maxNum\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ arr.splice(maxIndex, 1);\n        max.push(maxNum);\n    }\n    return max;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n      \
    \  while(result.length > 0 && result[result.length - 1] < arr[i] && result.length\
    \ + arr.length - i > k){\n            result.pop();\n        }\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum\
    \ = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > maxNum){\n                maxNum = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ > 0 && arr[i] > result[result.length - 1] && result.length + arr.length - i\
    \ > k){\n            result.pop();\n        }\n        if(result.length < k){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n",
  "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }\n        else{\n        \
    \    let min = result[0];\n            let minIndex = 0;\n            for(let\
    \ j = 1; j < result.length; j++){\n                if(result[j] < min){\n    \
    \                min = result[j];\n                    minIndex = j;\n       \
    \         }\n            }\n            if(arr[i] > min){\n                result[minIndex]\
    \ = arr[i];\n            }\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ > 0 && result[result.length - 1] < arr[i] && result.length + arr.length - i\
    \ > k){\n            result.pop();\n        }\n        if(result.length < k){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n",
  "    if(arr.length === 0 || k === 0) return [];\n    if(arr.length === k) return\
    \ arr;\n    let res = [];\n    for(let i = 0; i < arr.length; i++){\n        while(res.length\
    \ > 0 && res[res.length - 1] < arr[i] && res.length + arr.length - i > k){\n \
    \           res.pop();\n        }\n        if(res.length < k){\n            res.push(arr[i]);\n\
    \        }\n    }\n    return res;\n}\n", "    let max = [];\n    for(let i =\
    \ 0; i < k; i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        let min = Math.min(...max);\n        if(arr[i] > min){\n    \
    \        max.splice(max.indexOf(min), 1, arr[i]);\n        }\n    }\n    return\
    \ max.sort((a, b) => a - b);\n}\n", "    let max = arr[0];\n    let maxIndex =\
    \ 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n  \
    \          max = arr[i];\n            maxIndex = i;\n        }\n    }\n    return\
    \ maxIndex;\n}", "    let max = [];\n    for(let i = 0; i < k; i++){\n       \
    \ let maxNum = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j <\
    \ arr.length; j++){\n            if(arr[j] > maxNum){\n                maxNum\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ max.push(maxNum);\n        arr.splice(maxIndex, 1);\n    }\n    return max;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n      \
    \  if(result.length < k){\n            result.push(arr[i]);\n        }else{\n\
    \            let min = Math.min(...result);\n            if(arr[i] > min){\n \
    \               result.splice(result.indexOf(min), 1, arr[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        while(result.length > 0 && result[result.length\
    \ - 1] < arr[i] && result.length + arr.length - i > k){\n            result.pop();\n\
    \        }\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i\
    \ = 0; i < k; i++){\n        let maxNum = arr[0];\n        let maxIndex = 0;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n\
    \                maxNum = arr[j];\n                maxIndex = j;\n           \
    \ }\n        }\n        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return max;\n}", "    //return arr.sort((a,b)=>b-a).slice(0,k);\n\
    \    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ > 0 && result[result.length-1] < arr[i] && result.length + arr.length - i >\
    \ k){\n            result.pop();\n        }\n        if(result.length < k){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result;\n}", " \
    \   let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }else{\n            let min\
    \ = Math.min(...result);\n            if(arr[i] > min){\n                let index\
    \ = result.indexOf(min);\n                result[index] = arr[i];\n          \
    \  }\n        }\n    }\n    return result;\n}\n", "    let max = [];\n    for(let\
    \ i = 0; i < k; i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i\
    \ < arr.length; i++){\n        for(let j = 0; j < k; j++){\n            if(arr[i]\
    \ > max[j]){\n                max.splice(j, 0, arr[i]);\n                max.pop();\n\
    \                break;\n            }\n        }\n    }\n    return max;\n}",
  "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }else{\n            let min\
    \ = Math.min(...result);\n            if(arr[i] > min){\n                result.splice(result.indexOf(min),\
    \ 1, arr[i]);\n            }\n        }\n    }\n    return result;\n}\n", "  \
    \  let max = arr[0];\n    let maxIndex = 0;\n    for(let i = 1; i < arr.length;\
    \ i++){\n        if(arr[i] > max){\n            max = arr[i];\n            maxIndex\
    \ = i;\n        }\n    }\n    let result = [max];\n    let count = 1;\n    while(count\
    \ < k){\n        let newMax = arr[0];\n        let newMaxIndex = 0;\n        for(let\
    \ i = 1; i < arr.length; i++){\n            if(arr[i] > newMax && i !== maxIndex){\n\
    \                newMax = arr[i];\n                newMaxIndex = i;\n        \
    \    }\n        }\n        result.push(newMax);\n        max = newMax;\n     \
    \   maxIndex = newMaxIndex;\n        count++;\n    }\n    return result;\n}\n",
  "    let sorted = arr.sort((a,b) => a - b);\n    return sorted.slice(sorted.length\
    \ - k);\n}\n", "    let heap = new Heap(arr, (a, b) => a > b);\n    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        result.push(heap.pop());\n \
    \   }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i <\
    \ arr.length; i++){\n        while(result.length > 0 && result[result.length -\
    \ 1] < arr[i] && result.length + arr.length - i > k){\n            result.pop();\n\
    \        }\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i\
    \ = 0; i < k; i++){\n        let maxNum = -Infinity;\n        let maxIndex = -1;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n\
    \                maxNum = arr[j];\n                maxIndex = j;\n           \
    \ }\n        }\n        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n\
    \    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let max = arr[i];\n        let maxIndex = i;\n        for(let\
    \ j = i + 1; j < arr.length; j++){\n            if(arr[j] > max){\n          \
    \      max = arr[j];\n                maxIndex = j;\n            }\n        }\n\
    \        if(maxIndex !== i){\n            let temp = arr[i];\n            arr[i]\
    \ = arr[maxIndex];\n            arr[maxIndex] = temp;\n        }\n        if(i\
    \ >= arr.length - k){\n            result.push(arr[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = arr[0];\n        let index = 0;\n        for(let j = 0; j <\
    \ arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(index, 1);\n    }\n    return result;\n}\n", "    let heap\
    \ = new Heap();\n    for(let i = 0; i < arr.length; i++){\n        heap.insert(arr[i]);\n\
    \    }\n    let result = [];\n    for(let i = 0; i < k; i++){\n        result.push(heap.pop());\n\
    \    }\n    return result;\n}\n\nclass Heap{\n    constructor(){\n        this.heap\
    \ = [];\n    }\n    insert(val){\n        this.heap.push(val);\n        this.heapifyUp();\n\
    \    }\n    pop(){\n        let result = this.heap[0];\n        this.heap[0] =\
    \ this.heap[this.heap.length - 1];\n        this.heap.pop();\n        this.heapifyDown();\n\
    \        return result;\n    }\n    heapifyUp(){\n        let index = this.heap.length\
    \ - 1;\n        while(index > 0){\n            let parentIndex = Math.floor((index\
    \ - 1) / 2);\n            if(this.heap[index] > this.heap[parentIndex]){\n   \
    \             let temp = this.heap[index];\n                this.heap[index] =\
    \ this.heap[parentIndex];\n                this.heap[parentIndex] = temp;\n  \
    \              index = parentIndex;\n            }\n            else{\n      \
    \          break;\n            }\n        }\n    }\n    heapifyDown(){\n     \
    \   let index = 0;\n        while(index < this.heap.length){\n            let\
    \ leftChildIndex = 2 * index + 1;\n            let rightChildIndex = 2 * index\
    \ + 2;\n            let leftChild, rightChild;\n            let swap = null;\n\
    \            if(leftChildIndex < this.heap.length){\n                leftChild\
    \ = this.heap[leftChildIndex];\n                if(leftChild > this.heap[index]){\n\
    \                    swap = leftChildIndex;\n                }\n            }\n\
    \            if(rightChildIndex < this.heap.length){\n                rightChild\
    \ = this.heap[rightChildIndex];\n                if(\n                    (swap\
    \ === null && rightChild > this.heap[index])", "    let result = [];\n    let\
    \ i = 0;\n    while(i < k){\n        let max = arr[0];\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n            }\n        }\n        result.push(max);\n        arr.splice(arr.indexOf(max),\
    \ 1);\n        i++;\n    }\n    return result;\n}\n", "    let sorted = arr.sort((a,b)\
    \ => a-b);\n    return sorted.slice(sorted.length-k, sorted.length);\n}\n", " \
    \   let result = [];\n    for(let i = 0; i < k; i++){\n        result.push(arr[i]);\n\
    \    }\n    result.sort((a, b) => b - a);\n    for(let i = k; i < arr.length;\
    \ i++){\n        if(arr[i] > result[k - 1]){\n            result[k - 1] = arr[i];\n\
    \            result.sort((a, b) => b - a);\n        }\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let i = 0;\n    while(i < k){\n        let max\
    \ = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr[j] > max){\n                max = arr[j];\n              \
    \  index = j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n        i++;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n        let index\
    \ = -1;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                index = j;\n         \
    \   }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n \
    \   }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i <\
    \ k; i++){\n        let max = -Infinity;\n        let index = -1;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    if(arr.length === 0 || k === 0) return [];\n    if(arr.length === k)\
    \ return arr;\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        while(result.length > 0 && result[result.length - 1] < arr[i] && result.length\
    \ + arr.length - i > k){\n            result.pop();\n        }\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }\n    }\n    return result;\n\
    }", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max =\
    \ -Infinity;\n        let index = -1;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr.splice(index, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0;\
    \ i < k; i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        for(let j = 0; j < k; j++){\n            if(arr[i] > max[j]){\n\
    \                max.splice(j, 0, arr[i]);\n                max.pop();\n     \
    \           break;\n            }\n        }\n    }\n    return max;\n}", "  \
    \  let max = [];\n    let max_index = [];\n    for(let i = 0; i < k; i++){\n \
    \       max.push(arr[i]);\n        max_index.push(i);\n    }\n    for(let i =\
    \ k; i < arr.length; i++){\n        let min = Math.min(...max);\n        let min_index\
    \ = max_index[max.indexOf(min)];\n        if(arr[i] > min){\n            max[max_index.indexOf(min_index)]\
    \ = arr[i];\n            max_index[max_index.indexOf(min_index)] = i;\n      \
    \  }\n    }\n    return max;\n}\n", "    let max = [];\n    for(let i = 0; i <\
    \ k; i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        let min = Math.min(...max);\n        if(arr[i] > min){\n    \
    \        max[max.indexOf(min)] = arr[i];\n        }\n    }\n    return max.sort((a,\
    \ b) => a - b);\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = arr[0];\n        let maxIndex = 0;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let max\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = arr[0];\n     \
    \   let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n        \
    \    if(arr[j] > maxNum){\n                maxNum = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        max.push(maxNum);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let max = arr[0];\n        let index = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum\
    \ = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > maxNum){\n                maxNum = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let\
    \ maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n\
    \        let maxNum = arr[0];\n        let maxIndex = 0;\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > maxNum){\n               \
    \ maxNum = arr[j];\n                maxIndex = j;\n            }\n        }\n\
    \        max.push(maxNum);\n        arr.splice(maxIndex, 1);\n    }\n    return\
    \ max;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n       \
    \ let max = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let max\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = -Infinity;\n  \
    \      let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n    \
    \        if(arr[j] > maxNum){\n                maxNum = arr[j];\n            \
    \    maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n    \
    \    arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let heap = new\
    \ Heap(arr, k);\n    return heap.getMax();\n}\n\nclass Heap{\n    constructor(arr,\
    \ k){\n        this.arr = arr;\n        this.k = k;\n        this.heapify();\n\
    \    }\n\n    heapify(){\n        for(let i = Math.floor(this.arr.length / 2);\
    \ i >= 0; i--){\n            this.siftDown(i);\n        }\n    }\n\n    siftDown(i){\n\
    \        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        let largest\
    \ = i;\n        if(left < this.arr.length && this.arr[left] > this.arr[largest]){\n\
    \            largest = left;\n        }\n        if(right < this.arr.length &&\
    \ this.arr[right] > this.arr[largest]){\n            largest = right;\n      \
    \  }\n        if(largest !== i){\n            [this.arr[i], this.arr[largest]]\
    \ = [this.arr[largest], this.arr[i]];\n            this.siftDown(largest);\n \
    \       }\n    }\n\n    getMax(){\n        let max = [];\n        for(let i =\
    \ 0; i < this.k; i++){\n            max.push(this.arr[0]);\n            this.arr[0]\
    \ = this.arr[this.arr.length - 1];\n            this.arr.pop();\n            this.siftDown(0);\n\
    \        }\n        return max;\n    }\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < k; i++){\n        let max = arr[0];\n        let index = 0;\n   \
    \     for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n  \
    \              max = arr[j];\n                index = j;\n            }\n    \
    \    }\n        result.push(max);\n        arr.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = arr[0];\n        let index = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr.splice(index, 1);\n    }\n    return result;\n}", "    let max = arr[0];\n\
    \    let maxIndex = 0;\n    for(let i = 1; i < arr.length; i++){\n        if(arr[i]\
    \ > max){\n            max = arr[i];\n            maxIndex = i;\n        }\n \
    \   }\n    return maxIndex;\n}", "    let result = [];\n    for(let i = 0; i <\
    \ k; i++){\n        let max = arr[0];\n        let index = 0;\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n              \
    \  max = arr[j];\n                index = j;\n            }\n        }\n     \
    \   result.push(max);\n        arr.splice(index, 1);\n    }\n    return result;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    for(let i = k; i < arr.length; i++){\n        let j = 0;\n       \
    \ while(j < k && arr[i] < max[j]){\n            j++;\n        }\n        if(j\
    \ < k){\n            max.splice(j, 0, arr[i]);\n            max.pop();\n     \
    \   }\n    }\n    return max;\n}\n", "    let result = [];\n    for(let i = 0;\
    \ i < k; i++){\n        let max = -Infinity;\n        let maxIndex = 0;\n    \
    \    for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n   \
    \             max = arr[j];\n                maxIndex = j;\n            }\n  \
    \      }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let heap = new Heap();\n    for(let i = 0; i <\
    \ arr.length; i++){\n        heap.insert(arr[i]);\n    }\n    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        result.push(heap.remove());\n    }\n\
    \    return result;\n}\n\nclass Heap{\n    constructor(){\n        this.heap =\
    \ [];\n    }\n    insert(value){\n        this.heap.push(value);\n        this.bubbleUp();\n\
    \    }\n    bubbleUp(){\n        let index = this.heap.length - 1;\n        while(index\
    \ > 0){\n            let element = this.heap[index];\n            let parentIndex\
    \ = Math.floor((index - 1) / 2);\n            let parent = this.heap[parentIndex];\n\
    \            if(parent >= element) break;\n            this.heap[index] = parent;\n\
    \            this.heap[parentIndex] = element;\n            index = parentIndex;\n\
    \        }\n    }\n    remove(){\n        let result = this.heap[0];\n       \
    \ let end = this.heap.pop();\n        if(this.heap.length > 0){\n            this.heap[0]\
    \ = end;\n            this.sinkDown();\n        }\n        return result;\n  \
    \  }\n    sinkDown(){\n        let index = 0;\n        let length = this.heap.length;\n\
    \        let element = this.heap[0];\n        while(true){\n            let leftChildIndex\
    \ = 2 * index + 1;\n            let rightChildIndex = 2 * index + 2;\n       \
    \     let leftChild, rightChild;\n            let swap = null;\n            if(leftChildIndex\
    \ < length){\n                leftChild = this.heap[leftChildIndex];\n       \
    \         if(leftChild > element){\n                    swap = leftChildIndex;\n\
    \                }\n            }\n            if(rightChildIndex < length){\n\
    \                rightChild = this.heap[rightChildIndex];\n                if((swap\
    \ === null && rightChild > element) || (swap !== null && rightChild > leftChild)){\n\
    \                    swap = rightChildIndex", "    let result = [];\n    for(let\
    \ i = 0; i < k; i++){\n        let max = arr[0];\n        let maxIndex = 0;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n \
    \   let maxIndex = 0;\n    for(let i = 0; i < k; i++){\n        max = -Infinity;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr[maxIndex] = -Infinity;\n  \
    \  }\n    return result;\n}\n", "    let max = [];\n    for(let i = 0; i < k;\
    \ i++){\n        max.push(arr[i]);\n    }\n    for(let i = k; i < arr.length;\
    \ i++){\n        let j = 0;\n        while(j < k && arr[i] < max[j]){\n      \
    \      j++;\n        }\n        if(j < k){\n            max.splice(j, 0, arr[i]);\n\
    \            max.pop();\n        }\n    }\n    return max;\n}\n\narr = [-3, -4,\
    \ 5];\nk = 3;", "    let max = arr[0];\n    let maxIndex = 0;\n    for(let i =\
    \ 1; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n\
    \            maxIndex = i;\n        }\n    }\n    arr.splice(maxIndex, 1);\n \
    \   if(k > 1){\n        return [max].concat(maximum(arr, k - 1));\n    }\n   \
    \ return [max];\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n\
    \        let max = -Infinity;\n        let maxIndex = -1;\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n    return result;\n\
    }\n", "    let max = [];\n    let min = [];\n    let max_index = 0;\n    let min_index\
    \ = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(max.length < k){\n\
    \            max.push(arr[i]);\n            max_index++;\n        }\n        else{\n\
    \            if(arr[i] > max[0]){\n                max[0] = arr[i];\n        \
    \        max_index = 0;\n            }\n        }\n        if(min.length < k){\n\
    \            min.push(arr[i]);\n            min_index++;\n        }\n        else{\n\
    \            if(arr[i] < min[0]){\n                min[0] = arr[i];\n        \
    \        min_index = 0;\n            }\n        }\n        if(max_index > 0){\n\
    \            let temp = max[max_index];\n            max[max_index] = max[max_index\
    \ - 1];\n            max[max_index - 1] = temp;\n            max_index--;\n  \
    \      }\n        if(min_index > 0){\n            let temp = min[min_index];\n\
    \            min[min_index] = min[min_index - 1];\n            min[min_index -\
    \ 1] = temp;\n            min_index--;\n        }\n    }\n    return max;\n}\n",
  "    let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length\
    \ < k){\n            result.push(arr[i]);\n        }else{\n            let min\
    \ = result[0];\n            let minIndex = 0;\n            for(let j = 1; j <\
    \ result.length; j++){\n                if(result[j] < min){\n               \
    \     min = result[j];\n                    minIndex = j;\n                }\n\
    \            }\n            if(arr[i] > min){\n                result[minIndex]\
    \ = arr[i];\n            }\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = [];\n    let max = -Infinity;\n    let maxIndex = 0;\n    for(let i\
    \ = 0; i < k; i++){\n        max = -Infinity;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[maxIndex] = -Infinity;\n    }\n    return result;\n}\n", "    let\
    \ max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = arr[0];\n \
    \       let maxIndex = 0;\n        for(let j = 0; j < arr.length; j++){\n    \
    \        if(arr[j] > maxNum){\n                maxNum = arr[j];\n            \
    \    maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n    \
    \    arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n       \
    \ let index = -1;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                index = j;\n       \
    \     }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let maxIndex = -1;\n    for(let i = 0; i < k; i++){\n        for(let j =\
    \ 0; j < arr.length; j++){\n            if(arr[j] > max){\n                max\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ result.push(max);\n        arr[maxIndex] = -Infinity;\n        max = -Infinity;\n\
    \        maxIndex = -1;\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < k; i++){\n        let max = arr[0];\n        let index\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ max){\n                max = arr[j];\n                index = j;\n         \
    \   }\n        }\n        result.push(max);\n        arr.splice(index, 1);\n \
    \   }\n    return result;\n}\n", "    let result = [];\n    let max = -Infinity;\n\
    \    let index = 0;\n    for(let i = 0; i < k; i++){\n        for(let j = 0; j\
    \ < arr.length; j++){\n            if(arr[j] > max){\n                max = arr[j];\n\
    \                index = j;\n            }\n        }\n        result.push(max);\n\
    \        arr[index] = -Infinity;\n        max = -Infinity;\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n    \
    \    let max = -Infinity;\n        let maxIndex = -1;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > max){\n                max =\
    \ arr[j];\n                maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < k; i++){\n        let max = -Infinity;\n        let maxIndex = -1;\n\
    \        for(let j = 0; j < arr.length; j++){\n            if(arr[j] > max){\n\
    \                max = arr[j];\n                maxIndex = j;\n            }\n\
    \        }\n        result.push(max);\n        arr.splice(maxIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let max = arr[0];\n    let maxIndex = 0;\n   \
    \ for(let i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n          \
    \  max = arr[i];\n            maxIndex = i;\n        }\n    }\n    return maxIndex;\n\
    }", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max =\
    \ -Infinity;\n        let maxIndex = -1;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let heap\
    \ = new Heap(arr, k);\n    heap.buildHeap();\n    for(let i = k; i < arr.length;\
    \ i++){\n        if(arr[i] > heap.peek()){\n            heap.replace(arr[i]);\n\
    \        }\n    }\n    return heap.heap;\n}\n\nclass Heap{\n    constructor(arr,\
    \ k){\n        this.heap = arr.slice(0, k);\n        this.k = k;\n    }\n\n  \
    \  buildHeap(){\n        for(let i = Math.floor(this.k / 2); i >= 0; i--){\n \
    \           this.heapify(i);\n        }\n    }\n\n    heapify(i){\n        let\
    \ left = 2 * i + 1;\n        let right = 2 * i + 2;\n        let largest = i;\n\
    \        if(left < this.k && this.heap[left] > this.heap[largest]){\n        \
    \    largest = left;\n        }\n        if(right < this.k && this.heap[right]\
    \ > this.heap[largest]){\n            largest = right;\n        }\n        if(largest\
    \ !== i){\n            [this.heap[i], this.heap[largest]] = [this.heap[largest],\
    \ this.heap[i]];\n            this.heapify(largest);\n        }\n    }\n\n   \
    \ peek(){\n        return this.heap[0];\n    }\n\n    replace(val){\n        this.heap[0]\
    \ = val;\n        this.heapify(0);\n    }\n}\n", "    let heap = new Heap(arr,\
    \ (a, b) => a < b);\n    let result = [];\n    for(let i = 0; i < k; i++){\n \
    \       result.push(heap.remove());\n    }\n    return result;\n}\n", "    let\
    \ max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = -Infinity;\n\
    \        let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n  \
    \          if(arr[j] > maxNum){\n                maxNum = arr[j];\n          \
    \      maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n  \
    \      arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let res =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        while(res.length && res[res.length\
    \ - 1] < arr[i] && res.length + arr.length - i > k){\n            res.pop();\n\
    \        }\n        res.push(arr[i]);\n    }\n    return res.slice(0, k);\n}\n",
  "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    for(let i = k; i < arr.length; i++){\n        let min = Math.min(...max);\n\
    \        if(arr[i] > min){\n            max.splice(max.indexOf(min), 1, arr[i]);\n\
    \        }\n    }\n    return max.sort((a, b) => a - b);\n}\n", "    let max =\
    \ [];\n    let min = [];\n    for(let i = 0; i < arr.length; i++){\n        if(max.length\
    \ < k){\n            max.push(arr[i]);\n        }\n        else{\n           \
    \ if(arr[i] > max[0]){\n                max.shift();\n                max.push(arr[i]);\n\
    \            }\n        }\n    }\n    for(let i = 0; i < max.length; i++){\n \
    \       min.push(max[i]);\n    }\n    min.sort(function(a, b){return a - b});\n\
    \    return min;\n}", "    let max = [];\n    for(let i = 0; i < k; i++){\n  \
    \      max.push(arr[i]);\n    }\n    max.sort((a, b) => b - a);\n    for(let i\
    \ = k; i < arr.length; i++){\n        if(arr[i] > max[k - 1]){\n            max[k\
    \ - 1] = arr[i];\n            max.sort((a, b) => b - a);\n        }\n    }\n \
    \   return max;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n \
    \       let maxNum = -1000;\n        let maxIndex = -1;\n        for(let j = 0;\
    \ j < arr.length; j++){\n            if(arr[j] > maxNum){\n                maxNum\
    \ = arr[j];\n                maxIndex = j;\n            }\n        }\n       \
    \ max.push(maxNum);\n        arr.splice(maxIndex, 1);\n    }\n    return max;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let max_idx\
    \ = 0;\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j] >\
    \ arr[max_idx]){\n                max_idx = j;\n            }\n        }\n   \
    \     max.push(arr[max_idx]);\n        arr.splice(max_idx, 1);\n    }\n    return\
    \ max;\n}\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    for(let i = k; i < arr.length; i++){\n        let min = Math.min(...max);\n\
    \        if(arr[i] > min){\n            max.splice(max.indexOf(min), 1, arr[i]);\n\
    \        }\n    }\n    return max.sort((a, b) => a - b);\n}\n", "    let max =\
    \ [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n    }\n   \
    \ max.sort((a, b) => a - b);\n    for(let i = k; i < arr.length; i++){\n     \
    \   if(arr[i] > max[0]){\n            max[0] = arr[i];\n            max.sort((a,\
    \ b) => a - b);\n        }\n    }\n    return max;\n}\n", "    let heap = new\
    \ Heap(arr, k);\n    return heap.getMax();\n}\n\nclass Heap{\n    constructor(arr,\
    \ k){\n        this.arr = arr;\n        this.k = k;\n        this.heapify();\n\
    \    }\n\n    heapify(){\n        for(let i = Math.floor(this.arr.length / 2);\
    \ i >= 0; i--){\n            this.siftDown(i);\n        }\n    }\n\n    siftDown(i){\n\
    \        while(i < this.arr.length){\n            let left = 2 * i + 1;\n    \
    \        let right = 2 * i + 2;\n            let largest = i;\n            if(left\
    \ < this.arr.length && this.arr[left] > this.arr[largest]){\n                largest\
    \ = left;\n            }\n            if(right < this.arr.length && this.arr[right]\
    \ > this.arr[largest]){\n                largest = right;\n            }\n   \
    \         if(largest === i){\n                break;\n            }\n        \
    \    this.swap(i, largest);\n            i = largest;\n        }\n    }\n\n  \
    \  swap(i, j){\n        let temp = this.arr[i];\n        this.arr[i] = this.arr[j];\n\
    \        this.arr[j] = temp;\n    }\n\n    getMax(){\n        let max = [];\n\
    \        for(let i = 0; i < this.k; i++){\n            max.push(this.arr[0]);\n\
    \            this.arr[0] = this.arr[this.arr.length - 1];\n            this.arr.pop();\n\
    \            this.siftDown(0);\n        }\n        return max;\n    }\n}\n", " \
    \   let max = [];\n    for(let i = 0; i < k; i++){\n        max.push(arr[i]);\n\
    \    }\n    max.sort((a, b) => a - b);\n    for(let i = k; i < arr.length; i++){\n\
    \        if(arr[i] > max[0]){\n            max[0] = arr[i];\n            max.sort((a,\
    \ b) => a - b);\n        }\n    }\n    return max;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        let j = result.length - 1;\n\
    \        while(j >= 0 && result[j] < arr[i]){\n            j--;\n        }\n \
    \       if(j < k - 1){\n            result.splice(j + 1, 0, arr[i]);\n       \
    \     if(result.length > k){\n                result.pop();\n            }\n \
    \       }\n    }\n    return result;\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }else{\n            let min = result[0];\n            let minIndex =\
    \ 0;\n            for(let j = 1; j < result.length; j++){\n                if(result[j]\
    \ < min){\n                    min = result[j];\n                    minIndex\
    \ = j;\n                }\n            }\n            if(arr[i] > min){\n    \
    \            result[minIndex] = arr[i];\n            }\n        }\n    }\n   \
    \ return result;\n}\n", "    let result = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(result.length < k){\n            result.push(arr[i]);\n  \
    \      }else{\n            let min = Math.min(...result);\n            if(arr[i]\
    \ > min){\n                result.splice(result.indexOf(min), 1, arr[i]);\n  \
    \          }\n        }\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(result.length < k){\n  \
    \          result.push(arr[i]);\n        }else{\n            let min = Math.min(...result);\n\
    \            if(arr[i] > min){\n                result.splice(result.indexOf(min),\
    \ 1, arr[i]);\n            }\n        }\n    }\n    return result;\n}\n", "  \
    \  let result = [];\n    for(let i = 0; i < arr.length; i++){\n        while(result.length\
    \ > 0 && result[result.length - 1] < arr[i] && result.length + arr.length - i\
    \ > k){\n            result.pop();\n        }\n        if(result.length < k){\n\
    \            result.push(arr[i]);\n        }\n    }\n    return result;\n}\n",
  "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum = -Infinity;\n\
    \        let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n  \
    \          if(arr[j] > maxNum){\n                maxNum = arr[j];\n          \
    \      maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n  \
    \      arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n", "    let max =\
    \ [];\n    let min = [];\n    for(let i = 0; i < arr.length; i++){\n        if(max.length\
    \ < k){\n            max.push(arr[i]);\n        }\n        else{\n           \
    \ if(arr[i] > max[0]){\n                max.shift();\n                max.push(arr[i]);\n\
    \            }\n        }\n    }\n    max.sort((a, b) => a - b);\n    return max;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < k; i++){\n        let max\
    \ = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          maxIndex = j;\n            }\n        }\n        result.push(max);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < k; i++){\n        let max = -Infinity;\n     \
    \   let maxIndex = -1;\n        for(let j = 0; j < arr.length; j++){\n       \
    \     if(arr[j] > max){\n                max = arr[j];\n                maxIndex\
    \ = j;\n            }\n        }\n        result.push(max);\n        arr.splice(maxIndex,\
    \ 1);\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < arr.length; i++){\n        if(result.length === 0){\n            result.push(arr[i]);\n\
    \        }else{\n            let j = result.length - 1;\n            while(j >=\
    \ 0 && result[j] < arr[i]){\n                j--;\n            }\n           \
    \ result.splice(j + 1, 0, arr[i]);\n            if(result.length > k){\n     \
    \           result.pop();\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let max = arr[0];\n    let index = 0;\n    for(let\
    \ i = 0; i < k; i++){\n        for(let j = 0; j < arr.length; j++){\n        \
    \    if(arr[j] > max){\n                max = arr[j];\n                index =\
    \ j;\n            }\n        }\n        result.push(max);\n        arr.splice(index,\
    \ 1);\n        max = arr[0];\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        let num = arr[i];\n\
    \        if(result.length < k){\n            result.push(num);\n        }else{\n\
    \            let min = Math.min(...result);\n            if(num > min){\n    \
    \            let index = result.indexOf(min);\n                result[index] =\
    \ num;\n            }\n        }\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < arr.length; i++){\n        if(result.length <\
    \ k){\n            result.push(arr[i]);\n        }else{\n            let min =\
    \ result[0];\n            let minIndex = 0;\n            for(let j = 1; j < result.length;\
    \ j++){\n                if(result[j] < min){\n                    min = result[j];\n\
    \                    minIndex = j;\n                }\n            }\n       \
    \     if(arr[i] > min){\n                result[minIndex] = arr[i];\n        \
    \    }\n        }\n    }\n    return result;\n}", "    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(result.length < k){\n            result.push(arr[i]);\n\
    \        }else{\n            let min = Math.min(...result);\n            if(arr[i]\
    \ > min){\n                result.splice(result.indexOf(min), 1, arr[i]);\n  \
    \          }\n        }\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(result.length < k){\n  \
    \          result.push(arr[i]);\n        }else{\n            let min = Math.min(...result);\n\
    \            if(arr[i] > min){\n                result[result.indexOf(min)] =\
    \ arr[i];\n            }\n        }\n    }\n    return result;\n}", "    let result\
    \ = [];\n    let max = -Infinity;\n    let maxIndex = 0;\n    for(let i = 0; i\
    \ < k; i++){\n        for(let j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ > max){\n                max = arr[j];\n                maxIndex = j;\n    \
    \        }\n        }\n        result.push(max);\n        arr[maxIndex] = -Infinity;\n\
    \        max = -Infinity;\n    }\n    return result;\n}\n", "    let result =\
    \ [];\n    let max = 0;\n    let index = 0;\n    for(let i = 0; i < k; i++){\n\
    \        max = arr[i];\n        index = i;\n        for(let j = i; j < arr.length;\
    \ j++){\n            if(arr[j] > max){\n                max = arr[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(max);\n \
    \       arr[index] = arr[i];\n        arr[i] = max;\n    }\n    return result;\n\
    }\n", "    let max = [];\n    for(let i = 0; i < k; i++){\n        let maxNum\
    \ = arr[0];\n        let maxIndex = 0;\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] > maxNum){\n                maxNum = arr[j];\n\
    \                maxIndex = j;\n            }\n        }\n        max.push(maxNum);\n\
    \        arr.splice(maxIndex, 1);\n    }\n    return max;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

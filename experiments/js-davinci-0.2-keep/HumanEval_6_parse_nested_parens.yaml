name: HumanEval_6_parse_nested_parens
language: javascript
prompt: "//Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n// >>> parse_nested_parens('(()()) ((())) () ((())()())')\n\
  // [2, 3, 1, 3]\nfunction parse_nested_parens(paren_string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = parse_nested_parens;\n  assert.deepEqual(candidate(\"(()()) ((())) () ((())()())\"\
  ),[2, 3, 1, 3]);\n  assert.deepEqual(candidate(\"() (()) ((())) (((())))\"),[1,\
  \ 2, 3, 4]);\n  assert.deepEqual(candidate(\"(()(())((())))\"),[4]);\n}\n\ntest();"
completions: ["    var paren_array = paren_string.split(' ');\n    var paren_count\
    \ = [];\n    for (var i = 0; i < paren_array.length; i++){\n        var paren_count_temp\
    \ = 0;\n        for (var j = 0; j < paren_array[i].length; j++){\n           \
    \ if (paren_array[i][j] == '('){\n                paren_count_temp++;\n      \
    \      }\n        }\n        paren_count.push(paren_count_temp);\n    }\n    return\
    \ paren_count;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var\
    \ paren_count = [];\n    for(var i = 0; i < paren_array.length; i++){\n      \
    \  var paren_count_temp = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                paren_count_temp++;\n\
    \            }\n        }\n        paren_count.push(paren_count_temp);\n    }\n\
    \    return paren_count;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var paren_count = [];\n    for (var i = 0; i < paren_array.length; i++){\n\
    \        var paren_level = 0;\n        var paren_stack = [];\n        for (var\
    \ j = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j] ==\
    \ '('){\n                paren_stack.push(paren_array[i][j]);\n              \
    \  paren_level = Math.max(paren_level, paren_stack.length);\n            }\n \
    \           else if (paren_array[i][j] == ')'){\n                paren_stack.pop();\n\
    \            }\n        }\n        paren_count.push(paren_level);\n    }\n   \
    \ return paren_count;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var max_depth = 0;\n    var depth = 0;\n    var max_depth_array = [];\n \
    \   for (var i = 0; i < paren_array.length; i++){\n        for (var j = 0; j <\
    \ paren_array[i].length; j++){\n            if (paren_array[i][j] == '('){\n \
    \               depth++;\n            }\n            else if (paren_array[i][j]\
    \ == ')'){\n                depth--;\n            }\n            if (depth > max_depth){\n\
    \                max_depth = depth;\n            }\n        }\n        max_depth_array.push(max_depth);\n\
    \        max_depth = 0;\n        depth = 0;\n    }\n    return max_depth_array;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren_count = 0;\n\
    \        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(max_nested_parens(paren_array[i]));\n    }\n    return\
    \ result;\n}\n", "    let paren_array = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_array.length; i++){\n        let paren =\
    \ paren_array[i];\n        let count = 0;\n        let max = 0;\n        for(let\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n        \
    \        count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] === ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == \"(\"){\n                paren_count++;\n                if(paren_count >\
    \ max_paren_count){\n                    max_paren_count = paren_count;\n    \
    \            }\n            }\n            else if(paren_array[i][j] == \")\"\
    ){\n                paren_count--;\n            }\n        }\n        result.push(max_paren_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var max_depth = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var depth = 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                depth++;\n\
    \                if(depth > max){\n                    max = depth;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == \")\"){\n\
    \                depth--;\n            }\n        }\n        max_depth.push(max);\n\
    \    }\n    return max_depth;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] === ')'){\n \
    \               count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var max_depth = 0;\n    var depth = 0;\n    var max_depth_array = [];\n\
    \    for (var i = 0; i < paren_array.length; i++){\n        for (var j = 0; j\
    \ < paren_array[i].length; j++){\n            if (paren_array[i][j] == '('){\n\
    \                depth++;\n            }\n            else if (paren_array[i][j]\
    \ == ')'){\n                depth--;\n            }\n            if (depth > max_depth){\n\
    \                max_depth = depth;\n            }\n        }\n        max_depth_array.push(max_depth);\n\
    \        max_depth = 0;\n        depth = 0;\n    }\n    return max_depth_array;\n\
    }\n", "    let paren_array = paren_string.split(' ');\n    let max_depth = 0;\n\
    \    let depth = 0;\n    let max_depth_array = [];\n    for (let i = 0; i < paren_array.length;\
    \ i++){\n        for (let j = 0; j < paren_array[i].length; j++){\n          \
    \  if (paren_array[i][j] === '('){\n                depth += 1;\n            }\n\
    \            else if (paren_array[i][j] === ')'){\n                depth -= 1;\n\
    \            }\n            if (depth > max_depth){\n                max_depth\
    \ = depth;\n            }\n        }\n        max_depth_array.push(max_depth);\n\
    \        max_depth = 0;\n        depth = 0;\n    }\n    return max_depth_array;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_parens(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] === ')'){\n \
    \               count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_group = paren_array[i];\n        var count = 0;\n        var\
    \ max = 0;\n        for(var j = 0; j < paren_group.length; j++){\n           \
    \ if(paren_group[j] == \"(\"){\n                count++;\n                if(count\
    \ > max){\n                    max = count;\n                }\n            }\n\
    \            else if(paren_group[j] == \")\"){\n                count--;\n   \
    \         }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(\" \");\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_single_paren(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max_count\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max_count){\n\
    \                    max_count = count;\n                }\n            }\n  \
    \          else if(paren[j] == ')'){\n                count--;\n            }\n\
    \        }\n        result.push(max_count);\n    }\n    return result;\n}\n",
  "    var parens = paren_string.split(' ');\n    var result = [];\n    for(var i\
    \ = 0; i < parens.length; i++){\n        var paren = parens[i];\n        var count\
    \ = 0;\n        var max = 0;\n        for(var j = 0; j < paren.length; j++){\n\
    \            if(paren[j] === '('){\n                count++;\n               \
    \ if(count > max){\n                    max = count;\n                }\n    \
    \        }\n            else if(paren[j] === ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let arr = paren_string.split(' ');\n    let result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0;\n        let max = 0;\n\
    \        for(let j = 0; j < arr[i].length; j++){\n            if(arr[i][j] ===\
    \ '('){\n                count++;\n                if(count > max){\n        \
    \            max = count;\n                }\n            }\n            if(arr[i][j]\
    \ === ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == \")\"){\n                paren_count--;\n            }\n        }\n     \
    \   result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] == \"(\"){\n       \
    \         count++;\n                if(count > max){\n                    max\
    \ = count;\n                }\n            }else if(paren[j] == \")\"){\n    \
    \            count--;\n            }\n        }\n        result.push(max);\n \
    \   }\n    return result;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var max_nesting = [];\n    for (var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_count = 0;\n        for (var j\
    \ = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if (paren_count > max_count){\n\
    \                    max_count = paren_count;\n                }\n           \
    \ }\n            else if (paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        max_nesting.push(max_count);\n    }\n    return\
    \ max_nesting;\n}\n", "\tvar result = [];\n\tvar paren_array = paren_string.split('\
    \ ');\n\tfor(var i = 0; i < paren_array.length; i++){\n\t\tvar paren_count = 0;\n\
    \t\tvar max_paren_count = 0;\n\t\tfor(var j = 0; j < paren_array[i].length; j++){\n\
    \t\t\tif(paren_array[i][j] == '('){\n\t\t\t\tparen_count++;\n\t\t\t\tif(paren_count\
    \ > max_paren_count){\n\t\t\t\t\tmax_paren_count = paren_count;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t\telse if(paren_array[i][j] == ')'){\n\t\t\t\tparen_count--;\n\t\t\t\
    }\n\t\t}\n\t\tresult.push(max_paren_count);\n\t}\n\treturn result;\n}\n", "  \
    \  let paren_arr = paren_string.split(' ');\n    let result = [];\n    for(let\
    \ i = 0; i < paren_arr.length; i++){\n        let paren = paren_arr[i];\n    \
    \    let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren.length;\
    \ j++){\n            if(paren[j] === '('){\n                count++;\n       \
    \         if(count > max){\n                    max = count;\n               \
    \ }\n            }\n            if(paren[j] === ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let paren_array = paren_string.split(' ');\n\
    \    for(let i = 0; i < paren_array.length; i++){\n        let paren = paren_array[i];\n\
    \        let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren.length;\
    \ j++){\n            if(paren[j] === '('){\n                count++;\n       \
    \         if(count > max){\n                    max = count;\n               \
    \ }\n            }\n            else if(paren[j] === ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(\" \");\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ \"(\"){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == \")\"){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] === ')'){\n \
    \               count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "  let paren_array = paren_string.split(' ');\n\
    \  let result = [];\n  for(let i = 0; i < paren_array.length; i++){\n    let paren_str\
    \ = paren_array[i];\n    let max_nesting = 0;\n    let current_nesting = 0;\n\
    \    for(let j = 0; j < paren_str.length; j++){\n      if(paren_str[j] === '('){\n\
    \        current_nesting++;\n        if(current_nesting > max_nesting){\n    \
    \      max_nesting = current_nesting;\n        }\n      }\n      else if(paren_str[j]\
    \ === ')'){\n        current_nesting--;\n      }\n    }\n    result.push(max_nesting);\n\
    \  }\n  return result;\n}\n", "    let paren_array = paren_string.split(' ');\n\
    \    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n    \
    \    let count = 0;\n        let max = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] === ')'){\n \
    \               count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var paren_array =\
    \ paren_string.split(' ');\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(parse_nested_parens_helper(paren_array[i]));\n    }\n   \
    \ return result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var\
    \ result = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_single_paren(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(get_nested_parens(paren_array[i]));\n    }\n    return result;\n\
    }\n", "    let parens = paren_string.split(' ');\n    let result = [];\n    for(let\
    \ i = 0; i < parens.length; i++){\n        let count = 0;\n        let max = 0;\n\
    \        for(let j = 0; j < parens[i].length; j++){\n            if(parens[i][j]\
    \ === '('){\n                count++;\n                if(count > max){\n    \
    \                max = count;\n                }\n            } else {\n     \
    \           count--;\n            }\n        }\n        result.push(max);\n  \
    \  }\n    return result;\n}\n", "    var paren_array = paren_string.split(\" \"\
    );\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n \
    \       var paren_group = paren_array[i];\n        var count = 0;\n        var\
    \ max = 0;\n        for(var j = 0; j < paren_group.length; j++){\n           \
    \ if(paren_group[j] == \"(\"){\n                count++;\n                if(count\
    \ > max){\n                    max = count;\n                }\n            }\n\
    \            else if(paren_group[j] == \")\"){\n                count--;\n   \
    \         }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren_group = paren_array[i];\n\
    \        var count = 0;\n        var max_count = 0;\n        for(var j = 0; j\
    \ < paren_group.length; j++){\n            if(paren_group[j] == '('){\n      \
    \          count++;\n                if(count > max_count){\n                \
    \    max_count = count;\n                }\n            }\n            else if(paren_group[j]\
    \ == ')'){\n                count--;\n            }\n        }\n        result.push(max_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_group\
    \ = paren_array[i];\n        var count = 0;\n        var max_count = 0;\n    \
    \    for(var j = 0; j < paren_group.length; j++){\n            if(paren_group[j]\
    \ == '('){\n                count++;\n                if(count > max_count){\n\
    \                    max_count = count;\n                }\n            }\n  \
    \          else if(paren_group[j] == ')'){\n                count--;\n       \
    \     }\n        }\n        result.push(max_count);\n    }\n    return result;\n\
    }\n", "    var paren_groups = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_groups.length; i++){\n        var paren_group =\
    \ paren_groups[i];\n        var max_depth = 0;\n        var depth = 0;\n     \
    \   for(var j = 0; j < paren_group.length; j++){\n            if(paren_group[j]\
    \ == '('){\n                depth++;\n                if(depth > max_depth){\n\
    \                    max_depth = depth;\n                }\n            }\n  \
    \          else if(paren_group[j] == ')'){\n                depth--;\n       \
    \     }\n        }\n        result.push(max_depth);\n    }\n    return result;\n\
    }\n", "  var paren_array = paren_string.split(\" \");\n  var result = [];\n  for(var\
    \ i = 0; i < paren_array.length; i++){\n    var paren_group = paren_array[i];\n\
    \    var count = 0;\n    var max_count = 0;\n    for(var j = 0; j < paren_group.length;\
    \ j++){\n      if(paren_group[j] == \"(\"){\n        count++;\n        if(count\
    \ > max_count){\n          max_count = count;\n        }\n      }\n      else\
    \ if(paren_group[j] == \")\"){\n        count--;\n      }\n    }\n    result.push(max_count);\n\
    \  }\n  return result;\n}\n", "    let paren_array = paren_string.split(' ');\n\
    \    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n    \
    \    let paren = paren_array[i];\n        let count = 0;\n        let max = 0;\n\
    \        for(let j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n\
    \                count++;\n                if(count > max){\n                \
    \    max = count;\n                }\n            }\n            else if(paren[j]\
    \ === ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var max_nested_parens\
    \ = [];\n    for (var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for (var j = 0; j < paren_array[i].length;\
    \ j++){\n            if (paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if (paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if (paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ max_nested_parens.push(max_paren_count);\n    }\n    return max_nested_parens;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren_group = paren_array[i];\n\
    \        var max_nesting = 0;\n        var current_nesting = 0;\n        for(var\
    \ j = 0; j < paren_group.length; j++){\n            if(paren_group[j] == '('){\n\
    \                current_nesting++;\n                if(current_nesting > max_nesting){\n\
    \                    max_nesting = current_nesting;\n                }\n     \
    \       }\n            else if(paren_group[j] == ')'){\n                current_nesting--;\n\
    \            }\n        }\n        result.push(max_nesting);\n    }\n    return\
    \ result;\n}\n", "    let paren_array = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_array.length; i++){\n        let paren =\
    \ paren_array[i];\n        let count = 0;\n        let max = 0;\n        for(let\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n        \
    \        count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] === ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_group = paren_array[i];\n        var count = 0;\n        var\
    \ max = 0;\n        for(var j = 0; j < paren_group.length; j++){\n           \
    \ if(paren_group[j] == '('){\n                count++;\n                if(count\
    \ > max){\n                    max = count;\n                }\n            }else\
    \ if(paren_group[j] == ')'){\n                count--;\n            }\n      \
    \  }\n        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == \"(\"){\n                paren_count++;\n                if(paren_count >\
    \ max_paren_count){\n                    max_paren_count = paren_count;\n    \
    \            }\n            }\n            else if(paren_array[i][j] == \")\"\
    ){\n                paren_count--;\n            }\n        }\n        result.push(max_paren_count);\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let paren = paren_array[i];\n        let count = 0;\n        let max\
    \ = 0;\n        for(let j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ === '('){\n                count++;\n                if(count > max){\n    \
    \                max = count;\n                }\n            }else if(paren[j]\
    \ === ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let paren_groups\
    \ = paren_string.split(' ');\n    for(let i = 0; i < paren_groups.length; i++){\n\
    \        let paren_group = paren_groups[i];\n        let max_depth = 0;\n    \
    \    let current_depth = 0;\n        for(let j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] === '('){\n                current_depth++;\n \
    \               if(current_depth > max_depth){\n                    max_depth\
    \ = current_depth;\n                }\n            }\n            else if(paren_group[j]\
    \ === ')'){\n                current_depth--;\n            }\n        }\n    \
    \    result.push(max_depth);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var max_nesting = 0;\n \
    \       var current_nesting = 0;\n        for(var j = 0; j < paren.length; j++){\n\
    \            if(paren[j] == '('){\n                current_nesting++;\n      \
    \          if(current_nesting > max_nesting){\n                    max_nesting\
    \ = current_nesting;\n                }\n            }\n            else if(paren[j]\
    \ == ')'){\n                current_nesting--;\n            }\n        }\n   \
    \     result.push(max_nesting);\n    }\n    return result;\n}\n", "    var parens\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < parens.length;\
    \ i++){\n        var paren = parens[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ === '('){\n                count++;\n                if(count > max){\n    \
    \                max = count;\n                }\n            }\n            else\
    \ if(paren[j] === ')'){\n                count--;\n            }\n        }\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }else if(paren[j]\
    \ == ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let paren_groups\
    \ = paren_string.split(' ');\n    for(let i = 0; i < paren_groups.length; i++){\n\
    \        let paren_group = paren_groups[i];\n        let max_depth = 0;\n    \
    \    let current_depth = 0;\n        for(let j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] === '('){\n                current_depth++;\n \
    \               if(current_depth > max_depth){\n                    max_depth\
    \ = current_depth;\n                }\n            }\n            else if(paren_group[j]\
    \ === ')'){\n                current_depth--;\n            }\n        }\n    \
    \    result.push(max_depth);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == \"(\"){\n                paren_count++;\n                if(paren_count >\
    \ max_paren_count){\n                    max_paren_count = paren_count;\n    \
    \            }\n            }\n            else if(paren_array[i][j] == \")\"\
    ){\n                paren_count--;\n            }\n        }\n        result.push(max_paren_count);\n\
    \    }\n    return result;\n}\n", "  let paren_array = paren_string.split(' ');\n\
    \  let result = [];\n  for(let i = 0; i < paren_array.length; i++){\n    let count\
    \ = 0;\n    let max = 0;\n    for(let j = 0; j < paren_array[i].length; j++){\n\
    \      if(paren_array[i][j] === '('){\n        count++;\n        if(count > max){\n\
    \          max = count;\n        }\n      }\n      if(paren_array[i][j] === ')'){\n\
    \        count--;\n      }\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "    var paren_groups = paren_string.split(' ');\n    var paren_levels =\
    \ [];\n    for (var i = 0; i < paren_groups.length; i++){\n        var paren_group\
    \ = paren_groups[i];\n        var paren_level = 0;\n        var max_level = 0;\n\
    \        for (var j = 0; j < paren_group.length; j++){\n            if (paren_group[j]\
    \ == '('){\n                paren_level++;\n                if (paren_level >\
    \ max_level){\n                    max_level = paren_level;\n                }\n\
    \            }\n            else if (paren_group[j] == ')'){\n               \
    \ paren_level--;\n            }\n        }\n        paren_levels.push(max_level);\n\
    \    }\n    return paren_levels;\n}\n", "  var paren_array = paren_string.split(\"\
    \ \");\n  var result = [];\n  for(var i = 0; i < paren_array.length; i++){\n \
    \   var paren_count = 0;\n    var max_paren_count = 0;\n    for(var j = 0; j <\
    \ paren_array[i].length; j++){\n      if(paren_array[i][j] == \"(\"){\n      \
    \  paren_count++;\n        if(paren_count > max_paren_count){\n          max_paren_count\
    \ = paren_count;\n        }\n      }\n      else if(paren_array[i][j] == \")\"\
    ){\n        paren_count--;\n      }\n    }\n    result.push(max_paren_count);\n\
    \  }\n  return result;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n    \
    \    var paren_group = paren_array[i];\n        var count = 0;\n        var max_count\
    \ = 0;\n        for(var j = 0; j < paren_group.length; j++){\n            if(paren_group[j]\
    \ == '('){\n                count++;\n                if(count > max_count){\n\
    \                    max_count = count;\n                }\n            }\n  \
    \          else if(paren_group[j] == ')'){\n                count--;\n       \
    \     }\n        }\n        result.push(max_count);\n    }\n    return result;\n\
    }\n", "    let paren_array = paren_string.split(' ');\n    let result = [];\n\
    \    for(let i = 0; i < paren_array.length; i++){\n        let paren_count = 0;\n\
    \        let max_paren_count = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n  \
    \  }\n    return result;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n    \
    \    var paren_count = 0;\n        var max_paren_count = 0;\n        for(var j\
    \ = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] == '('){\n\
    \                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var temp =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < temp.length; j++){\n            if(temp[j] == '('){\n           \
    \     count++;\n                if(count > max){\n                    max = count;\n\
    \                }\n            }\n            else if(temp[j] == ')'){\n    \
    \            count--;\n            }\n        }\n        result.push(max);\n \
    \   }\n    return result;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n    \
    \    var paren_count = 0;\n        var max_paren_count = 0;\n        for(var j\
    \ = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] == '('){\n\
    \                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_group\
    \ = paren_array[i];\n        var paren_stack = [];\n        var max_depth = 0;\n\
    \        for(var j = 0; j < paren_group.length; j++){\n            var paren =\
    \ paren_group[j];\n            if(paren == \"(\"){\n                paren_stack.push(paren);\n\
    \                if(paren_stack.length > max_depth){\n                    max_depth\
    \ = paren_stack.length;\n                }\n            }\n            else if(paren\
    \ == \")\"){\n                paren_stack.pop();\n            }\n        }\n \
    \       result.push(max_depth);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n  \
    \  }\n    return result;\n}\n", "  var paren_array = paren_string.split(' ');\n\
    \  var result = [];\n  for(var i = 0; i < paren_array.length; i++){\n    var paren_count\
    \ = 0;\n    var max_paren_count = 0;\n    for(var j = 0; j < paren_array[i].length;\
    \ j++){\n      if(paren_array[i][j] === '('){\n        paren_count++;\n      \
    \  if(paren_count > max_paren_count){\n          max_paren_count = paren_count;\n\
    \        }\n      } else if(paren_array[i][j] === ')'){\n        paren_count--;\n\
    \      }\n    }\n    result.push(max_paren_count);\n  }\n  return result;\n}\n",
  "    var result = [];\n    var paren_array = paren_string.split(' ');\n    for(var\
    \ i = 0; i < paren_array.length; i++){\n        var paren_count = 0;\n       \
    \ var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var count = 0;\n \
    \       var max = 0;\n        for(var j = 0; j < paren_group.length; j++){\n \
    \           if(paren_group[j] == '('){\n                count++;\n           \
    \     if(count > max){\n                    max = count;\n                }\n\
    \            }\n            else if(paren_group[j] == ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren_count = 0;\n\
    \        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var count = 0;\n        var max = 0;\n        for(var j = 0;\
    \ j < paren_array[i].length; j++){\n            if(paren_array[i][j] == '('){\n\
    \                count++;\n                if(count > max){\n                \
    \    max = count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "  var paren_array\
    \ = paren_string.split(' ');\n  var result = [];\n  for(var i = 0; i < paren_array.length;\
    \ i++){\n    var paren_count = 0;\n    var max_paren_count = 0;\n    for(var j\
    \ = 0; j < paren_array[i].length; j++){\n      if(paren_array[i][j] === '('){\n\
    \        paren_count++;\n        if(paren_count > max_paren_count){\n        \
    \  max_paren_count = paren_count;\n        }\n      }\n      else if(paren_array[i][j]\
    \ === ')'){\n        paren_count--;\n      }\n    }\n    result.push(max_paren_count);\n\
    \  }\n  return result;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n    \
    \    var count = 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == ')'){\n  \
    \              count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(get_max_nested_parens(paren_array[i]));\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var count =\
    \ 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == ')'){\n  \
    \              count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var count = 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == ')'){\n  \
    \              count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_groups = paren_string.split('\
    \ ');\n    var max_levels = [];\n    for (var i = 0; i < paren_groups.length;\
    \ i++){\n        var paren_group = paren_groups[i];\n        var level = 0;\n\
    \        var max_level = 0;\n        for (var j = 0; j < paren_group.length; j++){\n\
    \            if (paren_group[j] == '('){\n                level += 1;\n      \
    \          if (level > max_level){\n                    max_level = level;\n \
    \               }\n            }\n            else if (paren_group[j] == ')'){\n\
    \                level -= 1;\n            }\n        }\n        max_levels.push(max_level);\n\
    \    }\n    return max_levels;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(parse_nested_parens_helper(paren_array[i]));\n    }\n   \
    \ return result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var\
    \ result = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(get_nested_parens(paren_array[i]));\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_parens(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var paren_levels = [];\n    for (var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_level = 0;\n        var paren_count = 0;\n        for\
    \ (var j = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if (paren_count >\
    \ paren_level){\n                    paren_level = paren_count;\n            \
    \    }\n            }\n            else if (paren_array[i][j] == ')'){\n     \
    \           paren_count--;\n            }\n        }\n        paren_levels.push(paren_level);\n\
    \    }\n    return paren_levels;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let paren_levels = [];\n    for (let i = 0; i < paren_array.length;\
    \ i++){\n        let paren_level = 0;\n        for (let j = 0; j < paren_array[i].length;\
    \ j++){\n            if (paren_array[i][j] === '('){\n                paren_level++;\n\
    \            }\n        }\n        paren_levels.push(paren_level);\n    }\n  \
    \  return paren_levels;\n}\n", "    var paren_array = paren_string.split(\" \"\
    );\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n \
    \       var paren = paren_array[i];\n        var count = 0;\n        var max =\
    \ 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var max_nested_parens = [];\n    for (var i\
    \ = 0; i < paren_array.length; i++){\n        max_nested_parens.push(max_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return max_nested_parens;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_group = paren_array[i];\n        var paren_count = 0;\n   \
    \     var max_paren_count = 0;\n        for(var j = 0; j < paren_group.length;\
    \ j++){\n            if(paren_group[j] == \"(\"){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_group[j]\
    \ == \")\"){\n                paren_count--;\n            }\n        }\n     \
    \   result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max_count = 0;\n        for(var j = 0; j < paren.length; j++){\n       \
    \     if(paren[j] == '('){\n                count++;\n                if(count\
    \ > max_count){\n                    max_count = count;\n                }\n \
    \           }\n            else if(paren[j] == ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max_count);\n    }\n    return\
    \ result;\n}\n", "    let paren_array = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_array.length; i++){\n        let paren_count\
    \ = 0;\n        let max_paren_count = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(get_max_nested_parens(paren_array[i]));\n    }\n\
    \    return result;\n}\n", "    var paren_array = paren_string.split(' ');\n \
    \   var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n     \
    \   result.push(parse_nested_parens_helper(paren_array[i]));\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var stack = [];\n        var max_depth = 0;\n     \
    \   for(var j = 0; j < paren.length; j++){\n            if(paren[j] == '('){\n\
    \                stack.push(paren[j]);\n                max_depth = Math.max(max_depth,\
    \ stack.length);\n            }\n            else if(paren[j] == ')'){\n     \
    \           stack.pop();\n            }\n        }\n        result.push(max_depth);\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let paren = paren_array[i];\n        let count = 0;\n        let max\
    \ = 0;\n        for(let j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ === '('){\n                count++;\n                if(count > max){\n    \
    \                max = count;\n                }\n            }\n            else\
    \ if(paren[j] === ')'){\n                count--;\n            }\n        }\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    var paren_array = paren_string.split(' ');\n    for(var i = 0; i <\
    \ paren_array.length; i++){\n        var paren_count = 0;\n        var max_paren_count\
    \ = 0;\n        for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "\tvar paren_array = paren_string.split(' ');\n\tvar result =\
    \ [];\n\tfor(var i = 0; i < paren_array.length; i++){\n\t\tvar count = 0;\n\t\t\
    var max = 0;\n\t\tfor(var j = 0; j < paren_array[i].length; j++){\n\t\t\tif(paren_array[i][j]\
    \ == '('){\n\t\t\t\tcount++;\n\t\t\t\tif(count > max){\n\t\t\t\t\tmax = count;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\telse if(paren_array[i][j] == ')'){\n\t\t\t\tcount--;\n\
    \t\t\t}\n\t\t}\n\t\tresult.push(max);\n\t}\n\treturn result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n", "    var paren_groups\
    \ = paren_string.split(' ');\n    var paren_levels = [];\n    for (var i = 0;\
    \ i < paren_groups.length; i++){\n        var paren_group = paren_groups[i];\n\
    \        var paren_level = 0;\n        var max_paren_level = 0;\n        for (var\
    \ j = 0; j < paren_group.length; j++){\n            if (paren_group[j] == '('){\n\
    \                paren_level++;\n                if (paren_level > max_paren_level){\n\
    \                    max_paren_level = paren_level;\n                }\n     \
    \       }\n            else if (paren_group[j] == ')'){\n                paren_level--;\n\
    \            }\n        }\n        paren_levels.push(max_paren_level);\n    }\n\
    \    return paren_levels;\n}\n", "    var paren_array = paren_string.split(' ');\n\
    \    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n    \
    \    var paren_group = paren_array[i];\n        var max_nesting = 0;\n       \
    \ var current_nesting = 0;\n        for(var j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] == '('){\n                current_nesting++;\n\
    \                if(current_nesting > max_nesting){\n                    max_nesting\
    \ = current_nesting;\n                }\n            }\n            else if(paren_group[j]\
    \ == ')'){\n                current_nesting--;\n            }\n        }\n   \
    \     result.push(max_nesting);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        result.push(get_nested_parens(paren_array[i]));\n    }\n    return\
    \ result;\n}\n", "    let paren_array = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_array.length; i++){\n        let paren =\
    \ paren_array[i];\n        let count = 0;\n        let max = 0;\n        for(let\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n        \
    \        count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] === ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] == '('){\n         \
    \       count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] == ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_nested_parens_helper(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_group = paren_array[i];\n        var count = 0;\n        var\
    \ max = 0;\n        for(var j = 0; j < paren_group.length; j++){\n           \
    \ if(paren_group[j] == '('){\n                count++;\n                if(count\
    \ > max){\n                    max = count;\n                }\n            }\n\
    \            else if(paren_group[j] == ')'){\n                count--;\n     \
    \       }\n        }\n        result.push(max);\n    }\n    return result;\n}\n",
  "    //TODO: Implement this function\n    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for (var i = 0; i < paren_array.length; i++)\
    \ {\n        var paren = paren_array[i];\n        var count = 0;\n        var\
    \ max_count = 0;\n        for (var j = 0; j < paren.length; j++) {\n         \
    \   if (paren[j] == \"(\") {\n                count++;\n                if (count\
    \ > max_count) {\n                    max_count = count;\n                }\n\
    \            } else if (paren[j] == \")\") {\n                count--;\n     \
    \       }\n        }\n        result.push(max_count);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren = paren_array[i];\n\
    \        var count = 0;\n        var max = 0;\n        for(var j = 0; j < paren.length;\
    \ j++){\n            if(paren[j] == '('){\n                count++;\n        \
    \        if(count > max){\n                    max = count;\n                }\n\
    \            }\n            else if(paren[j] == ')'){\n                count--;\n\
    \            }\n        }\n        result.push(max);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        result.push(find_max_nested_parens(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var count = 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == ')'){\n  \
    \              count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ \"(\"){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == \")\"){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "  var paren_array = paren_string.split(' ');\n  var result =\
    \ [];\n  for(var i = 0; i < paren_array.length; i++){\n    var paren_count = 0;\n\
    \    var max_paren_count = 0;\n    for(var j = 0; j < paren_array[i].length; j++){\n\
    \      if(paren_array[i][j] === '('){\n        paren_count++;\n        if(paren_count\
    \ > max_paren_count){\n          max_paren_count = paren_count;\n        }\n \
    \     } else if(paren_array[i][j] === ')'){\n        paren_count--;\n      }\n\
    \    }\n    result.push(max_paren_count);\n  }\n  return result;\n}\n", "    var\
    \ paren_array = paren_string.split(' ');\n    var result = [];\n    for(var i\
    \ = 0; i < paren_array.length; i++){\n        var paren_group = paren_array[i];\n\
    \        var count = 0;\n        var max_count = 0;\n        for(var j = 0; j\
    \ < paren_group.length; j++){\n            if(paren_group[j] == '('){\n      \
    \          count++;\n                if(count > max_count){\n                \
    \    max_count = count;\n                }\n            }\n            else if(paren_group[j]\
    \ == ')'){\n                count--;\n            }\n        }\n        result.push(max_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(get_nested_parens(paren_array[i]));\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var paren_count = 0;\n\
    \        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var temp = paren_array[i];\n        var count = 0;\n        var\
    \ max = 0;\n        for(var j = 0; j < temp.length; j++){\n            if(temp[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(temp[j] == ')'){\n                count--;\n            }\n        }\n  \
    \      result.push(max);\n    }\n    return result;\n}\n", "    let paren_array\
    \ = paren_string.split(' ');\n    let result = [];\n    for(let i = 0; i < paren_array.length;\
    \ i++){\n        let paren_count = 0;\n        let max_paren_count = 0;\n    \
    \    for(let j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ === '('){\n                paren_count++;\n                if(paren_count >\
    \ max_paren_count){\n                    max_paren_count = paren_count;\n    \
    \            }\n            }\n            else if(paren_array[i][j] === ')'){\n\
    \                paren_count--;\n            }\n        }\n        result.push(max_paren_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var max_depth = 0;\n    var depth = 0;\n   \
    \ var max_depth_array = [];\n    for (var i = 0; i < paren_array.length; i++){\n\
    \        for (var j = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j]\
    \ == '('){\n                depth++;\n            } else if (paren_array[i][j]\
    \ == ')'){\n                depth--;\n            }\n            if (depth > max_depth){\n\
    \                max_depth = depth;\n            }\n        }\n        max_depth_array.push(max_depth);\n\
    \        max_depth = 0;\n        depth = 0;\n    }\n    return max_depth_array;\n\
    }\n", "    let paren_array = paren_string.split(' ');\n    let result = [];\n\
    \    for(let i = 0; i < paren_array.length; i++){\n        let paren_count = 0;\n\
    \        let max_paren_count = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var output = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        output.push(max_paren_count);\n    }\n    return\
    \ output;\n}\n", "    let paren_groups = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_groups.length; i++){\n        let paren_group\
    \ = paren_groups[i];\n        let max_level = 0;\n        let current_level =\
    \ 0;\n        for(let j = 0; j < paren_group.length; j++){\n            if(paren_group[j]\
    \ === '('){\n                current_level++;\n                if(current_level\
    \ > max_level){\n                    max_level = current_level;\n            \
    \    }\n            }\n            else if(paren_group[j] === ')'){\n        \
    \        current_level--;\n            }\n        }\n        result.push(max_level);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var count = 0;\n \
    \       var max_count = 0;\n        for(var j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] == '('){\n                count++;\n          \
    \      if(count > max_count){\n                    max_count = count;\n      \
    \          }\n            }\n            else if(paren_group[j] == ')'){\n   \
    \             count--;\n            }\n        }\n        result.push(max_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var max_depth = 0;\n        var current_depth = 0;\n        for(var j\
    \ = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] == \"\
    (\"){\n                current_depth++;\n                if(current_depth > max_depth){\n\
    \                    max_depth = current_depth;\n                }\n         \
    \   }\n            else if(paren_array[i][j] == \")\"){\n                current_depth--;\n\
    \            }\n        }\n        result.push(max_depth);\n    }\n    return\
    \ result;\n}\n", "  var paren_array = paren_string.split(' ');\n  var result =\
    \ [];\n  for(var i = 0; i < paren_array.length; i++){\n    var paren_count = 0;\n\
    \    var max_paren_count = 0;\n    for(var j = 0; j < paren_array[i].length; j++){\n\
    \      if(paren_array[i][j] === '('){\n        paren_count++;\n        if(paren_count\
    \ > max_paren_count){\n          max_paren_count = paren_count;\n        }\n \
    \     } else if(paren_array[i][j] === ')'){\n        paren_count--;\n      }\n\
    \    }\n    result.push(max_paren_count);\n  }\n  return result;\n}\n", "    var\
    \ paren_array = paren_string.split(' ');\n    var result = [];\n    for(var i\
    \ = 0; i < paren_array.length; i++){\n        var paren_count = 0;\n        var\
    \ max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length; j++){\n\
    \            if(paren_array[i][j] == '('){\n                paren_count++;\n \
    \               if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var max_nesting =\
    \ 0;\n        var current_nesting = 0;\n        for(var j = 0; j < paren_group.length;\
    \ j++){\n            if(paren_group[j] == '('){\n                current_nesting++;\n\
    \                if(current_nesting > max_nesting){\n                    max_nesting\
    \ = current_nesting;\n                }\n            }\n            else if(paren_group[j]\
    \ == ')'){\n                current_nesting--;\n            }\n        }\n   \
    \     result.push(max_nesting);\n    }\n    return result;\n}\n", "    let paren_array\
    \ = paren_string.split(' ');\n    let paren_levels = [];\n    for (let i = 0;\
    \ i < paren_array.length; i++){\n        let paren_level = 0;\n        for (let\
    \ j = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j] ===\
    \ '('){\n                paren_level++;\n            }\n            else if (paren_array[i][j]\
    \ === ')'){\n                paren_level--;\n            }\n        }\n      \
    \  paren_levels.push(paren_level);\n    }\n    return paren_levels;\n}\n", " \
    \   let paren_array = paren_string.split(' ');\n    let result = [];\n    for(let\
    \ i = 0; i < paren_array.length; i++){\n        let paren_count = 0;\n       \
    \ let max_paren_count = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var count = 0;\n \
    \       var max_count = 0;\n        for(var j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] == '('){\n                count++;\n          \
    \      if(count > max_count){\n                    max_count = count;\n      \
    \          }\n            }\n            else if(paren_group[j] == ')'){\n   \
    \             count--;\n            }\n        }\n        result.push(max_count);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] == '('){\n         \
    \       count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] == ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_groups = paren_string.split(' ');\n    var max_nesting\
    \ = [];\n    for (var i = 0; i < paren_groups.length; i++){\n        max_nesting.push(get_max_nesting(paren_groups[i]));\n\
    \    }\n    return max_nesting;\n}\n", "    let paren_arr = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_arr.length; i++){\n\
    \        let paren = paren_arr[i];\n        let stack = [];\n        let max =\
    \ 0;\n        for(let j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ === '('){\n                stack.push(paren[j]);\n                max = Math.max(max,\
    \ stack.length);\n            }else{\n                stack.pop();\n         \
    \   }\n        }\n        result.push(max);\n    }\n    return result;\n}\n",
  "    let paren_array = paren_string.split(' ');\n    let result = [];\n    for(let\
    \ i = 0; i < paren_array.length; i++){\n        let paren_count = 0;\n       \
    \ let max_paren_count = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "  var paren_array = paren_string.split(' ');\n  var result =\
    \ [];\n  for(var i = 0; i < paren_array.length; i++){\n    result.push(parse_parens(paren_array[i]));\n\
    \  }\n  return result;\n}\n", "    let paren_array = paren_string.split(' ');\n\
    \    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n    \
    \    let paren_group = paren_array[i];\n        let max_level = 0;\n        let\
    \ level = 0;\n        for(let j = 0; j < paren_group.length; j++){\n         \
    \   if(paren_group[j] === '('){\n                level++;\n                if(level\
    \ > max_level){\n                    max_level = level;\n                }\n \
    \           }\n            else if(paren_group[j] === ')'){\n                level--;\n\
    \            }\n        }\n        result.push(max_level);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == \")\"){\n                paren_count--;\n            }\n        }\n     \
    \   result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var current_paren = paren_array[i];\n        var current_level\
    \ = 0;\n        var max_level = 0;\n        for(var j = 0; j < current_paren.length;\
    \ j++){\n            if(current_paren[j] == \"(\"){\n                current_level++;\n\
    \                if(current_level > max_level){\n                    max_level\
    \ = current_level;\n                }\n            }\n            else if(current_paren[j]\
    \ == \")\"){\n                current_level--;\n            }\n        }\n   \
    \     result.push(max_level);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n", "  var paren_array\
    \ = paren_string.split(' ');\n  var result = [];\n  for(var i = 0; i < paren_array.length;\
    \ i++){\n    var paren = paren_array[i];\n    var count = 0;\n    var max = 0;\n\
    \    for(var j = 0; j < paren.length; j++){\n      if(paren[j] === '('){\n   \
    \     count++;\n        if(count > max){\n          max = count;\n        }\n\
    \      }\n      else if(paren[j] === ')'){\n        count--;\n      }\n    }\n\
    \    result.push(max);\n  }\n  return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var count = 0;\n        var max = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] == ')'){\n  \
    \              count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let paren = paren_array[i];\n        let count = 0;\n        let max\
    \ = 0;\n        for(let j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ === '('){\n                count++;\n                if(count > max){\n    \
    \                max = count;\n                }\n            }\n            else\
    \ if(paren[j] === ')'){\n                count--;\n            }\n        }\n\
    \        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var count = 0;\n        var max = 0;\n        for(var j = 0;\
    \ j < paren_array[i].length; j++){\n            if(paren_array[i][j] == '('){\n\
    \                count++;\n                if(count > max){\n                \
    \    max = count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var paren_array =\
    \ paren_string.split(' ');\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] == '('){\n         \
    \       count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] == ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(paren_array[i].length - paren_array[i].replace(/[()]/g, \"\
    \").length);\n    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(parse_nested_parens_helper(paren_array[i]));\n    }\n   \
    \ return result;\n}\n", "    let parens = paren_string.split(' ');\n    let max_nesting\
    \ = [];\n    for(let i = 0; i < parens.length; i++){\n        let paren = parens[i];\n\
    \        let max = 0;\n        let count = 0;\n        for(let j = 0; j < paren.length;\
    \ j++){\n            if(paren[j] === '('){\n                count++;\n       \
    \         if(count > max){\n                    max = count;\n               \
    \ }\n            }\n            else if(paren[j] === ')'){\n                count--;\n\
    \            }\n        }\n        max_nesting.push(max);\n    }\n    return max_nesting;\n\
    }\n", "    var paren_arr = paren_string.split(' ');\n    var result = [];\n  \
    \  for(var i = 0; i < paren_arr.length; i++){\n        var paren_count = 0;\n\
    \        var max_paren_count = 0;\n        for(var j = 0; j < paren_arr[i].length;\
    \ j++){\n            if(paren_arr[i][j] === '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_arr[i][j]\
    \ === ')'){\n                paren_count--;\n            }\n        }\n      \
    \  result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == \")\"){\n                paren_count--;\n            }\n        }\n     \
    \   result.push(max_paren_count);\n    }\n    return result;\n}\n", "  var parens\
    \ = paren_string.split(' ');\n  var max_depth = [];\n  for (var i = 0; i < parens.length;\
    \ i++){\n    var depth = 0;\n    var max = 0;\n    for (var j = 0; j < parens[i].length;\
    \ j++){\n      if (parens[i][j] == '('){\n        depth++;\n        if (depth\
    \ > max){\n          max = depth;\n        }\n      }\n      else if (parens[i][j]\
    \ == ')'){\n        depth--;\n      }\n    }\n    max_depth.push(max);\n  }\n\
    \  return max_depth;\n}\n", "    let paren_array = paren_string.split(' ');\n\
    \    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n    \
    \    let paren = paren_array[i];\n        let count = 0;\n        let max = 0;\n\
    \        for(let j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n\
    \                count++;\n                if(count > max){\n                \
    \    max = count;\n                }\n            }\n            else if(paren[j]\
    \ === ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var max_nested_parens = [];\n    for (var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var max_nested_paren\
    \ = 0;\n        var current_nested_paren = 0;\n        for (var j = 0; j < paren_group.length;\
    \ j++){\n            if (paren_group[j] == '('){\n                current_nested_paren\
    \ += 1;\n                if (current_nested_paren > max_nested_paren){\n     \
    \               max_nested_paren = current_nested_paren;\n                }\n\
    \            }\n            else if (paren_group[j] == ')'){\n               \
    \ current_nested_paren -= 1;\n            }\n        }\n        max_nested_parens.push(max_nested_paren);\n\
    \    }\n    return max_nested_parens;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let paren_group = paren_array[i];\n        let stack = [];\n        let\
    \ max_depth = 0;\n        for(let j = 0; j < paren_group.length; j++){\n     \
    \       let paren = paren_group[j];\n            if(paren === '('){\n        \
    \        stack.push(paren);\n                max_depth = Math.max(max_depth, stack.length);\n\
    \            }\n            else if(paren === ')'){\n                stack.pop();\n\
    \            }\n        }\n        result.push(max_depth);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_group = paren_array[i];\n        var max_level = 0;\n\
    \        var level = 0;\n        for(var j = 0; j < paren_group.length; j++){\n\
    \            if(paren_group[j] == '('){\n                level++;\n          \
    \      if(level > max_level){\n                    max_level = level;\n      \
    \          }\n            }\n            else if(paren_group[j] == ')'){\n   \
    \             level--;\n            }\n        }\n        result.push(max_level);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var paren_groups\
    \ = paren_string.split(' ');\n    for(var i = 0; i < paren_groups.length; i++){\n\
    \        var paren_group = paren_groups[i];\n        var depth = 0;\n        var\
    \ max_depth = 0;\n        for(var j = 0; j < paren_group.length; j++){\n     \
    \       if(paren_group[j] == '('){\n                depth++;\n               \
    \ if(depth > max_depth){\n                    max_depth = depth;\n           \
    \     }\n            }\n            else if(paren_group[j] == ')'){\n        \
    \        depth--;\n            }\n        }\n        result.push(max_depth);\n\
    \    }\n    return result;\n}\n", "    let paren_array = paren_string.split('\
    \ ');\n    let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n\
    \        let paren_count = 0;\n        let max_paren_count = 0;\n        for(let\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ===\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] === ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == '('){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == ')'){\n                paren_count--;\n            }\n        }\n       \
    \ result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var paren_count = [];\n    for (var i = 0; i\
    \ < paren_array.length; i++){\n        var paren_count_temp = 0;\n        for\
    \ (var j = 0; j < paren_array[i].length; j++){\n            if (paren_array[i][j]\
    \ == '('){\n                paren_count_temp++;\n            }\n        }\n  \
    \      paren_count.push(paren_count_temp);\n    }\n    return paren_count;\n}\n",
  "    // TODO: Implement this function\n    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for (var i = 0; i < paren_array.length; i++)\
    \ {\n        var count = 0;\n        var max = 0;\n        for (var j = 0; j <\
    \ paren_array[i].length; j++) {\n            if (paren_array[i][j] == \"(\") {\n\
    \                count++;\n                if (count > max) {\n              \
    \      max = count;\n                }\n            }\n            else if (paren_array[i][j]\
    \ == \")\") {\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren =\
    \ paren_array[i];\n        var count = 0;\n        var max = 0;\n        for(var\
    \ j = 0; j < paren.length; j++){\n            if(paren[j] == '('){\n         \
    \       count++;\n                if(count > max){\n                    max =\
    \ count;\n                }\n            }\n            else if(paren[j] == ')'){\n\
    \                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    let paren_array = paren_string.split(' ');\n    let result\
    \ = [];\n    for(let i = 0; i < paren_array.length; i++){\n        let count =\
    \ 0;\n        let max = 0;\n        for(let j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] === '('){\n                count++;\n\
    \                if(count > max){\n                    max = count;\n        \
    \        }\n            }\n            else if(paren_array[i][j] === ')'){\n \
    \               count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren_count = 0;\n        var max_paren_count = 0;\n        for(var\
    \ j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] ==\
    \ '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        result.push(parse_parens(paren_array[i]));\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        result.push(parse_nested_parens_helper(paren_array[i]));\n    }\n   \
    \ return result;\n}\n", "    var paren_array = paren_string.split(\" \");\n  \
    \  var paren_depth = [];\n    for (var i = 0; i < paren_array.length; i++){\n\
    \        paren_depth.push(get_paren_depth(paren_array[i]));\n    }\n    return\
    \ paren_depth;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var\
    \ result = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var\
    \ paren = paren_array[i];\n        var count = 0;\n        var max = 0;\n    \
    \    for(var j = 0; j < paren.length; j++){\n            if(paren[j] == \"(\"\
    ){\n                count++;\n                if(count > max){\n             \
    \       max = count;\n                }\n            }\n            else if(paren[j]\
    \ == \")\"){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_array = paren_string.split('\
    \ ');\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == '('){\n                count++;\n                if(count > max){\n     \
    \               max = count;\n                }\n            }\n            else\
    \ if(paren[j] == ')'){\n                count--;\n            }\n        }\n \
    \       result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(\" \");\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren = paren_array[i];\n        var count = 0;\n       \
    \ var max = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(\" \");\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_count\
    \ = 0;\n        var max_paren_count = 0;\n        for(var j = 0; j < paren_array[i].length;\
    \ j++){\n            if(paren_array[i][j] == \"(\"){\n                paren_count++;\n\
    \                if(paren_count > max_paren_count){\n                    max_paren_count\
    \ = paren_count;\n                }\n            }\n            else if(paren_array[i][j]\
    \ == \")\"){\n                paren_count--;\n            }\n        }\n     \
    \   result.push(max_paren_count);\n    }\n    return result;\n}\n", "    var paren_array\
    \ = paren_string.split(' ');\n    var result = [];\n    for(var i = 0; i < paren_array.length;\
    \ i++){\n        var paren_count = 0;\n        var max_paren_count = 0;\n    \
    \    for(var j = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j]\
    \ == '('){\n                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var max_depth\
    \ = 0;\n    var depth = 0;\n    var max_depth_array = [];\n    for (var i = 0;\
    \ i < paren_array.length; i++){\n        for (var j = 0; j < paren_array[i].length;\
    \ j++){\n            if (paren_array[i][j] == '('){\n                depth++;\n\
    \            }\n            else if (paren_array[i][j] == ')'){\n            \
    \    depth--;\n            }\n            if (depth > max_depth){\n          \
    \      max_depth = depth;\n            }\n        }\n        max_depth_array.push(max_depth);\n\
    \        max_depth = 0;\n        depth = 0;\n    }\n    return max_depth_array;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var result = [];\n\
    \    for(var i = 0; i < paren_array.length; i++){\n        var count = 0;\n  \
    \      var max = 0;\n        for(var j = 0; j < paren_array[i].length; j++){\n\
    \            if(paren_array[i][j] == '('){\n                count++;\n       \
    \         if(count > max){\n                    max = count;\n               \
    \ }\n            }\n            else if(paren_array[i][j] == ')'){\n         \
    \       count--;\n            }\n        }\n        result.push(max);\n    }\n\
    \    return result;\n}\n", "    var paren_array = paren_string.split(' ');\n \
    \   var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n     \
    \   var paren_count = 0;\n        var max_paren_count = 0;\n        for(var j\
    \ = 0; j < paren_array[i].length; j++){\n            if(paren_array[i][j] == '('){\n\
    \                paren_count++;\n                if(paren_count > max_paren_count){\n\
    \                    max_paren_count = paren_count;\n                }\n     \
    \       }\n            else if(paren_array[i][j] == ')'){\n                paren_count--;\n\
    \            }\n        }\n        result.push(max_paren_count);\n    }\n    return\
    \ result;\n}\n", "    var paren_array = paren_string.split(' ');\n    var result\
    \ = [];\n    for(var i = 0; i < paren_array.length; i++){\n        var paren_group\
    \ = paren_array[i];\n        var count = 0;\n        var max_count = 0;\n    \
    \    for(var j = 0; j < paren_group.length; j++){\n            if(paren_group[j]\
    \ == '('){\n                count++;\n                if(count > max_count){\n\
    \                    max_count = count;\n                }\n            }\n  \
    \          else if(paren_group[j] == ')'){\n                count--;\n       \
    \     }\n        }\n        result.push(max_count);\n    }\n    return result;\n\
    }\n", "    var paren_array = paren_string.split(' ');\n    var max_depth = 0;\n\
    \    var max_depth_array = [];\n    for (var i = 0; i < paren_array.length; i++){\n\
    \        var depth = 0;\n        for (var j = 0; j < paren_array[i].length; j++){\n\
    \            if (paren_array[i][j] == '('){\n                depth++;\n      \
    \      }\n            else if (paren_array[i][j] == ')'){\n                depth--;\n\
    \            }\n        }\n        max_depth_array.push(depth);\n    }\n    return\
    \ max_depth_array;\n}\n", "    let paren_array = paren_string.split(' ');\n  \
    \  let result = [];\n    for(let i = 0; i < paren_array.length; i++){\n      \
    \  let paren = paren_array[i];\n        let count = 0;\n        let max = 0;\n\
    \        for(let j = 0; j < paren.length; j++){\n            if(paren[j] === '('){\n\
    \                count++;\n                if(count > max){\n                \
    \    max = count;\n                }\n            }\n            else if(paren[j]\
    \ === ')'){\n                count--;\n            }\n        }\n        result.push(max);\n\
    \    }\n    return result;\n}\n", "    var paren_groups = paren_string.split('\
    \ ');\n    var max_levels = [];\n    for (var i = 0; i < paren_groups.length;\
    \ i++){\n        var paren_group = paren_groups[i];\n        var max_level = 0;\n\
    \        var level = 0;\n        for (var j = 0; j < paren_group.length; j++){\n\
    \            if (paren_group[j] == '('){\n                level++;\n         \
    \       if (level > max_level){\n                    max_level = level;\n    \
    \            }\n            }\n            else if (paren_group[j] == ')'){\n\
    \                level--;\n            }\n        }\n        max_levels.push(max_level);\n\
    \    }\n    return max_levels;\n}\n", "    var paren_array = paren_string.split(\"\
    \ \");\n    var result = [];\n    for(var i = 0; i < paren_array.length; i++){\n\
    \        var paren = paren_array[i];\n        var count = 0;\n        var max\
    \ = 0;\n        for(var j = 0; j < paren.length; j++){\n            if(paren[j]\
    \ == \"(\"){\n                count++;\n                if(count > max){\n   \
    \                 max = count;\n                }\n            }\n           \
    \ else if(paren[j] == \")\"){\n                count--;\n            }\n     \
    \   }\n        result.push(max);\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

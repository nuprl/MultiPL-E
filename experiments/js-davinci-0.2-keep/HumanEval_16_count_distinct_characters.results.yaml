name: HumanEval_16_count_distinct_characters
language: javascript
results:
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(characters[string[i]]){\n\
    \            continue;\n        }\n        else{\n            count++;\n     \
    \       characters[string[i]] = 1;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        char = string.charAt(i);\n        if(string.indexOf(char) ==\
    \ i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmptm_8dwy5.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmptm_8dwy5.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = [];\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (result.indexOf(string[i].toLowerCase()) === -1){\n            result.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return result.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) == i){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar count = 0;\n\tvar char_array = string.split(\"\");\n\tvar char_dict = {};\n\
    \tfor (var i = 0; i < char_array.length; i++){\n\t\tif (char_dict[char_array[i].toLowerCase()]\
    \ == null){\n\t\t\tchar_dict[char_array[i].toLowerCase()] = 1;\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var str = string.toLowerCase();\n    var arr = str.split('');\n    var newArr\
    \ = [];\n    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i])\
    \ === -1){\n            newArr.push(arr[i]);\n        }\n    }\n    return newArr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpkvslchbv.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkvslchbv.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.lastIndexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var distinct_characters = [];\n    for (var i = 0; i\
    \ < string.length; i++){\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1){\n            distinct_characters.push(string[i].toLowerCase());\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var array = string.split('');\n  var count = 0;\n  for(var i = 0; i < array.length;\
    \ i++){\n    if(array.indexOf(array[i]) === i){\n      count++;\n    }\n  }\n\
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpt07f639q.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt07f639q.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i].toLowerCase()) == -1){\n          \
    \  char.push(string[i].toLowerCase());\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let arr = string.split('');\n    let newArr = [];\n \
    \   for(let i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var chars = string.toLowerCase().split('');\n    for(var\
    \ i = 0; i < chars.length; i++){\n        if(chars.indexOf(chars[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var obj = {};\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(obj[arr[i]] === undefined){\n     \
    \       obj[arr[i]] = 1;\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp63pji8or.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp63pji8or.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) == i){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = array.filter(function(item,\
    \ index){\n        return array.indexOf(item) >= index;\n    });\n    return newArray.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpopx57hd1.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpopx57hd1.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpb_uaqaan.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb_uaqaan.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpcj2kt0gn.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcj2kt0gn.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var lower = string.toLowerCase();\n  for (var i = 0; i <\
    \ lower.length; i++) {\n    if (lower.indexOf(lower[i]) === i) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpktt0twqf.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpktt0twqf.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let str = string.toLowerCase();\n    for(let i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase().split('');\n    var unique\
    \ = [];\n    for(var i = 0; i < char.length; i++){\n        if(unique.indexOf(char[i])\
    \ === -1){\n            unique.push(char[i]);\n        }\n    }\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n\
    \        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n \
    \           distinct_characters.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let str = string.toLowerCase();\n    let count = 0;\n    let char = '';\n\
    \    for(let i = 0; i < str.length; i++){\n        if(char.indexOf(str[i]) ==\
    \ -1){\n            char += str[i];\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.lastIndexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpc73klaui.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpc73klaui.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var str = string.toLowerCase();\n    var arr = str.split('');\n    var count\
    \ = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr.indexOf(arr[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp7cvlssx3.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7cvlssx3.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpmlz2jzzx.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmlz2jzzx.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let str = string.toLowerCase();\n    let count = 0;\n    let char = '';\n\
    \    for(let i = 0; i < str.length; i++){\n        if(char.indexOf(str[i]) ==\
    \ -1){\n            char += str[i];\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = 0;\n    var arr = string.split('');\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var array2 = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(array2.indexOf(array[i].toLowerCase())\
    \ === -1){\n            array2.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i]);\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp4n1minfr.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4n1minfr.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpa6mmlocw.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa6mmlocw.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var unique = array.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpijg_ggjo.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpijg_ggjo.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var arr2 = [];\n   \
    \ for(var i = 0; i < arr.length; i++){\n        if(arr2.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            arr2.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp8dc32xt3.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8dc32xt3.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var unique = [];\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (unique.indexOf(string[i].toLowerCase()) == -1){\n            unique.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n     \
    \   if (unique.indexOf(string[i]) == -1) {\n            unique += string[i];\n\
    \        }\n    }\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpzh7ltvtr.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzh7ltvtr.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(characters[string[i]]\
    \ === undefined){\n            characters[string[i]] = 1;\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let arr = string.split('');\n    let newArr = [];\n \
    \   for(let i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpkcg9imzy.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkcg9imzy.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    arr.sort();\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] !== arr[i+1]){\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp15szhe0g.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp15szhe0g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.indexOf(string[i].toLowerCase()) == -1){\n     \
    \       char_set.push(string[i].toLowerCase());\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let arr = string.split('');\n    let newArr = [];\n    for(let i = 0; i <\
    \ arr.length; i++){\n        if(!newArr.includes(arr[i].toLowerCase())){\n   \
    \         newArr.push(arr[i].toLowerCase());\n        }\n    }\n    return newArr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp_59ukkmf.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_59ukkmf.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpb4hs7b_g.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb4hs7b_g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string_lower = string.toLowerCase();\n    for (var\
    \ i = 0; i < string_lower.length; i++){\n        if (string_lower.indexOf(string_lower[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    return new Set(string.toLowerCase()).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(unique.indexOf(string[i].toLowerCase()) == -1){\n        \
    \    unique.push(string[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = '';\n    var string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(char.indexOf(string[i])\
    \ == -1){\n            char += string[i];\n            count++;\n        }\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp16p8753n.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp16p8753n.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char;\n    for (var i = 0; i < string.length; i++){\n\
    \        char = string.charAt(i);\n        if (string.indexOf(char) == i){\n \
    \           count++;\n        }\n    }\n    return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpkt97fff5.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkt97fff5.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ == -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    return new Set(string.toLowerCase()).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(characters[char]){\n            characters[char] += 1;\n        }\
    \ else {\n            characters[char] = 1;\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp3c93ucoj.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3c93ucoj.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    return new Set(string.toLowerCase()).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (characters[string[i].toLowerCase()] === undefined){\n   \
    \         characters[string[i].toLowerCase()] = 1;\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let chars = string.toLowerCase().split('');\n    let unique = [...new Set(chars)];\n\
    \    return unique.length;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var distinct_characters = [];\n    for (var i = 0; i < string.length; i++){\n\
    \        if (distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n \
    \           distinct_characters.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var unique = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(unique.indexOf(array[i].toLowerCase())\
    \ === -1){\n            unique.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = 0;\n    var arr = string.split('');\n    var newArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char;\n    for (var i = 0; i < string.length; i++){\n\
    \        char = string.charAt(i);\n        if (string.indexOf(char) == i){\n \
    \           count++;\n        }\n    }\n    return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpter6dzy9.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpter6dzy9.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let result = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpxw105192.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxw105192.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var str = string.toLowerCase();\n    var count = 0;\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp51sd6h9u.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp51sd6h9u.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpkfk70_yd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkfk70_yd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(characters[string[i]]\
    \ === undefined){\n            characters[string[i]] = 1;\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = 0;\n    var char_set = [];\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.indexOf(string[i].toLowerCase()) == -1){\n     \
    \       char_set.push(string[i].toLowerCase());\n            result++;\n     \
    \   }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \  var count = 0;\n  var array = string.split(\"\");\n  var newArray = [];\n \
    \ for(var i = 0; i < array.length; i++){\n    if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n      newArray.push(array[i].toLowerCase());\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) == i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var string = string.toLowerCase();\n    var count = 0;\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (string.indexOf(string[i]) == i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp26782jke.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp26782jke.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar count = 0;\n\tvar array = string.split(\"\");\n\tvar newArray = [];\n\t\
    for(var i = 0; i < array.length; i++){\n\t\tif(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n\t\t\tnewArray.push(array[i].toLowerCase());\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n\
    \    for(var i = 0; i < string.length; i++){\n        if(characters[string[i]]\
    \ === undefined){\n            characters[string[i]] = 1;\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let newString = string.toLowerCase();\n    for(let i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) === i){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmp7g7d3075.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7g7d3075.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var arr2 = [];\n   \
    \ for(var i = 0; i < arr.length; i++){\n        if(arr2.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            arr2.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var str = string.toLowerCase();\n    for(var i = 0; i\
    \ < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var lowerCaseString = string.toLowerCase();\n    for(var\
    \ i = 0; i < lowerCaseString.length; i++){\n        if(lowerCaseString.indexOf(lowerCaseString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var new_string = string.toLowerCase();\n    for (var\
    \ i = 0; i < new_string.length; i++){\n        if (new_string.indexOf(new_string[i])\
    \ === i){\n            count += 1;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array.indexOf(array[i]) === i){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmppw76rx9o.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmppw76rx9o.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let set = new Set();\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(!set.has(string[i].toLowerCase())){\n            set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var arr = string.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmppw901ire.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmppw901ire.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \tvar count = 0;\n\tvar string = string.toLowerCase();\n\tfor (var i = 0; i <\
    \ string.length; i++) {\n\t\tif (string.indexOf(string[i]) == i) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var array = string.split('');\n    var newArray = [];\n    for(var i = 0;\
    \ i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n        }\n  \
    \  }\n    return newArray.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_set.has(string[i].toLowerCase()) == false){\n      \
    \      char_set.add(string[i].toLowerCase());\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) === i){\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var array = string.split(\"\");\n    var newArray = [];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(newArray.indexOf(array[i].toLowerCase())\
    \ === -1){\n            newArray.push(array[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    let count = 0;\n    let characters = {};\n    for (let i = 0; i < string.length;\
    \ i++){\n        if (!characters[string[i].toLowerCase()]){\n            characters[string[i].toLowerCase()]\
    \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var seen = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        var char = string[i].toLowerCase();\n        if (!seen[char]){\n\
    \            seen[char] = true;\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var chars = string.toLowerCase().split('');\n    for(var\
    \ i = 0; i < chars.length; i++){\n        if(chars.indexOf(chars[i]) === i){\n\
    \            count++;\n        }\n    }\n    return count;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var unique = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (unique.indexOf(string[i]) == -1){\n            unique +=\
    \ string[i];\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmprne7kv6_.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmprne7kv6_.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var newString = string.toLowerCase();\n    for(var i\
    \ = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ === i){\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_count = {};\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (char_count[string[i]] === undefined){\n            char_count[string[i]]\
    \ = 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n9\n\nshould equal\n\n5\n    at test (/tmp/tmpw19qqqyq.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw19qqqyq.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected: 5,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char = string.toLowerCase();\n    for(var i = 0;\
    \ i < char.length; i++){\n        if(char.indexOf(char[i]) === i){\n         \
    \   count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var arr = string.split('');\n    var newArr = [];\n \
    \   for(var i = 0; i < arr.length; i++){\n        if(newArr.indexOf(arr[i].toLowerCase())\
    \ === -1){\n            newArr.push(arr[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var string = string.toLowerCase();\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.indexOf(string[i]) == i){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var result = [];\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (result.indexOf(string[i].toLowerCase()) == -1){\n            result.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return result.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\n// >>> count_distinct_characters('xyzXYZ')\n// 3\n\
    // >>> count_distinct_characters('Jerry')\n// 4\nfunction count_distinct_characters(string){\n\
    \    var count = 0;\n    var char_set = new Set();\n    for (var i = 0; i < string.length;\
    \ i++){\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

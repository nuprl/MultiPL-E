name: HumanEval_27_flip_case
language: javascript
results:
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else if(string[i] === string[i].toLowerCase()){\n        \
    \    newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    let newString = \"\";\n    for(let i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var flipped = '';\n    for (var i = 0; i < string.length; i++){\n       \
    \ if (string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        }\n        else {\n            flipped += string[i].toUpperCase();\n\
    \        }\n    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    } else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n  return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    }\n    else {\n      newString += string[i].toUpperCase();\n    }\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] == string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    }\n    else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n\
    \  return new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var flipped = '';\n    for (var i = 0; i < string.length; i++){\n       \
    \ if (string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var flipped = \"\";\n    for(var i = 0; i < string.length; i++){\n      \
    \  if(string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        }\n        else{\n            flipped += string[i].toUpperCase();\n \
    \       }\n    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] == string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var flipped = \"\";\n    for(var i = 0; i < string.length; i++){\n      \
    \  if(string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        }\n        else{\n            flipped += string[i].toUpperCase();\n \
    \       }\n    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    } else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n  return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] == string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    let result = '';\n    for(let i = 0; i < string.length; i++){\n        if(string[i]\
    \ === string[i].toUpperCase()){\n            result += string[i].toLowerCase();\n\
    \        }\n        else{\n            result += string[i].toUpperCase();\n  \
    \      }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    let newString = '';\n    for(let i = 0; i < string.length; i++){\n      \
    \  if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] == string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var flipped = \"\";\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else {\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var flipped = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n \
    \   }\n    else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    let newString = \"\";\n    for(let i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else {\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for(var i = 0; i < string.length; i++){\n   \
    \     if(string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase();\n\
    \        }\n    }\n    return new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

name: HumanEval_157_right_angle_triangle
language: javascript
prompt: "//Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\n// right_angle_triangle(3, 4, 5) == True\n// right_angle_triangle(1,\
  \ 2, 3) == False\nfunction right_angle_triangle(a, b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
  \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
completions: ["    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    if (a > b && a > c) {\n       \
    \ return a*a == b*b + c*c;\n    }\n    if (b > a && b > c) {\n        return b*b\
    \ == a*a + c*c;\n    }\n    if (c > a && c > b) {\n        return c*c == a*a +\
    \ b*b;\n    }\n}\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2)\
    \ == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n    \
    \    return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n\
    \        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n",
  "    // Your code here\n    if(a > b && a > c){\n        return Math.pow(a, 2) ==\
    \ Math.pow(b, 2) + Math.pow(c, 2);\n    }\n    else if(b > a && b > c){\n    \
    \    return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    }\n    else\
    \ if(c > a && c > b){\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b,\
    \ 2);\n    }\n    else{\n        return false;\n    }\n}\n", "    return (a*a\
    \ + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n", "    if (a\
    \ > b && a > c) {\n        return a * a == b * b + c * c;\n    } else if (b >\
    \ a && b > c) {\n        return b * b == a * a + c * c;\n    } else {\n      \
    \  return c * c == a * a + b * b;\n    }\n}\n", "    if (a > b && a > c){\n  \
    \      return a*a == b*b + c*c;\n    }\n    else if (b > a && b > c){\n      \
    \  return b*b == a*a + c*c;\n    }\n    else if (c > a && c > b){\n        return\
    \ c*c == a*a + b*b;\n    }\n    else {\n        return false;\n    }\n}\n", " \
    \   var sides = [a, b, c].sort(function(a, b){return a-b});\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) == Math.pow(sides[2], 2);\n}\n", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n", "    // your code here\n    if (a > b && a > c) {\n\
    \        return a*a == b*b + c*c;\n    }\n    if (b > a && b > c) {\n        return\
    \ b*b == a*a + c*c;\n    }\n    if (c > a && c > b) {\n        return c*c == a*a\
    \ + b*b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n\
    \    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a,\
    \ b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2\
    \ === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a\
    \ - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    var\
    \ arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2);\n}\n", "    let arr = [a, b,\
    \ c];\n    arr.sort(function(a, b){return a-b});\n    if (Math.pow(arr[0], 2)\
    \ + Math.pow(arr[1], 2) == Math.pow(arr[2], 2)) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n", "    return (a*a + b*b == c*c) ||\
    \ (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n", "    let sides = [a, b, c].sort((a,\
    \ b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) ===\
    \ Math.pow(sides[2], 2);\n}\n", "    if(a*a + b*b == c*c){\n        return true;\n\
    \    }\n    else if(a*a + c*c == b*b){\n        return true;\n    }\n    else\
    \ if(b*b + c*c == a*a){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}\n", "    if (a > b && a > c) {\n        return Math.pow(a,\
    \ 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n \
    \       return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else\
    \ {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n\
    }\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    if (a > b && a > c) {\n    \
    \    return a * a == b * b + c * c;\n    } else if (b > a && b > c) {\n      \
    \  return b * b == a * a + c * c;\n    } else {\n        return c * c == a * a\
    \ + b * b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort(function(a, b){return\
    \ a-b});\n    return arr[0]**2 + arr[1]**2 == arr[2]**2;\n}\n", "    let arr =\
    \ [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort(function(a,\
    \ b){return a-b});\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2],\
    \ 2);\n}\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return sides[0]**2\
    \ + sides[1]**2 === sides[2]**2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    if (arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\n", "    let arr\
    \ = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2)\
    \ + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0]**2 + arr[1]**2 === arr[2]**2;\n\
    }\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n", "    if (a > b\
    \ && a > c) {\n        return a * a == b * b + c * c;\n    } else if (b > a &&\
    \ b > c) {\n        return b * b == a * a + c * c;\n    } else {\n        return\
    \ c * c == a * a + b * b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0]**2 + arr[1]**2 === arr[2]**2;\n}\n", "    if\
    \ (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c == a*a) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "    let arr = [a,\
    \ b, c];\n    arr.sort(function(a, b){return a-b});\n    let a2 = arr[0] * arr[0];\n\
    \    let b2 = arr[1] * arr[1];\n    let c2 = arr[2] * arr[2];\n    if(a2 + b2\
    \ == c2){\n        return true;\n    }\n    return false;\n}\n", "    var max\
    \ = Math.max(a, b, c);\n    var min = Math.min(a, b, c);\n    var mid = a + b\
    \ + c - max - min;\n    return max * max === min * min + mid * mid;\n}\n", " \
    \   return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n",
  "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] **\
    \ 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n",
  "    if(a > b && a > c){\n        return a*a == b*b + c*c;\n    }\n    if(b > a\
    \ && b > c){\n        return b*b == a*a + c*c;\n    }\n    if(c > a && c > b){\n\
    \        return c*c == a*a + b*b;\n    }\n}\n", "    var arr = [a, b, c];\n  \
    \  arr.sort(function(a, b){return a-b});\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2);\n}\n", "    if(a > b && a > c){\n        return a\
    \ * a == b * b + c * c;\n    }else if(b > a && b > c){\n        return b * b ==\
    \ a * a + c * c;\n    }else{\n        return c * c == a * a + b * b;\n    }\n\
    }\n", "    return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n\
    }\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n",
  "    return (a*a + b*b === c*c) || (a*a + c*c === b*b) || (b*b + c*c === a*a);\n\
    }\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    if (a > b && a\
    \ > c) {\n        return a * a == b * b + c * c;\n    } else if (b > a && b >\
    \ c) {\n        return b * b == a * a + c * c;\n    } else {\n        return c\
    \ * c == a * a + b * b;\n    }\n}\n", "    // your code here\n}\n", "    var arr\
    \ = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n    if(Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2)){\n        return true;\n  \
    \  }\n    return false;\n}\n", "    let sides = [a, b, c].sort((a, b) => a - b);\n\
    \    return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) === Math.pow(sides[2],\
    \ 2);\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    return arr[0]**2 + arr[1]**2 == arr[2]**2;\n}\n", "    // your code here\n\
    \    if(a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c == a*a){\n        return\
    \ true;\n    }\n    return false;\n}\n", "    if (a > b && a > c) {\n        return\
    \ a * a == b * b + c * c;\n    } else if (b > a && b > c) {\n        return b\
    \ * b == a * a + c * c;\n    } else {\n        return c * c == a * a + b * b;\n\
    \    }\n}\n", "    if(a > b && a > c){\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    }else if(b > a && b > c){\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    }else{\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    if(a > b && a > c){\n\
    \        return Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    }\n  \
    \  else if(b > a && b > c){\n        return Math.pow(b, 2) == Math.pow(a, 2) +\
    \ Math.pow(c, 2);\n    }\n    else{\n        return Math.pow(c, 2) == Math.pow(a,\
    \ 2) + Math.pow(b, 2);\n    }\n}\n", "    if(a > b && a > c){\n        return\
    \ a*a === b*b + c*c;\n    }\n    if(b > a && b > c){\n        return b*b === a*a\
    \ + c*c;\n    }\n    if(c > a && c > b){\n        return c*c === a*a + b*b;\n\
    \    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    var arr = [a, b, c];\n\
    \    arr.sort(function(a, b){return a-b});\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2);\n}\n", "    if (a*a + b*b == c*c || a*a + c*c ==\
    \ b*b || b*b + c*c == a*a) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "  var arr = [a, b, c];\n  arr.sort(function(a, b){return\
    \ a-b});\n  return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    // your code here\n    if (a > b && a > c) {\n        return\
    \ Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a &&\
    \ b > c) {\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n\
    \    } else {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n\
    \    }\n}\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n",
  "    return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n",
  "    // your code here\n    if(a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a){\n        return true;\n    }\n    return false;\n}\n", "    let arr\
    \ = [a, b, c];\n    arr.sort((a, b) => a - b);\n    let [x, y, z] = arr;\n   \
    \ return x * x + y * y === z * z;\n}\n", "    let max = Math.max(a, b, c);\n \
    \   let sum = a + b + c;\n    return (max * max) === (sum - max) * (sum - max);\n\
    }\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n",
  "    if (a > b && a > c) {\n        return a*a == b*b + c*c;\n    } else if (b >\
    \ a && b > c) {\n        return b*b == a*a + c*c;\n    } else {\n        return\
    \ c*c == a*a + b*b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}", " \
    \   return a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c == a*a;\n}\n", " \
    \   let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n", "    return (a**2 + b**2 == c**2) || (a**2 + c**2\
    \ == b**2) || (b**2 + c**2 == a**2)\n}\n", "    if (a > b && a > c) {\n      \
    \  return a*a === b*b + c*c;\n    } else if (b > a && b > c) {\n        return\
    \ b*b === a*a + c*c;\n    } else {\n        return c*c === a*a + b*b;\n    }\n\
    }\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let max = Math.max(a,\
    \ b, c);\n    let sum = a + b + c;\n    if (max == a) {\n        return (b * b\
    \ + c * c == a * a);\n    } else if (max == b) {\n        return (a * a + c *\
    \ c == b * b);\n    } else {\n        return (a * a + b * b == c * c);\n    }\n\
    }\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    return Math.pow(a, 2) + Math.pow(b, 2) === Math.pow(c, 2)\n\
    }\n", "    if(a*a + b*b == c*c){\n        return true;\n    }\n    if(a*a + c*c\
    \ == b*b){\n        return true;\n    }\n    if(b*b + c*c == a*a){\n        return\
    \ true;\n    }\n    return false;\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a,\
    \ b){return a-b});\n    if (Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2],\
    \ 2)){\n        return true;\n    }\n    return false;\n}\n", "    let arr = [a,\
    \ b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    if (arr[0]**2 + arr[1]**2 == arr[2]**2){\n        return true;\n    }\n \
    \   return false;\n}\n", "    // your code here\n    let arr = [a, b, c];\n  \
    \  arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n", "    return (a*a + b*b === c*c) || (a*a +\
    \ c*c === b*b) || (b*b + c*c === a*a);\n}\n", "    let arr = [a, b, c].sort((a,\
    \ b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    if(a > b && a > c){\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    }else if(b > a && b > c){\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    }else{\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    // Your code here\n\
    \    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b, 2) +\
    \ Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    if (a > b && a > c)\
    \ {\n        return a * a == b * b + c * c;\n    } else if (b > a && b > c) {\n\
    \        return b * b == a * a + c * c;\n    } else {\n        return c * c ==\
    \ a * a + b * b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b)\
    \ => a - b);\n    let [x, y, z] = arr;\n    return x ** 2 + y ** 2 === z ** 2;\n\
    }\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n \
    \   var a = arr[0];\n    var b = arr[1];\n    var c = arr[2];\n    return Math.pow(a,\
    \ 2) + Math.pow(b, 2) == Math.pow(c, 2);\n}\n", "    let max = Math.max(a, b,\
    \ c);\n    let min = Math.min(a, b, c);\n    let mid = a + b + c - max - min;\n\
    \    return max * max === min * min + mid * mid;\n}\n", "    if (a > b && a >\
    \ c) {\n        return a*a == b*b + c*c\n    } else if (b > a && b > c) {\n  \
    \      return b*b == a*a + c*c\n    } else {\n        return c*c == a*a + b*b\n\
    \    }\n}\n", "    if(a > b && a > c){\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    }\n    else if(b > a && b > c){\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    }\n    else{\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\n", "    if(a*a + b*b == c*c){\n        return true;\n    }\n    else\
    \ if(a*a + c*c == b*b){\n        return true;\n    }\n    else if(b*b + c*c ==\
    \ a*a){\n        return true;\n    }\n    else{\n        return false;\n    }\n\
    }\n", "    return (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2)) || (Math.pow(a,\
    \ 2) + Math.pow(c, 2) == Math.pow(b, 2)) || (Math.pow(b, 2) + Math.pow(c, 2) ==\
    \ Math.pow(a, 2))\n}\n", "    // your code here\n    var arr = [a, b, c];\n  \
    \  arr.sort(function(a, b){return a-b});\n    if (Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2)){\n        return true;\n    }\n    return false;\n\
    }\n", "    if(a > b && a > c){\n        return a*a == b*b + c*c;\n    }\n    if(b\
    \ > a && b > c){\n        return b*b == a*a + c*c;\n    }\n    if(c > a && c >\
    \ b){\n        return c*c == a*a + b*b;\n    }\n}\n", "    var arr = [a, b, c];\n\
    \    arr.sort(function(a, b){return a-b});\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2);\n}\n", "    if(a > b && a > c){\n        return a*a\
    \ == b*b + c*c;\n    }\n    if(b > a && b > c){\n        return b*b == a*a + c*c;\n\
    \    }\n    if(c > a && c > b){\n        return c*c == a*a + b*b;\n    }\n}\n",
  "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n", "    // your code here\n    if(a*a + b*b == c*c){\n\
    \        return true;\n    }\n    else if(a*a + c*c == b*b){\n        return true;\n\
    \    }\n    else if(b*b + c*c == a*a){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\n", "    if (a > b && a > c) {\n        return\
    \ Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a &&\
    \ b > c) {\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n\
    \    } else {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n\
    \    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2]\
    \ ** 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n   \
    \ if (arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2) {\n        return true;\n   \
    \ }\n    return false;\n}\n", "  return (a*a + b*b == c*c) || (a*a + c*c == b*b)\
    \ || (b*b + c*c == a*a);\n}\n", "    if (a > b && a > c) {\n        return Math.pow(a,\
    \ 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n \
    \       return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else\
    \ {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n\
    }\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n \
    \   return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2);\n\
    }\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0]**2\
    \ + arr[1]**2 === arr[2]**2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return arr[0] * arr[0] + arr[1] * arr[1] === arr[2] * arr[2];\n\
    }\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let max = Math.max(a,\
    \ b, c);\n    let sum = a + b + c;\n    let sum_without_max = sum - max;\n   \
    \ return max * max == sum_without_max * sum_without_max;\n}\n", "    if (a > b\
    \ && a > c) {\n        return Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n\
    \    } else if (b > a && b > c) {\n        return Math.pow(b, 2) == Math.pow(a,\
    \ 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c, 2) == Math.pow(a,\
    \ 2) + Math.pow(b, 2);\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    let [x, y, z] = arr;\n    return x ** 2 + y ** 2 === z **\
    \ 2;\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    if(Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2)){\n \
    \       return true;\n    }\n    return false;\n}\n", "    // your code here\n\
    }\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let max = Math.max(a,\
    \ b, c);\n    let sum = a + b + c;\n    let sumMinusMax = sum - max;\n    if (max\
    \ * max == sumMinusMax * sumMinusMax) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n", "    if(a > b && a > c){\n        return\
    \ a*a == b*b + c*c;\n    }\n    if(b > a && b > c){\n        return b*b == a*a\
    \ + c*c;\n    }\n    if(c > a && c > b){\n        return c*c == a*a + b*b;\n \
    \   }\n}\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return arr[0]\
    \ ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    return (a*a + b*b == c*c) ||\
    \ (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n", "    var arr = [a, b, c];\n\
    \    arr.sort(function(a, b){return a-b});\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2);\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    if (a > b && a > c) {\n        return a * a == b * b + c * c;\n\
    \    } else if (b > a && b > c) {\n        return b * b == a * a + c * c;\n  \
    \  } else {\n        return c * c == a * a + b * b;\n    }\n}\n", "    // your\
    \ code here\n    if(a*a + b*b == c*c){\n        return true;\n    }\n    if(a*a\
    \ + c*c == b*b){\n        return true;\n    }\n    if(b*b + c*c == a*a){\n   \
    \     return true;\n    }\n    return false;\n}\n", "    if (a > b && a > c) {\n\
    \        return Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else\
    \ if (b > a && b > c) {\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c,\
    \ 2);\n    } else {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b,\
    \ 2);\n    }\n}\n", "    return (a**2 + b**2 == c**2) || (a**2 + c**2 == b**2)\
    \ || (b**2 + c**2 == a**2)\n}\n", "    if (a > b && a > c) {\n        return (a\
    \ * a == b * b + c * c);\n    } else if (b > a && b > c) {\n        return (b\
    \ * b == a * a + c * c);\n    } else {\n        return (c * c == a * a + b * b);\n\
    \    }\n}\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    // your code here\n\
    }\n", "    if (a > b && a > c) {\n        return Math.pow(a, 2) == Math.pow(b,\
    \ 2) + Math.pow(c, 2);\n    } else if (b > a && b > c) {\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    } else {\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    return arr[0] * arr[0] + arr[1] * arr[1]\
    \ === arr[2] * arr[2];\n}\n", "    if(a > b && a > c){\n        return a*a ==\
    \ b*b + c*c;\n    }else if(b > a && b > c){\n        return b*b == a*a + c*c;\n\
    \    }else{\n        return c*c == a*a + b*b;\n    }\n}\n", "    let arr = [a,\
    \ b, c];\n    arr.sort(function(a, b){return a-b});\n    let [x, y, z] = arr;\n\
    \    if (x*x + y*y == z*z) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    if(a**2 + b**2 == c**2){\n        return true;\n \
    \   }\n    else if(a**2 + c**2 == b**2){\n        return true;\n    }\n    else\
    \ if(b**2 + c**2 == a**2){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}\n", "  if (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c\
    \ == a*a) {\n    return true;\n  } else {\n    return false;\n  }\n}\n", "   \
    \ return (a**2 + b**2 == c**2) || (a**2 + c**2 == b**2) || (b**2 + c**2 == a**2)\n\
    }\n", "    if (a > b && a > c) {\n        return a*a == b*b + c*c;\n    } else\
    \ if (b > a && b > c) {\n        return b*b == a*a + c*c;\n    } else {\n    \
    \    return c*c == a*a + b*b;\n    }\n}\n", "    if (a*a + b*b == c*c) {\n   \
    \     return true;\n    } else {\n        return false;\n    }\n}", "    let sides\
    \ = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n", "    if (a > b && a > c) {\n        return\
    \ Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a &&\
    \ b > c) {\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n\
    \    } else {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n\
    \    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "  let arr = [a, b, c];\n\
    \  arr.sort((a, b) => a - b);\n  return arr[0] ** 2 + arr[1] ** 2 === arr[2] **\
    \ 2;\n}\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    let arr = [a, b, c];\n\
    \    arr.sort(function(a, b){return a-b});\n    if (Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) == Math.pow(arr[2], 2)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    let max = Math.max(a, b, c);\n    let min = Math.min(a,\
    \ b, c);\n    let mid = a + b + c - max - min;\n    return max ** 2 === min **\
    \ 2 + mid ** 2;\n}\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return\
    \ arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    var max = Math.max(a,\
    \ b, c);\n    var sum = a + b + c;\n    var result = sum - max;\n    if (max *\
    \ max == result * result) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    return Math.pow(a, 2) + Math.pow(b, 2) === Math.pow(c,\
    \ 2)\n}\n", "    //find the hypotenuse\n    if(a > b && a > c){\n        return\
    \ Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    }else if(b > a && b\
    \ > c){\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n \
    \   }else{\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n\
    \    }\n}\n", "    // your code here\n}\n", "    if(a*a + b*b == c*c){\n     \
    \   return true;\n    }\n    else if(a*a + c*c == b*b){\n        return true;\n\
    \    }\n    else if(b*b + c*c == a*a){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\n", "    // Your code here\n    if (a * a + b\
    \ * b == c * c || a * a + c * c == b * b || b * b + c * c == a * a) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\n", "    let arr\
    \ = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a,\
    \ b){return a-b});\n    return arr[0]*arr[0] + arr[1]*arr[1] == arr[2]*arr[2];\n\
    }\n", "    // your code here\n}\n", "    if (a > b && a > c){\n        return\
    \ a*a == b*b + c*c;\n    } else if (b > a && b > c){\n        return b*b == a*a\
    \ + c*c;\n    } else {\n        return c*c == a*a + b*b;\n    }\n}\n", "    //\
    \ your code here\n    if(a > b && a > c){\n        if(a*a == b*b + c*c){\n   \
    \         return true;\n        }\n    }\n    if(b > a && b > c){\n        if(b*b\
    \ == a*a + c*c){\n            return true;\n        }\n    }\n    if(c > a &&\
    \ c > b){\n        if(c*c == a*a + b*b){\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "  let sides = [a, b, c].sort((a, b) => a - b);\n\
    \  return Math.pow(sides[0], 2) + Math.pow(sides[1], 2) === Math.pow(sides[2],\
    \ 2);\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    return arr[0]*arr[0] + arr[1]*arr[1] == arr[2]*arr[2];\n}\n", "    return\
    \ (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n", "   \
    \ //your code here\n    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n\
    \    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    if(a > b &&\
    \ a > c){\n        return a*a == b*b + c*c;\n    }\n    if(b > a && b > c){\n\
    \        return b*b == a*a + c*c;\n    }\n    if(c > a && c > b){\n        return\
    \ c*c == a*a + b*b;\n    }\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c\
    \ == a*a);\n}\n", "    let arr = [a, b, c].sort((a, b) => a - b);\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", " \
    \   return (a*a + b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n",
  "    return (a*a + b*b === c*c) || (a*a + c*c === b*b) || (b*b + c*c === a*a);\n\
    }\n", "    if(a > b && a > c){\n        return Math.pow(a, 2) == Math.pow(b, 2)\
    \ + Math.pow(c, 2);\n    }else if(b > a && b > c){\n        return Math.pow(b,\
    \ 2) == Math.pow(a, 2) + Math.pow(c, 2);\n    }else{\n        return Math.pow(c,\
    \ 2) == Math.pow(a, 2) + Math.pow(b, 2);\n    }\n}\n", "    if (a > b && a > c){\n\
    \        return a*a == b*b + c*c;\n    } else if (b > a && b > c){\n        return\
    \ b*b == a*a + c*c;\n    } else {\n        return c*c == a*a + b*b;\n    }\n}\n",
  "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n    return\
    \ Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2);\n}\n", " \
    \   let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    return (a*a +\
    \ b*b == c*c) || (a*a + c*c == b*b) || (b*b + c*c == a*a);\n}\n", "    if (a >\
    \ b && a > c) {\n        return a * a == b * b + c * c;\n    } else if (b > a\
    \ && b > c) {\n        return b * b == a * a + c * c;\n    } else {\n        return\
    \ c * c == a * a + b * b;\n    }\n}\n", "    if (a*a + b*b == c*c) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n", "  if (a > b\
    \ && a > c) {\n    return Math.pow(a, 2) === Math.pow(b, 2) + Math.pow(c, 2);\n\
    \  } else if (b > a && b > c) {\n    return Math.pow(b, 2) === Math.pow(a, 2)\
    \ + Math.pow(c, 2);\n  } else {\n    return Math.pow(c, 2) === Math.pow(a, 2)\
    \ + Math.pow(b, 2);\n  }\n}\n", "    // your code here\n    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    let [x, y, z] = arr;\n    return Math.pow(x,\
    \ 2) + Math.pow(y, 2) === Math.pow(z, 2);\n}\n", "    if (a*a + b*b == c*c) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n", "   \
    \ let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n", "    return (a**2 + b**2 == c**2) || (a**2\
    \ + c**2 == b**2) || (b**2 + c**2 == a**2)\n}\n", "    let arr = [a, b, c];\n\
    \    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1],\
    \ 2) === Math.pow(arr[2], 2);\n}\n", "    if (a > b && a > c) {\n        return\
    \ Math.pow(a, 2) == Math.pow(b, 2) + Math.pow(c, 2);\n    } else if (b > a &&\
    \ b > c) {\n        return Math.pow(b, 2) == Math.pow(a, 2) + Math.pow(c, 2);\n\
    \    } else {\n        return Math.pow(c, 2) == Math.pow(a, 2) + Math.pow(b, 2);\n\
    \    }\n}\n", "    var a2 = Math.pow(a, 2);\n    var b2 = Math.pow(b, 2);\n  \
    \  var c2 = Math.pow(c, 2);\n    if (a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2\
    \ == a2) {\n        return true;\n    }\n    return false;\n}\n", "    let arr\
    \ = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return arr[0] ** 2 + arr[1]\
    \ ** 2 === arr[2] ** 2;\n}\n", "    if (a > b && a > c){\n        return a*a ==\
    \ b*b + c*c;\n    }\n    else if (b > a && b > c){\n        return b*b == a*a\
    \ + c*c;\n    }\n    else if (c > a && c > b){\n        return c*c == a*a + b*b;\n\
    \    }\n    else {\n        return false;\n    }\n}\n", "    let arr = [a, b,\
    \ c];\n    arr.sort((a, b) => a - b);\n    return arr[0]**2 + arr[1]**2 === arr[2]**2;\n\
    }\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n \
    \   return arr[0]**2 + arr[1]**2 == arr[2]**2;\n}\n", "    let sides = [a, b,\
    \ c].sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n", "    let arr = [a, b, c];\n    arr.sort((a,\
    \ b) => a - b);\n    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) === Math.pow(arr[2],\
    \ 2);\n}\n", "    var arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n\
    \    return Math.pow(arr[0], 2) + Math.pow(arr[1], 2) == Math.pow(arr[2], 2);\n\
    }\n", "    let arr = [a, b, c];\n    arr.sort((a, b) => a - b);\n    return Math.pow(arr[0],\
    \ 2) + Math.pow(arr[1], 2) === Math.pow(arr[2], 2);\n}\n", "    let sides = [a,\
    \ b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0], 2) + Math.pow(sides[1],\
    \ 2) === Math.pow(sides[2], 2);\n}\n", "    let arr = [a, b, c].sort((a, b) =>\
    \ a - b);\n    return arr[0] ** 2 + arr[1] ** 2 === arr[2] ** 2;\n}\n", "    var\
    \ arr = [a, b, c];\n    arr.sort(function(a, b){return a-b});\n    return arr[0]**2\
    \ + arr[1]**2 == arr[2]**2;\n}\n", "    return (a*a + b*b === c*c) || (a*a + c*c\
    \ === b*b) || (b*b + c*c === a*a);\n}\n", "    if (a > b && a > c) {\n       \
    \ return a*a == b*b + c*c;\n    } else if (b > a && b > c) {\n        return b*b\
    \ == a*a + c*c;\n    } else {\n        return c*c == a*a + b*b;\n    }\n}\n",
  "    let sides = [a, b, c].sort((a, b) => a - b);\n    return Math.pow(sides[0],\
    \ 2) + Math.pow(sides[1], 2) === Math.pow(sides[2], 2);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_20_find_closest_elements
language: javascript
prompt: "//From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n\
  // (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n//\
  \ (2.0, 2.0)\nfunction find_closest_elements(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
  \ 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
  \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
completions: ["    var closest = [numbers[0], numbers[1]];\n    var closest_diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length -\
    \ 1; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n          \
    \  var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n \
    \   for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = 0;\n    for (var i = 0; i < numbers.length - 1; i++){\n \
    \       if (Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            min_index = i;\n        }\n    }\n    return\
    \ [numbers[min_index], numbers[min_index + 1]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    if (closest[0] > closest[1]){\n\
    \        var temp = closest[0];\n        closest[0] = closest[1];\n        closest[1]\
    \ = temp;\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var distance =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < distance){\n                distance =\
    \ Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest_elements = [numbers[0], numbers[1]];\n\
    \    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n    var current_difference;\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            current_difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (current_difference < closest_difference){\n\
    \                closest_difference = current_difference;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var closest =\
    \ [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n   \
    \ var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_pair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_pair;\n}\n", "    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = numbers[0] - numbers[1];\n    var min_index = 0;\n    for(var i\
    \ = 0; i < numbers.length - 1; i++){\n        var diff = numbers[i] - numbers[i\
    \ + 1];\n        if(Math.abs(diff) < Math.abs(min)){\n            min = diff;\n\
    \            min_index = i;\n        }\n    }\n    return (numbers[min_index],\
    \ numbers[min_index + 1]);\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var smallest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < smallest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                smallest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length - 1; i++){\n        for\
    \ (var j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < distance){\n            \
    \    closest = [numbers[i], numbers[j]];\n                distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n", " \
    \   var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i+1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        for (var j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_index = [i, j];\n            }\n       \
    \ }\n    }\n    return [numbers[min_index[0]], numbers[min_index[1]]];\n}\n",
  "    var min = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    var closest = numbers[0] - numbers[1];\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest_elements\
    \ = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest_diff){\n\
    \                closest_diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \       closest_elements = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest_elements;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var index = 0;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(Math.abs(numbers[i] - numbers[i+1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i+1]);\n            index = i;\n        }\n    }\n    return [numbers[index],\
    \ numbers[index+1]];\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_pair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n   \
    \ var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length; j++)\
    \ {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n            if\
    \ (diff < closest_diff) {\n                closest_diff = diff;\n            \
    \    closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n  \
    \  return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = numbers[0]\
    \ + numbers[1];\n    var closest_pair = [numbers[0], numbers[1]];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] + numbers[j]) < closest){\n     \
    \           closest = Math.abs(numbers[i] + numbers[j]);\n                closest_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    let closest = [numbers[0], numbers[1]];\n    let diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0; i < numbers.length;\
    \ i++){\n        for (let j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var closest =\
    \ [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var diff = [];\n    var closest = [];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            diff.push(Math.abs(numbers[i] - numbers[j]));\n\
    \        }\n    }\n    var min = Math.min.apply(null, diff);\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) == min){\n        \
    \        closest.push(numbers[i]);\n                closest.push(numbers[j]);\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = 0;\n    for (var i = 1; i < numbers.length\
    \ - 1; i++){\n        if (Math.abs(numbers[i] - numbers[i + 1]) < min){\n    \
    \        min = Math.abs(numbers[i] - numbers[i + 1]);\n            min_index =\
    \ i;\n        }\n    }\n    return (numbers[min_index], numbers[min_index + 1]);\n\
    }\n", "    var closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \        closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var min_diff = numbers[1] - numbers[0];\n   \
    \ var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min_diff){\n                min_diff =\
    \ Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_pair = [numbers[i], numbers[j]];\n            }\n       \
    \ }\n    }\n    return min_pair;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var index = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n      \
    \  if(Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            index = i;\n        }\n    }\n    return (numbers[index],\
    \ numbers[index + 1]);\n}\n", "    var closest = [numbers[0], numbers[1]];\n \
    \   var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var x\
    \ = numbers[0];\n    var y = numbers[1];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                x = numbers[i];\n                y = numbers[j];\n          \
    \  }\n        }\n    }\n    return [x, y];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = numbers[0]\
    \ - numbers[1];\n    var closest_elements = [numbers[0], numbers[1]];\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest){\n     \
    \           closest = Math.abs(numbers[i] - numbers[j]);\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                min_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n\
    }\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length - 1; i++){\n        if\
    \ (Math.abs(numbers[i] - numbers[i + 1]) < min){\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            result = [numbers[i], numbers[i + 1]];\n   \
    \     }\n    }\n    return result;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [];\n    var min_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var difference = Math.abs(numbers[0] - numbers[1]);\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < difference){\n  \
    \              closest = [numbers[i], numbers[j]];\n                difference\
    \ = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    var diff;\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest[0] = numbers[i];\n                closest[1]\
    \ = numbers[j];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length - 1; i++){\n        for\
    \ (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_pair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = numbers[0] - numbers[1];\n \
    \   var min_index = 0;\n    for(var i = 0; i < numbers.length - 1; i++){\n   \
    \     var diff = numbers[i] - numbers[i + 1];\n        if(diff < min){\n     \
    \       min = diff;\n            min_index = i;\n        }\n    }\n    return\
    \ [numbers[min_index], numbers[min_index + 1]];\n}\n", "    var closest = [];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest_distance){\n\
    \                closest_distance = Math.abs(numbers[i] - numbers[j]);\n     \
    \           closest = [numbers[i], numbers[j]];\n            }\n        }\n  \
    \  }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length\
    \ - 1; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n        \
    \    if (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest_diff = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest_diff = diff;\n                closest\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n    var result =\
    \ [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n \
    \       for (var j = i + 1; j < numbers.length; j++){\n            var diff =\
    \ Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n    \
    \            min_diff = diff;\n                result = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var closest =\
    \ [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = closest[1] - closest[0];\n    for (var i = 0; i\
    \ < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_index = [0, 1];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i, j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest = [numbers[0], numbers[1]];\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        diff = Math.abs(numbers[i] - numbers[j]);\n                closest[0]\
    \ = numbers[i];\n                closest[1] = numbers[j];\n            }\n   \
    \     }\n    }\n    return closest;\n}\n", "    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0;\
    \ i < numbers.length; i++){\n        for (let j = i + 1; j < numbers.length; j++){\n\
    \            let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [];\n\
    \    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest_pair = [numbers[0], numbers[1]];\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < closest){\n     \
    \           closest = Math.abs(numbers[i] - numbers[j]);\n                closest_pair\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_distance =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ distance = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_distance\
    \ = distance;\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < difference){\n                difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var closest_elements = [numbers[0], numbers[1]];\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < min_diff){\n                min_diff = diff;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var closest =\
    \ [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i\
    \ < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            if (Math.abs(numbers[i] - numbers[j]) < min){\n                min\
    \ = Math.abs(numbers[i] - numbers[j]);\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var min = numbers[0];\n    var max = numbers[0];\n    var min_index = 0;\n\
    \    var max_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n      \
    \  if(numbers[i] < min){\n            min = numbers[i];\n            min_index\
    \ = i;\n        }\n        if(numbers[i] > max){\n            max = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n    var min_diff = max - min;\n\
    \    var min_diff_index = [min_index, max_index];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = 0; j < numbers.length; j++){\n            if(i !=\
    \ j){\n                if(Math.abs(numbers[i] - numbers[j]) < min_diff){\n   \
    \                 min_diff = Math.abs(numbers[i] - numbers[j]);\n            \
    \        min_diff_index = [i, j];\n                }\n            }\n        }\n\
    \    }\n    return [numbers[min_diff_index[0]], numbers[min_diff_index[1]]];\n\
    }\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n    var closest = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = 0;\n    for (var i = 1; i < numbers.length\
    \ - 1; i++){\n        if (Math.abs(numbers[i] - numbers[i + 1]) < min){\n    \
    \        min = Math.abs(numbers[i] - numbers[i + 1]);\n            min_index =\
    \ i;\n        }\n    }\n    return (numbers[min_index], numbers[min_index + 1]);\n\
    }\n", "    var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var smallest = numbers[0];\n   \
    \ var largest = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n  \
    \      if(numbers[i] < smallest){\n            smallest = numbers[i];\n      \
    \  }\n        if(numbers[i] > largest){\n            largest = numbers[i];\n \
    \       }\n    }\n    closest.push(smallest);\n    closest.push(largest);\n  \
    \  return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var\
    \ diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var closest =\
    \ [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var result = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i + 1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result[0] = numbers[i];\n                result[1] = numbers[j];\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var closest =\
    \ [];\n    var diff = [];\n    for (var i = 0; i < numbers.length; i++){\n   \
    \     for (var j = 0; j < numbers.length; j++){\n            if (i != j){\n  \
    \              diff.push(Math.abs(numbers[i] - numbers[j]));\n            }\n\
    \        }\n    }\n    var min = Math.min.apply(null, diff);\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = 0; j < numbers.length; j++){\n\
    \            if (i != j){\n                if (Math.abs(numbers[i] - numbers[j])\
    \ == min){\n                    closest.push(numbers[i]);\n                  \
    \  closest.push(numbers[j]);\n                }\n            }\n        }\n  \
    \  }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var distance = Math.abs(numbers[i] - numbers[j]);\n     \
    \       if (distance < closest_distance){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ closest = [];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        diff = Math.abs(numbers[i] - numbers[j]);\n                closest =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    var closest = numbers[0] - numbers[1];\n    var closest_pair = [numbers[0],\
    \ numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ min){\n                min = Math.abs(numbers[i] - numbers[j]);\n          \
    \      result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n \
    \   return result;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var\
    \ closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest = [numbers[i], numbers[j]];\n                closest_diff\
    \ = diff;\n            }\n        }\n    }\n    return closest;\n}\n", "    var\
    \ min = Math.abs(numbers[0] - numbers[1]);\n    var min_index = [0, 1];\n    for\
    \ (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                min_index =\
    \ [i, j];\n            }\n        }\n    }\n    return [numbers[min_index[0]],\
    \ numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n   \
    \ var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_pair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j]) <\
    \ diff){\n                closest = [numbers[i], numbers[j]];\n              \
    \  diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n    }\n\
    \    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest = [numbers[i], numbers[j]];\n      \
    \      }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest_elements = [];\n    var smallest_difference\
    \ = numbers[1] - numbers[0];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = i + 1; j < numbers.length; j++){\n            var difference\
    \ = numbers[j] - numbers[i];\n            if (difference < smallest_difference){\n\
    \                smallest_difference = difference;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest_diff = diff;\n\
    \                closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = 0; j < numbers.length; j++){\n            if (i\
    \ != j){\n                var diff = Math.abs(numbers[i] - numbers[j]);\n    \
    \            if (diff < closest_diff){\n                    closest_diff = diff;\n\
    \                    closest = [numbers[i], numbers[j]];\n                }\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var min_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    var min_pair = [numbers[0], numbers[1]];\n\
    \    for (var i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1;\
    \ j < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < min_diff){\n                min_diff = diff;\n       \
    \         min_pair = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return min_pair;\n}\n", "    var min = numbers[0] - numbers[1];\n   \
    \ var min_index = 0;\n    for(var i = 0; i < numbers.length; i++){\n        if(i\
    \ == numbers.length - 1){\n            break;\n        }\n        if(Math.abs(numbers[i]\
    \ - numbers[i+1]) < min){\n            min = Math.abs(numbers[i] - numbers[i+1]);\n\
    \            min_index = i;\n        }\n    }\n    return [numbers[min_index],\
    \ numbers[min_index+1]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var min = numbers[0]\
    \ - numbers[1];\n    var min_index = [0,1];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var j = i+1; j < numbers.length; j++){\n            if(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_index = [i,j];\n            }\n        }\n    }\n    return\
    \ [numbers[min_index[0]], numbers[min_index[1]]];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var smallest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < smallest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                smallest_diff = diff;\n       \
    \     }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] -\
    \ numbers[j]) < diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n            }\n  \
    \      }\n    }\n    return closest;\n}\n", "    var closest = [];\n    var closest_diff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < closest_diff){\n\
    \                closest_diff = diff;\n                closest = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < Math.abs(closest[0] - closest[1])){\n \
    \               closest = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i+1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++) {\n        for (var j = i + 1; j < numbers.length;\
    \ j++) {\n            var diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var i, j, min_diff, diff, min_i, min_j;\n    min_diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    min_i = 0;\n    min_j = 1;\n    for\
    \ (i = 0; i < numbers.length; i++){\n        for (j = i + 1; j < numbers.length;\
    \ j++){\n            diff = Math.abs(numbers[i] - numbers[j]);\n            if\
    \ (diff < min_diff){\n                min_diff = diff;\n                min_i\
    \ = i;\n                min_j = j;\n            }\n        }\n    }\n    return\
    \ [numbers[min_i], numbers[min_j]];\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i+1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n", "\tvar closest = [];\n\tvar min\
    \ = Math.abs(numbers[0] - numbers[1]);\n\tfor(var i = 0; i < numbers.length; i++){\n\
    \t\tfor(var j = i + 1; j < numbers.length; j++){\n\t\t\tif(Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n\t\t\t\tmin = Math.abs(numbers[i] - numbers[j]);\n\t\t\
    \t\tclosest = [numbers[i], numbers[j]];\n\t\t\t}\n\t\t}\n\t}\n\treturn closest;\n\
    }\n", "    var min = numbers[0];\n    var max = numbers[0];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        if(numbers[i] < min){\n            min =\
    \ numbers[i];\n        }\n        if(numbers[i] > max){\n            max = numbers[i];\n\
    \        }\n    }\n    return [min, max];\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length; j++){\n\
    \            var diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff\
    \ < closest_diff){\n                closest = [numbers[i], numbers[j]];\n    \
    \            closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    let min = Math.abs(numbers[0] - numbers[1]);\n    let result\
    \ = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length; i++){\n\
    \        for (let j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min){\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                result = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    var diff = 0;\n    var diff_array = [];\n\
    \    var closest_elements = [];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = 0; j < numbers.length; j++){\n            if (i != j){\n\
    \                diff = Math.abs(numbers[i] - numbers[j]);\n                diff_array.push(diff);\n\
    \            }\n        }\n    }\n    var min = Math.min.apply(null, diff_array);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = 0; j < numbers.length;\
    \ j++){\n            if (i != j){\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n                if (diff == min){\n                    closest_elements.push(numbers[i]);\n\
    \                    closest_elements.push(numbers[j]);\n                }\n \
    \           }\n        }\n    }\n    closest_elements.sort(function(a, b){return\
    \ a-b});\n    return closest_elements;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    var min_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff){\n\
    \                min_diff = diff;\n                min_pair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return min_pair;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var minDiff = numbers[1] - numbers[0];\n\
    \    var minPair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            var\
    \ diff = numbers[j] - numbers[i];\n            if (diff < minDiff){\n        \
    \        minDiff = diff;\n                minPair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return minPair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < diff){\n        \
    \        closest = [numbers[i], numbers[j]];\n                diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            }\n        }\n    }\n    return closest;\n}\n",
  "    var closest = [numbers[0], numbers[1]];\n    var closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance){\n            \
    \    closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length - 1; i++){\n        for (var j = i + 1;\
    \ j < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < diff){\n                closest = [numbers[i], numbers[j]];\n            \
    \    diff = Math.abs(numbers[i] - numbers[j]);\n            }\n        }\n   \
    \ }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var min_index = 0;\n    for (var i = 0; i < numbers.length\
    \ - 1; i++){\n        if (Math.abs(numbers[i] - numbers[i + 1]) < min){\n    \
    \        min = Math.abs(numbers[i] - numbers[i + 1]);\n            min_index =\
    \ i;\n        }\n    }\n    return [numbers[min_index], numbers[min_index + 1]];\n\
    }\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n    var closest_pair\
    \ = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length; i++){\n\
    \        for (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < closest){\n                closest = Math.abs(numbers[i] - numbers[j]);\n\
    \                closest_pair = [numbers[i], numbers[j]];\n            }\n   \
    \     }\n    }\n    return closest_pair;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = Math.abs(numbers[0] - numbers[1]);\n\
    \    var closest_pair = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < closest){\n                closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                closest_pair = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closest_pair;\n}\n", "    var closest\
    \ = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n\
    \    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \   if (diff < closest_diff){\n                closest = [numbers[i], numbers[j]];\n\
    \                closest_diff = diff;\n            }\n        }\n    }\n    return\
    \ closest;\n}\n", "    var closest = [numbers[0], numbers[1]];\n    var diff =\
    \ Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                diff = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var result = [numbers[0], numbers[1]];\n    for (var i =\
    \ 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            if (Math.abs(numbers[i] - numbers[j]) < min){\n         \
    \       min = Math.abs(numbers[i] - numbers[j]);\n                result = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   var closest = [numbers[0], numbers[1]];\n    var closest_diff = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i + 1; j < numbers.length; j++){\n            var diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < closest_diff){\n                closest\
    \ = [numbers[i], numbers[j]];\n                closest_diff = diff;\n        \
    \    }\n        }\n    }\n    return closest;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var min = Math.abs(numbers[0] - numbers[1]);\n\
    \    var result = [numbers[0], numbers[1]];\n    for (var i = 0; i < numbers.length;\
    \ i++){\n        for (var j = i + 1; j < numbers.length; j++){\n            if\
    \ (Math.abs(numbers[i] - numbers[j]) < min){\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var closest = [numbers[0],\
    \ numbers[1]];\n    var closest_diff = Math.abs(numbers[0] - numbers[1]);\n  \
    \  for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j <\
    \ numbers.length; j++){\n            var diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff){\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n", "    var closest_elements = [numbers[0], numbers[1]];\n\
    \    var closest_difference = Math.abs(numbers[0] - numbers[1]);\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j < numbers.length;\
    \ j++){\n            var difference = Math.abs(numbers[i] - numbers[j]);\n   \
    \         if (difference < closest_difference){\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n                closest_difference = difference;\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n", "    var\
    \ closest = [numbers[0], numbers[1]];\n    var difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (var i = 0; i < numbers.length - 1; i++){\n        for\
    \ (var j = i + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < difference){\n                closest = [numbers[i], numbers[j]];\n\
    \                difference = Math.abs(numbers[i] - numbers[j]);\n           \
    \ }\n        }\n    }\n    return closest;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_19_sort_numbers
language: javascript
results:
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpe6le79_p.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpe6le79_p.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpe6le79_p.js:8:28)\\\
    n    at test (/tmp/tmpe6le79_p.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpe6le79_p.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var num_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array = [];\n\
    \    for (var i = 0; i < nums.length; i++){\n        num_array.push(num_map[nums[i]]);\n\
    \    }\n    num_array.sort(function(a, b){return a - b});\n    for (var i = 0;\
    \ i < num_array.length; i++){\n        for (var key in num_map){\n           \
    \ if (num_map[key] === num_array[i]){\n                num_array[i] = key;\n \
    \           }\n        }\n    }\n    return num_array.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var num_dict = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(num_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in num_dict){\n            if (num_dict[key] === nums_sorted[i]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var num_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var num_arr = [];\n  for (var i = 0; i < nums.length; i++) {\n  \
    \  num_arr.push(num_map[nums[i]]);\n  }\n  num_arr.sort(function(a, b) {\n   \
    \ return a - b;\n  });\n  for (var j = 0; j < num_arr.length; j++) {\n    for\
    \ (var key in num_map) {\n      if (num_map[key] === num_arr[j]) {\n        num_arr[j]\
    \ = key;\n      }\n    }\n  }\n  return num_arr.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n \
    \ }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    for (var i = 0; i <\
    \ nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n    }\n \
    \   nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0; i < nums_sorted.length;\
    \ i++){\n        for (var key in nums_dict){\n            if (nums_dict[key] ==\
    \ nums_sorted[i]){\n                nums_sorted[i] = key;\n            }\n   \
    \     }\n    }\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpvul8c2zg.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpvul8c2zg.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpvul8c2zg.js:8:28)\\\
    n    at test (/tmp/tmpvul8c2zg.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpvul8c2zg.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    for (var i = 0; i <\
    \ nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n    }\n \
    \   nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0; i < nums_sorted.length;\
    \ i++){\n        for (var key in nums_dict){\n            if (nums_dict[key] ==\
    \ nums_sorted[i]){\n                nums_sorted[i] = key;\n            }\n   \
    \     }\n    }\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var num_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var num_arr = [];\n  for (var i = 0; i < nums.length; i++) {\n  \
    \  num_arr.push(num_map[nums[i]]);\n  }\n  num_arr.sort(function(a, b) {\n   \
    \ return a - b;\n  });\n  var num_str = '';\n  for (var j = 0; j < num_arr.length;\
    \ j++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_arr[j])\
    \ {\n        num_str += key + ' ';\n      }\n    }\n  }\n  return num_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_to_sort\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n\
    \      nums_to_sort.push(0);\n    }\n    else if (nums[i] === 'one'){\n      nums_to_sort.push(1);\n\
    \    }\n    else if (nums[i] === 'two'){\n      nums_to_sort.push(2);\n    }\n\
    \    else if (nums[i] === 'three'){\n      nums_to_sort.push(3);\n    }\n    else\
    \ if (nums[i] === 'four'){\n      nums_to_sort.push(4);\n    }\n    else if (nums[i]\
    \ === 'five'){\n      nums_to_sort.push(5);\n    }\n    else if (nums[i] === 'six'){\n\
    \      nums_to_sort.push(6);\n    }\n    else if (nums[i] === 'seven'){\n    \
    \  nums_to_sort.push(7);\n    }\n    else if (nums[i] === 'eight'){\n      nums_to_sort.push(8);\n\
    \    }\n    else if (nums[i] === 'nine'){\n      nums_to_sort.push(9);\n    }\n\
    \  }\n  nums_to_sort.sort(function(a, b){return a-b});\n  var sorted_nums = [];\n\
    \  for (var i = 0; i < nums_to_sort.length; i++){\n    if (nums_to_sort[i] ===\
    \ 0){\n      sorted_nums.push('zero');\n    }\n    else if (nums_to_sort[i] ===\
    \ 1){\n      sorted_nums.push('one');\n    }\n    else if (nums_to_sort[i] ===\
    \ 2){\n      sorted_nums.push('two');\n    }\n    else if (nums_to_sort[\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpm8ors8ew.js:54\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var nums_sorted_str_final = '';\n\
    \    var nums_sorted_str_final_final = '';\n    var nums_sorted_str_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final = '';\n    var nums_sorted_str_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final = '';\n \
    \   var nums_sorted_str_final_final_final_final_final_final_final = '';\n    var\
    \ nums_sorted_str_final_final_final_final_final_final_final_final = '';\n    var\
    \ nums_sorted_str_final_final_final_final_final_final_final_final_final = '';\n\
    \    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmps_zgo2al.js:38\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(num_to_int(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < nums_int.length; i++){\n        nums_int[i] = int_to_num(nums_int[i]);\n \
    \   }\n    return nums_int.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp8gdakzk7.js:10\\n        nums_int.push(num_to_int(nums[i]));\\\
    n                 ^\\n\\nReferenceError: num_to_int is not defined\\n    at sort_numbers\
    \ (/tmp/tmp8gdakzk7.js:10:18)\\n    at test (/tmp/tmp8gdakzk7.js:24:20)\\n   \
    \ at Object.<anonymous> (/tmp/tmp8gdakzk7.js:31:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return number_to_int(a) - number_to_int(b);\n\
    \  });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp1v8ky4oz.js:9\\n    return number_to_int(a) - number_to_int(b);\\\
    n    ^\\n\\nReferenceError: number_to_int is not defined\\n    at /tmp/tmp1v8ky4oz.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp1v8ky4oz.js:8:26)\\\
    n    at test (/tmp/tmp1v8ky4oz.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp1v8ky4oz.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let num_dict = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    }\n    let num_list = numbers.split(' ');\n    let num_list_int = [];\n\
    \    for (let i = 0; i < num_list.length; i++){\n        num_list_int.push(num_dict[num_list[i]]);\n\
    \    }\n    num_list_int.sort(function(a, b){return a-b});\n    let num_list_str\
    \ = [];\n    for (let i = 0; i < num_list_int.length; i++){\n        for (let\
    \ key in num_dict){\n            if (num_dict[key] === num_list_int[i]){\n   \
    \             num_list_str.push(key);\n            }\n        }\n    }\n    return\
    \ num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_obj\
    \ = {};\n    var nums_sorted = [];\n    var nums_sorted_str = '';\n    for (var\
    \ i = 0; i < nums.length; i++){\n        nums_obj[nums[i]] = nums[i].length;\n\
    \    }\n    for (var key in nums_obj){\n        nums_sorted.push(key);\n    }\n\
    \    nums_sorted.sort(function(a, b){\n        return nums_obj[a] - nums_obj[b];\n\
    \    });\n    for (var i = 0; i < nums_sorted.length; i++){\n        nums_sorted_str\
    \ += nums_sorted[i] + ' ';\n    }\n    return nums_sorted_str.trim();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n'five nine three'\\\
    n\\nshould loosely deep-equal\\n\\n'three five nine'\\n    at test (/tmp/tmpyur_ff0s.js:33:10)\\\
    n    at Object.<anonymous> (/tmp/tmpyur_ff0s.js:38:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 'five nine\
    \ three',\\n  expected: 'three five nine',\\n  operator: 'deepEqual'\\n}\\n\\\
    nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var num_dict = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(num_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in num_dict){\n            if (num_dict[key] === nums_sorted[i]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp1yt8z3nh.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_array = numbers.split(' ');\n  var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length;\
    \ i++){\n    num_array_int.push(num_dict[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  var num_array_str = [];\n  for (var i = 0; i < num_array_int.length;\
    \ i++){\n    for (var key in num_dict){\n      if (num_dict[key] === num_array_int[i]){\n\
    \        num_array_str.push(key);\n      }\n    }\n  }\n  return num_array_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let nums_arr = [];\n\
    \    for (let i = 0; i < nums.length; i++){\n        nums_arr.push(nums_map[nums[i]]);\n\
    \    }\n    nums_arr.sort(function(a, b){return a-b});\n    let nums_str = '';\n\
    \    for (let i = 0; i < nums_arr.length; i++){\n        for (let key in nums_map){\n\
    \            if (nums_map[key] === nums_arr[i]){\n                nums_str +=\
    \ key + ' ';\n            }\n        }\n    }\n    return nums_str.trim();\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpuhi27103.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpuhi27103.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpuhi27103.js:8:28)\\\
    n    at test (/tmp/tmpuhi27103.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpuhi27103.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmprl92yk1r.js:9\\n        return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n        ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmprl92yk1r.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmprl92yk1r.js:8:28)\\\
    n    at test (/tmp/tmprl92yk1r.js:21:20)\\n    at Object.<anonymous> (/tmp/tmprl92yk1r.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpth1dnqm4.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sorted = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_string = '';\n  var nums_sorted_string_final = '';\n\
    \  var nums_sorted_string_final_final = '';\n  var nums_sorted_string_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final = '';\n  var nums_sorted_string_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final = '';\n\
    \  var nums_sorted_string_final_final_final_final_final_final_final = '';\n  var\
    \ nums_sorted_string_final_final_final_final_final_final_final_final = '';\n \
    \ var nums_sorted_string_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = '';\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp51tv2t7a.js:38\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var num_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var num_array = [];\n  for (var i = 0; i < nums.length; i++) {\n\
    \    num_array.push(num_map[nums[i]]);\n  }\n  num_array.sort(function(a, b){return\
    \ a-b});\n  var num_string = '';\n  for (var i = 0; i < num_array.length; i++)\
    \ {\n    for (var key in num_map) {\n      if (num_map[key] === num_array[i])\
    \ {\n        num_string += key + ' ';\n      }\n    }\n  }\n  return num_string.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var num_dict = {\n    'zero': 0,\n   \
    \ 'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(num_dict[nums[i]]);\n  }\n\
    \  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in num_dict){\n      if (num_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp4v8d80tu.js:9\\n        return num_to_int(a) - num_to_int(b);\\\
    n        ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp4v8d80tu.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp4v8d80tu.js:8:28)\\\
    n    at test (/tmp/tmp4v8d80tu.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp4v8d80tu.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp4w3wa_se.js:9\\n    return num_to_int(a) - num_to_int(b);\\n\
    \    ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp4w3wa_se.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp4w3wa_se.js:8:26)\\\
    n    at test (/tmp/tmp4w3wa_se.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp4w3wa_se.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var number_map = {'zero':0, 'one':1, 'two':2, 'three':3,\
    \ 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  var numbers_array\
    \ = numbers.split(' ');\n  var numbers_array_int = [];\n  for (var i = 0; i <\
    \ numbers_array.length; i++){\n    numbers_array_int.push(number_map[numbers_array[i]]);\n\
    \  }\n  numbers_array_int.sort(function(a, b){return a-b});\n  for (var i = 0;\
    \ i < numbers_array_int.length; i++){\n    for (var key in number_map){\n    \
    \  if (number_map[key] === numbers_array_int[i]){\n        numbers_array_int[i]\
    \ = key;\n      }\n    }\n  }\n  return numbers_array_int.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {\n        'zero': 0,\n        'one': 1,\n      \
    \  'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n  \
    \      'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    for (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] === nums_sorted[i]){\n                nums_sorted[i]\
    \ = key;\n            }\n        }\n    }\n    return nums_sorted.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push('zero');\n\
    \                break;\n            case 1:\n                nums_str.push('one');\n\
    \                break;\n            case 2:\n                nums_str.push('two');\n\
    \                break;\n            case 3:\n                nums_str.push('three');\n\
    \                break;\n            case 4:\n                nums_str.push('four');\n\
    \                break;\n            case 5:\n                nums_str.push('five');\n\
    \                break;\n            case 6:\n                nums_str.push('six');\n\
    \                break;\n            case 7:\n                nums_str.push('seven');\n\
    \                break;\n            case 8:\n                nums_str.push('eight');\n\
    \                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpspkyaci6.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpmgft76k9.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpljp6ic_0.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpljp6ic_0.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpljp6ic_0.js:8:28)\\\
    n    at test (/tmp/tmpljp6ic_0.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpljp6ic_0.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  let nums = numbers.split(' ');\n  let nums_sorted\
    \ = nums.sort(function(a, b){\n    return nums_to_int(a) - nums_to_int(b);\n \
    \ });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp5cs7mupm.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp5cs7mupm.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp5cs7mupm.js:8:26)\\\
    n    at test (/tmp/tmp5cs7mupm.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp5cs7mupm.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpz0lfv5zr.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var nums_dict = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var j = 0; j < nums_sorted.length; j++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] === nums_sorted[j]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpeeonzx7p.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpeeonzx7p.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpeeonzx7p.js:8:28)\\\
    n    at test (/tmp/tmpeeonzx7p.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpeeonzx7p.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_map = {\n    'zero': 0,\n    'one': 1,\n \
    \   'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n\
    \    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_array = numbers.split('\
    \ ');\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length; i++)\
    \ {\n    num_array_int.push(num_map[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  var num_array_str = [];\n  for (var i = 0; i < num_array_int.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_array_int[i])\
    \ {\n        num_array_str.push(key);\n      }\n    }\n  }\n  return num_array_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_dict =\
    \ {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_dict[a]\
    \ - nums_dict[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_dict = {\n    'zero': 0,\n    'one': 1,\n\
    \    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n\
    \    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_list = numbers.split('\
    \ ');\n  var num_list_int = [];\n  for (var i = 0; i < num_list.length; i++){\n\
    \    num_list_int.push(num_dict[num_list[i]]);\n  }\n  num_list_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_list_int.length; i++){\n    for\
    \ (var key in num_dict){\n      if (num_dict[key] === num_list_int[i]){\n    \
    \    num_list[i] = key;\n      }\n    }\n  }\n  return num_list.join(' ');\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp_qjf8vuk.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp_qjf8vuk.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp_qjf8vuk.js:8:26)\\\
    n    at test (/tmp/tmp_qjf8vuk.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp_qjf8vuk.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n      case 'zero':\n\
    \        nums_int.push(0);\n        break;\n      case 'one':\n        nums_int.push(1);\n\
    \        break;\n      case 'two':\n        nums_int.push(2);\n        break;\n\
    \      case 'three':\n        nums_int.push(3);\n        break;\n      case 'four':\n\
    \        nums_int.push(4);\n        break;\n      case 'five':\n        nums_int.push(5);\n\
    \        break;\n      case 'six':\n        nums_int.push(6);\n        break;\n\
    \      case 'seven':\n        nums_int.push(7);\n        break;\n      case 'eight':\n\
    \        nums_int.push(8);\n        break;\n      case 'nine':\n        nums_int.push(9);\n\
    \        break;\n    }\n  }\n  nums_int.sort(function(a, b){return a-b});\n  var\
    \ nums_str = [];\n  for (var i = 0; i < nums_int.length; i++){\n    switch(nums_int[i]){\n\
    \      case 0:\n        nums_str.push('zero');\n        break;\n      case 1:\n\
    \        nums_str.push('one');\n        break;\n      case 2:\n        nums_str.push('two');\n\
    \        break;\n      case 3:\n        nums_str.push('three');\n        break;\n\
    \      case 4:\n        nums_str.push('four');\n        break;\n      case 5:\n\
    \        nums_str.push('five');\n        break;\n      case 6:\n        nums_str.push('six');\n\
    \        break;\n      case 7:\n        nums_str.push('seven');\n        break;\n\
    \      case 8:\n        nums_str.push('eight');\n        break;\n      case 9\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmp6t5qo9_u.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    const numeral_map = {\n        'zero': 0,\n    \
    \    'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n \
    \       'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n\
    \        'nine': 9\n    };\n    const nums = numbers.split(' ');\n    const nums_int\
    \ = nums.map(num => numeral_map[num]);\n    const sorted_nums_int = nums_int.sort((a,\
    \ b) => a - b);\n    const sorted_nums = sorted_nums_int.map(num => {\n      \
    \  for (let key in numeral_map) {\n            if (numeral_map[key] === num) {\n\
    \                return key;\n            }\n        }\n    });\n    return sorted_nums.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    for(var i =\
    \ 0; i < nums.length; i++){\n        nums[i] = convert(nums[i]);\n    }\n    nums.sort(function(a,\
    \ b){return a - b});\n    for(var i = 0; i < nums.length; i++){\n        nums[i]\
    \ = convert(nums[i]);\n    }\n    return nums.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpfkw1hicy.js:9\\n        nums[i] = convert(nums[i]);\\n      \
    \       ^\\n\\nReferenceError: convert is not defined\\n    at sort_numbers (/tmp/tmpfkw1hicy.js:9:14)\\\
    n    at test (/tmp/tmpfkw1hicy.js:23:20)\\n    at Object.<anonymous> (/tmp/tmpfkw1hicy.js:30:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpkqewsqi9.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmpkqewsqi9.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpkqewsqi9.js:8:28)\\\
    n    at test (/tmp/tmpkqewsqi9.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpkqewsqi9.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_dict = {'zero':0, 'one':1, 'two':2, 'three':3,\
    \ 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  var num_list\
    \ = numbers.split(' ');\n  var num_list_int = [];\n  for (var i = 0; i < num_list.length;\
    \ i++){\n    num_list_int.push(num_dict[num_list[i]]);\n  }\n  num_list_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_list_int.length; i++){\n    for\
    \ (var key in num_dict){\n      if (num_dict[key] == num_list_int[i]){\n     \
    \   num_list[i] = key;\n      }\n    }\n  }\n  return num_list.join(' ');\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    const numeral_map = {\n        'zero': 0,\n    \
    \    'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n \
    \       'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n\
    \        'nine': 9\n    };\n    // TODO: Implement me\n    const nums_array =\
    \ numbers.split(' ');\n    const nums_int = nums_array.map(num => numeral_map[num]);\n\
    \    const sorted_int = nums_int.sort((a, b) => a - b);\n    const sorted_num\
    \ = sorted_int.map(num => {\n        for (let key in numeral_map) {\n        \
    \    if (numeral_map[key] === num) {\n                return key;\n          \
    \  }\n        }\n    });\n    return sorted_num.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_obj\
    \ = {};\n    var nums_sorted = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_obj[nums[i]] = nums[i].length;\n    }\n    for (var key in nums_obj){\n\
    \        nums_sorted.push(key);\n    }\n    nums_sorted.sort(function(a, b){\n\
    \        return nums_obj[a] - nums_obj[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n'five nine three'\\\
    n\\nshould loosely deep-equal\\n\\n'three five nine'\\n    at test (/tmp/tmpicfrs8sw.js:29:10)\\\
    n    at Object.<anonymous> (/tmp/tmpicfrs8sw.js:34:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 'five nine\
    \ three',\\n  expected: 'three five nine',\\n  operator: 'deepEqual'\\n}\\n\\\
    nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n    \
    \  nums_int.push(0);\n    } else if (nums[i] === 'one'){\n      nums_int.push(1);\n\
    \    } else if (nums[i] === 'two'){\n      nums_int.push(2);\n    } else if (nums[i]\
    \ === 'three'){\n      nums_int.push(3);\n    } else if (nums[i] === 'four'){\n\
    \      nums_int.push(4);\n    } else if (nums[i] === 'five'){\n      nums_int.push(5);\n\
    \    } else if (nums[i] === 'six'){\n      nums_int.push(6);\n    } else if (nums[i]\
    \ === 'seven'){\n      nums_int.push(7);\n    } else if (nums[i] === 'eight'){\n\
    \      nums_int.push(8);\n    } else if (nums[i] === 'nine'){\n      nums_int.push(9);\n\
    \    }\n  }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n\
    \  for (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] === 0){\n \
    \     nums_str.push('zero');\n    } else if (nums_int[i] === 1){\n      nums_str.push('one');\n\
    \    } else if (nums_int[i] === 2){\n      nums_str.push('two');\n    } else if\
    \ (nums_int[i] === 3){\n      nums_str.push('three');\n    } else if (nums_int[i]\
    \ === 4){\n      nums_str.push('four');\n    } else if (nums_int[i] === 5\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpszo1bwoq.js:46\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_array = numbers.split(' ');\n  var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length;\
    \ i++){\n    num_array_int.push(num_dict[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  var num_array_str = [];\n  for (var i = 0; i < num_array_int.length;\
    \ i++){\n    for (var key in num_dict){\n      if (num_dict[key] === num_array_int[i]){\n\
    \        num_array_str.push(key);\n      }\n    }\n  }\n  return num_array_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_num(a) - nums_to_num(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpm43vsdky.js:9\\n    return nums_to_num(a) - nums_to_num(b);\\\
    n    ^\\n\\nReferenceError: nums_to_num is not defined\\n    at /tmp/tmpm43vsdky.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpm43vsdky.js:8:26)\\\
    n    at test (/tmp/tmpm43vsdky.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpm43vsdky.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpqzaa9kmd.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp23qgdcr9.js:9\\n        return num_to_int(a) - num_to_int(b);\\\
    n        ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp23qgdcr9.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp23qgdcr9.js:8:28)\\\
    n    at test (/tmp/tmp23qgdcr9.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp23qgdcr9.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \  });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpol_uod3o.js:9\\n    return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n    ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmpol_uod3o.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpol_uod3o.js:8:26)\\\
    n    at test (/tmp/tmpol_uod3o.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpol_uod3o.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_arr = [];\n  for (var i = 0; i < nums.length; i++) {\n \
    \   nums_arr.push(nums_map[nums[i]]);\n  }\n  nums_arr.sort(function(a, b) {\n\
    \    return a - b;\n  });\n  var nums_str = '';\n  for (var i = 0; i < nums_arr.length;\
    \ i++) {\n    for (var key in nums_map) {\n      if (nums_map[key] === nums_arr[i])\
    \ {\n        nums_str += key + ' ';\n      }\n    }\n  }\n  return nums_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {\n        'zero': 0,\n        'one': 1,\n      \
    \  'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n  \
    \      'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    for (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] === nums_sorted[i]){\n                nums_sorted[i]\
    \ = key;\n            }\n        }\n    }\n    return nums_sorted.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var sorted_nums = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return sorted_nums.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar nums = numbers.split(' ');\n\tvar nums_int = [];\n\
    \tfor (var i = 0; i < nums.length; i++) {\n\t\tif (nums[i] === 'zero') {\n\t\t\
    \tnums_int.push(0);\n\t\t} else if (nums[i] === 'one') {\n\t\t\tnums_int.push(1);\n\
    \t\t} else if (nums[i] === 'two') {\n\t\t\tnums_int.push(2);\n\t\t} else if (nums[i]\
    \ === 'three') {\n\t\t\tnums_int.push(3);\n\t\t} else if (nums[i] === 'four')\
    \ {\n\t\t\tnums_int.push(4);\n\t\t} else if (nums[i] === 'five') {\n\t\t\tnums_int.push(5);\n\
    \t\t} else if (nums[i] === 'six') {\n\t\t\tnums_int.push(6);\n\t\t} else if (nums[i]\
    \ === 'seven') {\n\t\t\tnums_int.push(7);\n\t\t} else if (nums[i] === 'eight')\
    \ {\n\t\t\tnums_int.push(8);\n\t\t} else if (nums[i] === 'nine') {\n\t\t\tnums_int.push(9);\n\
    \t\t}\n\t}\n\tnums_int.sort(function(a, b){return a-b});\n\tvar nums_str = [];\n\
    \tfor (var i = 0; i < nums_int.length; i++) {\n\t\tif (nums_int[i] === 0) {\n\t\
    \t\tnums_str.push('zero');\n\t\t} else if (nums_int[i] === 1) {\n\t\t\tnums_str.push('one');\n\
    \t\t} else if (nums_int[i] === 2) {\n\t\t\tnums_str.push('two');\n\t\t} else if\
    \ (nums_int[i] === 3) {\n\t\t\tnums_str\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpfly8_ycm.js:55\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {'zero':0,\
    \ 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8,\
    \ 'nine':9};\n  var nums_sorted = nums.sort(function(a,b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar nums = numbers.split(' ');\n\tvar nums_sorted\
    \ = nums.sort(function(a,b){\n\t\treturn nums_to_ints[a] - nums_to_ints[b];\n\t\
    });\n\treturn nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp9lldh2g2.js:9\\n\\t\\treturn nums_to_ints[a] - nums_to_ints[b];\\\
    n\\t\\t^\\n\\nReferenceError: nums_to_ints is not defined\\n    at /tmp/tmp9lldh2g2.js:9:3\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp9lldh2g2.js:8:25)\\\
    n    at test (/tmp/tmp9lldh2g2.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp9lldh2g2.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_int = [];\n\
    \    for (var i = 0; i < nums.length; i++){\n        nums_int.push(nums_map[nums[i]]);\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str = [];\n\
    \    for (var i = 0; i < nums_int.length; i++){\n        for (var key in nums_map){\n\
    \            if (nums_map[key] === nums_int[i]){\n                nums_str.push(key);\n\
    \            }\n        }\n    }\n    return nums_str.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sorted = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n \
    \ }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var num_dict = {'zero':0,\
    \ 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8,\
    \ 'nine':9};\n  var num_list = [];\n  for (var i = 0; i < nums.length; i++){\n\
    \    num_list.push(num_dict[nums[i]]);\n  }\n  num_list.sort(function(a,b){return\
    \ a-b});\n  var num_dict_reverse = {0:'zero', 1:'one', 2:'two', 3:'three', 4:'four',\
    \ 5:'five', 6:'six', 7:'seven', 8:'eight', 9:'nine'};\n  var sorted_nums = [];\n\
    \  for (var i = 0; i < num_list.length; i++){\n    sorted_nums.push(num_dict_reverse[num_list[i]]);\n\
    \  }\n  return sorted_nums.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmppf25qpsw.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmppf25qpsw.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmppf25qpsw.js:8:26)\\\
    n    at test (/tmp/tmppf25qpsw.js:21:20)\\n    at Object.<anonymous> (/tmp/tmppf25qpsw.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpitvv74ev.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpitvv74ev.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpitvv74ev.js:8:28)\\\
    n    at test (/tmp/tmpitvv74ev.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpitvv74ev.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_num(a) - nums_to_num(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpzu4ukvwv.js:9\\n        return nums_to_num(a) - nums_to_num(b);\\\
    n        ^\\n\\nReferenceError: nums_to_num is not defined\\n    at /tmp/tmpzu4ukvwv.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpzu4ukvwv.js:8:28)\\\
    n    at test (/tmp/tmpzu4ukvwv.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpzu4ukvwv.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \  });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpf45ggyxi.js:9\\n    return num_to_numeral(a) - num_to_numeral(b);\\\
    n    ^\\n\\nReferenceError: num_to_numeral is not defined\\n    at /tmp/tmpf45ggyxi.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpf45ggyxi.js:8:26)\\\
    n    at test (/tmp/tmpf45ggyxi.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpf45ggyxi.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    let nums_int = [];\n    for (let i = 0; i < nums.length;\
    \ i++){\n        nums_int.push(nums_dict[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (let i = 0; i < nums_int.length; i++){\n        for\
    \ (let key in nums_dict){\n            if (nums_dict[key] === nums_int[i]){\n\
    \                nums_int[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_int.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var sorted = nums.sort(function(a, b){\n    return nums_map[a] -\
    \ nums_map[b];\n  });\n  return sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(num_to_int(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < nums_int.length; i++){\n        nums_int[i] = int_to_num(nums_int[i]);\n \
    \   }\n    return nums_int.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpsn0k_3np.js:10\\n        nums_int.push(num_to_int(nums[i]));\\\
    n                 ^\\n\\nReferenceError: num_to_int is not defined\\n    at sort_numbers\
    \ (/tmp/tmpsn0k_3np.js:10:18)\\n    at test (/tmp/tmpsn0k_3np.js:24:20)\\n   \
    \ at Object.<anonymous> (/tmp/tmpsn0k_3np.js:31:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar nums = numbers.split(' ');\n\tvar nums_int = [];\n\
    \tfor (var i = 0; i < nums.length; i++) {\n\t\tif (nums[i] == 'zero') {\n\t\t\t\
    nums_int.push(0);\n\t\t} else if (nums[i] == 'one') {\n\t\t\tnums_int.push(1);\n\
    \t\t} else if (nums[i] == 'two') {\n\t\t\tnums_int.push(2);\n\t\t} else if (nums[i]\
    \ == 'three') {\n\t\t\tnums_int.push(3);\n\t\t} else if (nums[i] == 'four') {\n\
    \t\t\tnums_int.push(4);\n\t\t} else if (nums[i] == 'five') {\n\t\t\tnums_int.push(5);\n\
    \t\t} else if (nums[i] == 'six') {\n\t\t\tnums_int.push(6);\n\t\t} else if (nums[i]\
    \ == 'seven') {\n\t\t\tnums_int.push(7);\n\t\t} else if (nums[i] == 'eight') {\n\
    \t\t\tnums_int.push(8);\n\t\t} else if (nums[i] == 'nine') {\n\t\t\tnums_int.push(9);\n\
    \t\t}\n\t}\n\tnums_int.sort(function(a, b){return a-b});\n\tvar nums_str = [];\n\
    \tfor (var i = 0; i < nums_int.length; i++) {\n\t\tif (nums_int[i] == 0) {\n\t\
    \t\tnums_str.push('zero');\n\t\t} else if (nums_int[i] == 1) {\n\t\t\tnums_str.push('one');\n\
    \t\t} else if (nums_int[i] == 2) {\n\t\t\tnums_str.push('two');\n\t\t} else if\
    \ (nums_int[i] == 3) {\n\t\t\tnums_str\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpxoyop1b8.js:55\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpda3rl5bs.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    for (var i = 0; i <\
    \ nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n    }\n \
    \   nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0; i < nums_sorted.length;\
    \ i++){\n        for (var key in nums_dict){\n            if (nums_dict[key] ==\
    \ nums_sorted[i]){\n                nums_sorted[i] = key;\n            }\n   \
    \     }\n    }\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar nums = numbers.split(' ');\n\tvar nums_sorted\
    \ = [];\n\tvar nums_sorted_str = '';\n\tvar num_dict = {\n\t\t'zero': 0,\n\t\t\
    'one': 1,\n\t\t'two': 2,\n\t\t'three': 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t\
    'six': 6,\n\t\t'seven': 7,\n\t\t'eight': 8,\n\t\t'nine': 9\n\t};\n\tfor (var i\
    \ = 0; i < nums.length; i++){\n\t\tnums_sorted.push(num_dict[nums[i]]);\n\t}\n\
    \tnums_sorted.sort(function(a, b){return a-b});\n\tfor (var i = 0; i < nums_sorted.length;\
    \ i++){\n\t\tfor (var key in num_dict){\n\t\t\tif (num_dict[key] === nums_sorted[i]){\n\
    \t\t\t\tnums_sorted_str += key + ' ';\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_map = {\n    'zero': 0,\n    'one': 1,\n \
    \   'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n\
    \    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_array = numbers.split('\
    \ ');\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length; i++)\
    \ {\n    num_array_int.push(num_map[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  var num_array_str = [];\n  for (var i = 0; i < num_array_int.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_array_int[i])\
    \ {\n        num_array_str.push(key);\n      }\n    }\n  }\n  return num_array_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var nums_dict = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n\
    \    for (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + ' ';\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n    var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var num_array_int = [];\n    for (var i = 0; i <\
    \ num_array.length; i++){\n        num_array_int.push(num_dict[num_array[i]]);\n\
    \    }\n    num_array_int.sort(function(a, b){return a-b});\n    var num_array_str\
    \ = [];\n    for (var i = 0; i < num_array_int.length; i++){\n        for (var\
    \ key in num_dict){\n            if (num_dict[key] == num_array_int[i]){\n   \
    \             num_array_str.push(key);\n            }\n        }\n    }\n    return\
    \ num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp0v7cr5k9.js:9\\n        return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n        ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmp0v7cr5k9.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp0v7cr5k9.js:8:28)\\\
    n    at test (/tmp/tmp0v7cr5k9.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp0v7cr5k9.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var nums_dict = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] === nums_sorted[i]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var num_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_list = [];\n\
    \    for (var i = 0; i < nums.length; i++){\n        num_list.push(num_map[nums[i]]);\n\
    \    }\n    num_list.sort(function(a, b){return a - b});\n    var num_list_str\
    \ = [];\n    for (var i = 0; i < num_list.length; i++){\n        for (var key\
    \ in num_map){\n            if (num_map[key] === num_list[i]){\n             \
    \   num_list_str.push(key);\n            }\n        }\n    }\n    return num_list_str.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpzjdu_8qw.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpzjdu_8qw.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpzjdu_8qw.js:8:28)\\\
    n    at test (/tmp/tmpzjdu_8qw.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpzjdu_8qw.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let num_dict = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    }\n    let num_list = numbers.split(' ');\n    let num_list_int = [];\n\
    \    for (let i = 0; i < num_list.length; i++){\n        num_list_int.push(num_dict[num_list[i]]);\n\
    \    }\n    num_list_int.sort(function(a, b){return a-b});\n    for (let i = 0;\
    \ i < num_list_int.length; i++){\n        for (let key in num_dict){\n       \
    \     if (num_dict[key] === num_list_int[i]){\n                num_list[i] = key;\n\
    \            }\n        }\n    }\n    return num_list.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n    var num_dict\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array_int =\
    \ [];\n    for (var i = 0; i < num_array.length; i++){\n        num_array_int.push(num_dict[num_array[i]]);\n\
    \    }\n    num_array_int.sort(function(a, b){return a-b});\n    var num_array_str\
    \ = [];\n    for (var i = 0; i < num_array_int.length; i++){\n        for (var\
    \ key in num_dict){\n            if (num_dict[key] == num_array_int[i]){\n   \
    \             num_array_str.push(key);\n            }\n        }\n    }\n    return\
    \ num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n    \
    \  nums_int.push(0);\n    }\n    else if (nums[i] === 'one'){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] === 'two'){\n      nums_int.push(2);\n    }\n   \
    \ else if (nums[i] === 'three'){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] === 'four'){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ === 'five'){\n      nums_int.push(5);\n    }\n    else if (nums[i] === 'six'){\n\
    \      nums_int.push(6);\n    }\n    else if (nums[i] === 'seven'){\n      nums_int.push(7);\n\
    \    }\n    else if (nums[i] === 'eight'){\n      nums_int.push(8);\n    }\n \
    \   else if (nums[i] === 'nine'){\n      nums_int.push(9);\n    }\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  var nums_str = [];\n  for (var i = 0; i < nums_int.length;\
    \ i++){\n    if (nums_int[i] === 0){\n      nums_str.push('zero');\n    }\n  \
    \  else if (nums_int[i] === 1){\n      nums_str.push('one');\n    }\n    else\
    \ if (nums_int[i] === 2){\n      nums_str.push('two');\n    }\n    else if (nums_int[i]\
    \ === 3){\n      nums_str.push('three');\n    }\n    else if (nums_int[i] ===\
    \ 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpneiliihw.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp2ulq9lfg.js:9\\n        return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n        ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmp2ulq9lfg.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp2ulq9lfg.js:8:28)\\\
    n    at test (/tmp/tmp2ulq9lfg.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp2ulq9lfg.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpz59dx6sq.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpz59dx6sq.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpz59dx6sq.js:8:28)\\\
    n    at test (/tmp/tmpz59dx6sq.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpz59dx6sq.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n    \
    \  nums_int.push(0);\n    }\n    else if (nums[i] === 'one'){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] === 'two'){\n      nums_int.push(2);\n    }\n   \
    \ else if (nums[i] === 'three'){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] === 'four'){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ === 'five'){\n      nums_int.push(5);\n    }\n    else if (nums[i] === 'six'){\n\
    \      nums_int.push(6);\n    }\n    else if (nums[i] === 'seven'){\n      nums_int.push(7);\n\
    \    }\n    else if (nums[i] === 'eight'){\n      nums_int.push(8);\n    }\n \
    \   else if (nums[i] === 'nine'){\n      nums_int.push(9);\n    }\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  var nums_sorted = [];\n  for (var j = 0; j < nums_int.length;\
    \ j++){\n    if (nums_int[j] === 0){\n      nums_sorted.push('zero');\n    }\n\
    \    else if (nums_int[j] === 1){\n      nums_sorted.push('one');\n    }\n   \
    \ else if (nums_int[j] === 2){\n      nums_sorted.push('two');\n    }\n    else\
    \ if (nums_int[j] === 3){\n      nums_sorted.push('three');\n    }\n    else if\
    \ (nums_int[\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpl1y9q8g0.js:57\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpthce8fba.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpzhzumr1l.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpzhzumr1l.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpzhzumr1l.js:8:28)\\\
    n    at test (/tmp/tmpzhzumr1l.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpzhzumr1l.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n      case 'zero':\n\
    \        nums_int.push(0);\n        break;\n      case 'one':\n        nums_int.push(1);\n\
    \        break;\n      case 'two':\n        nums_int.push(2);\n        break;\n\
    \      case 'three':\n        nums_int.push(3);\n        break;\n      case 'four':\n\
    \        nums_int.push(4);\n        break;\n      case 'five':\n        nums_int.push(5);\n\
    \        break;\n      case 'six':\n        nums_int.push(6);\n        break;\n\
    \      case 'seven':\n        nums_int.push(7);\n        break;\n      case 'eight':\n\
    \        nums_int.push(8);\n        break;\n      case 'nine':\n        nums_int.push(9);\n\
    \        break;\n    }\n  }\n  nums_int.sort(function(a, b){return a-b});\n  var\
    \ nums_str = [];\n  for (var i = 0; i < nums_int.length; i++){\n    switch(nums_int[i]){\n\
    \      case 0:\n        nums_str.push('zero');\n        break;\n      case 1:\n\
    \        nums_str.push('one');\n        break;\n      case 2:\n        nums_str.push('two');\n\
    \        break;\n      case 3:\n        nums_str.push('three');\n        break;\n\
    \      case 4:\n        nums_str.push('four');\n        break;\n      case 5:\n\
    \        nums_str.push('five');\n        break;\n      case 6:\n        nums_str.push('six');\n\
    \        break;\n      case 7:\n        nums_str.push('seven');\n        break;\n\
    \      case 8:\n        nums_str.push('eight');\n        break;\n      case 9\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmptu7c8mit.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9};\n    var nums_int = [];\n    for (var i\
    \ = 0; i < nums.length; i++){\n        nums_int.push(nums_map[nums[i]]);\n   \
    \ }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str = [];\n\
    \    for (var i = 0; i < nums_int.length; i++){\n        nums_str.push(nums[nums_int[i]]);\n\
    \    }\n    return nums_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n''\\n\\nshould\
    \ loosely deep-equal\\n\\n'three'\\n    at test (/tmp/tmpca41kks6.js:27:10)\\\
    n    at Object.<anonymous> (/tmp/tmpca41kks6.js:33:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: '',\\n\
    \  expected: 'three',\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push('zero');\n\
    \                break;\n            case 1:\n                nums_str.push('one');\n\
    \                break;\n            case 2:\n                nums_str.push('two');\n\
    \                break;\n            case 3:\n                nums_str.push('three');\n\
    \                break;\n            case 4:\n                nums_str.push('four');\n\
    \                break;\n            case 5:\n                nums_str.push('five');\n\
    \                break;\n            case 6:\n                nums_str.push('six');\n\
    \                break;\n            case 7:\n                nums_str.push('seven');\n\
    \                break;\n            case 8:\n                nums_str.push('eight');\n\
    \                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpkfltvkve.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpz4rtblwf.js:9\\n    return num_to_int(a) - num_to_int(b);\\n\
    \    ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmpz4rtblwf.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpz4rtblwf.js:8:26)\\\
    n    at test (/tmp/tmpz4rtblwf.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpz4rtblwf.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {\n        'zero': 0,\n        'one': 1,\n      \
    \  'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n  \
    \      'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    for (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] === nums_sorted[i]){\n                nums_sorted[i]\
    \ = key;\n            }\n        }\n    }\n    return nums_sorted.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){return\
    \ nums_map[a] - nums_map[b]});\n    return nums_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpzrjxfmz7.js:9\\n    return nums_to_ints[a] - nums_to_ints[b];\\\
    n    ^\\n\\nReferenceError: nums_to_ints is not defined\\n    at /tmp/tmpzrjxfmz7.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpzrjxfmz7.js:8:26)\\\
    n    at test (/tmp/tmpzrjxfmz7.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpzrjxfmz7.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_num(a) - nums_to_num(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpz_6oqlwc.js:9\\n        return nums_to_num(a) - nums_to_num(b);\\\
    n        ^\\n\\nReferenceError: nums_to_num is not defined\\n    at /tmp/tmpz_6oqlwc.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpz_6oqlwc.js:8:28)\\\
    n    at test (/tmp/tmpz_6oqlwc.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpz_6oqlwc.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmppzb4ym8s.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmppzb4ym8s.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmppzb4ym8s.js:8:28)\\\
    n    at test (/tmp/tmppzb4ym8s.js:21:20)\\n    at Object.<anonymous> (/tmp/tmppzb4ym8s.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var num_map = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    nums_sorted.push(num_map[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var j = 0; j < nums_sorted.length; j++) {\n    for\
    \ (var key in num_map) {\n      if (num_map[key] === nums_sorted[j]) {\n     \
    \   nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {'zero':0, 'one':1, 'two':2,\
    \ 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n \
    \ for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a,b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] == nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let nums_sorted = nums.sort((a,\
    \ b) => nums_map[a] - nums_map[b]);\n    return nums_sorted.join(' ');\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar num_array = numbers.split(\" \");\n\tvar num_array_sorted\
    \ = num_array.sort(function(a,b){\n\t\treturn num_to_int(a) - num_to_int(b);\n\
    \t});\n\treturn num_array_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpjbr9kih7.js:9\\n\\t\\treturn num_to_int(a) - num_to_int(b);\\\
    n\\t\\t^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmpjbr9kih7.js:9:3\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpjbr9kih7.js:8:35)\\\
    n    at test (/tmp/tmpjbr9kih7.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpjbr9kih7.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push('zero');\n\
    \                break;\n            case 1:\n                nums_str.push('one');\n\
    \                break;\n            case 2:\n                nums_str.push('two');\n\
    \                break;\n            case 3:\n                nums_str.push('three');\n\
    \                break;\n            case 4:\n                nums_str.push('four');\n\
    \                break;\n            case 5:\n                nums_str.push('five');\n\
    \                break;\n            case 6:\n                nums_str.push('six');\n\
    \                break;\n            case 7:\n                nums_str.push('seven');\n\
    \                break;\n            case 8:\n                nums_str.push('eight');\n\
    \                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmp40dfh9bt.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n \
    \ }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n    var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var num_array_int = [];\n    for (var i = 0; i <\
    \ num_array.length; i++){\n        num_array_int.push(num_dict[num_array[i]]);\n\
    \    }\n    num_array_int.sort(function(a, b){return a-b});\n    var num_array_str\
    \ = [];\n    for (var i = 0; i < num_array_int.length; i++){\n        for (var\
    \ key in num_dict){\n            if (num_dict[key] === num_array_int[i]){\n  \
    \              num_array_str.push(key);\n            }\n        }\n    }\n   \
    \ return num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var num_map = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    for (var i = 0; i < nums.length;\
    \ i++){\n        nums_sorted.push(num_map[nums[i]]);\n    }\n    nums_sorted.sort(function(a,b){return\
    \ a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n        for (var\
    \ key in num_map){\n            if (num_map[key] == nums_sorted[i]){\n       \
    \         nums_sorted[i] = key;\n            }\n        }\n    }\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var num_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array = [];\n\
    \    for (var i = 0; i < nums.length; i++){\n        num_array.push(num_map[nums[i]]);\n\
    \    }\n    num_array.sort(function(a, b){return a - b});\n    var num_string\
    \ = '';\n    for (var i = 0; i < num_array.length; i++){\n        for (var key\
    \ in num_map){\n            if (num_map[key] === num_array[i]){\n            \
    \    num_string += key + ' ';\n            }\n        }\n    }\n    return num_string.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_dict[a] - nums_dict[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var num_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var sorted = nums.sort(function(a,\
    \ b){\n        return num_map[a] - num_map[b];\n    });\n    return sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpj9tdzkpc.js:9\\n    return nums_to_ints[a] - nums_to_ints[b];\\\
    n    ^\\n\\nReferenceError: nums_to_ints is not defined\\n    at /tmp/tmpj9tdzkpc.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpj9tdzkpc.js:8:26)\\\
    n    at test (/tmp/tmpj9tdzkpc.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpj9tdzkpc.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n    var num_dict\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array_sorted\
    \ = num_array.sort(function(a, b){\n        return num_dict[a] - num_dict[b];\n\
    \    });\n    return num_array_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  let nums = numbers.split(' ');\n  let nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  for (var i = 0; i < nums.length;\
    \ i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,b){return\
    \ a-b});\n  for (var i = 0; i < nums_sorted.length; i++){\n    for (var key in\
    \ nums_dict){\n      if (nums_dict[key] == nums_sorted[i]){\n        nums_sorted[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_sorted.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_nums\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_nums.push(0);\n              \
    \  break;\n            case 'one':\n                nums_nums.push(1);\n     \
    \           break;\n            case 'two':\n                nums_nums.push(2);\n\
    \                break;\n            case 'three':\n                nums_nums.push(3);\n\
    \                break;\n            case 'four':\n                nums_nums.push(4);\n\
    \                break;\n            case 'five':\n                nums_nums.push(5);\n\
    \                break;\n            case 'six':\n                nums_nums.push(6);\n\
    \                break;\n            case 'seven':\n                nums_nums.push(7);\n\
    \                break;\n            case 'eight':\n                nums_nums.push(8);\n\
    \                break;\n            case 'nine':\n                nums_nums.push(9);\n\
    \                break;\n        }\n    }\n    nums_nums.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_nums.length; i++){\n        switch (nums_nums[i]){\n\
    \            case 0:\n                nums_nums[i] = 'zero';\n               \
    \ break;\n            case 1:\n                nums_nums[i] = 'one';\n       \
    \         break;\n            case 2:\n                nums_nums[i] = 'two';\n\
    \                break;\n            case 3:\n                nums_nums[i] = 'three';\n\
    \                break;\n            case 4:\n                nums_nums[i] = 'four';\n\
    \                break;\n            case 5:\n                nums_nums[i] = 'five';\n\
    \                break;\n            case 6:\n                nums_nums[i] = 'six';\n\
    \                break;\n            case 7:\n                nums_nums[i] = 'seven\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpwwilb2pd.js:68\\n                nums_nums[i] = 'seven\\n  \
    \                             ^^^^^^\\n\\nSyntaxError: Invalid or unexpected token\\\
    n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_dict[a] - nums_dict[b];\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp3wi2mktz.js:9\\n    return nums_dict[a] - nums_dict[b];\\n  \
    \  ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmp3wi2mktz.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp3wi2mktz.js:8:26)\\\
    n    at test (/tmp/tmp3wi2mktz.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp3wi2mktz.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sort = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sort.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums[i] = 'zero';\n                break;\n\
    \            case 1:\n                nums[i] = 'one';\n                break;\n\
    \            case 2:\n                nums[i] = 'two';\n                break;\n\
    \            case 3:\n                nums[i] = 'three';\n                break;\n\
    \            case 4:\n                nums[i] = 'four';\n                break;\n\
    \            case 5:\n                nums[i] = 'five';\n                break;\n\
    \            case 6:\n                nums[i] = 'six';\n                break;\n\
    \            case 7:\n                nums[i] = 'seven';\n                break;\n\
    \            case 8:\n                nums[i] = 'eight';\n                break;\n\
    \            case 9:\n                nums[i] =\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpbc6xj0hs.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n    \
    \  nums_int.push(0);\n    } else if (nums[i] === 'one'){\n      nums_int.push(1);\n\
    \    } else if (nums[i] === 'two'){\n      nums_int.push(2);\n    } else if (nums[i]\
    \ === 'three'){\n      nums_int.push(3);\n    } else if (nums[i] === 'four'){\n\
    \      nums_int.push(4);\n    } else if (nums[i] === 'five'){\n      nums_int.push(5);\n\
    \    } else if (nums[i] === 'six'){\n      nums_int.push(6);\n    } else if (nums[i]\
    \ === 'seven'){\n      nums_int.push(7);\n    } else if (nums[i] === 'eight'){\n\
    \      nums_int.push(8);\n    } else if (nums[i] === 'nine'){\n      nums_int.push(9);\n\
    \    }\n  }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n\
    \  for (var j = 0; j < nums_int.length; j++){\n    if (nums_int[j] === 0){\n \
    \     nums_str.push('zero');\n    } else if (nums_int[j] === 1){\n      nums_str.push('one');\n\
    \    } else if (nums_int[j] === 2){\n      nums_str.push('two');\n    } else if\
    \ (nums_int[j] === 3){\n      nums_str.push('three');\n    } else if (nums_int[j]\
    \ === 4){\n      nums_str.push('four');\n    } else if (nums_int[j] === 5\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpb8ol8mmu.js:46\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_array = numbers.split(' ');\n  var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n  var num_sort = num_array.sort(function(a,b){\n    return\
    \ num_dict[a] - num_dict[b];\n  });\n  return num_sort.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sorted = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var number_map = {\n        'zero': 0,\n       \
    \ 'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n    \
    \    'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n\
    \        'nine': 9\n    };\n    var numbers_array = numbers.split(' ');\n    var\
    \ sorted_numbers = numbers_array.sort(function(a, b){\n        return number_map[a]\
    \ - number_map[b];\n    });\n    return sorted_numbers.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpurqt56kx.js:9\\n        return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n        ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmpurqt56kx.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpurqt56kx.js:8:28)\\\
    n    at test (/tmp/tmpurqt56kx.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpurqt56kx.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_to_sort\
    \ = [];\n    var nums_sorted = [];\n    var nums_sorted_str = '';\n    var nums_dict\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9};\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_to_sort.push(nums_dict[nums[i]]);\n    }\n    nums_sorted = nums_to_sort.sort(function(a,\
    \ b){return a - b});\n    for (var i = 0; i < nums_sorted.length; i++){\n    \
    \    for (var key in nums_dict){\n            if (nums_dict[key] == nums_sorted[i]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpwgwz89n7.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmpwgwz89n7.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpwgwz89n7.js:8:28)\\\
    n    at test (/tmp/tmpwgwz89n7.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpwgwz89n7.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_array = numbers.split(' ');\n  var num_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length;\
    \ i++){\n    num_array_int.push(num_dict[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_array_int.length; i++){\n    for\
    \ (var key in num_dict){\n      if (num_dict[key] == num_array_int[i]){\n    \
    \    num_array_int[i] = key;\n      }\n    }\n  }\n  return num_array_int.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let num_map = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    };\n    let num_list = numbers.split(' ');\n    num_list.sort((a, b)\
    \ => num_map[a] - num_map[b]);\n    return num_list.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpjldehtd1.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpolz39k_n.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpolz39k_n.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpolz39k_n.js:8:28)\\\
    n    at test (/tmp/tmpolz39k_n.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpolz39k_n.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_map = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    };\n    var num_list = numbers.split(' ');\n    num_list.sort(function(a,\
    \ b){\n        return num_map[a] - num_map[b];\n    });\n    return num_list.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sorted = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpnluv7zvx.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpnluv7zvx.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpnluv7zvx.js:8:28)\\\
    n    at test (/tmp/tmpnluv7zvx.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpnluv7zvx.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let nums_sorted = nums.sort((a,\
    \ b) => {\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmprbxg4qdr.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmprbxg4qdr.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmprbxg4qdr.js:8:28)\\\
    n    at test (/tmp/tmprbxg4qdr.js:21:20)\\n    at Object.<anonymous> (/tmp/tmprbxg4qdr.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var num_map = {'zero':0,\
    \ 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8,\
    \ 'nine':9};\n  var num_array = [];\n  for (var i = 0; i < nums.length; i++){\n\
    \    num_array.push(num_map[nums[i]]);\n  }\n  num_array.sort(function(a,b){return\
    \ a-b});\n  for (var i = 0; i < num_array.length; i++){\n    num_array[i] = nums[num_array[i]];\n\
    \  }\n  return num_array.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n''\\n\\nshould\
    \ loosely deep-equal\\n\\n'three'\\n    at test (/tmp/tmp8gha_ct7.js:26:10)\\\
    n    at Object.<anonymous> (/tmp/tmp8gha_ct7.js:32:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: '',\\n\
    \  expected: 'three',\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpntkq8rj8.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three':\
    \ 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9};\n   \
    \ var num_list = numbers.split(' ');\n    var num_list_int = [];\n    for (var\
    \ i = 0; i < num_list.length; i++){\n        num_list_int.push(num_dict[num_list[i]]);\n\
    \    }\n    num_list_int.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < num_list_int.length; i++){\n        for (var key in num_dict){\n       \
    \     if (num_dict[key] == num_list_int[i]){\n                num_list[i] = key;\n\
    \            }\n        }\n    }\n    return num_list.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp4rl46ms1.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp4rl46ms1.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp4rl46ms1.js:8:26)\\\
    n    at test (/tmp/tmp4rl46ms1.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp4rl46ms1.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_to_sort\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_to_sort.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_to_sort.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_to_sort.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_to_sort.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_to_sort.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_to_sort.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_to_sort.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_to_sort.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_to_sort.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_to_sort.push(9);\n        }\n    }\n    nums_to_sort.sort(function(a,\
    \ b){return a-b});\n    var sorted_nums = [];\n    for (var j = 0; j < nums_to_sort.length;\
    \ j++){\n        if (nums_to_sort[j] == 0){\n            sorted_nums.push('zero');\n\
    \        }\n        else if (nums_to_sort[j] == 1){\n            sorted_nums.push('one');\n\
    \        }\n        else if (nums_to_sort[j] == 2){\n            sorted_nums.push('two');\n\
    \        }\n        else if (nums_to_sort[\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpa6r0u_lz.js:54\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmppm9011lg.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmppm9011lg.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmppm9011lg.js:8:28)\\\
    n    at test (/tmp/tmppm9011lg.js:21:20)\\n    at Object.<anonymous> (/tmp/tmppm9011lg.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    const numeral_map = {\n        'zero': 0,\n    \
    \    'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n \
    \       'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n\
    \        'nine': 9\n    };\n    let nums = numbers.split(' ');\n    nums.sort((a,\
    \ b) => {\n        return numeral_map[a] - numeral_map[b];\n    });\n    return\
    \ nums.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_mapped\
    \ = nums.map(function(num){\n        return num_to_int(num);\n    });\n    var\
    \ nums_sorted = nums_mapped.sort(function(a, b){\n        return a - b;\n    });\n\
    \    var nums_sorted_mapped = nums_sorted.map(function(num){\n        return int_to_num(num);\n\
    \    });\n    return nums_sorted_mapped.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp1jy3790s.js:9\\n        return num_to_int(num);\\n        ^\\\
    n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp1jy3790s.js:9:9\\\
    n    at Array.map (<anonymous>)\\n    at sort_numbers (/tmp/tmp1jy3790s.js:8:28)\\\
    n    at test (/tmp/tmp1jy3790s.js:25:20)\\n    at Object.<anonymous> (/tmp/tmp1jy3790s.js:32:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpkdxkmvxp.js:9\\n    return num_to_int(a) - num_to_int(b);\\n\
    \    ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmpkdxkmvxp.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpkdxkmvxp.js:8:26)\\\
    n    at test (/tmp/tmpkdxkmvxp.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpkdxkmvxp.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp51utaw3r.js:9\\n    return num_to_int(a) - num_to_int(b);\\n\
    \    ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp51utaw3r.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp51utaw3r.js:8:26)\\\
    n    at test (/tmp/tmp51utaw3r.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp51utaw3r.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp4wd9opk7.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp4wd9opk7.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp4wd9opk7.js:8:28)\\\
    n    at test (/tmp/tmp4wd9opk7.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp4wd9opk7.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n    var num_dict\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array_int =\
    \ [];\n    for (var i = 0; i < num_array.length; i++){\n        num_array_int.push(num_dict[num_array[i]]);\n\
    \    }\n    num_array_int.sort(function(a, b){return a-b});\n    var num_array_str\
    \ = [];\n    for (var i = 0; i < num_array_int.length; i++){\n        for (var\
    \ key in num_dict){\n            if (num_dict[key] == num_array_int[i]){\n   \
    \             num_array_str.push(key);\n            }\n        }\n    }\n    return\
    \ num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpjiaa82vu.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpjiaa82vu.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpjiaa82vu.js:8:28)\\\
    n    at test (/tmp/tmpjiaa82vu.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpjiaa82vu.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n \
    \   'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n\
    \    'eight': 8,\n    'nine': 9\n  };\n  for (var i = 0; i < nums.length; i++)\
    \ {\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    nums_sorted[i]\
    \ = Object.keys(nums_dict).find(key => nums_dict[key] === nums_sorted[i]);\n \
    \ }\n  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_sorted_str = '';\n    var nums_dict = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] === nums_sorted[i]){\n\
    \                nums_sorted_str += key + ' ';\n            }\n        }\n   \
    \ }\n    return nums_sorted_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n\tvar nums = numbers.split(' ');\n\tvar nums_sorted\
    \ = [];\n\tvar nums_sorted_str = '';\n\tvar nums_dict = {\n\t\t'zero': 0,\n\t\t\
    'one': 1,\n\t\t'two': 2,\n\t\t'three': 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t\
    'six': 6,\n\t\t'seven': 7,\n\t\t'eight': 8,\n\t\t'nine': 9\n\t};\n\tfor (var i\
    \ = 0; i < nums.length; i++){\n\t\tnums_sorted.push(nums_dict[nums[i]]);\n\t}\n\
    \tnums_sorted.sort(function(a, b){return a-b});\n\tfor (var i = 0; i < nums_sorted.length;\
    \ i++){\n\t\tfor (var key in nums_dict){\n\t\t\tif (nums_dict[key] === nums_sorted[i]){\n\
    \t\t\t\tnums_sorted_str += key + ' ';\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpijvki0av.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpijvki0av.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpijvki0av.js:8:28)\\\
    n    at test (/tmp/tmpijvki0av.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpijvki0av.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = [];\n    var nums_dict = {\n        'zero': 0,\n        'one': 1,\n      \
    \  'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n  \
    \      'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    for (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        nums_sorted[i] = Object.keys(nums_dict).find(key\
    \ => nums_dict[key] === nums_sorted[i]);\n    }\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp8a96kejm.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmp8a96kejm.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp8a96kejm.js:8:28)\\\
    n    at test (/tmp/tmp8a96kejm.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp8a96kejm.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpgvjobqv0.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmpgvjobqv0.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpgvjobqv0.js:8:28)\\\
    n    at test (/tmp/tmpgvjobqv0.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpgvjobqv0.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpd4chcsis.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpd4chcsis.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpd4chcsis.js:8:28)\\\
    n    at test (/tmp/tmpd4chcsis.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpd4chcsis.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpeojf4rcc.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpeojf4rcc.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpeojf4rcc.js:8:26)\\\
    n    at test (/tmp/tmpeojf4rcc.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpeojf4rcc.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_to_sort\
    \ = [];\n    let sorted_nums = [];\n    let nums_dict = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    for (let i = 0; i < nums.length; i++){\n\
    \        nums_to_sort.push(nums_dict[nums[i]]);\n    }\n    sorted_nums = nums_to_sort.sort();\n\
    \    for (let i = 0; i < sorted_nums.length; i++){\n        for (let key in nums_dict){\n\
    \            if (nums_dict[key] === sorted_nums[i]){\n                sorted_nums[i]\
    \ = key;\n            }\n        }\n    }\n    return sorted_nums.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpxk8x27v5.js:9\\n    return num_to_int(a) - num_to_int(b);\\n\
    \    ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmpxk8x27v5.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpxk8x27v5.js:8:26)\\\
    n    at test (/tmp/tmpxk8x27v5.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpxk8x27v5.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_sorted\
    \ = nums.sort((a,b) => {\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpvrnuoz9s.js:9\\n        return nums_to_numbers[a] - nums_to_numbers[b];\\\
    n        ^\\n\\nReferenceError: nums_to_numbers is not defined\\n    at /tmp/tmpvrnuoz9s.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpvrnuoz9s.js:8:28)\\\
    n    at test (/tmp/tmpvrnuoz9s.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpvrnuoz9s.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_dict\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let nums_int = [];\n\
    \    for (let i = 0; i < nums.length; i++){\n        nums_int.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    let nums_str = [];\n\
    \    for (let i = 0; i < nums_int.length; i++){\n        for (let key in nums_dict){\n\
    \            if (nums_dict[key] === nums_int[i]){\n                nums_str.push(key);\n\
    \            }\n        }\n    }\n    return nums_str.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n \
    \   'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n\
    \    'eight': 8,\n    'nine': 9\n  };\n  for (var i = 0; i < nums.length; i++)\
    \ {\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    for\
    \ (var key in nums_dict) {\n      if (nums_dict[key] === nums_sorted[i]) {\n \
    \       nums_sorted[i] = key;\n      }\n    }\n  }\n  return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var nums_sorted = nums.sort(function(a,\
    \ b){\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let nums_sorted = nums.sort((a,\
    \ b) => {\n        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(parseInt(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str = [];\n\
    \    for (var i = 0; i < nums_int.length; i++){\n        nums_str.push(nums_int[i].toString());\n\
    \    }\n    return nums_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n'NaN'\\n\\nshould\
    \ loosely deep-equal\\n\\n''\\n    at test (/tmp/tmpnpnsxfoh.js:25:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpnpnsxfoh.js:32:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 'NaN',\\\
    n  expected: '',\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp5_97e1ql.js:9\\n    return nums_to_int(a) - nums_to_int(b);\\\
    n    ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp5_97e1ql.js:9:5\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp5_97e1ql.js:8:26)\\\
    n    at test (/tmp/tmp5_97e1ql.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp5_97e1ql.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_to_sort\
    \ = [];\n    var nums_sorted = [];\n    var nums_sorted_string = '';\n    for\
    \ (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n            case\
    \ 'zero':\n                nums_to_sort.push(0);\n                break;\n   \
    \         case 'one':\n                nums_to_sort.push(1);\n               \
    \ break;\n            case 'two':\n                nums_to_sort.push(2);\n   \
    \             break;\n            case 'three':\n                nums_to_sort.push(3);\n\
    \                break;\n            case 'four':\n                nums_to_sort.push(4);\n\
    \                break;\n            case 'five':\n                nums_to_sort.push(5);\n\
    \                break;\n            case 'six':\n                nums_to_sort.push(6);\n\
    \                break;\n            case 'seven':\n                nums_to_sort.push(7);\n\
    \                break;\n            case 'eight':\n                nums_to_sort.push(8);\n\
    \                break;\n            case 'nine':\n                nums_to_sort.push(9);\n\
    \                break;\n        }\n    }\n    nums_sorted = nums_to_sort.sort(function(a,\
    \ b){return a-b});\n    for (var j = 0; j < nums_sorted.length; j++){\n      \
    \  switch (nums_sorted[j]){\n            case 0:\n                nums_sorted_string\
    \ += 'zero ';\n                break;\n            case 1:\n                nums_sorted_string\
    \ += 'one ';\n                break;\n            case 2:\n                nums_sorted_string\
    \ += 'two ';\n                break;\n            case 3:\n                nums_sorted_string\
    \ += 'three ';\n                break;\n            case 4:\n                nums_sorted_string\
    \ += 'four ';\n                break;\n            case 5:\n                nums_sorted_string\
    \ += 'five ';\n                break;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp27txky3c.js:78\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_to_sort\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n\
    \      nums_to_sort.push(0);\n    } else if (nums[i] === 'one'){\n      nums_to_sort.push(1);\n\
    \    } else if (nums[i] === 'two'){\n      nums_to_sort.push(2);\n    } else if\
    \ (nums[i] === 'three'){\n      nums_to_sort.push(3);\n    } else if (nums[i]\
    \ === 'four'){\n      nums_to_sort.push(4);\n    } else if (nums[i] === 'five'){\n\
    \      nums_to_sort.push(5);\n    } else if (nums[i] === 'six'){\n      nums_to_sort.push(6);\n\
    \    } else if (nums[i] === 'seven'){\n      nums_to_sort.push(7);\n    } else\
    \ if (nums[i] === 'eight'){\n      nums_to_sort.push(8);\n    } else if (nums[i]\
    \ === 'nine'){\n      nums_to_sort.push(9);\n    }\n  }\n  nums_to_sort.sort(function(a,\
    \ b){return a-b});\n  var sorted_nums = [];\n  for (var i = 0; i < nums_to_sort.length;\
    \ i++){\n    if (nums_to_sort[i] === 0){\n      sorted_nums.push('zero');\n  \
    \  } else if (nums_to_sort[i] === 1){\n      sorted_nums.push('one');\n    } else\
    \ if (nums_to_sort[i] === 2){\n      sorted_nums.push('two');\n    } else if (nums_to_sort[i]\
    \ === 3){\n      sorted_nums.push('three');\n    } else if (nums\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmp88xgv6vx.js:44\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp91nxb7p4.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmp91nxb7p4.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp91nxb7p4.js:8:28)\\\
    n    at test (/tmp/tmp91nxb7p4.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp91nxb7p4.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var num_map = {'zero':0, 'one':1, 'two':2, 'three':3,\
    \ 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n    var num_list\
    \ = numbers.split(' ');\n    var num_list_int = [];\n    for (var i = 0; i < num_list.length;\
    \ i++){\n        num_list_int.push(num_map[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_map){\n            if (num_map[key] == num_list_int[i]){\n\
    \                num_list_str.push(key);\n            }\n        }\n    }\n  \
    \  return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n \
    \ }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums[i] = 'zero';\n                break;\n\
    \            case 1:\n                nums[i] = 'one';\n                break;\n\
    \            case 2:\n                nums[i] = 'two';\n                break;\n\
    \            case 3:\n                nums[i] = 'three';\n                break;\n\
    \            case 4:\n                nums[i] = 'four';\n                break;\n\
    \            case 5:\n                nums[i] = 'five';\n                break;\n\
    \            case 6:\n                nums[i] = 'six';\n                break;\n\
    \            case 7:\n                nums[i] = 'seven';\n                break;\n\
    \            case 8:\n                nums[i] = 'eight';\n                break;\n\
    \            case 9:\n                nums[i] =\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmp87vord3f.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var num_map = {\n    'zero': 0,\n    'one': 1,\n \
    \   'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n\
    \    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_array = numbers.split('\
    \ ');\n  var num_array_int = [];\n  for (var i = 0; i < num_array.length; i++)\
    \ {\n    num_array_int.push(num_map[num_array[i]]);\n  }\n  num_array_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_array_int.length; i++) {\n    for\
    \ (var key in num_map) {\n      if (num_map[key] === num_array_int[i]) {\n   \
    \     num_array[i] = key;\n      }\n    }\n  }\n  return num_array.join(' ');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp_8vtt271.js:9\\n        return num_to_int(a) - num_to_int(b);\\\
    n        ^\\n\\nReferenceError: num_to_int is not defined\\n    at /tmp/tmp_8vtt271.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmp_8vtt271.js:8:28)\\\
    n    at test (/tmp/tmp_8vtt271.js:21:20)\\n    at Object.<anonymous> (/tmp/tmp_8vtt271.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpgyw5baid.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpml0w6i1_.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpml0w6i1_.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpml0w6i1_.js:8:28)\\\
    n    at test (/tmp/tmpml0w6i1_.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpml0w6i1_.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push('zero');\n\
    \                break;\n            case 1:\n                nums_str.push('one');\n\
    \                break;\n            case 2:\n                nums_str.push('two');\n\
    \                break;\n            case 3:\n                nums_str.push('three');\n\
    \                break;\n            case 4:\n                nums_str.push('four');\n\
    \                break;\n            case 5:\n                nums_str.push('five');\n\
    \                break;\n            case 6:\n                nums_str.push('six');\n\
    \                break;\n            case 7:\n                nums_str.push('seven');\n\
    \                break;\n            case 8:\n                nums_str.push('eight');\n\
    \                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmp1pf2718x.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sort\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sort.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmphx2pyshl.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmphx2pyshl.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmphx2pyshl.js:8:26)\\\
    n    at test (/tmp/tmphx2pyshl.js:21:20)\\n    at Object.<anonymous> (/tmp/tmphx2pyshl.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  const nums = numbers.split(' ');\n  const nums_to_nums\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  const nums_to_words = {\n    0: 'zero',\n    1: 'one',\n    2: 'two',\n\
    \    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7: 'seven',\n\
    \    8: 'eight',\n    9: 'nine'\n  };\n  const nums_to_sort = [];\n  for (let\
    \ i = 0; i < nums.length; i++) {\n    nums_to_sort.push(nums_to_nums[nums[i]]);\n\
    \  }\n  nums_to_sort.sort((a, b) => a - b);\n  const sorted_nums = [];\n  for\
    \ (let i = 0; i < nums_to_sort.length; i++) {\n    sorted_nums.push(nums_to_words[nums_to_sort[i]]);\n\
    \  }\n  return sorted_nums.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {'zero':0,\
    \ 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8,\
    \ 'nine':9};\n  var nums_sorted = nums.sort(function(a,b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    let nums = numbers.split(' ');\n    let nums_to_sort\
    \ = [];\n    for (let i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_to_sort.push(0);\n           \
    \     break;\n            case 'one':\n                nums_to_sort.push(1);\n\
    \                break;\n            case 'two':\n                nums_to_sort.push(2);\n\
    \                break;\n            case 'three':\n                nums_to_sort.push(3);\n\
    \                break;\n            case 'four':\n                nums_to_sort.push(4);\n\
    \                break;\n            case 'five':\n                nums_to_sort.push(5);\n\
    \                break;\n            case 'six':\n                nums_to_sort.push(6);\n\
    \                break;\n            case 'seven':\n                nums_to_sort.push(7);\n\
    \                break;\n            case 'eight':\n                nums_to_sort.push(8);\n\
    \                break;\n            case 'nine':\n                nums_to_sort.push(9);\n\
    \                break;\n        }\n    }\n    nums_to_sort.sort(function(a, b){return\
    \ a-b});\n    let sorted_nums = [];\n    for (let i = 0; i < nums_to_sort.length;\
    \ i++){\n        switch (nums_to_sort[i]){\n            case 0:\n            \
    \    sorted_nums.push('zero');\n                break;\n            case 1:\n\
    \                sorted_nums.push('one');\n                break;\n          \
    \  case 2:\n                sorted_nums.push('two');\n                break;\n\
    \            case 3:\n                sorted_nums.push('three');\n           \
    \     break;\n            case 4:\n                sorted_nums.push('four');\n\
    \                break;\n            case 5:\n                sorted_nums.push('five');\n\
    \                break;\n            case 6:\n                sorted_nums.push('six');\n\
    \                break;\n            case 7:\n                sorted_nums.push('seven');\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpa2laxu0m.js:82\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var num_to_int\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var int_to_num = {\n\
    \        0: 'zero',\n        1: 'one',\n        2: 'two',\n        3: 'three',\n\
    \        4: 'four',\n        5: 'five',\n        6: 'six',\n        7: 'seven',\n\
    \        8: 'eight',\n        9: 'nine'\n    };\n    var ints = [];\n    for (var\
    \ i = 0; i < nums.length; i++){\n        ints.push(num_to_int[nums[i]]);\n   \
    \ }\n    ints.sort(function(a, b){return a - b});\n    var sorted_nums = [];\n\
    \    for (var i = 0; i < ints.length; i++){\n        sorted_nums.push(int_to_num[ints[i]]);\n\
    \    }\n    return sorted_nums.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmp3bxbqspt.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] == 'zero'){\n\
    \            nums_int.push(0);\n        }\n        else if (nums[i] == 'one'){\n\
    \            nums_int.push(1);\n        }\n        else if (nums[i] == 'two'){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == 'three'){\n\
    \            nums_int.push(3);\n        }\n        else if (nums[i] == 'four'){\n\
    \            nums_int.push(4);\n        }\n        else if (nums[i] == 'five'){\n\
    \            nums_int.push(5);\n        }\n        else if (nums[i] == 'six'){\n\
    \            nums_int.push(6);\n        }\n        else if (nums[i] == 'seven'){\n\
    \            nums_int.push(7);\n        }\n        else if (nums[i] == 'eight'){\n\
    \            nums_int.push(8);\n        }\n        else if (nums[i] == 'nine'){\n\
    \            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push('zero');\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push('one');\n\
    \        }\n        else if (nums_int[i] == 2){\n            nums_str.push('two');\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push('three');\n\
    \        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpnopy99b0.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_int\
    \ = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case 'zero':\n                nums_int.push(0);\n               \
    \ break;\n            case 'one':\n                nums_int.push(1);\n       \
    \         break;\n            case 'two':\n                nums_int.push(2);\n\
    \                break;\n            case 'three':\n                nums_int.push(3);\n\
    \                break;\n            case 'four':\n                nums_int.push(4);\n\
    \                break;\n            case 'five':\n                nums_int.push(5);\n\
    \                break;\n            case 'six':\n                nums_int.push(6);\n\
    \                break;\n            case 'seven':\n                nums_int.push(7);\n\
    \                break;\n            case 'eight':\n                nums_int.push(8);\n\
    \                break;\n            case 'nine':\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push('zero');\n\
    \                break;\n            case 1:\n                nums_str.push('one');\n\
    \                break;\n            case 2:\n                nums_str.push('two');\n\
    \                break;\n            case 3:\n                nums_str.push('three');\n\
    \                break;\n            case 4:\n                nums_str.push('four');\n\
    \                break;\n            case 5:\n                nums_str.push('five');\n\
    \                break;\n            case 6:\n                nums_str.push('six');\n\
    \                break;\n            case 7:\n                nums_str.push('seven');\n\
    \                break;\n            case 8:\n                nums_str.push('eight');\n\
    \                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpojbpsu66.js:75\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_map\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    var nums_sorted = nums.sort(function(a,b){\n    \
    \    return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    // Your code here\n    var nums = numbers.split(\"\
    \ \");\n    var nums_int = [];\n    for (var i = 0; i < nums.length; i++) {\n\
    \        if (nums[i] == \"zero\") {\n            nums_int.push(0);\n        }\n\
    \        else if (nums[i] == \"one\") {\n            nums_int.push(1);\n     \
    \   }\n        else if (nums[i] == \"two\") {\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\") {\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\") {\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\") {\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\") {\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\") {\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\") {\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\") {\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str\
    \ = [];\n    for (var i = 0; i < nums_int.length; i++) {\n        if (nums_int[i]\
    \ == 0) {\n            nums_str.push(\"zero\");\n        }\n        else if (nums_int[i]\
    \ == 1) {\n            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2) {\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3) {\n            nums_str.push(\"three\");\n        }\n        else if (\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b\"/tmp/tmpky01f9i8.js:58\\nconst assert = require('node:assert');\\n^^^^^\\\
    n\\nSyntaxError: Unexpected token 'const'\\n    at Object.compileFunction (node:vm:360:18)\\\
    n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_map = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var nums_sorted = nums.sort(function(a, b){\n    return nums_map[a]\
    \ - nums_map[b];\n  });\n  return nums_sorted.join(' ');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var num_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  for (var i = 0; i < nums.length;\
    \ i++){\n    nums_sorted.push(num_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,b){return\
    \ a-b});\n  for (var i = 0; i < nums_sorted.length; i++){\n    for (var key in\
    \ num_dict){\n      if (num_dict[key] == nums_sorted[i]){\n        nums_sorted[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_sorted.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpgmu5gd82.js:9\\n        return nums_to_int(a) - nums_to_int(b);\\\
    n        ^\\n\\nReferenceError: nums_to_int is not defined\\n    at /tmp/tmpgmu5gd82.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmpgmu5gd82.js:8:28)\\\
    n    at test (/tmp/tmpgmu5gd82.js:21:20)\\n    at Object.<anonymous> (/tmp/tmpgmu5gd82.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_int = [];\n\
    \  for (var i = 0; i < nums.length; i++){\n    if (nums[i] === 'zero'){\n    \
    \  nums_int.push(0);\n    }\n    else if (nums[i] === 'one'){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] === 'two'){\n      nums_int.push(2);\n    }\n   \
    \ else if (nums[i] === 'three'){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] === 'four'){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ === 'five'){\n      nums_int.push(5);\n    }\n    else if (nums[i] === 'six'){\n\
    \      nums_int.push(6);\n    }\n    else if (nums[i] === 'seven'){\n      nums_int.push(7);\n\
    \    }\n    else if (nums[i] === 'eight'){\n      nums_int.push(8);\n    }\n \
    \   else if (nums[i] === 'nine'){\n      nums_int.push(9);\n    }\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  var nums_str = [];\n  for (var j = 0; j < nums_int.length;\
    \ j++){\n    if (nums_int[j] === 0){\n      nums_str.push('zero');\n    }\n  \
    \  else if (nums_int[j] === 1){\n      nums_str.push('one');\n    }\n    else\
    \ if (nums_int[j] === 2){\n      nums_str.push('two');\n    }\n    else if (nums_int[j]\
    \ === 3){\n      nums_str.push('three');\n    }\n    else if (nums_int[j] ===\
    \ 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpqcp8b16n.js:69\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n  var nums = numbers.split(' ');\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = '';\n  var nums_dict = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n \
    \ }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[j]){\n\
    \        nums_sorted_str += key + ' ';\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nfunction\
    \ sort_numbers(numbers){\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n  \
    \  });\n    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: b''
  stderr: "b'/tmp/tmps87zf4ve.js:9\\n        return nums_dict[a] - nums_dict[b];\\\
    n        ^\\n\\nReferenceError: nums_dict is not defined\\n    at /tmp/tmps87zf4ve.js:9:9\\\
    n    at Array.sort (<anonymous>)\\n    at sort_numbers (/tmp/tmps87zf4ve.js:8:28)\\\
    n    at test (/tmp/tmps87zf4ve.js:21:20)\\n    at Object.<anonymous> (/tmp/tmps87zf4ve.js:26:1)\\\
    n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\\n    at Module.load (node:internal/modules/cjs/loader:998:32)\\\
    n    at Module._load (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError

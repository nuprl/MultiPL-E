name: HumanEval_83_starts_one_ends
language: javascript
prompt: "//Given a positive integer n, return the count of the numbers of n-digit\n\
  // positive integers that start or end with 1.\nfunction starts_one_ends(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = starts_one_ends;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(2),18);\n\
  \  assert.deepEqual(candidate(3),180);\n  assert.deepEqual(candidate(4),1800);\n\
  \  assert.deepEqual(candidate(5),18000);\n}\n\ntest();"
completions: ["    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 4;\n    }\n    if(n==3){\n        return 8;\n    }\n    if(n==4){\n        return\
    \ 16;\n    }\n    if(n==5){\n        return 32;\n    }\n    if(n==6){\n      \
    \  return 64;\n    }\n    if(n==7){\n        return 128;\n    }\n    if(n==8){\n\
    \        return 256;\n    }\n    if(n==9){\n        return 512;\n    }\n    if(n==10){\n\
    \        return 1024;\n    }\n    if(n==11){\n        return 2048;\n    }\n  \
    \  if(n==12){\n        return 4096;\n    }\n    if(n==13){\n        return 8192;\n\
    \    }\n    if(n==14){\n        return 16384;\n    }\n    if(n==15){\n       \
    \ return 32768;\n    }\n    if(n==16){\n        return 65536;\n    }\n    if(n==17){\n\
    \        return 131072;\n    }\n    if(n==18){\n        return 262144;\n    }\n\
    \    if(n==19){\n        return 524288;\n    }\n    if(n==20){\n        return\
    \ 1048576;\n    }\n    if(n==21){\n        return 2097152;\n    }\n    if(n==22){\n\
    \        return 4194304;\n    }\n    if(n==23){\n        return 8388608;\n   \
    \ }\n    if(n==24){\n        return 16777216;\n    }\n    if(n==25){\n       \
    \ return 33554432;\n    }\n    if(n==26){\n        return 67108864;\n    }\n \
    \   if(n==27){\n        return 134217728;\n    }\n    if(n==28){\n        return\
    \ 268435456;\n    }\n    if(n==29){\n        return 536870912;\n    }\n    if(n==30){\n\
    \        return 107374", "    if(n == 1){\n        return 2;\n    }\n    if(n\
    \ == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "  \
    \  var count = 0;\n    for(var i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    if(n == 1){\n        return 2;\n\
    \    }\n    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    var count = 0;\n    for(var i = 1; i < n;\
    \ i++){\n        count += Math.pow(10, i);\n    }\n    return count * 2;\n}\n",
  "    var count = 0;\n    for(var i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i-1);\n    }\n    return count;\n}\n", "    if(n == 1){\n        return 2;\n\
    \    }\n    if(n == 2){\n        return 4;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return 2;\n    }\n  \
    \  else if(n==2){\n        return 4;\n    }\n    else{\n        return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    else{\n        return\
    \ 9 * Math.pow(10, n - 1) + starts_one_ends(n - 1);\n    }\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 4;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n      \
    \  return 10;\n    }\n    if(n==3){\n        return 100;\n    }\n    if(n==4){\n\
    \        return 1000;\n    }\n    if(n==5){\n        return 10000;\n    }\n  \
    \  if(n==6){\n        return 100000;\n    }\n    if(n==7){\n        return 1000000;\n\
    \    }\n    if(n==8){\n        return 10000000;\n    }\n    if(n==9){\n      \
    \  return 100000000;\n    }\n    if(n==10){\n        return 1000000000;\n    }\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n==1){\n        return 2;\n    }\n    else if(n==2){\n        return 3;\n\
    \    }\n    else{\n        return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    \    }\n}", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n    \
    \    return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 1;\n    }\n    else{\n        return (Math.pow(10,n-1))\
    \ + starts_one_ends(n-1);\n    }\n}\n", "    var count = 0;\n    for(var i = 1;\
    \ i <= n; i++){\n        count += Math.pow(10, i-1);\n    }\n    return count;\n\
    }\n", "    if(n == 1){\n        return 1;\n    }\n    if(n == 2){\n        return\
    \ 10;\n    }\n    return 9 * Math.pow(10, n - 2);\n}\n", "    if(n == 1){\n  \
    \      return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n     \
    \   return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}", "    if(n==1){\n        return 2;\n    }\n    return\
    \ (9*Math.pow(10,n-1))+starts_one_ends(n-1);\n}", "    if(n === 1){\n        return\
    \ 10;\n    }\n    if(n === 2){\n        return 55;\n    }\n    let count = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        count += Math.pow(10, i - 1);\n   \
    \ }\n    return count * 2;\n}\n", "    if(n==1){\n        return 1;\n    }\n \
    \   if(n==2){\n        return 10;\n    }\n    if(n==3){\n        return 100;\n\
    \    }\n    if(n==4){\n        return 1000;\n    }\n    if(n==5){\n        return\
    \ 10000;\n    }\n    if(n==6){\n        return 100000;\n    }\n    if(n==7){\n\
    \        return 1000000;\n    }\n    if(n==8){\n        return 10000000;\n   \
    \ }\n    if(n==9){\n        return 100000000;\n    }\n    if(n==10){\n       \
    \ return 1000000000;\n    }\n}\n", "    if(n==1){\n        return 2;\n    }\n\
    \    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n === 1){\n        return 2;\n    }\n    if(n === 2){\n        return\
    \ 4;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \ var count = 0;\n  for(var i = 1; i <= n; i++){\n    count += Math.pow(10, i-1);\n\
    \  }\n  return count;\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n\
    \ == 2){\n        return 4;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n === 1){\n        return 10;\n    }\n    if(n === 2){\n       \
    \ return 55;\n    }\n    if(n === 3){\n        return 220;\n    }\n    if(n ===\
    \ 4){\n        return 715;\n    }\n    if(n === 5){\n        return 2002;\n  \
    \  }\n    if(n === 6){\n        return 5005;\n    }\n    if(n === 7){\n      \
    \  return 11440;\n    }\n    if(n === 8){\n        return 24310;\n    }\n    if(n\
    \ === 9){\n        return 48620;\n    }\n    if(n === 10){\n        return 92378;\n\
    \    }\n    if(n === 11){\n        return 167960;\n    }\n    if(n === 12){\n\
    \        return 293930;\n    }\n    if(n === 13){\n        return 497420;\n  \
    \  }\n    if(n === 14){\n        return 817190;\n    }\n    if(n === 15){\n  \
    \      return 1307504;\n    }\n    if(n === 16){\n        return 2042975;\n  \
    \  }\n    if(n === 17){\n        return 3124550;\n    }\n    if(n === 18){\n \
    \       return 4686825;\n    }\n    if(n === 19){\n        return 6782270;\n \
    \   }\n    if(n === 20){\n        return 9657700;\n    }\n    if(n === 21){\n\
    \        return 13306110;\n    }\n    if(n === 22){\n        return 18452025;\n\
    \    }\n    if(n === 23){\n        return 24667530;\n    }\n    if(n === 24){\n\
    \        return 32767000;\n    }\n    if(n === 25){\n        return 43158410;\n\
    \    }\n    if(n === 26){\n        return 56392125;\n    }\n    if(n === 27){\n\
    \        return 72900000;\n    }\n    if(n === 28){\n        return 93069210;\n\
    \    }\n    if(n === 29){\n        return 118", "    var count = 0;\n    var i\
    \ = Math.pow(10, n-1);\n    var j = Math.pow(10, n);\n    for(i; i < j; i++){\n\
    \        if(i.toString().startsWith(\"1\") || i.toString().endsWith(\"1\")){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    if(n ==\
    \ 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n \
    \   return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    var count\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        count += Math.pow(10, i-1);\n\
    \    }\n    return count;\n}\n", "    if(n == 1){\n        return 2;\n    }\n\
    \    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1) +\
    \ starts_one_ends(n-2);\n}\n", "    if(n == 1){\n        return 2;\n    }\n  \
    \  if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "  if(n==1){\n\
    \    return 2;\n  }\n  return (Math.pow(10,n-1)-1)*2+1;\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    var count = 0;\n    for(var i = 1; i <= n; i++){\n        if(i.toString().charAt(0)\
    \ == 1 || i.toString().charAt(i.toString().length - 1) == 1){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    if(n==1){\n        return 10;\n\
    \    }\n    if(n==2){\n        return 55;\n    }\n    if(n>2){\n        return\
    \ (starts_one_ends(n-1)+starts_one_ends(n-2));\n    }\n}", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n     \
    \   return 2;\n    }\n    else if(n == 2){\n        return 3;\n    }\n    else{\n\
    \        return starts_one_ends(n-1) + starts_one_ends(n-2);\n    }\n}\n", " \
    \   if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n  \
    \  }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 10;\n    }\n    return\
    \ 9*Math.pow(10,n-2);\n}", "  if(n==1){\n    return 2;\n  }\n  if(n==2){\n   \
    \ return 3;\n  }\n  return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", " \
    \   let count = 0;\n    for(let i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i-1);\n    }\n    return count;\n}\n", "    if(n==1){\n        return 2;\n \
    \   }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n  \
    \  }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n ==\
    \ 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n \
    \   return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    let count = 0;\n    for(let i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "    var count = 0;\n    for(var i\
    \ = 1; i <= n; i++){\n        var num = Math.pow(10, i) - 1;\n        var str\
    \ = num.toString();\n        if(str[0] == 1 || str[str.length - 1] == 1){\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 4;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n       \
    \ return 2;\n    }\n    else{\n        return 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n  \
    \      return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    return starts_one_ends(n-1)\
    \ + 9*Math.pow(10, n-2);\n}\n", "    if(n == 1){\n        return 2;\n    }\n \
    \   else{\n        return starts_one_ends(n-1) + 9*Math.pow(10, n-2);\n    }\n\
    }\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "  \
    \  if(n==1){\n        return 2;\n    }\n    else if(n==2){\n        return 4;\n\
    \    }\n    else{\n        return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    \    }\n}", "    var count = 0;\n    for(var i = 1; i <= n; i++){\n        count\
    \ += Math.pow(10, i-1);\n    }\n    return count;\n}\n", "    if(n==1){\n    \
    \    return 2;\n    }\n    else if(n==2){\n        return 3;\n    }\n    else{\n\
    \        return starts_one_ends(n-1)+starts_one_ends(n-2);\n    }\n}", "    if(n\
    \ == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n\
    \        return 1;\n    }\n    if(n == 2){\n        return 10;\n    }\n    return\
    \ 9 * Math.pow(10, n - 2);\n}\n", "  var count = 0;\n  for(var i = 1; i <= n;\
    \ i++){\n    count += Math.pow(10, i - 1);\n  }\n  return count;\n}\n", "    let\
    \ count = 0;\n    for(let i = 1; i <= n; i++){\n        let num = Math.pow(10,\
    \ i) - 1;\n        let str = num.toString();\n        if(str[0] === '1' || str[str.length\
    \ - 1] === '1'){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n  \
    \  }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n ==\
    \ 1){\n        return 10;\n    }\n    if(n == 2){\n        return 55;\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n      \
    \  return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}",
  "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 4;\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    var\
    \ count = 0;\n    for(var i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i-1);\n    }\n    return count;\n}\n", "    if(n == 1){\n        return 2;\n\
    \    }\n    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n\
    \        return 10;\n    }\n    if(n==3){\n        return 100;\n    }\n    if(n==4){\n\
    \        return 1000;\n    }\n    if(n==5){\n        return 10000;\n    }\n  \
    \  if(n==6){\n        return 100000;\n    }\n    if(n==7){\n        return 1000000;\n\
    \    }\n    if(n==8){\n        return 10000000;\n    }\n    if(n==9){\n      \
    \  return 100000000;\n    }\n    if(n==10){\n        return 1000000000;\n    }\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n == 1){\n        return 10;\n    }\n    if(n == 2){\n        return 55;\n\
    \    }\n    if(n == 3){\n        return 220;\n    }\n    if(n == 4){\n       \
    \ return 715;\n    }\n    if(n == 5){\n        return 2002;\n    }\n    if(n ==\
    \ 6){\n        return 5005;\n    }\n    if(n == 7){\n        return 11440;\n \
    \   }\n    if(n == 8){\n        return 24310;\n    }\n    if(n == 9){\n      \
    \  return 48620;\n    }\n    if(n == 10){\n        return 92378;\n    }\n    if(n\
    \ == 11){\n        return 167960;\n    }\n    if(n == 12){\n        return 293930;\n\
    \    }\n    if(n == 13){\n        return 497420;\n    }\n    if(n == 14){\n  \
    \      return 817190;\n    }\n    if(n == 15){\n        return 1307504;\n    }\n\
    \    if(n == 16){\n        return 2042975;\n    }\n    if(n == 17){\n        return\
    \ 3124550;\n    }\n    if(n == 18){\n        return 4686825;\n    }\n    if(n\
    \ == 19){\n        return 6782270;\n    }\n    if(n == 20){\n        return 9657700;\n\
    \    }\n    if(n == 21){\n        return 13306110;\n    }\n    if(n == 22){\n\
    \        return 18454930;\n    }\n    if(n == 23){\n        return 24962240;\n\
    \    }\n    if(n == 24){\n        return 34048250;\n    }\n    if(n == 25){\n\
    \        return 46845176;\n    }\n    if(n == 26){\n        return 62899450;\n\
    \    }\n    if(n == 27){\n        return 83476804;\n    }\n    if(n == 28){\n\
    \        return 109903175;\n    }\n    if(n == 29){\n       ", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n == 1){\n        return\
    \ 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return 2;\n    }\n  \
    \  if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    let\
    \ count = 0;\n    for(let i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i - 1);\n    }\n    return count;\n}\n", "  if(n == 1){\n    return 2;\n  }\n\
    \  return starts_one_ends(n-1) + 9*Math.pow(10, n-2);\n}\n", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 10;\n    }\n    return\
    \ 9 * Math.pow(10, n - 2);\n}\n", "    if(n == 1){\n        return 2;\n    }\n\
    \    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1) +\
    \ starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n\
    \        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "  if(n == 1){\n    return 2;\n  }\n  return 9 * Math.pow(10, n - 1) + starts_one_ends(n\
    \ - 1);\n}\n", "    let count = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ count += Math.pow(10, i - 1);\n    }\n    return count;\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    if(n==3){\n        return\
    \ 5;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    else if(n==2){\n        return 4;\n    }\n    else{\n       \
    \ return starts_one_ends(n-1)+starts_one_ends(n-2);\n    }\n}", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 4;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n     \
    \   return 2;\n    }\n    if(n == 2){\n        return 4;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return 2;\n    }\n  \
    \  else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n    }\n}",
  "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n   \
    \ }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n\
    \        return 2;\n    }\n    else if(n==2){\n        return 3;\n    }\n    else{\n\
    \        return starts_one_ends(n-1)+starts_one_ends(n-2);\n    }\n}", "    if(n\
    \ == 1){\n        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)\
    \ + 9*Math.pow(10, n-2);\n    }\n}\n", "    var count = 0;\n    for(var i = 1;\
    \ i <= n; i++){\n        count += Math.pow(10, i-1);\n    }\n    return count;\n\
    }\n", "  if(n == 1){\n    return 2;\n  }\n  if(n == 2){\n    return 4;\n  }\n\
    \  return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n\
    \        return 2;\n    }\n    else if(n == 2){\n        return 10;\n    }\n \
    \   else{\n        return 9 * Math.pow(10, n - 1);\n    }\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n == 1){\n        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)\
    \ + 9*Math.pow(10, n-2);\n    }\n}\n", "    if(n == 1){\n        return 1;\n \
    \   }\n    if(n == 2){\n        return 10;\n    }\n    if(n == 3){\n        return\
    \ 100;\n    }\n    if(n == 4){\n        return 1000;\n    }\n    if(n == 5){\n\
    \        return 10000;\n    }\n    if(n == 6){\n        return 100000;\n    }\n\
    \    if(n == 7){\n        return 1000000;\n    }\n    if(n == 8){\n        return\
    \ 10000000;\n    }\n    if(n == 9){\n        return 100000000;\n    }\n    if(n\
    \ == 10){\n        return 1000000000;\n    }\n}\n", "    if(n==1){\n        return\
    \ 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "  \
    \  if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n\
    \ == 1){\n        return 10;\n    }\n    if(n == 2){\n        return 19;\n   \
    \ }\n    let count = 9;\n    let base = 9;\n    for(let i = 3; i <= n; i++){\n\
    \        count += base;\n        base *= 10;\n    }\n    return count;\n}\n",
  "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n   \
    \ }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "  var count =\
    \ 0;\n  var start = Math.pow(10, n-1);\n  var end = Math.pow(10, n) - 1;\n  for(var\
    \ i = start; i <= end; i++){\n    if(i.toString().charAt(0) == 1 || i.toString().charAt(i.toString().length\
    \ - 1) == 1){\n      count++;\n    }\n  }\n  return count;\n}\n", "    if(n ==\
    \ 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n \
    \   return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return\
    \ 9;\n    }\n    return 9*Math.pow(10,n-2);\n}\n", "    if(n == 1){\n        return\
    \ 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    if(n == 1){\n        return 2;\n    }\n\
    \    if(n == 2){\n        return 4;\n    }\n    return starts_one_ends(n-1) +\
    \ starts_one_ends(n-2);\n}\n", "  if(n==1){\n    return 2;\n  }\n  else{\n   \
    \ return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n  }\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    else{\n        return 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n\
    \    }\n}\n", "    if(n==1){\n        return 2;\n    }\n    else{\n        return\
    \ 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n    }\n}\n", "    if(n == 1){\n  \
    \      return 2;\n    }\n    else{\n        return starts_one_ends(n-1) + 9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    var count = 0;\n    for(var i = 1; i <= n; i++){\n        count\
    \ += Math.pow(10, i-1);\n    }\n    return count;\n}\n", "    if(n == 1){\n  \
    \      return 2;\n    }\n    else{\n        return starts_one_ends(n-1) + 9 *\
    \ Math.pow(10, n-2);\n    }\n}\n", "    if(n==1){\n        return 2;\n    }\n\
    \    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return\
    \ 10;\n    }\n    return 9*Math.pow(10,n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n==1){\n        return 2;\n    }\n    else{\n        return (9*Math.pow(10,n-1))+starts_one_ends(n-1);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n  \
    \      return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    else if(n == 2){\n     \
    \   return 9;\n    }\n    else{\n        return 9 * Math.pow(10, n - 2);\n   \
    \ }\n}\n", "    var count = 0;\n    var i = 1;\n    while(i <= n){\n        count\
    \ += Math.pow(10, i - 1);\n        i++;\n    }\n    return count;\n}\n", "   \
    \ if(n == 1){\n        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)\
    \ + 9*Math.pow(10, n-2);\n    }\n}\n", "    if(n==1){\n        return 2;\n   \
    \ }\n    return 10*starts_one_ends(n-1)+Math.pow(10,n-1);\n}", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n       \
    \ return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n==1){\n        return 2;\n    }\n    else if(n==2){\n        return\
    \ 3;\n    }\n    else{\n        return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n  \
    \      return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "  if(n==1){\n    return 2;\n  }\n  if(n==2){\n    return 3;\n  }\n  return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return\
    \ 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    var count = 0;\n    var start = Math.pow(10, n-1);\n    var\
    \ end = Math.pow(10, n) - 1;\n    for(var i = start; i <= end; i++){\n       \
    \ if(i.toString().charAt(0) == 1 || i.toString().charAt(i.toString().length -\
    \ 1) == 1){\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "  var\
    \ count = 0;\n  for(var i = 1; i <= n; i++){\n    count += Math.pow(10, i - 1);\n\
    \  }\n  return count;\n}\n", "    if(n == 1){\n        return 2;\n    }\n    return\
    \ (starts_one_ends(n-1) + 9 * Math.pow(10, n-2));\n}\n", "  if(n==1){\n    return\
    \ 1;\n  }\n  return Math.pow(10,n-1)+9*Math.pow(10,n-2);\n}\n", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n       \
    \ return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    var count = 0;\n    var i = 1;\n    while(i <= n){\n        count +=\
    \ Math.pow(10, n-i);\n        i++;\n    }\n    return count;\n}\n", "    if(n\
    \ == 1){\n        return 2;\n    }\n    return 9 * Math.pow(10, n - 1) + starts_one_ends(n\
    \ - 1);\n}\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n     \
    \   return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}",
  "  if(n == 1){\n    return 2;\n  }\n  else if(n == 2){\n    return 3;\n  }\n  else{\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2);\n  }\n}\n", "    if(n\
    \ == 1){\n        return 10;\n    }\n    if(n == 2){\n        return 100;\n  \
    \  }\n    if(n == 3){\n        return 1000;\n    }\n    if(n == 4){\n        return\
    \ 10000;\n    }\n    if(n == 5){\n        return 100000;\n    }\n    if(n == 6){\n\
    \        return 1000000;\n    }\n    if(n == 7){\n        return 10000000;\n \
    \   }\n    if(n == 8){\n        return 100000000;\n    }\n    if(n == 9){\n  \
    \      return 1000000000;\n    }\n    if(n == 10){\n        return 10000000000;\n\
    \    }\n}\n", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n      \
    \  return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}",
  "    if(n == 1){\n        return 10;\n    }\n    if(n == 2){\n        return 19;\n\
    \    }\n    var dp = new Array(n+1);\n    dp[0] = 0;\n    dp[1] = 10;\n    dp[2]\
    \ = 19;\n    for(var i = 3; i <= n; i++){\n        dp[i] = 9*dp[i-1] + 9*dp[i-2];\n\
    \    }\n    return dp[n];\n}\n", "    if(n == 1){\n        return 2;\n    }\n\
    \    return starts_one_ends(n-1) + 9*Math.pow(10,n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 4;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n == 1){\n        return\
    \ 2;\n    }\n    else if(n == 2){\n        return 4;\n    }\n    else{\n     \
    \   return starts_one_ends(n-1) + starts_one_ends(n-2);\n    }\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "  if(n == 1){\n    return 2;\n\
    \  }\n  if(n == 2){\n    return 3;\n  }\n  return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", " \
    \   if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 4;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    else{\n        return 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n\
    \    }\n}\n", "  if(n==1){\n    return 2;\n  }\n  return 9*Math.pow(10,n-2);\n\
    }\n", "    if(n===1){\n        return 2;\n    }\n    if(n===2){\n        return\
    \ 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n\
    \ == 1){\n        return 2;\n    }\n    else if(n == 2){\n        return 3;\n\
    \    }\n    else{\n        return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    \    }\n}\n", "    if(n == 1){\n        return 10;\n    }\n    if(n == 2){\n \
    \       return 19;\n    }\n    let count = 9;\n    let i = 1;\n    while(i < n){\n\
    \        count = count * (9 - i + 2);\n        i++;\n    }\n    return count;\n\
    }\n", "    if(n==1){\n        return 2;\n    }\n    else{\n        return 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n  \
    \      return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }", "    if(n==1){\n        return 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    if(n==1){\n        return 2;\n    }\n    else{\n        return\
    \ 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n    }\n}\n", "    if(n==1){\n    \
    \    return 2;\n    }\n    else{\n        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n\
    \    }\n}\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n  \
    \      return 3;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    }\n", "    var count = 0;\n    var start = Math.pow(10, n-1);\n    var end = Math.pow(10,\
    \ n);\n    for(var i = start; i < end; i++){\n        if(i.toString().charAt(0)\
    \ === \"1\" || i.toString().charAt(i.toString().length-1) === \"1\"){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n", "  if(n === 1){\n\
    \    return 10;\n  }\n  if(n === 2){\n    return 19;\n  }\n  return starts_one_ends(n-1)\
    \ + starts_one_ends(n-2);\n}\n", "    if(n==1){\n        return 2;\n    }\n  \
    \  if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n==1){\n        return 2;\n    }\n    if(n==2){\n        return 3;\n\
    \    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n}\n", "    if(n\
    \ == 1){\n        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n\
    \    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1)+starts_one_ends(n-2);\n}", "    if(n==1){\n        return\
    \ 2;\n    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n === 1){\n        return 2;\n    }\n    if(n === 2){\n        return\
    \ 9;\n    }\n    return 9 * Math.pow(10, n - 2);\n}\n", "    if(n==1){\n     \
    \   return 2;\n    }\n    return 9*Math.pow(10,n-2);\n}\n", "    if(n == 1){\n\
    \        return 2;\n    }\n    if(n == 2){\n        return 3;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    var count = 0;\n  \
    \  for(var i = 1; i <= n; i++){\n        count += Math.pow(10, i - 1);\n    }\n\
    \    return count;\n}\n", "    if(n==1){\n        return 2;\n    }\n    else{\n\
    \        return starts_one_ends(n-1)+9*Math.pow(10,n-2);\n    }\n}\n", "    if(n\
    \ == 1){\n        return 10;\n    }\n    if(n == 2){\n        return 19;\n   \
    \ }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n\
    \        return 10;\n    }\n    if(n==2){\n        return 55;\n    }\n    return\
    \ starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n", "    if(n==1){\n       \
    \ return 2;\n    }\n    else{\n        return 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n\
    \    }\n}", "    let count = 0;\n    for(let i = 1; i <= n; i++){\n        count\
    \ += Math.pow(9, i - 1);\n    }\n    return count;\n}\n", "    if(n==1){\n   \
    \     return 1;\n    }\n    if(n==2){\n        return 10;\n    }\n    if(n==3){\n\
    \        return 100;\n    }\n    if(n==4){\n        return 1000;\n    }\n    if(n==5){\n\
    \        return 10000;\n    }\n    if(n==6){\n        return 100000;\n    }\n\
    \    if(n==7){\n        return 1000000;\n    }\n    if(n==8){\n        return\
    \ 10000000;\n    }\n    if(n==9){\n        return 100000000;\n    }\n    if(n==10){\n\
    \        return 1000000000;\n    }\n}\n", "    if(n==1){\n        return 2;\n\
    \    }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    let count = 0;\n    for(let i = 1; i <= n; i++){\n        count += Math.pow(10,\
    \ i-1);\n    }\n    return count;\n}\n", "    if(n==1){\n        return 2;\n \
    \   }\n    if(n==2){\n        return 3;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }", "    if(n == 1){\n        return 2;\n    }\n    else if(n == 2){\n       \
    \ return 3;\n    }\n    else{\n        return starts_one_ends(n-1) + starts_one_ends(n-2);\n\
    \    }\n}\n", "    if(n==1){\n        return 2;\n    }\n    else{\n        return\
    \ 9*Math.pow(10,n-2)+starts_one_ends(n-1);\n    }\n}\n", "    if(n==1){\n    \
    \    return 2;\n    }\n    if(n==2){\n        return 4;\n    }\n    return starts_one_ends(n-1)+starts_one_ends(n-2);\n\
    }\n", "    if(n == 1){\n        return 2;\n    }\n    if(n == 2){\n        return\
    \ 4;\n    }\n    return starts_one_ends(n-1) + starts_one_ends(n-2);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

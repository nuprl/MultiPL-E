name: HumanEval_49_modp
language: javascript
prompt: "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n\
  // >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n//\
  \ 8\n// >>> modp(100, 101)\n// 1\nfunction modp(n, p){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
  \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
  \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
  \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
completions: ["\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\
    \t\treturn modp(n/2, p) * modp(n/2, p) % p;\n\t}\n\treturn modp(n-1, p) * 2 %\
    \ p;\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return n;\n\tif(n % 2 == 0){\n\
    \t\tvar x = modp(n/2, p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2,\
    \ p);\n\t\treturn (x*x*n) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n\
    \        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n", "\tif(n == 0) return\
    \ 1;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn (x*x) % p;\n\t\
    }\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x) % p;\n\t}\n}\n",
  "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n\
    \    }\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n\
    \        return Math.pow(modp(n/2, p), 2) % p;\n    }\n    return (modp(n-1, p)\
    \ * modp(n, p)) % p;\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n\
    \ % 2 === 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1,\
    \ p) * 2 % p;\n}\n", "  if (n == 0) return 1;\n  if (n % 2 == 0) {\n    var x\
    \ = modp(n/2, p);\n    return (x * x) % p;\n  } else {\n    return (2 * modp(n-1,\
    \ p)) % p;\n  }\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n\
    \ % 2 == 0){\n\t\treturn (modp(n/2, p) * modp(n/2, p)) % p;\n\t} else {\n\t\t\
    return (2 * modp(n-1, p)) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n % 2 == 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n \
    \   }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n}\n", "    if(n\
    \ === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n        return modp(n/2,\
    \ p)**2 % p;\n    }\n    return n * modp(n-1, p) % p;\n}\n", "    var result =\
    \ 1;\n    var i;\n    for (i = 0; i < n; i++){\n        result = (result * 2)\
    \ % p;\n    }\n    return result;\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n == 1){\n        return 2 % p;\n    }\n    var half = modp(Math.floor(n/2),\
    \ p);\n    if(n % 2 == 0){\n        return (half * half) % p;\n    }\n    else{\n\
    \        return (2 * half * half) % p;\n    }\n}\n", "    if(n == 0){\n      \
    \  return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n\
    \    }\n    return modp(n-1, p) * modp(n+1, p) % p;\n}\n", "  if (n === 0) return\
    \ 1;\n  if (n % 2 === 0) {\n    var m = modp(n/2, p);\n    return (m*m) % p;\n\
    \  } else {\n    return (modp(n-1, p) * n) % p;\n  }\n}\n", "    if(n == 0){\n\
    \        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2\
    \ % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n    }\n}\n", " \
    \   if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ modp(n/2, p) ** 2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 %\
    \ p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n\
    \        return 2;\n    }\n    if(n % 2 == 0){\n        return (modp(n/2, p)**2)\
    \ % p;\n    }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n}\n",
  "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar t = modp(n/2, p);\n\t\treturn\
    \ (t*t) % p;\n\t}\n\treturn (2*modp(n-1, p)) % p;\n}\n", "  var result = 1;\n\
    \  var x = 2;\n  var power = n;\n  while (power > 0) {\n    var leastSignificantBit\
    \ = power % 2;\n    power = Math.floor(power / 2);\n    if (leastSignificantBit\
    \ == 1) {\n      result = result * x;\n      result = result % p;\n    }\n   \
    \ x = x * x;\n    x = x % p;\n  }\n  return result;\n}\n", "    if (n == 0) return\
    \ 1;\n    if (n == 1) return n % p;\n    if (n % 2 == 0) return (modp(n/2, p)\
    \ ** 2) % p;\n    return (modp(n-1, p) * n) % p;\n}\n", "    if (n == 0) return\
    \ 1;\n    if (n % 2 == 0) {\n        var t = modp(n/2, p);\n        return (t*t)\
    \ % p;\n    } else {\n        return (modp(n-1, p) * n) % p;\n    }\n}\n", " \
    \   if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n        return\
    \ modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n}\n", "   \
    \ if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2,\
    \ p)**2 % p;\n    }\n    return modp(n-1, p) * modp(n+1, p) % p;\n}\n", "\tif(n\
    \ == 0) return 1;\n\tif(n%2 == 0){\n\t\tvar r = modp(n/2, p);\n\t\treturn (r*r)%p;\n\
    \t}\n\treturn (2*modp(n-1, p))%p;\n}\n", "    if(n === 0){\n        return 1;\n\
    \    }\n    if(n % 2 === 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n\
    \    }\n    return (2 * modp(n-1, p)) % p;\n}\n", "    if(n === 0){\n        return\
    \ 1;\n    }\n    if(n % 2 === 0){\n        return Math.pow(modp(n/2, p), 2) %\
    \ p;\n    }\n    return (modp(n-1, p) * modp(n, p)) % p;\n}\n", "    if(n ===\
    \ 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n        return Math.pow(modp(n/2,\
    \ p), 2) % p;\n    }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return modp(n/2, p) ** 2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return\
    \ modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n  \
    \  }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    return\
    \ (modp(n-1, p) * modp(n+1, p)) % p;\n}\n", "\tvar result = 1;\n\tvar b = n;\n\
    \twhile (b > 0){\n\t\tif (b % 2 == 1){\n\t\t\tresult = (result * n) % p;\n\t\t\
    }\n\t\tb = Math.floor(b / 2);\n\t\tn = (n * n) % p;\n\t}\n\treturn result;\n}\n",
  "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n        return 2;\n\
    \    }\n    if(n % 2 == 0){\n        return (modp(n/2, p) * modp(n/2, p)) % p;\n\
    \    }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n}\n", "    if(n\
    \ == 0){\n        return 1;\n    }\n    else if(n == 1){\n        return n;\n\
    \    }\n    else if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n\
    \    else{\n        return modp(n-1, p) * n % p;\n    }\n}\n", "    if(n == 0){\n\
    \        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2\
    \ % p;\n    }\n    return (modp(n-1, p) * modp(n+1, p)) % p;\n}\n", "\tif(n ==\
    \ 0) return 1;\n\tif(n == 1) return n;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2,\
    \ p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\t\
    return (x*x*n) % p;\n\t}\n}\n", "    var result = 1;\n    var x = n % p;\n   \
    \ while (n > 0){\n        if (n % 2 == 1){\n            result = (result * x)\
    \ % p;\n        }\n        n = Math.floor(n / 2);\n        x = (x * x) % p;\n\
    \    }\n    return result;\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n / 2, p) ** 2 % p;\n    }\n    else{\n\
    \        return modp(n - 1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n     \
    \   return 1;\n    }\n    if(n == 1){\n        return 2;\n    }\n    if(n % 2\
    \ == 0){\n        return (modp(n / 2, p) * modp(n / 2, p)) % p;\n    }\n    else{\n\
    \        return (2 * modp(n - 1, p)) % p;\n    }\n}\n", "    if(n == 0){\n   \
    \     return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n / 2, p) **\
    \ 2 % p;\n    }\n    return modp(n - 1, p) * 2 % p;\n}\n", "\tif(n == 0) return\
    \ 1;\n\tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\treturn (modp(n/2, p) * modp(n/2,\
    \ p)) % p;\n\t}\n\telse{\n\t\treturn (2 * modp(n-1, p)) % p;\n\t}\n}\n", "   \
    \ if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return Math.pow(modp(n/2,\
    \ p), 2) % p;\n    }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n\
    }\n", "\tvar result = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tresult = (result\
    \ * 2) % p;\n\t}\n\treturn result;\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n % 2 == 0){\n        return (modp(n/2, p) * modp(n/2, p)) % p;\n\
    \    }\n    else{\n        return (modp(n-1, p) * modp(n+1, p)) % p;\n    }\n\
    }\n", "\tif(n == 0)\n\t\treturn 1;\n\tif(n%2 == 0)\n\t\treturn modp(n/2, p) *\
    \ modp(n/2, p) % p;\n\telse\n\t\treturn modp(n/2, p) * modp(n/2, p) * 2 % p;\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * modp(n+1, p) % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n\
    \        return modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n       \
    \ return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n\
    \    }\n    else{\n        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n",
  "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn\
    \ (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x)\
    \ % p;\n\t}\n}\n", "    var result = 1;\n    var x = n % p;\n    while (n > 0){\n\
    \        if (n % 2 == 1){\n            result = (result * x) % p;\n        }\n\
    \        n = Math.floor(n / 2);\n        x = (x * x) % p;\n    }\n    return result;\n\
    }\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n    \
    \    return modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * 2 % p;\n    }\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n\
    \ % 2 === 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    else{\n     \
    \   return modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return\
    \ 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n\
    \    else{\n        return modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n === 0){\n\
    \        return 1;\n    }\n    if(n % 2 === 0){\n        return modp(n/2, p) **\
    \ 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n}\n", "  if(n === 0){\n   \
    \ return 1;\n  }\n  if(n % 2 === 0){\n    return modp(n/2, p) ** 2 % p;\n  }\n\
    \  return modp(n-1, p) * 2 % p;\n}\n", "    if(n === 0){\n        return 1;\n\
    \    }\n    if(n === 1){\n        return n;\n    }\n    if(n % 2 === 0){\n   \
    \     return Math.pow(modp(n/2, p), 2) % p;\n    }\n    else{\n        return\
    \ (n * modp(n-1, p)) % p;\n    }\n}\n", "    var res = 1;\n    while (n > 0){\n\
    \        if (n % 2 == 1){\n            res = (res * 2) % p;\n        }\n     \
    \   n = Math.floor(n / 2);\n        if (n > 0){\n            res = (res * res)\
    \ % p;\n        }\n    }\n    return res;\n}\n", "  if(n == 0){\n    return 1;\n\
    \  }\n  if(n % 2 == 0){\n    return modp(n/2, p) * modp(n/2, p) % p;\n  }\n  else{\n\
    \    return modp(n-1, p) * modp(n, p) % p;\n  }\n}\n", "    if(n == 0){\n    \
    \    return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n\
    \    }\n    else{\n        return (modp(n-1, p) * modp(n+1, p)) % p;\n    }\n\
    }\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar r = modp(n/2, p);\n\t\
    \treturn (r*r) % p;\n\t}\n\telse{\n\t\tvar r = modp((n-1)/2, p);\n\t\treturn (2*r*r)\
    \ % p;\n\t}\n}\n", "\tvar result = 1;\n\tvar i = 0;\n\tvar two = 2;\n\tvar n_bin\
    \ = n.toString(2);\n\tvar n_bin_len = n_bin.length;\n\tfor(i = 0; i < n_bin_len;\
    \ i++){\n\t\tif(n_bin[i] == 1){\n\t\t\tresult = (result * two) % p;\n\t\t}\n\t\
    \ttwo = (two * two) % p;\n\t}\n\treturn result;\n}\n", "  var result = 1;\n  for\
    \ (var i = 0; i < n; i++) {\n    result = (result * 2) % p;\n  }\n  return result;\n\
    }\n", "  if(n === 0){\n    return 1;\n  }\n  if(n % 2 === 0){\n    return modp(n/2,\
    \ p) ** 2 % p;\n  }\n  return (modp(n-1, p) * 2) % p;\n}\n", "    var result =\
    \ 1;\n    for (var i = 0; i < n; i++){\n        result = (result * 2) % p;\n \
    \   }\n    return result;\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n\
    \        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n", "    var result\
    \ = 1;\n    for (var i = 0; i < n; i++) {\n        result = (result * 2) % p;\n\
    \    }\n    return result;\n}\n", "\tvar res = 1;\n\twhile(n > 0){\n\t\tif(n %\
    \ 2 == 1){\n\t\t\tres = (res * 2) % p;\n\t\t}\n\t\tn = Math.floor(n / 2);\n\t\
    }\n\treturn res;\n}\n", "  if(n == 0){\n    return 1;\n  }\n  if(n == 1){\n  \
    \  return 2;\n  }\n  if(n % 2 == 0){\n    var x = modp(n/2, p);\n    return (x*x)\
    \ % p;\n  }\n  else{\n    var x = modp((n-1)/2, p);\n    return (2*x*x) % p;\n\
    \  }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n\
    \        return modp(n/2, p) ** 2 % p;\n    }\n    else{\n        return modp(n-1,\
    \ p) * 2 % p;\n    }\n}\n", "    var res = 1;\n    while (n > 0){\n        if\
    \ (n % 2 == 1){\n            res = (res * 2) % p;\n        }\n        n = Math.floor(n\
    \ / 2);\n        if (n > 0){\n            res = (res * res) % p;\n        }\n\
    \    }\n    return res;\n}\n", "    if(n == 0){\n        return 1;\n    }\n  \
    \  if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n  \
    \      return modp(n-1, p) * 2 % p;\n    }\n}\n", "  if(n === 0){\n    return\
    \ 1;\n  }\n  if(n % 2 === 0){\n    return modp(n/2, p) ** 2 % p;\n  }\n  return\
    \ modp(n-1, p) * 2 % p;\n}\n", "  if(n === 0){\n    return 1;\n  }\n  if(n % 2\
    \ === 0){\n    return modp(n / 2, p) ** 2 % p;\n  }\n  return modp(n - 1, p) *\
    \ 2 % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n\
    \        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1,\
    \ p) * 2 % p;\n    }\n}\n", "  if(n === 0){\n    return 1;\n  }\n  if(n % 2 ===\
    \ 0){\n    return modp(n / 2, p) ** 2 % p;\n  }\n  return modp(n - 1, p) * 2 %\
    \ p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n\
    \        return modp(n/2, p)**2 % p;\n    }\n    return modp(n-1, p) * modp(n+1,\
    \ p) % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n\
    \        return 2;\n    }\n    if(n % 2 == 0){\n        return (modp(n/2, p) *\
    \ modp(n/2, p)) % p;\n    }\n    else{\n        return (2 * modp(n-1, p)) % p;\n\
    \    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n  \
    \      return 2;\n    }\n    var half = modp(Math.floor(n/2), p);\n    if(n %\
    \ 2 == 0){\n        return (half * half) % p;\n    }\n    else{\n        return\
    \ (2 * half * half) % p;\n    }\n}\n", "    var r = 1;\n    var b = n;\n    while\
    \ (p > 0) {\n        if (p & 1) {\n            r = (r * b) % mod;\n        }\n\
    \        p = p >> 1;\n        b = (b * b) % mod;\n    }\n    return r;\n}\n",
  "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ Math.pow(modp(n/2, p), 2) % p;\n    }\n    return (modp(n-1, p) * 2) % p;\n\
    }\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n    \
    \    return Math.pow(modp(n/2, p), 2) % p;\n    }\n    return (modp(n-1, p) *\
    \ 2) % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n\
    \        return 2;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2\
    \ % p;\n    }\n    else{\n        return 2 * modp(n-1, p) % p;\n    }\n}\n", " \
    \   if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n\
    \    }\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n\
    \        return modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n\
    }\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n    \
    \    return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * modp(n+1, p) % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    else{\n\
    \        return (modp(n/2, p) ** 2 % p) * n % p;\n    }\n}\n", "  if(n === 0){\n\
    \    return 1;\n  }\n  if(n % 2 === 0){\n    return modp(n/2, p)**2 % p;\n  }\n\
    \  return modp(n-1, p) * 2 % p;\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return\
    \ 2;\n\tif(n % 2 == 0){\n\t\treturn Math.pow(modp(n/2, p), 2) % p;\n\t}\n\telse{\n\
    \t\treturn (2 * modp(n-1, p)) % p;\n\t}\n}\n", "    if(n == 0){\n        return\
    \ 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n\
    \    else{\n        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n", "  \
    \  if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ (modp(n/2, p) * modp(n/2, p)) % p;\n    }\n    return (modp(n/2, p) * modp(n/2,\
    \ p) * 2) % p;\n}\n", "    if(n===0){\n        return 1;\n    }\n    if(n%2===0){\n\
    \        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return (modp(n-1,\
    \ p) * modp(n+1, p)) % p;\n    }\n}\n", "    if(n === 0){\n        return 1;\n\
    \    }\n    if(n % 2 === 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n \
    \   else{\n        return modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n\
    \        return 1;\n    }\n    else if(n % 2 == 0){\n        return modp(n/2,\
    \ p)**2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n    }\n\
    }\n", "    var result = 1;\n    var x = n % p;\n    while (n > 0){\n        if\
    \ (n % 2 == 1){\n            result = (result * x) % p;\n        }\n        n\
    \ = Math.floor(n / 2);\n        x = (x * x) % p;\n    }\n    return result;\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * modp(n+1, p) % p;\n    }\n}\n", "  if (n === 0) return 1;\n  if (n % 2 ===\
    \ 0) {\n    var x = modp(n/2, p);\n    return (x * x) % p;\n  } else {\n    return\
    \ (2 * modp(n-1, p)) % p;\n  }\n}\n", "    if(n === 0){\n        return 1;\n \
    \   }\n    if(n % 2 === 0){\n        return modp(n / 2, p) ** 2 % p;\n    }\n\
    \    return modp(n - 1, p) * 2 % p;\n}\n", "    if(n === 0){\n        return 1;\n\
    \    }\n    if(n % 2 === 0){\n        return modp(n/2, p)**2 % p;\n    }\n   \
    \ else{\n        return modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n === 0){\n\
    \        return 1;\n    }\n    if(n % 2 === 0){\n        return modp(n/2, p) **\
    \ 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n}\n", "    if(n == 0){\n  \
    \      return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 %\
    \ p;\n    }\n    else{\n        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return (modp(n/2, p) * modp(n/2, p)) % p;\n    }\n    else{\n        return\
    \ (modp(n/2, p) * modp(n/2, p) * 2) % p;\n    }\n}\n", "  if (n == 0) return 1;\n\
    \  if (n == 1) return n;\n  if (n % 2 == 0) return modp(n/2, p)**2 % p;\n  return\
    \ modp(n-1, p) * n % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n  \
    \  if(n % 2 == 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n    }\n   \
    \ return (modp(n-1, p) * modp(1, p)) % p;\n}\n", "    if(n == 0){\n        return\
    \ 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n\
    \    else{\n        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n", "\t\
    if(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2,\
    \ p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\t\
    return (2*x*x) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n \
    \   if(n % 2 == 0){\n        return modp(n/2, p) * modp(n/2, p) % p;\n    }\n\
    \    else{\n        return modp(n/2, p) * modp(n/2, p) * 2 % p;\n    }\n}\n",
  "  var result = 1;\n  for (var i = 0; i < n; i++) {\n    result = (result * 2) %\
    \ p;\n  }\n  return result;\n}\n", "\tvar result = 1;\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tresult = (result * 2) % p;\n\t}\n\treturn result;\n}\n", "    var\
    \ res = 1;\n    while (n > 0){\n        if (n % 2 == 1){\n            res = (res\
    \ * 2) % p;\n        }\n        n = Math.floor(n / 2);\n        if (n > 0){\n\
    \            res = (res * res) % p;\n        }\n    }\n    return res;\n}\n",
  "\tvar res = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tres = (res * 2) % p;\n\t}\n\t\
    return res;\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 ===\
    \ 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1, p) *\
    \ 2 % p;\n}\n", "    if(p == 1) return 0;\n    if(n == 0) return 1;\n    if(n\
    \ == 1) return n;\n    if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n\
    \    }\n    else{\n        return modp(n-1, p) * modp(n, p) % p;\n    }\n}\n",
  "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ Math.pow(modp(n/2, p), 2) % p;\n    }\n    else{\n        return (n % p) * modp(n-1,\
    \ p) % p;\n    }\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return n;\n\tif(n\
    \ % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\
    \t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x) % p;\n\t}\n}\n", "    if(n ==\
    \ 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2,\
    \ p) ** 2 % p;\n    }\n    else{\n        return modp(n-1, p) * modp(n+1, p) %\
    \ p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 ==\
    \ 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n    }\n    return (n % p)\
    \ * modp((n-1)/2, p) % p;\n}\n", "    if(n === 0){\n        return 1;\n    }\n\
    \    if(n % 2 === 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    return\
    \ modp(n-1, p) * 2 % p;\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return n;\n\
    \tif(n%2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn (x*x)%p;\n\t}\n\telse{\n\
    \t\tvar x = modp((n-1)/2, p);\n\t\treturn (x*x*n)%p;\n\t}\n}\n", "    if(n ==\
    \ 0){\n        return 1;\n    }\n    if(n == 1){\n        return 2;\n    }\n \
    \   if(n % 2 == 0){\n        return (modp(n/2, p)**2) % p;\n    }\n    else{\n\
    \        return (2 * modp(n-1, p)) % p;\n    }\n}\n", "\tif(n == 0) return 1;\n\
    \tif(n == 1) return n;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn\
    \ (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (x*x*n)\
    \ % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 ==\
    \ 0){\n        return modp(n/2, p)**2 % p;\n    }\n    return modp(n-1, p) * modp(n+1,\
    \ p) % p;\n}\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar half = modp(n/2,\
    \ p);\n\t\treturn (half * half) % p;\n\t}\n\telse{\n\t\tvar half = modp((n-1)/2,\
    \ p);\n\t\treturn (half * half * n) % p;\n\t}\n}\n", "  if (n == 0) return 1;\n\
    \  if (n % 2 == 0) return modp(n/2, p) * modp(n/2, p) % p;\n  return modp(n-1,\
    \ p) * 2 % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2\
    \ == 0){\n        return modp(n/2, p) * modp(n/2, p) % p;\n    }\n    else{\n\
    \        return 2 * modp(n-1, p) % p;\n    }\n}\n", "    if(n == 0){\n       \
    \ return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p) * modp(n/2,\
    \ p) % p;\n    }\n    else{\n        return modp(n-1, p) * modp(n, p) % p;\n \
    \   }\n}\n", "  if (n == 0) return 1;\n  if (n == 1) return 2;\n  if (n % 2 ==\
    \ 0) return modp(n/2, p)**2 % p;\n  return 2 * modp(n-1, p) % p;\n}\n", "    if(n\
    \ === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n        return modp(n/2,\
    \ p) ** 2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n    }\n\
    }\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\
    \treturn (x * x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn\
    \ (2 * x * x) % p;\n\t}\n}\n", "    if(n === 0){\n        return 1;\n    }\n \
    \   if(n % 2 === 0){\n        return modp(n/2, p)**2 % p;\n    }\n    return modp(n-1,\
    \ p) * modp(n+1, p) % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n \
    \   if(n == 1){\n        return 2;\n    }\n    if(n % 2 == 0){\n        return\
    \ modp(n/2, p)**2 % p;\n    }\n    return 2 * modp(n-1, p) % p;\n}\n", "\tif(n\
    \ == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar t = modp(n/2, p);\n\t\treturn (t*t)\
    \ % p;\n\t}\n\treturn (2*modp(n-1, p)) % p;\n}\n", "\tif(n == 0) return 1;\n\t\
    if(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn\
    \ (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x)\
    \ % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n\
    \        return 2;\n    }\n    if(n % 2 == 0){\n        return (modp(n / 2, p)\
    \ ** 2) % p;\n    }\n    else{\n        return (2 * modp(n - 1, p)) % p;\n   \
    \ }\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\
    \t\tvar x = modp(n/2, p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2,\
    \ p);\n\t\treturn (2*x*x) % p;\n\t}\n}\n", "\tvar result = 1;\n\tvar x = n % p;\n\
    \twhile (n > 0){\n\t\tif (n % 2 == 1){\n\t\t\tresult = (result * x) % p;\n\t\t\
    }\n\t\tn = Math.floor(n / 2);\n\t\tx = (x * x) % p;\n\t}\n\treturn result;\n}\n",
  "    var result = 1;\n    var power = n % (p - 1);\n    var base = 2;\n    while\
    \ (power > 0) {\n        if (power % 2 == 1) {\n            result = (result *\
    \ base) % p;\n        }\n        base = (base * base) % p;\n        power = power\
    \ / 2;\n    }\n    return result;\n}\n", "    if(n === 0){\n        return 1;\n\
    \    }\n    if(n % 2 === 0){\n        return modp(n/2, p)**2 % p;\n    }\n   \
    \ return modp(n-1, p) * 2 % p;\n}\n", "  var result = 1;\n  for (var i = 0; i\
    \ < n; i++) {\n    result = (result * 2) % p;\n  }\n  return result;\n}\n", " \
    \   if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return\
    \ modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n\
    \    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n\
    \        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1,\
    \ p) * 2 % p;\n    }\n}\n", "\tvar res = 1;\n\tvar b = n;\n\twhile(b > 0){\n\t\
    \tif(b % 2 == 1){\n\t\t\tres = (res * n) % p;\n\t\t}\n\t\tb = Math.floor(b / 2);\n\
    \t\tn = (n * n) % p;\n\t}\n\treturn res;\n}\n", "\tvar result = 1;\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\treturn result;\n\
    }\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\treturn modp(n/2, p) * modp(n/2,\
    \ p) % p;\n\t}\n\telse{\n\t\treturn modp(n-1, p) * modp(n+1, p) % p;\n\t}\n}\n",
  "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\treturn (modp(n/2,\
    \ p) * modp(n/2, p)) % p;\n\t}\n\telse{\n\t\treturn (2 * modp(n-1, p)) % p;\n\t\
    }\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n \
    \       return Math.pow(modp(n/2, p), 2) % p;\n    }\n    else{\n        return\
    \ (2 * modp(n-1, p)) % p;\n    }\n}\n", "    var result = 1;\n    for (var i =\
    \ 0; i < n; i++){\n        result = (result * 2) % p;\n    }\n    return result;\n\
    }\n", "  if (n === 0) return 1;\n  if (n === 1) return n;\n  if (n % 2 === 0)\
    \ return (modp(n/2, p) ** 2) % p;\n  return (modp(n/2, p) ** 2 * n) % p;\n}\n",
  "  if (n === 0) return 1;\n  if (n % 2 === 0) {\n    var x = modp(n/2, p);\n   \
    \ return (x*x) % p;\n  } else {\n    return (n * modp(n-1, p)) % p;\n  }\n}\n",
  "\tvar result = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tresult = (result * 2) % p;\n\
    \t}\n\treturn result;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    return modp(n-1,\
    \ p) * 2 % p;\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n %\
    \ 2 == 0){\n\t\treturn Math.pow(modp(n/2, p), 2) % p;\n\t}\n\telse{\n\t\treturn\
    \ (2 * modp(n-1, p)) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n  \
    \  }\n    else{\n        var res = modp(Math.floor(n/2), p);\n        res = (res\
    \ * res) % p;\n        if(n % 2 == 1){\n            res = (res * 2) % p;\n   \
    \     }\n        return res;\n    }\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n  \
    \  else{\n        return modp(n-1, p) * modp(n+1, p) % p;\n    }\n}\n", "    if(n\
    \ == 0){\n        return 1;\n    }else if(n == 1){\n        return n;\n    }else{\n\
    \        var x = modp(n/2, p);\n        if(n % 2 == 0){\n            return (x\
    \ * x) % p;\n        }else{\n            return (x * x * n) % p;\n        }\n\
    \    }\n}\n", "  if(n === 0){\n    return 1;\n  }\n  if(n % 2 === 0){\n    return\
    \ Math.pow(modp(n/2, p), 2) % p;\n  }\n  return (n % p) * modp((n-1)/2, p) % p;\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n      \
    \  return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * modp(n+1, p) % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n / 2, p) ** 2 % p;\n    }\n    else{\n\
    \        return modp(n - 1, p) * 2 % p;\n    }\n}\n", "\tif(n === 0) return 1;\n\
    \tif(n === 1) return n % p;\n\tif(n % 2 === 0){\n\t\tvar res = modp(n/2, p);\n\
    \t\treturn (res * res) % p;\n\t}\n\telse{\n\t\tvar res = modp((n-1)/2, p);\n\t\
    \treturn (res * res * n) % p;\n\t}\n}\n", "    var result = 1;\n    for (var i\
    \ = 0; i < n; i++) {\n        result = (result * 2) % p;\n    }\n    return result;\n\
    }\n", "    if(n == 0){\n        return 1;\n    }\n    var res = 1;\n    var b\
    \ = n;\n    while(b > 0){\n        if(b % 2 == 1){\n            res = (res * n)\
    \ % p;\n        }\n        n = (n * n) % p;\n        b = Math.floor(b / 2);\n\
    \    }\n    return res;\n}\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\t\
    return modp(n/2, p) * modp(n/2, p) % p;\n\t}\n\telse{\n\t\treturn modp(n-1, p)\
    \ * modp(1, p) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n \
    \   if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    return\
    \ modp(n-1, p) * 2 % p;\n}\n", "    if(n === 0){\n        return 1;\n    }\n \
    \   if(n % 2 === 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n    }\n \
    \   return (2 * modp(n-1, p)) % p;\n}\n", "    var result = 1;\n    var i;\n \
    \   for (i = 0; i < n; i++){\n        result = (result * 2) % p;\n    }\n    return\
    \ result;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n\
    \        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1,\
    \ p) * modp(n+1, p) % p;\n    }\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return\
    \ n;\n\tif(n % 2 == 0){\n\t\treturn modp(n/2, p) * modp(n/2, p) % p;\n\t}\n\t\
    return modp(n-1, p) * n % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n\
    \    if(n % 2 == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    return\
    \ modp(n-1, p) * 2 % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n  \
    \  if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    return modp(n-1,\
    \ p) * modp(n+1, p) % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n \
    \   if(n == 1){\n        return 2;\n    }\n    if(n % 2 == 0){\n        return\
    \ (modp(n/2, p)**2) % p;\n    }\n    else{\n        return (2 * modp(n-1, p))\
    \ % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2\
    \ == 0){\n        return modp(n/2, p) ** 2 % p;\n    }\n    else{\n        return\
    \ modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n  \
    \  }\n    if(n == 1){\n        return 2;\n    }\n    if(n % 2 == 0){\n       \
    \ return (modp(n/2, p) * modp(n/2, p)) % p;\n    }\n    else{\n        return\
    \ (2 * modp(n-1, p)) % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    if(n % 2 == 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n \
    \   }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n}\n", "\tif(n\
    \ === 0) return 1;\n\tif(n === 1) return n;\n\tif(n % 2 === 0){\n\t\treturn modp(n/2,\
    \ p) * modp(n/2, p) % p;\n\t}\n\treturn modp(n-1, p) * n % p;\n}\n", "    if(n\
    \ == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2,\
    \ p) * modp(n/2, p) % p;\n    }\n    else{\n        return modp(n/2, p) * modp(n/2,\
    \ p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return\
    \ modp(n-1, p) * 2 % p;\n    }\n}\n", "    var r = 1;\n    var b = n;\n    while\
    \ (p > 0) {\n        if (p & 1 == 1) {\n            r = (r * b) % mod;\n     \
    \   }\n        p >>= 1;\n        b = (b * b) % mod;\n    }\n    return r;\n}\n",
  "\tif(n == 0) return 1;\n\tif(n == 1) return 2 % p;\n\tif(n % 2 == 0){\n\t\tvar\
    \ x = modp(n/2, p);\n\t\treturn (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2,\
    \ p);\n\t\treturn (2*x*x) % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n\
    \    }\n    else if(n == 1){\n        return n;\n    }\n    else{\n        if(n\
    \ % 2 == 0){\n            return (modp(n/2, p) * modp(n/2, p)) % p;\n        }\n\
    \        else{\n            return (modp(n/2, p) * modp(n/2, p) * n) % p;\n  \
    \      }\n    }\n}\n", "    if(n === 0){\n        return 1;\n    }\n    if(n %\
    \ 2 === 0){\n        return modp(n / 2, p) ** 2 % p;\n    }\n    return modp(n\
    \ - 1, p) * 2 % p;\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ == 1){\n        return 2;\n    }\n    if(n % 2 == 0){\n        return modp(n/2,\
    \ p)**2 % p;\n    }\n    else{\n        return 2 * modp(n-1, p) % p;\n    }\n\
    }\n", "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n    \
    \    return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1, p)\
    \ * modp(n+1, p) % p;\n    }\n}\n", "\tif(n === 0) return 1;\n\tif(n === 1) return\
    \ n;\n\tif(n % 2 === 0){\n\t\treturn Math.pow(modp(n/2, p), 2) % p;\n\t} else\
    \ {\n\t\treturn (n * modp(n-1, p)) % p;\n\t}\n}\n", "\tif(n == 0) return 1;\n\t\
    if(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn\
    \ (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x)\
    \ % p;\n\t}\n}\n", "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tif(n % 2\
    \ == 0){\n\t\treturn modp(n/2, p) * modp(n/2, p) % p;\n\t}\n\telse{\n\t\treturn\
    \ 2 * modp(n-1, p) % p;\n\t}\n}\n", "    var result = 1;\n    for (var i = 0;\
    \ i < n; i++) {\n        result = (result * 2) % p;\n    }\n    return result;\n\
    }\n", "    var result = 1;\n    for (var i = 0; i < n; i++) {\n        result\
    \ = (result * 2) % p;\n    }\n    return result;\n}\n", "\tif(n == 0) return 1;\n\
    \tif(n == 1) return 2;\n\tif(n % 2 == 0){\n\t\tvar x = modp(n/2, p);\n\t\treturn\
    \ (x*x) % p;\n\t}\n\telse{\n\t\tvar x = modp((n-1)/2, p);\n\t\treturn (2*x*x)\
    \ % p;\n\t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n % 2 ==\
    \ 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return modp(n-1,\
    \ p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n    else{\n        return\
    \ modp(n-1, p) * 2 % p;\n    }\n}\n", "    if(n == 0){\n        return 1;\n  \
    \  }\n    if(n % 2 == 0){\n        return Math.pow(modp(n/2, p), 2) % p;\n   \
    \ }\n    else{\n        return (2 * modp(n-1, p)) % p;\n    }\n}\n", "  if(n ===\
    \ 0){\n    return 1;\n  }\n  if(n % 2 === 0){\n    return modp(n / 2, p) ** 2\
    \ % p;\n  }\n  return modp(n - 1, p) * 2 % p;\n}\n", "  if(n == 0){\n    return\
    \ 1;\n  }\n  if(n % 2 == 0){\n    return modp(n/2, p)**2 % p;\n  }\n  return modp(n-1,\
    \ p) * 2 % p;\n}\n", "\tif(n == 0) return 1;\n\tif(n % 2 == 0){\n\t\tvar t = modp(n/2,\
    \ p);\n\t\treturn (t*t) % p;\n\t}\n\telse{\n\t\treturn (2*modp(n-1, p)) % p;\n\
    \t}\n}\n", "    if(n == 0){\n        return 1;\n    }\n    if(n == 1){\n     \
    \   return 2;\n    }\n    if(n % 2 == 0){\n        return (modp(n/2, p) * modp(n/2,\
    \ p)) % p;\n    }\n    return (2 * modp(n-1, p)) % p;\n}\n", "    if(n == 0){\n\
    \        return 1;\n    }\n    else if(n == 1){\n        return n % p;\n    }\n\
    \    else{\n        var half = modp(n/2, p);\n        if(n % 2 == 0){\n      \
    \      return (half * half) % p;\n        }\n        else{\n            return\
    \ (half * half * n) % p;\n        }\n    }\n}\n", "    if(n == 0){\n        return\
    \ 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2, p)**2 % p;\n    }\n\
    \    else{\n        return modp(n-1, p) * 2 % p;\n    }\n}\n", "\tif(n == 0) return\
    \ 1;\n\tif(n % 2 == 0){\n\t\tvar r = modp(n/2, p);\n\t\treturn (r*r) % p;\n\t\
    }\n\telse{\n\t\tvar r = modp((n-1)/2, p);\n\t\treturn (2*r*r) % p;\n\t}\n}\n",
  "    if(n === 0){\n        return 1;\n    }\n    if(n % 2 === 0){\n        return\
    \ modp(n/2, p) ** 2 % p;\n    }\n    return modp(n-1, p) * 2 % p;\n}\n", "   \
    \ if(n == 0){\n        return 1;\n    }\n    if(n % 2 == 0){\n        return modp(n/2,\
    \ p)**2 % p;\n    }\n    else{\n        return modp(n-1, p) * 2 % p;\n    }\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_70_strange_sort_list
language: javascript
prompt: "//Given list of integers, return list in strange order.\n// Strange sorting,\
  \ is when you start with the minimum value,\n// then maximum of the remaining integers,\
  \ then minimum and so on.\n// Examples:\n// strange_sort_list([1, 2, 3, 4]) == [1,\
  \ 4, 2, 3]\n// strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n// strange_sort_list([])\
  \ == []\nfunction strange_sort_list(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strange_sort_list;\n  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 4, 2, 3]);\n\
  \  assert.deepEqual(candidate([5, 6, 7, 8, 9]),[5, 9, 6, 8, 7]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5]),[1, 5, 2, 4, 3]);\n  assert.deepEqual(candidate([5, 6, 7, 8, 9, 1]),[1,\
  \ 9, 5, 8, 6, 7]);\n  assert.deepEqual(candidate([5, 5, 5, 5]),[5, 5, 5, 5]);\n\
  \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5]);\n  assert.deepEqual(candidate([0, 2, 2,\
  \ 2, 5, 5, -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2]);\n  assert.deepEqual(candidate([111111]),[111111]);\n\
  }\n\ntest();"
completions: ["    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (i < lst.length) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var res = [min];\n    var lst1 = lst.filter(x\
    \ => x != min);\n    while(lst1.length > 0){\n        var min1 = Math.min(...lst1);\n\
    \        var max1 = Math.max(...lst1);\n        res.push(max1);\n        lst1\
    \ = lst1.filter(x => x != max1);\n        if(lst1.length == 0) break;\n      \
    \  res.push(min1);\n        lst1 = lst1.filter(x => x != min1);\n    }\n    return\
    \ res;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var res = [min];\n    var i = 0;\n    while(res.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            res.push(max);\n      \
    \      lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        else{\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var result = [min];\n \
    \   var i = 0;\n    while (lst.length > 1) {\n        if (i % 2 == 0) {\n    \
    \        result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n   \
    \         max = Math.max.apply(null, lst);\n        } else {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    result.push(lst[0]);\n    return\
    \ result;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var result = [];\n    while(lst.length >\
    \ 0){\n        result.push(min);\n        lst.splice(lst.indexOf(min), 1);\n \
    \       if(lst.length > 0){\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0){\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var result = [];\n    result.push(min);\n    result.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [];\n    var\
    \ i = 0;\n    while (res.length < lst.length) {\n        if (i % 2 == 0) {\n \
    \           res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n   \
    \         min = Math.min.apply(null, lst);\n        } else {\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let res = [min];\n\
    \    lst.splice(lst.indexOf(min), 1);\n    while (lst.length > 0) {\n        if\
    \ (lst.indexOf(max) !== -1) {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        if (lst.indexOf(min) !== -1) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n        }\n    }\n    return res;\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var result = [];\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    while (lst.length > 0) {\n        min = Math.min.apply(null, lst);\n\
    \        min_index = lst.indexOf(min);\n        max = Math.max.apply(null, lst);\n\
    \        max_index = lst.indexOf(max);\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  }\n    return result;\n}\n", "    if (lst.length == 0) return [];\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n        if\
    \ (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [min];\n\
    \    var i = 0;\n    while (new_lst.length != lst.length) {\n        if (i % 2\
    \ == 0) {\n            new_lst.push(max);\n            max = Math.max.apply(null,\
    \ lst.filter(function(x) { return x != max && x != min; }));\n        } else {\n\
    \            new_lst.push(min);\n            min = Math.min.apply(null, lst.filter(function(x)\
    \ { return x != max && x != min; }));\n        }\n        i++;\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var lst_sorted = lst.sort(function(a,\
    \ b){return a-b});\n    var lst_sorted_reversed = lst_sorted.reverse();\n    var\
    \ lst_result = [];\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2\
    \ == 0){\n            lst_result.push(lst_sorted[i/2]);\n        }\n        else{\n\
    \            lst_result.push(lst_sorted_reversed[(i-1)/2]);\n        }\n    }\n\
    \    return lst_result;\n}\n", "    if(lst.length == 0) return [];\n    let res\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    res.push(min);\n    res.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    while(lst.length > 0){\n        min = Math.min(...lst);\n    \
    \    max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n        max_index\
    \ = lst.indexOf(max);\n        res.push(min);\n        res.push(max);\n      \
    \  lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n    }\n \
    \   return res;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var lst2 = lst.filter(x => x != min && x\
    \ != max);\n    return [min, max, ...strange_sort_list(lst2)];\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(new_lst.length != lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    let new_lst = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index, 1);\n    while (lst.length > 0){\n        min = Math.min(...lst);\n\
    \        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n    \
    \    max_index = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length == 0) return [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var result = [];\n    while (lst.length > 0) {\n        result.push(min);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        if (lst.length > 0) {\n   \
    \         result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n  \
    \      }\n        min = Math.min.apply(null, lst);\n        max = Math.max.apply(null,\
    \ lst);\n    }\n    return result;\n}\n", "    if (lst.length === 0) {\n     \
    \   return [];\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n\
    \        result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n      \
    \      result.push(sorted[j]);\n            j--;\n        }\n    }\n    return\
    \ result;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    while(lst.length\
    \ > 0){\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n  \
    \      min_index = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}\n",
  "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    let min = Math.min(...lst);\n    let max =\
    \ Math.max(...lst);\n    let res = [];\n    let i = 0;\n    while (res.length\
    \ < lst.length) {\n        if (i % 2 == 0) {\n            res.push(min);\n   \
    \         lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n \
    \       if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    if(lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n\
    \    let maxIndex = lst.indexOf(max);\n    let newLst = [];\n    newLst.push(min);\n\
    \    newLst.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_min\
    \ = [];\n    var new_lst_max = [];\n    var new_lst_min_max = [];\n    var new_lst_max_min\
    \ = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (i != min_index\
    \ && i != max_index) {\n            new_lst.push(lst[i]);\n        }\n    }\n\
    \    new_lst_min = strange_sort_list(new_lst);\n    new_lst_max = strange_sort_list(new_lst);\n\
    \    new_lst_min_max.push(min);\n    new_lst_min_max.push(max);\n    new_lst_max_min.push(max);\n\
    \    new_lst_max_min.push(min);\n    if (new_lst_min.length % 2 == 0) {\n    \
    \    for (var i = 0; i < new_lst_min.length; i++) {\n            if (i % 2 ==\
    \ 0) {\n                new_lst_min_max.push(new_lst_min[i]);\n            } else\
    \ {\n                new_lst_max_min.push(new_lst_min[i]);\n            }\n  \
    \      }\n    } else {\n        for (var i = 0; i < new_lst_min.length; i++) {\n\
    \            if (i % 2 == 0) {\n                new_lst_max_min.push(new_lst_min[i]);\n\
    \            } else {\n                new_lst_min_max.push(new_lst_min[i]);\n\
    \            }\n        }\n    }\n    return new_lst_min_max;\n}\n", "    if(lst.length\
    \ == 0) return lst;\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n\
    \    let newLst = [];\n    newLst.push(min);\n    newLst.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    while(lst.length > 0){\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        minIndex = lst.indexOf(min);\n\
    \        maxIndex = lst.indexOf(max);\n        newLst.splice(newLst.length - 1,\
    \ 0, min);\n        newLst.splice(newLst.length - 1, 0, max);\n        lst.splice(minIndex,\
    \ 1);\n        lst.splice(maxIndex - 1, 1);\n    }\n    return newLst;\n}\n",
  "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var result = [];\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    while (lst.length > 0) {\n        min = Math.min.apply(null, lst);\n\
    \        max = Math.max.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n  \
    \  let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n        result.push(sorted[i]);\n\
    \        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n  \
    \          j--;\n        }\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let\
    \ maxIndex = lst.indexOf(max);\n    let newLst = [];\n    newLst.push(min);\n\
    \    newLst.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0) return lst;\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var sorted = lst.sort(function(a, b){return a-b});\n \
    \   var result = [];\n    var i = 0;\n    var j = sorted.length - 1;\n    while(i\
    \ <= j){\n        result.push(sorted[i]);\n        if(i != j) result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var res = [];\n    var i = 0;\n    while (lst.length > 0) {\n   \
    \     if (i % 2 == 0) {\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ res;\n}\n", "    if (lst.length === 0) return [];\n    let result = [];\n  \
    \  let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex\
    \ = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    while (lst.length > 0) {\n        min = Math.min(...lst);\n  \
    \      max = Math.max(...lst);\n        minIndex = lst.indexOf(min);\n       \
    \ maxIndex = lst.indexOf(max);\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(minIndex, 1);\n        lst.splice(maxIndex - 1, 1);\n    }\n\
    \    return result;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var res = [];\n    var\
    \ i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var result = [min];\n \
    \   var new_lst = lst.filter(function(x){return x != min});\n    while (new_lst.length\
    \ > 0){\n        var new_max = Math.max.apply(null, new_lst);\n        result.push(new_max);\n\
    \        new_lst = new_lst.filter(function(x){return x != new_max});\n       \
    \ if (new_lst.length == 0) break;\n        var new_min = Math.min.apply(null,\
    \ new_lst);\n        result.push(new_min);\n        new_lst = new_lst.filter(function(x){return\
    \ x != new_min});\n    }\n    return result;\n}\n", "    if(lst.length == 0) return\
    \ [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    var new_lst_index = 0;\n    var lst_index = 0;\n    while(lst_index\
    \ < lst.length){\n        if(lst_index == min_index){\n            new_lst[new_lst_index]\
    \ = min;\n            new_lst_index++;\n            lst_index++;\n        }\n\
    \        else if(lst_index == max_index){\n            new_lst[new_lst_index]\
    \ = max;\n            new_lst_index++;\n            lst_index++;\n        }\n\
    \        else{\n            new_lst[new_lst_index] = lst[lst_index];\n       \
    \     new_lst_index++;\n            lst_index++;\n        }\n    }\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var res = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            new_lst.push(min);\n           \
    \ lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n    \
    \    }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [];\n\
    \    let i = 0;\n    while (result.length < lst.length) {\n        if (i % 2 ===\
    \ 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n    var\
    \ max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return [min, max, ...strange_sort_list(lst)];\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index, 1);\n    while(lst.length > 0){\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index, 1);\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length === 0) {\n        return [];\n\
    \    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n   \
    \ let new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length) {\n\
    \        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    if (lst.length === 1) {\n        return\
    \ lst;\n    }\n    let sorted = lst.sort((a, b) => a - b);\n    let result = [];\n\
    \    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n      \
    \  result.push(sorted[i]);\n        i++;\n        if (i <= j) {\n            result.push(sorted[j]);\n\
    \            j--;\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n    var i =\
    \ 0;\n    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return new_lst;\n}\n", "    let sorted = lst.sort((a, b) => a - b);\n\
    \    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while\
    \ (i <= j) {\n        result.push(sorted[i]);\n        if (i !== j) {\n      \
    \      result.push(sorted[j]);\n        }\n        i++;\n        j--;\n    }\n\
    \    return result;\n}\n", "    if(lst.length == 0) return [];\n    var new_lst\
    \ = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var minIndex = lst.indexOf(min);\n\
    \    var maxIndex = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return lst;\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length == 0) {\n        return lst;\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var res = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let\
    \ maxIndex = lst.indexOf(max);\n    let newLst = [];\n    newLst.push(min);\n\
    \    newLst.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ == 0) return lst;\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var res = [];\n    var i = 0;\n    while (lst.length > 0) {\n   \
    \     if (i % 2 == 0) {\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ res;\n}\n", "    if (lst.length == 0) return lst;\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length != lst.length) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     new_lst.push(min);\n            lst.splice(lst.indexOf(min), 1);\n     \
    \       min = Math.min(...lst);\n        }\n        else{\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if(lst.length\
    \ === 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let res = [min];\n    let i = 0;\n    while(res.length < lst.length){\n \
    \       if(i % 2 === 0){\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        } else {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length ===\
    \ 0) return [];\n    let result = [];\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [];\n    var\
    \ i = 0;\n    while (lst.length > 0) {\n        if (i % 2 == 0) {\n          \
    \  res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n            min\
    \ = Math.min.apply(null, lst);\n        } else {\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let res = [min];\n    let i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }else{\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if (lst.length ===\
    \ 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let max\
    \ = Math.max(...lst);\n    let new_lst = [min];\n    let new_lst2 = [max];\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] !== min && lst[i]\
    \ !== max) {\n            new_lst.push(lst[i]);\n        }\n    }\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] !== min && lst[i] !== max)\
    \ {\n            new_lst2.push(lst[i]);\n        }\n    }\n    new_lst2.sort((a,\
    \ b) => a - b);\n    return new_lst.concat(new_lst2);\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    if (lst.length == 1) {\n        return\
    \ lst;\n    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    var new_lst_2 = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(i == min_index){\n     \
    \       new_lst.push(min);\n        }\n        else if(i == max_index){\n    \
    \        new_lst.push(max);\n        }\n        else{\n            new_lst_2.push(lst[i]);\n\
    \        }\n    }\n    return new_lst.concat(strange_sort_list(new_lst_2));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    var new_lst = new_lst.concat(strange_sort_list(lst));\n    return\
    \ new_lst;\n}\n", "    if(lst.length == 0) return lst;\n    var min = lst[0];\n\
    \    var max = lst[0];\n    var min_index = 0;\n    var max_index = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < min){\n            min = lst[i];\n\
    \            min_index = i;\n        }\n        if(lst[i] > max){\n          \
    \  max = lst[i];\n            max_index = i;\n        }\n    }\n    var new_lst\
    \ = [];\n    new_lst.push(min);\n    var lst_min = lst.slice(0, min_index).concat(lst.slice(min_index\
    \ + 1));\n    var lst_max = lst.slice(0, max_index).concat(lst.slice(max_index\
    \ + 1));\n    var lst_min_max = strange_sort_list(lst_min);\n    var lst_max_min\
    \ = strange_sort_list(lst_max);\n    for(var i = 0; i < lst_min_max.length; i++){\n\
    \        new_lst.push(lst_max_min[i]);\n        new_lst.push(lst_min_max[i]);\n\
    \    }\n    return new_lst;\n}\n", "    if (lst.length === 0) return [];\n   \
    \ let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex\
    \ = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    if (min_index\
    \ < max_index) {\n        new_lst.push(min);\n        new_lst.push(max);\n   \
    \     lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n    }\
    \ else {\n        new_lst.push(max);\n        new_lst.push(min);\n        lst.splice(max_index,\
    \ 1);\n        lst.splice(min_index - 1, 1);\n    }\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    var i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n\
    \            lst.splice(min_index, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            min_index = lst.indexOf(min);\n        } else {\n       \
    \     new_lst.push(max);\n            lst.splice(max_index, 1);\n            max\
    \ = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n  \
    \      }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var result = [];\n    var i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if (lst.length === 0) return [];\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let res = [min];\n\
    \    let i = 0;\n    while (res.length < lst.length) {\n        if (i % 2 ===\
    \ 0) {\n            res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max(...lst);\n        } else {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length ==\
    \ 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var minIndex = lst.indexOf(min);\n    var maxIndex = lst.indexOf(max);\n\
    \    var newLst = [];\n    newLst.push(min);\n    newLst.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex-1, 1);\n    if(lst.length == 0) return newLst;\n\
    \    return newLst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length ==\
    \ 0) return [];\n    let sorted = lst.sort((a, b) => a - b);\n    let result =\
    \ [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n  \
    \      result.push(sorted[i]);\n        i++;\n        if(i <= j){\n          \
    \  result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index-1,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var res = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            if(lst.length == 0) break;\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            if(lst.length == 0) break;\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length ==\
    \ 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length === 0) return [];\n    let sorted = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while(i <= j){\n        result.push(sorted[i]);\n        if(i !== j) result.push(sorted[j]);\n\
    \        i++;\n        j--;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n    let\
    \ max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n    let maxIndex\
    \ = lst.indexOf(max);\n    let newLst = [];\n    newLst.push(min);\n    newLst.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return newLst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0){\n        return [];\n    }\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ != min && lst[i] != max){\n            new_lst.push(lst[i]);\n        }\n  \
    \  }\n    return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var index_min = lst.indexOf(min);\n    var\
    \ index_max = lst.indexOf(max);\n    var lst_min = lst.slice(0, index_min).concat(lst.slice(index_min\
    \ + 1));\n    var lst_max = lst.slice(0, index_max).concat(lst.slice(index_max\
    \ + 1));\n    result.push(min);\n    result.push(max);\n    return result.concat(strange_sort_list(lst_min.concat(lst_max)));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let newLst = [];\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 == 0){\n            newLst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     newLst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n    }\n    return newLst;\n}\n", " \
    \   if (lst.length === 0) {\n        return [];\n    }\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while\
    \ (lst.length > 0) {\n        if (i % 2 === 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(i < lst.length){\n        if(i\
    \ % 2 == 0){\n            new_lst.push(min);\n            lst.splice(min_index,\
    \ 1);\n            min = Math.min.apply(null, lst);\n            min_index = lst.indexOf(min);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(max_index,\
    \ 1);\n            max = Math.max.apply(null, lst);\n            max_index = lst.indexOf(max);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length === 0) return [];\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let res = [];\n    let\
    \ i = 0;\n    while(res.length < lst.length){\n        if(i % 2 === 0){\n    \
    \        res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }else{\n            res.push(max);\n \
    \           lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if(lst.length ==\
    \ 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0) return [];\n    var sorted = lst.sort(function(a,\
    \ b){return a-b});\n    var result = [];\n    var i = 0;\n    var j = sorted.length\
    \ - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n        if(i != j)\
    \ result.push(sorted[j]);\n        i++;\n        j--;\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if\
    \ (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var res = [];\n    var i = 0;\n  \
    \  while (lst.length > 0) {\n        if (i % 2 == 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return res;\n}\n", "    if (lst.length == 0) return [];\n    var min\
    \ = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n   \
    \ var res = [];\n    var i = 0;\n    while (lst.length > 0) {\n        if (i %\
    \ 2 == 0) {\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ res;\n}\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while (i < lst.length) {\n       \
    \ if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n    \
    \        max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n  \
    \  return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    while(lst.length\
    \ > 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        if(lst.length > 0){\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return new_lst;\n}\n", "    if(lst.length === 0){\n        return\
    \ [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let res = [];\n    let i = 0;\n    while(res.length < lst.length){\n    \
    \    if(i % 2 === 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }\n", "    if(lst.length === 0) return [];\n    let sorted = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while(i <= j){\n        result.push(sorted[i]);\n        i++;\n        if(i\
    \ <= j){\n            result.push(sorted[j]);\n            j--;\n        }\n \
    \   }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst =\
    \ [];\n    let min_index = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n\
    \    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index, 1);\n    if(lst.length == 0) return new_lst;\n    return\
    \ new_lst.concat(strange_sort_list(lst));\n}\n", "    if (lst.length == 0) return\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [];\n \
    \   var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n        \
    \    result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n       \
    \     min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var res = [];\n    var i = 0;\n    while(res.length < lst.length){\n    \
    \    if(i % 2 == 0){\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n         \
    \   max = Math.max(...lst);\n        }\n        i++;\n    }\n    return res;\n\
    }\n", "    if(lst.length == 0) return [];\n    let max = Math.max(...lst);\n \
    \   let min = Math.min(...lst);\n    let newArr = [];\n    newArr.push(min);\n\
    \    newArr.push(max);\n    let newLst = lst.filter(x => x != min && x != max);\n\
    \    while(newLst.length > 0){\n        max = Math.max(...newLst);\n        min\
    \ = Math.min(...newLst);\n        newArr.push(min);\n        newArr.push(max);\n\
    \        newLst = newLst.filter(x => x != min && x != max);\n    }\n    return\
    \ newArr;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n    var\
    \ min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null, lst);\n\
    \    var new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n\
    \        if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0) return lst;\n    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var res = [];\n  \
    \  var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n         \
    \   res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n           \
    \ min = Math.min(...lst);\n        }\n        else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if (lst.length ==\
    \ 0) {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var lst1 = lst.slice();\n    var\
    \ lst2 = lst.slice();\n    var lst3 = [];\n    var lst4 = [];\n    var lst5 =\
    \ [];\n    var lst6 = [];\n    for (var i = 0; i < lst1.length; i++) {\n     \
    \   if (lst1[i] == min) {\n            lst3.push(lst1[i]);\n            lst1.splice(i,\
    \ 1);\n        }\n    }\n    for (var i = 0; i < lst2.length; i++) {\n       \
    \ if (lst2[i] == max) {\n            lst4.push(lst2[i]);\n            lst2.splice(i,\
    \ 1);\n        }\n    }\n    lst5 = lst3.concat(lst4);\n    lst6 = lst5.concat(strange_sort_list(lst1));\n\
    \    return lst6;\n}\n", "    if(lst.length == 0){\n        return [];\n    }\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length > 0){\n \
    \       if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        }\n        else{\n\
    \            new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n\
    \            max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n\
    \    return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [];\n \
    \   var i = 0;\n    while(lst.length != 0){\n        if(i % 2 == 0){\n       \
    \     result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0){\n        return [];\n    }\n    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var minIndex = lst.indexOf(min);\n\
    \    var maxIndex = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(minIndex, 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [min];\n    var\
    \ lst = lst.filter(function(x){return x != min});\n    while (lst.length > 0){\n\
    \        var max = Math.max.apply(null, lst);\n        res.push(max);\n      \
    \  lst = lst.filter(function(x){return x != max});\n        if (lst.length ==\
    \ 0) break;\n        var min = Math.min.apply(null, lst);\n        res.push(min);\n\
    \        lst = lst.filter(function(x){return x != min});\n    }\n    return res;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var min_index = lst.indexOf(min);\n    var\
    \ max_index = lst.indexOf(max);\n    var new_lst = [];\n    if(min_index < max_index){\n\
    \        new_lst.push(min);\n        new_lst.push(max);\n    }\n    else{\n  \
    \      new_lst.push(max);\n        new_lst.push(min);\n    }\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var result = [];\n    var count = 0;\n  \
    \  while(lst.length > 0){\n        if(count % 2 == 0){\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        count++;\n    }\n\
    \    return result;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var res = [];\n    var\
    \ i = 0;\n    while(res.length < lst.length){\n        if(i % 2 == 0){\n     \
    \       res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n       \
    \     min = Math.min(...lst);\n        }\n        else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if (lst.length ==\
    \ 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [];\n    var\
    \ i = 0;\n    while (res.length < lst.length) {\n        if (i % 2 == 0) {\n \
    \           res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n   \
    \         min = Math.min.apply(null, lst);\n        } else {\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return res;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length)\
    \ {\n        if (i % 2 == 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    var lst_sorted\
    \ = lst.sort(function(a, b){return a-b});\n    var lst_result = [];\n    var lst_left\
    \ = [];\n    var lst_right = [];\n    var lst_left_sorted = [];\n    var lst_right_sorted\
    \ = [];\n    var lst_left_result = [];\n    var lst_right_result = [];\n    var\
    \ lst_left_left = [];\n    var lst_left_right = [];\n    var lst_right_left =\
    \ [];\n    var lst_right_right = [];\n    var lst_left_left_sorted = [];\n   \
    \ var lst_left_right_sorted = [];\n    var lst_right_left_sorted = [];\n    var\
    \ lst_right_right_sorted = [];\n    var lst_left_left_result = [];\n    var lst_left_right_result\
    \ = [];\n    var lst_right_left_result = [];\n    var lst_right_right_result =\
    \ [];\n    var lst_left_left_left = [];\n    var lst_left_left_right = [];\n \
    \   var lst_left_right_left = [];\n    var lst_left_right_right = [];\n    var\
    \ lst_right_left_left = [];\n    var lst_right_left_right = [];\n    var lst_right_right_left\
    \ = [];\n    var lst_right_right_right = [];\n    var lst_left_left_left_sorted\
    \ = [];\n    var lst_left_left_right_sorted = [];\n    var lst_left_right_left_sorted\
    \ = [];\n    var lst_left_right_right_sorted = [];\n    var lst_right_left_left_sorted\
    \ = [];\n    var lst_right_left_right_sorted = [];\n    var lst_right_right_left_sorted\
    \ = [];\n    var lst_right_right_right_sorted = [];\n    var lst_left_left_left_result\
    \ = [];\n    var lst_left_left_right_result = [];", "    if(lst.length == 0) return\
    \ [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    var\
    \ new_lst = [];\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index-1, 1);\n    while(lst.length > 0){\n        min\
    \ = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index = lst.indexOf(min);\n\
    \        max_index = lst.indexOf(max);\n        new_lst.push(min);\n        new_lst.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index-1, 1);\n    }\n\
    \    return new_lst;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [min];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        } else {\n      \
    \      result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n     \
    \       min = Math.min.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length == 0) {\n        return [];\n    }\n\
    \    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var new_lst = [];\n    var new_lst_1 = [];\n    for (var i = 0; i\
    \ < lst.length; i++) {\n        if (lst[i] != min && lst[i] != max) {\n      \
    \      new_lst.push(lst[i]);\n        }\n    }\n    new_lst_1.push(min);\n   \
    \ new_lst_1.push(max);\n    new_lst_1 = new_lst_1.concat(strange_sort_list(new_lst));\n\
    \    return new_lst_1;\n}", "    if (lst.length == 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [min];\n\
    \    let i = 0;\n    while (result.length < lst.length) {\n        if (i % 2 ==\
    \ 0) {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        } else {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return lst;\n    var min = lst[0];\n    var max = lst[0];\n    var min_index\
    \ = 0;\n    var max_index = 0;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < min){\n            min = lst[i];\n            min_index = i;\n\
    \        }\n        if(lst[i] > max){\n            max = lst[i];\n           \
    \ max_index = i;\n        }\n    }\n    var new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    while(lst.length > 0){\n        min = lst[0];\n        max = lst[0];\n\
    \        min_index = 0;\n        max_index = 0;\n        for(var i = 0; i < lst.length;\
    \ i++){\n            if(lst[i] < min){\n                min = lst[i];\n      \
    \          min_index = i;\n            }\n            if(lst[i] > max){\n    \
    \            max = lst[i];\n                max_index = i;\n            }\n  \
    \      }\n        new_lst.push(min);\n        new_lst.push(max);\n        lst.splice(min_index,\
    \ 1);\n        lst.splice(max_index - 1, 1);\n    }\n    return new_lst;\n}\n",
  "    if(lst.length == 0){\n        return lst;\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n   \
    \ new_lst.push(min);\n    lst.splice(lst.indexOf(min), 1);\n    while(lst.length\
    \ > 0){\n        new_lst.push(max);\n        lst.splice(lst.indexOf(max), 1);\n\
    \        if(lst.length == 0){\n            break;\n        }\n        new_lst.push(min);\n\
    \        lst.splice(lst.indexOf(min), 1);\n        if(lst.length == 0){\n    \
    \        break;\n        }\n        min = Math.min.apply(null, lst);\n       \
    \ max = Math.max.apply(null, lst);\n    }\n    return new_lst;\n}\n", "    if\
    \ (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var result = [];\n    var\
    \ min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n    if\
    \ (min_index < max_index) {\n        result.push(min);\n        result.push(max);\n\
    \        lst.splice(min_index, 1);\n        lst.splice(max_index - 1, 1);\n  \
    \  } else {\n        result.push(max);\n        result.push(min);\n        lst.splice(max_index,\
    \ 1);\n        lst.splice(min_index - 1, 1);\n    }\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [min];\n    var\
    \ lst = lst.filter(function(item) {\n        return item != min;\n    });\n  \
    \  while (lst.length > 0) {\n        res.push(max);\n        lst = lst.filter(function(item)\
    \ {\n            return item != max;\n        });\n        if (lst.length == 0)\
    \ break;\n        res.push(Math.min.apply(null, lst));\n        lst = lst.filter(function(item)\
    \ {\n            return item != Math.min.apply(null, lst);\n        });\n    \
    \    if (lst.length == 0) break;\n        res.push(Math.max.apply(null, lst));\n\
    \        lst = lst.filter(function(item) {\n            return item != Math.max.apply(null,\
    \ lst);\n        });\n    }\n    return res;\n}\n", "    if(lst.length == 0) return\
    \ [];\n    var result = [lst[0]];\n    var min = lst[0];\n    var max = lst[0];\n\
    \    for(var i = 1; i < lst.length; i++){\n        if(lst[i] < min) min = lst[i];\n\
    \        if(lst[i] > max) max = lst[i];\n    }\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var min_removed = lst.slice(0, min_index).concat(lst.slice(min_index\
    \ + 1));\n    var max_removed = min_removed.slice(0, max_index - 1).concat(min_removed.slice(max_index));\n\
    \    result.push(max);\n    result = result.concat(strange_sort_list(max_removed));\n\
    \    return result;\n}\n", "    var res = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    var lst_copy = lst.slice();\n    lst_copy.splice(min_index,\
    \ 1);\n    lst_copy.splice(max_index, 1);\n    res.push(min);\n    res.push(max);\n\
    \    while (lst_copy.length > 0) {\n        min = Math.min.apply(null, lst_copy);\n\
    \        max = Math.max.apply(null, lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        res.push(min);\n        res.push(max);\n\
    \        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index, 1);\n\
    \    }\n    return res;\n}\n", "    if (lst.length == 0) {\n        return [];\n\
    \    }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (i < lst.length) {\n\
    \        result.push(min);\n        result.push(max);\n        i += 2;\n    }\n\
    \    return result;\n}\n", "    if (lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let newLst = [];\n\
    \    let i = 0;\n    while (newLst.length < lst.length) {\n        if (i % 2 ===\
    \ 0) {\n            newLst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            newLst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return newLst;\n}\n", "    let res = [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let i =\
    \ 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let res = [];\n    let i = 0;\n    while\
    \ (res.length < lst.length) {\n        if (i % 2 === 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    let result = [];\n    let lst_copy = lst.slice();\n\
    \    let min = Math.min(...lst_copy);\n    let max = Math.max(...lst_copy);\n\
    \    let min_index = lst_copy.indexOf(min);\n    let max_index = lst_copy.indexOf(max);\n\
    \    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index, 1);\n    result.push(min);\n\
    \    result.push(max);\n    while (lst_copy.length > 0) {\n        min = Math.min(...lst_copy);\n\
    \        max = Math.max(...lst_copy);\n        min_index = lst_copy.indexOf(min);\n\
    \        max_index = lst_copy.indexOf(max);\n        lst_copy.splice(min_index,\
    \ 1);\n        lst_copy.splice(max_index, 1);\n        result.push(min);\n   \
    \     result.push(max);\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) return [];\n    let sorted = lst.sort((a, b) => a - b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n\
    \        result.push(sorted[i]);\n        if (i !== j) {\n            result.push(sorted[j]);\n\
    \        }\n        i++;\n        j--;\n    }\n    return result;\n}\n", "   \
    \ if (lst.length == 0) return [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var res = [];\n    var i = 0;\n\
    \    while (lst.length > 0) {\n        if (i % 2 == 0) {\n            res.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            res.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return res;\n}\n", "    if(lst.length === 0) return [];\n    let sorted\
    \ = lst.sort((a, b) => a - b);\n    let result = [];\n    let i = 0;\n    let\
    \ j = sorted.length - 1;\n    while(i <= j){\n        result.push(sorted[i]);\n\
    \        if(i !== j) result.push(sorted[j]);\n        i++;\n        j--;\n   \
    \ }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let new_lst = [];\n\
    \    let i = 0;\n    while(new_lst.length != lst.length){\n        if(i % 2 ==\
    \ 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var new_lst = [];\n    while(lst.length >\
    \ 0){\n        new_lst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n\
    \        if(lst.length > 0){\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var res = [];\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     res.push(min);\n            lst.splice(lst.indexOf(min), 1);\n         \
    \   min = Math.min(...lst);\n        }\n        else{\n            res.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return res;\n}\n", "    if (lst.length ==\
    \ 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (lst.length > 0) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if (lst.length === 0) {\n        return [];\n   \
    \ }\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var minIndex = lst.indexOf(min);\n    var maxIndex = lst.indexOf(max);\n\
    \    var result = [];\n    result.push(min);\n    result.push(max);\n    lst.splice(minIndex,\
    \ 1);\n    lst.splice(maxIndex - 1, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) {\n        return [];\n    }\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var new_lst = [];\n   \
    \ var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n \
    \   new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index, 1);\n\
    \    lst.splice(max_index - 1, 1);\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var result = [];\n    var\
    \ i = 0;\n    while (lst.length > 0) {\n        if (i % 2 == 0) {\n          \
    \  result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n         \
    \   min = Math.min.apply(null, lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max.apply(null,\
    \ lst);\n        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return lst;\n    }\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var minIndex = lst.indexOf(min);\n\
    \    var maxIndex = lst.indexOf(max);\n    var newList = [];\n    for (var i =\
    \ 0; i < lst.length; i++) {\n        if (i % 2 == 0) {\n            newList.push(min);\n\
    \            lst.splice(minIndex, 1);\n            min = Math.min.apply(null,\
    \ lst);\n            minIndex = lst.indexOf(min);\n        } else {\n        \
    \    newList.push(max);\n            lst.splice(maxIndex, 1);\n            max\
    \ = Math.max.apply(null, lst);\n            maxIndex = lst.indexOf(max);\n   \
    \     }\n    }\n    return newList;\n}\n", "    if (lst.length == 0) return [];\n\
    \    var res = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var lst_min = lst.slice(0, min_index).concat(lst.slice(min_index + 1));\n\
    \    var lst_max = lst.slice(0, max_index).concat(lst.slice(max_index + 1));\n\
    \    res.push(min);\n    res.push(max);\n    var lst_min_max = strange_sort_list(lst_min);\n\
    \    var lst_max_min = strange_sort_list(lst_max);\n    for (var i = 0; i < lst_min_max.length;\
    \ i++) {\n        res.push(lst_min_max[i]);\n        res.push(lst_max_min[i]);\n\
    \    }\n    return res;\n}\n", "    if(lst.length == 0) return [];\n    var min\
    \ = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [];\n\
    \    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n       \
    \     result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var result = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            if(lst.length > 0) min = Math.min(...lst);\n        }\n   \
    \     else{\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            if(lst.length > 0) max = Math.max(...lst);\n        }\n   \
    \     i++;\n    }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n\
    \    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [min];\n    var index = lst.indexOf(min);\n    lst.splice(index, 1);\n   \
    \ while(lst.length > 0){\n        var max = Math.max(...lst);\n        var index\
    \ = lst.indexOf(max);\n        result.push(max);\n        lst.splice(index, 1);\n\
    \        if(lst.length == 0) break;\n        var min = Math.min(...lst);\n   \
    \     var index = lst.indexOf(min);\n        result.push(min);\n        lst.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    if (lst.length === 0) return [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result\
    \ = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0)\
    \ {\n            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ === 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let newArr = [];\n    let i = 0;\n    while(newArr.length < lst.length){\n\
    \        newArr.push(min);\n        newArr.push(max);\n        i++;\n    }\n \
    \   return newArr.slice(0, lst.length);\n}\n", "    if(lst.length == 0) return\
    \ [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var\
    \ new_lst = [];\n    var i = 0;\n    while(new_lst.length < lst.length){\n   \
    \     if(i % 2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length === 0) {\n        return [];\n    }\n    let result\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  let minIndex = lst.indexOf(min);\n    let maxIndex = lst.indexOf(max);\n  \
    \  result.push(min);\n    result.push(max);\n    lst.splice(minIndex, 1);\n  \
    \  lst.splice(maxIndex, 1);\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length === 0) return lst;\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 === 0){\n            new_lst.push(min);\n \
    \           lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [];\n\
    \    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 === 0) {\n  \
    \          result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n \
    \           min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    var new_lst2 = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(i != min_index && i != max_index){\n            new_lst.push(lst[i]);\n\
    \        }\n    }\n    new_lst2.push(min);\n    new_lst2.push(max);\n    if(new_lst.length\
    \ == 0) return new_lst2;\n    return new_lst2.concat(strange_sort_list(new_lst));\n\
    }\n", "    if (lst.length == 0) return [];\n    if (lst.length == 1) return lst;\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let min_index\
    \ = lst.indexOf(min);\n    let max_index = lst.indexOf(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n\
    }\n", "    if(lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while(result.length\
    \ < lst.length){\n        if(i % 2 === 0){\n            result.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length == 0) return [];\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [];\n \
    \   let index = lst.indexOf(min);\n    result.push(min);\n    lst.splice(index,\
    \ 1);\n    index = lst.indexOf(max);\n    result.push(max);\n    lst.splice(index,\
    \ 1);\n    while (lst.length > 0) {\n        min = Math.min(...lst);\n       \
    \ max = Math.max(...lst);\n        index = lst.indexOf(min);\n        result.push(min);\n\
    \        lst.splice(index, 1);\n        index = lst.indexOf(max);\n        result.push(max);\n\
    \        lst.splice(index, 1);\n    }\n    return result;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    let sorted = lst.sort((a, b) => a - b);\n    let result\
    \ = [];\n    let i = 0;\n    let j = sorted.length - 1;\n    while(i <= j){\n\
    \        result.push(sorted[i]);\n        i++;\n        if(i <= j){\n        \
    \    result.push(sorted[j]);\n            j--;\n        }\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i%2 == 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    let res = [];\n    let sorted = lst.sort((a, b) => a - b);\n    let\
    \ i = 0;\n    let j = sorted.length - 1;\n    while (i <= j) {\n        res.push(sorted[i]);\n\
    \        if (i !== j) {\n            res.push(sorted[j]);\n        }\n       \
    \ i++;\n        j--;\n    }\n    return res;\n}\n", "    if (lst.length == 0)\
    \ {\n        return [];\n    }\n    var min = Math.min.apply(null, lst);\n   \
    \ var max = Math.max.apply(null, lst);\n    var res = [min];\n    var i = 0;\n\
    \    while (res.length < lst.length) {\n        if (i % 2 == 0) {\n          \
    \  res.push(max);\n        } else {\n            res.push(min);\n        }\n \
    \       i++;\n    }\n    return res;\n}\n", "    if (lst.length == 0) return [];\n\
    \    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result\
    \ = [];\n    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 == 0)\
    \ {\n            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var result = [];\n    var i = 0;\n    while (i < lst.length) {\n\
    \        if (i % 2 == 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n   \
    \ return result;\n}\n", "    if(lst.length == 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let res = [min];\n    let i = 0;\n    while(res.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            res.push(max);\n      \
    \      lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        else{\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        i++;\n    }\n \
    \   return res;\n}\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var res = [min];\n    var\
    \ lst = lst.filter(function(x){return x != min});\n    while (lst.length > 0){\n\
    \        max = Math.max.apply(null, lst);\n        res.push(max);\n        lst\
    \ = lst.filter(function(x){return x != max});\n        if (lst.length == 0) break;\n\
    \        min = Math.min.apply(null, lst);\n        res.push(min);\n        lst\
    \ = lst.filter(function(x){return x != min});\n    }\n    return res;\n}\n", " \
    \   if (lst.length === 0) return [];\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n\
    \    var res = [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    res.push(min);\n    res.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    while(lst.length != 0){\n        var min = Math.min.apply(null,\
    \ lst);\n        var max = Math.max.apply(null, lst);\n        var min_index =\
    \ lst.indexOf(min);\n        var max_index = lst.indexOf(max);\n        res.push(min);\n\
    \        res.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    }\n    return res;\n}\n", "    if (lst.length === 0) {\n     \
    \   return [];\n    }\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let index = 0;\n    while (lst.length > 0) {\n    \
    \    if (index % 2 === 0) {\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        index++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var result = [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index - 1, 1);\n    if (lst.length\
    \ == 0) {\n        return result;\n    }\n    return result.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    let sorted = lst.sort((a, b) =>\
    \ a - b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while(i <= j){\n        result.push(sorted[i]);\n        i++;\n        if(i\
    \ <= j){\n            result.push(sorted[j]);\n            j--;\n        }\n \
    \   }\n    return result;\n}\n", "    if (lst.length == 0) return [];\n    let\
    \ min = Math.min(...lst);\n    let max = Math.max(...lst);\n    let result = [];\n\
    \    let i = 0;\n    while (lst.length > 0) {\n        if (i % 2 == 0) {\n   \
    \         result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n  \
    \          min = Math.min(...lst);\n        } else {\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) {\n        return [];\n    }\n    var lst_copy = lst.slice();\n    var\
    \ res = [];\n    var min = Math.min.apply(null, lst_copy);\n    var max = Math.max.apply(null,\
    \ lst_copy);\n    var min_index = lst_copy.indexOf(min);\n    var max_index =\
    \ lst_copy.indexOf(max);\n    lst_copy.splice(min_index, 1);\n    lst_copy.splice(max_index\
    \ - 1, 1);\n    res.push(min);\n    res.push(max);\n    while (lst_copy.length\
    \ > 0) {\n        min = Math.min.apply(null, lst_copy);\n        max = Math.max.apply(null,\
    \ lst_copy);\n        min_index = lst_copy.indexOf(min);\n        max_index =\
    \ lst_copy.indexOf(max);\n        lst_copy.splice(min_index, 1);\n        lst_copy.splice(max_index\
    \ - 1, 1);\n        res.push(min);\n        res.push(max);\n    }\n    return\
    \ res;\n}\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n\
    \    var max = Math.max(...lst);\n    var new_lst = [];\n    var i = 0;\n    while(new_lst.length\
    \ < lst.length){\n        if(i % 2 == 0){\n            new_lst.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        }\n        else{\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if(lst.length == 0) return [];\n    var min =\
    \ Math.min(...lst);\n    var max = Math.max(...lst);\n    var new_lst = [];\n\
    \    var i = 0;\n    while(new_lst.length < lst.length){\n        if(i % 2 ==\
    \ 0){\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     new_lst.push(max);\n            lst.splice(lst.indexOf(max), 1);\n     \
    \       max = Math.max(...lst);\n        }\n        i++;\n    }\n    return new_lst;\n\
    }\n", "    if (lst.length == 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let min_index = lst.indexOf(min);\n    let\
    \ max_index = lst.indexOf(max);\n    let new_lst = [];\n    new_lst.push(min);\n\
    \    new_lst.push(max);\n    lst.splice(min_index, 1);\n    lst.splice(max_index,\
    \ 1);\n    return new_lst.concat(strange_sort_list(lst));\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var min_index = lst.indexOf(min);\n    var max_index = lst.indexOf(max);\n\
    \    var new_lst = [];\n    if(min_index < max_index){\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n    }\n    else{\n        new_lst.push(max);\n  \
    \      new_lst.push(min);\n    }\n    lst.splice(min_index, 1);\n    lst.splice(max_index\
    \ - 1, 1);\n    if(lst.length == 0) return new_lst;\n    return new_lst.concat(strange_sort_list(lst));\n\
    }\n", "    if(lst.length == 0) return [];\n    let min = Math.min(...lst);\n \
    \   let max = Math.max(...lst);\n    let newLst = [];\n    while(lst.length >\
    \ 0){\n        newLst.push(min);\n        lst.splice(lst.indexOf(min), 1);\n \
    \       if(lst.length > 0){\n            newLst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n        }\n        min = Math.min(...lst);\n        max = Math.max(...lst);\n\
    \    }\n    return newLst;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [min];\n\
    \    var i = 0;\n    while(result.length != lst.length){\n        if(i % 2 ==\
    \ 0){\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        else{\n       \
    \     result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n      \
    \      min = Math.min(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if(lst.length == 0) return [];\n    var min = Math.min(...lst);\n \
    \   var max = Math.max(...lst);\n    var result = [];\n    var i = 0;\n    while(lst.length\
    \ > 0){\n        if(i % 2 == 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }\n        else{\n       \
    \     result.push(max);\n            lst.splice(lst.indexOf(max), 1);\n      \
    \      max = Math.max(...lst);\n        }\n        i++;\n    }\n    return result;\n\
    }\n", "    if (lst.length == 0) return [];\n    var min = Math.min.apply(null,\
    \ lst);\n    var max = Math.max.apply(null, lst);\n    var minIndex = lst.indexOf(min);\n\
    \    var maxIndex = lst.indexOf(max);\n    var result = [];\n    result.push(min);\n\
    \    result.push(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return result.concat(strange_sort_list(lst));\n}\n", "    if (lst.length\
    \ === 0) {\n        return [];\n    }\n    let sorted = lst.sort((a, b) => a -\
    \ b);\n    let result = [];\n    let i = 0;\n    let j = sorted.length - 1;\n\
    \    while (i <= j) {\n        result.push(sorted[i]);\n        i++;\n       \
    \ if (i <= j) {\n            result.push(sorted[j]);\n            j--;\n     \
    \   }\n    }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n\
    \    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result\
    \ = [];\n    var i = 0;\n    while(lst.length > 0){\n        if(i % 2 == 0){\n\
    \            result.push(min);\n            lst.splice(lst.indexOf(min), 1);\n\
    \            min = Math.min(...lst);\n        }\n        else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0) return lst;\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let new_lst = [];\n    let i = 0;\n    while (new_lst.length < lst.length)\
    \ {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        } else {\n            new_lst.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return new_lst;\n}\n", "    if(lst.length\
    \ == 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    result.push(min);\n    result.push(max);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    lst.splice(lst.indexOf(max), 1);\n    while(lst.length > 0){\n    \
    \    min = Math.min(...lst);\n        max = Math.max(...lst);\n        result.push(min);\n\
    \        result.push(max);\n        lst.splice(lst.indexOf(min), 1);\n       \
    \ lst.splice(lst.indexOf(max), 1);\n    }\n    return result;\n}\n", "    if (lst.length\
    \ == 0) return [];\n    var result = [];\n    var min = Math.min.apply(null, lst);\n\
    \    var max = Math.max.apply(null, lst);\n    var min_index = lst.indexOf(min);\n\
    \    var max_index = lst.indexOf(max);\n    result.push(min);\n    result.push(max);\n\
    \    lst.splice(min_index, 1);\n    lst.splice(max_index, 1);\n    while (lst.length\
    \ > 0) {\n        min = Math.min.apply(null, lst);\n        min_index = lst.indexOf(min);\n\
    \        result.push(min);\n        lst.splice(min_index, 1);\n        if (lst.length\
    \ > 0) {\n            max = Math.max.apply(null, lst);\n            max_index\
    \ = lst.indexOf(max);\n            result.push(max);\n            lst.splice(max_index,\
    \ 1);\n        }\n    }\n    return result;\n}\n", "    if (lst.length == 0) {\n\
    \        return [];\n    }\n    var min = Math.min.apply(null, lst);\n    var\
    \ max = Math.max.apply(null, lst);\n    var result = [];\n    var i = 0;\n   \
    \ while (lst.length > 0) {\n        if (i % 2 == 0) {\n            result.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min.apply(null,\
    \ lst);\n        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max.apply(null, lst);\n        }\n        i++;\n\
    \    }\n    return result;\n}\n", "    if(lst.length == 0) return [];\n    var\
    \ min = Math.min(...lst);\n    var max = Math.max(...lst);\n    var result = [];\n\
    \    var index = 0;\n    while(lst.length > 0){\n        result.push(min);\n \
    \       lst.splice(lst.indexOf(min), 1);\n        if(lst.length == 0) break;\n\
    \        result.push(max);\n        lst.splice(lst.indexOf(max), 1);\n       \
    \ min = Math.min(...lst);\n        max = Math.max(...lst);\n    }\n    return\
    \ result;\n}\n", "    if (lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let new_lst = [];\n    let i = 0;\n    while\
    \ (new_lst.length < lst.length) {\n        if (i % 2 === 0) {\n            new_lst.push(min);\n\
    \            lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            new_lst.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return new_lst;\n}\n", "    if (lst.length === 0) return [];\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n\
    \    let maxIndex = lst.indexOf(max);\n    lst.splice(minIndex, 1);\n    lst.splice(maxIndex\
    \ - 1, 1);\n    return [min, max, ...strange_sort_list(lst)];\n}\n", "    if(lst.length\
    \ == 0) return [];\n    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    var new_lst = [];\n    var min_index = lst.indexOf(min);\n    var max_index\
    \ = lst.indexOf(max);\n    new_lst.push(min);\n    new_lst.push(max);\n    lst.splice(min_index,\
    \ 1);\n    lst.splice(max_index - 1, 1);\n    while(lst.length > 0){\n       \
    \ min = Math.min(...lst);\n        max = Math.max(...lst);\n        min_index\
    \ = lst.indexOf(min);\n        max_index = lst.indexOf(max);\n        new_lst.push(min);\n\
    \        new_lst.push(max);\n        lst.splice(min_index, 1);\n        lst.splice(max_index\
    \ - 1, 1);\n    }\n    return new_lst;\n}\n", "    if (lst.length == 0) return\
    \ [];\n    var min = Math.min.apply(null, lst);\n    var max = Math.max.apply(null,\
    \ lst);\n    var res = [];\n    var i = 0;\n    while (res.length < lst.length)\
    \ {\n        if (i % 2 == 0) {\n            res.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min.apply(null, lst);\n        } else {\n      \
    \      res.push(max);\n            lst.splice(lst.indexOf(max), 1);\n        \
    \    max = Math.max.apply(null, lst);\n        }\n        i++;\n    }\n    return\
    \ res;\n}\n", "    if(lst.length === 0) return [];\n    let min = Math.min(...lst);\n\
    \    let max = Math.max(...lst);\n    let result = [];\n    let i = 0;\n    while(result.length\
    \ < lst.length){\n        if(i % 2 === 0){\n            result.push(min);\n  \
    \          lst.splice(lst.indexOf(min), 1);\n            min = Math.min(...lst);\n\
    \        } else {\n            result.push(max);\n            lst.splice(lst.indexOf(max),\
    \ 1);\n            max = Math.max(...lst);\n        }\n        i++;\n    }\n \
    \   return result;\n}\n", "    if (lst.length === 0) return [];\n    let min =\
    \ Math.min(...lst);\n    let max = Math.max(...lst);\n    let minIndex = lst.indexOf(min);\n\
    \    let maxIndex = lst.indexOf(max);\n    let newLst = [];\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (i % 2 === 0) {\n            newLst.push(min);\n\
    \            lst.splice(minIndex, 1);\n            min = Math.min(...lst);\n \
    \           minIndex = lst.indexOf(min);\n        } else {\n            newLst.push(max);\n\
    \            lst.splice(maxIndex, 1);\n            max = Math.max(...lst);\n \
    \           maxIndex = lst.indexOf(max);\n        }\n    }\n    return newLst;\n\
    }\n", "    if(lst.length == 0) return [];\n    var lst_sorted = lst.sort(function(a,\
    \ b){return a-b});\n    var lst_result = [];\n    var lst_min = [];\n    var lst_max\
    \ = [];\n    for(var i = 0; i < lst_sorted.length; i++){\n        if(i % 2 ==\
    \ 0){\n            lst_min.push(lst_sorted[i]);\n        }else{\n            lst_max.push(lst_sorted[i]);\n\
    \        }\n    }\n    lst_max.reverse();\n    lst_result = lst_min.concat(lst_max);\n\
    \    return lst_result;\n}\n", "    if(lst.length == 0) return [];\n    let res\
    \ = [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n  \
    \  res.push(min);\n    res.push(max);\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] != min && lst[i] != max){\n            res.push(lst[i]);\n\
    \        }\n    }\n    return res;\n}\n", "    if (lst.length == 0) {\n      \
    \  return [];\n    }\n    var lst_sorted = lst.sort(function(a, b){return a-b});\n\
    \    var lst_result = [];\n    var i = 0;\n    var j = lst_sorted.length - 1;\n\
    \    while (i <= j) {\n        lst_result.push(lst_sorted[i]);\n        i++;\n\
    \        if (i <= j) {\n            lst_result.push(lst_sorted[j]);\n        \
    \    j--;\n        }\n    }\n    return lst_result;\n}\n", "    if(lst.length\
    \ === 0) return [];\n    let min = Math.min(...lst);\n    let max = Math.max(...lst);\n\
    \    let result = [];\n    let i = 0;\n    while(lst.length > 0){\n        if(i\
    \ % 2 === 0){\n            result.push(min);\n            lst.splice(lst.indexOf(min),\
    \ 1);\n            min = Math.min(...lst);\n        }else{\n            result.push(max);\n\
    \            lst.splice(lst.indexOf(max), 1);\n            max = Math.max(...lst);\n\
    \        }\n        i++;\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

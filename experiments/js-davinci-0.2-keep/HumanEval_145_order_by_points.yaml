name: HumanEval_145_order_by_points
language: javascript
prompt: "//Write a function which sorts the given list of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunction order_by_points(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11,\
  \ 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423,\
  \ 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
  \ 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "   \
    \ return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let a_sum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        let b_sum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        if (a_sum === b_sum) {\n         \
    \   return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return a_sum\
    \ - b_sum;\n    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \       let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, current) => sum\
    \ + parseInt(current), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ current) => sum + parseInt(current), 0);\n        if (sumA === sumB) {\n   \
    \         return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return\
    \ sumA - sumB;\n    });\n}\n", "    // your code here\n    var sum = 0;\n    var\
    \ nums_sum = [];\n    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(var j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    var nums_sum_sorted = nums_sum.slice().sort(function(a, b){return\
    \ a - b});\n    var result = [];\n    for(var i = 0; i < nums_sum_sorted.length;\
    \ i++){\n        result.push(nums[nums_sum.indexOf(nums_sum_sorted[i])]);\n  \
    \      nums_sum[nums_sum.indexOf(nums_sum_sorted[i])] = -1;\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return aSum - bSum;\n    });\n}\n", "   \
    \ if(nums.length === 0){\n        return [];\n    }\n    let sum = [];\n    for(let\
    \ i = 0; i < nums.length; i++){\n        let num = nums[i];\n        let total\
    \ = 0;\n        while(num > 0){\n            total += num % 10;\n            num\
    \ = Math.floor(num / 10);\n        }\n        sum.push(total);\n    }\n    let\
    \ result = [];\n    for(let i = 0; i < nums.length; i++){\n        let min = Math.min(...sum);\n\
    \        let index = sum.indexOf(min);\n        result.push(nums[index]);\n  \
    \      sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var nums_sum = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    var temp = 0;\n    for(var i = 0; i < nums_sum.length; i++){\n   \
    \     for(var j = i + 1; j < nums_sum.length; j++){\n            if(nums_sum[i]\
    \ > nums_sum[j]){\n                temp = nums_sum[i];\n                nums_sum[i]\
    \ = nums_sum[j];\n                nums_sum[j] = temp;\n                temp =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n\
    \            }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length; i++){\n \
    \       for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n\
    \                let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                temp = nums[i];\n        \
    \        nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    var sum = 0;\n    var nums_sorted\
    \ = nums.sort(function(a, b){\n        sum = 0;\n        for(var i = 0; i < a.toString().length;\
    \ i++){\n            sum += parseInt(a.toString()[i]);\n        }\n        var\
    \ sum2 = 0;\n        for(var i = 0; i < b.toString().length; i++){\n         \
    \   sum2 += parseInt(b.toString()[i]);\n        }\n        return sum - sum2;\n\
    \    });\n    return nums_sorted;\n}\n", "    var sum = 0;\n    var arr = [];\n\
    \    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    var arr2 = [];\n    for(var i =\
    \ 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n   \
    \         if(arr[i] < arr[j]){\n                var temp = arr[i];\n         \
    \       arr[i] = arr[j];\n                arr[j] = temp;\n                var\
    \ temp2 = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp2;\n            }\n        }\n    }\n    return nums;\n}", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let result = [];\n    let sum_arr = [];\n    for(let i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(let i = 0; i < sum_arr.length; i++){\n\
    \        let min = Math.min(...sum_arr);\n        let index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  let sum = 0;\n    let sumArr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        let num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        sumArr.push(sum);\n\
    \        sum = 0;\n    }\n    let sorted = [];\n    for(let i = 0; i < sumArr.length;\
    \ i++){\n        let min = Math.min(...sumArr);\n        let index = sumArr.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        sumArr.splice(index, 1);\n       \
    \ nums.splice(index, 1);\n    }\n    return sorted;\n}\n", "    if(nums.length\
    \ === 0){\n        return [];\n    }\n    let sumOfDigits = [];\n    for(let i\
    \ = 0; i < nums.length; i++){\n        let sum = 0;\n        let num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        sumOfDigits.push(sum);\n    }\n    let sorted = [];\n\
    \    for(let i = 0; i < nums.length; i++){\n        let min = Math.min(...sumOfDigits);\n\
    \        let index = sumOfDigits.indexOf(min);\n        sorted.push(nums[index]);\n\
    \        sumOfDigits[index] = Infinity;\n    }\n    return sorted;\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i],\
    \ sum]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] > b[1]){\n    \
    \        return 1;\n        }\n        else if(a[1] < b[1]){\n            return\
    \ -1;\n        }\n        else{\n            return a[0] - b[0];\n        }\n\
    \    });\n    var result = [];\n    for(var i = 0; i < arr.length; i++){\n   \
    \     result.push(arr[i][0]);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + +b, 0);\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ a + +b, 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc, curr)\
    \ => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n", "  \
    \  // your code here\n    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let bSum = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var arr2 = [];\n    for(var i = 0; i < arr.length; i++){\n       \
    \ var min = arr[0];\n        var index = 0;\n        for(var j = 0; j < arr.length;\
    \ j++){\n            if(arr[j] < min){\n                min = arr[j];\n      \
    \          index = j;\n            }\n        }\n        arr2.push(nums[index]);\n\
    \        arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ arr2;\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length; i++){\n \
    \       for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n\
    \                let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                temp = nums[i];\n        \
    \        nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n\
    \        let aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    if (nums.length === 0)\
    \ {\n        return [];\n    }\n    return nums.sort(function(a, b) {\n      \
    \  var sumA = sumDigits(a);\n        var sumB = sumDigits(b);\n        if (sumA\
    \ === sumB) {\n            return a - b;\n        }\n        return sumA - sumB;\n\
    \    });\n}\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result = [];\n    let sum = 0;\n    let arr = [];\n    for(let i = 0; i\
    \ < nums.length; i++){\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n        sum = 0;\n    }\n    for(let i = 0; i < arr.length;\
    \ i++){\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[i]\
    \ > arr[j]){\n                let temp = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = temp;\n                temp = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp;\n            }\n   \
    \     }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "    var sum\
    \ = 0;\n    var arr = [];\n    var arr2 = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             var temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                var temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n", "    var sum = 0;\n    var sum_arr = [];\n\
    \    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    var temp = 0;\n    for(var\
    \ i = 0; i < sum_arr.length; i++){\n        for(var j = 0; j < sum_arr.length\
    \ - 1; j++){\n            if(sum_arr[j] > sum_arr[j + 1]){\n                temp\
    \ = sum_arr[j];\n                sum_arr[j] = sum_arr[j + 1];\n              \
    \  sum_arr[j + 1] = temp;\n                temp = nums[j];\n                nums[j]\
    \ = nums[j + 1];\n                nums[j + 1] = temp;\n            }\n       \
    \ }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n      \
    \  let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    var sum = 0;\n    var\
    \ sumArr = [];\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for(var i = 0; i < sumArr.length; i++){\n        var min = Math.min.apply(null,\
    \ sumArr);\n        var minIndex = sumArr.indexOf(min);\n        result.push(nums[minIndex]);\n\
    \        sumArr.splice(minIndex, 1);\n        nums.splice(minIndex, 1);\n    }\n\
    \    return result;\n}\n", "    let sum = 0;\n    let result = [];\n    let sumArr\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length;\
    \ i++){\n        for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i]\
    \ < sumArr[j]){\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                let temp2 =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum\
    \ + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let result = [];\n    let temp = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    temp.push(sum);\n    }\n    for(let i = 0; i < temp.length; i++){\n     \
    \   for(let j = 0; j < temp.length; j++){\n            if(temp[i] < temp[j]){\n\
    \                let temp1 = temp[i];\n                temp[i] = temp[j];\n  \
    \              temp[j] = temp1;\n                let temp2 = nums[i];\n      \
    \          nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n\
    \        }\n    }\n    return nums;\n}", "    return nums.sort((a, b) => {\n \
    \       let aSum = a.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n    let\
    \ arr = [];\n    let arr2 = [];\n    for(let i = 0; i < nums.length; i++){\n \
    \       let str = nums[i].toString();\n        for(let j = 0; j < str.length;\
    \ j++){\n            sum += Number(str[j]);\n        }\n        arr.push(sum);\n\
    \        sum = 0;\n    }\n    for(let i = 0; i < arr.length; i++){\n        for(let\
    \ j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n           \
    \     let temp = arr[i];\n                arr[i] = arr[j];\n                arr[j]\
    \ = temp;\n                let temp2 = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp2;\n            }\n        }\n    }\n    return\
    \ nums;\n}", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((sum,\
    \ num) => sum + +num, 0);\n        let bSum = b.toString().split('').reduce((sum,\
    \ num) => sum + +num, 0);\n        return aSum - bSum;\n    });\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    if(nums.length === 0){\n        return [];\n    }\n    var sum = 0;\n    var\
    \ result = [];\n    var result2 = [];\n    var result3 = [];\n    var result4\
    \ = [];\n    var result5 = [];\n    var result6 = [];\n    var result7 = [];\n\
    \    var result8 = [];\n    var result9 = [];\n    var result10 = [];\n    var\
    \ result11 = [];\n    var result12 = [];\n    var result13 = [];\n    var result14\
    \ = [];\n    var result15 = [];\n    var result16 = [];\n    var result17 = [];\n\
    \    var result18 = [];\n    var result19 = [];\n    var result20 = [];\n    var\
    \ result21 = [];\n    var result22 = [];\n    var result23 = [];\n    var result24\
    \ = [];\n    var result25 = [];\n    var result26 = [];\n    var result27 = [];\n\
    \    var result28 = [];\n    var result29 = [];\n    var result30 = [];\n    var\
    \ result31 = [];\n    var result32 = [];\n    var result33 = [];\n    var result34\
    \ = [];\n    var result35 = [];\n    var result36 = [];\n    var result37 = [];\n\
    \    var result38 = [];\n    var result39 = [];\n    var result40 = [];\n    var\
    \ result41 = [];\n    var result42 = [];\n    var result43 = [];\n    var result44\
    \ = [];\n    var result45 = [];\n    var result46 = [];\n    var result47 = [];\n\
    \    var result48 = [];\n    var result49 = [];\n    var result50 = [];\n    var\
    \ result51 = [];\n    var result52 = [];\n    var result53 = [];\n    var result54\
    \ = [];\n    var result55 = [];\n    var result56 = [];\n    var result57 = [];\n\
    \    var result58 = [];\n    var result59 = [];\n    var result60 = [];\n    var\
    \ result61 = [];\n    var result62 = [];\n    var result63 = [];\n    var result64\
    \ = [];\n    var result65 = [];\n    var result66 = [];\n    var result67 = [];\n\
    \    var result68 = [];\n    var result69 = [];\n    var result70", "    return\
    \ nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => sum_of_digits(a) - sum_of_digits(b));\n}\n", " \
    \   return nums.sort((a, b) => sum_digits(a) - sum_digits(b));\n}\n", "    var\
    \ sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i = 0; i\
    \ < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = 0; j < sum_arr.length; j++){\n            if(sum_arr[i] <\
    \ sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    var sum = 0;\n    var\
    \ sumArr = [];\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for(var i = 0; i < sumArr.length; i++){\n        var min = Math.min.apply(null,\
    \ sumArr);\n        var index = sumArr.indexOf(min);\n        result.push(nums[index]);\n\
    \        sumArr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n   \
    \ return result;\n}\n", "    return nums.sort((a, b) => {\n        const sumA\
    \ = a.toString().split('').reduce((sum, num) => sum + parseInt(num), 0);\n   \
    \     const sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    for(let i = 0; i < result.length; i++){\n        for(let j = 0; j\
    \ < result.length; j++){\n            if(result[i] < result[j]){\n           \
    \     let temp = result[i];\n                result[i] = result[j];\n        \
    \        result[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    return nums.sort((a, b) => {\n        let aSum =\
    \ a.toString().split('').reduce((acc, curr) => acc + Number(curr), 0);\n     \
    \   let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n    let\
    \ sum_arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        let num = nums[i].toString();\n        for(let j = 0; j < num.length;\
    \ j++){\n            sum += parseInt(num[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    let temp = 0;\n    for(let i = 0; i < sum_arr.length; i++){\n    \
    \    for(let j = i + 1; j < sum_arr.length; j++){\n            if(sum_arr[i] >\
    \ sum_arr[j]){\n                temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((a, b) => a + +b, 0);\n\
    \        let sumB = b.toString().split('').reduce((a, b) => a + +b, 0);\n    \
    \    return sumA - sumB;\n    });\n}\n", "    if(nums.length === 0){\n       \
    \ return [];\n    }\n    let result = [];\n    let sum = 0;\n    let sum_arr =\
    \ [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    for(let i = 0; i < sum_arr.length;\
    \ i++){\n        let min = sum_arr[i];\n        let min_index = i;\n        for(let\
    \ j = i; j < sum_arr.length; j++){\n            if(sum_arr[j] < min){\n      \
    \          min = sum_arr[j];\n                min_index = j;\n            }\n\
    \        }\n        let temp = sum_arr[i];\n        sum_arr[i] = sum_arr[min_index];\n\
    \        sum_arr[min_index] = temp;\n        temp = nums[i];\n        nums[i]\
    \ = nums[min_index];\n        nums[min_index] = temp;\n    }\n    return nums;\n\
    }\n", "    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n\
    \    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i], sum]);\n\
    \    }\n    arr.sort(function(a, b){\n        if(a[1] === b[1]){\n           \
    \ return a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n    for(let\
    \ i = 0; i < arr.length; i++){\n        arr[i] = arr[i][0];\n    }\n    return\
    \ arr;\n}\n", "    let sums = nums.map(x => sum_of_digits(x));\n    let result\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        let min = Math.min(...sums);\n\
    \        let index = sums.indexOf(min);\n        result.push(nums[index]);\n \
    \       sums.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        var num = nums[i];\n        while(num > 0){\n     \
    \       sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        arr.push([sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[0]\
    \ > b[0]){\n            return 1;\n        }\n        else if(a[0] < b[0]){\n\
    \            return -1;\n        }\n        else{\n            if(a[1] > b[1]){\n\
    \                return 1;\n            }\n            else if(a[1] < b[1]){\n\
    \                return -1;\n            }\n            else{\n              \
    \  return 0;\n            }\n        }\n    });\n    var result = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        result.push(nums[arr[i][1]]);\n    }\n\
    \    return result;\n}\n", "    return nums.sort((a, b) => {\n        let sumA\
    \ = a.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n        let\
    \ sumB = b.toString().split('').reduce((acc, curr) => acc + +curr, 0);\n     \
    \   return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n        return aSum - bSum;\n    });\n}\n", "   \
    \ let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    let arr2 = [];\n    for(let i = 0; i < arr.length; i++){\n       \
    \ for(let j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             let temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    return nums.sort((a, b) => {\n        let sumA =\
    \ a.toString().split('').reduce((acc, num) => acc + parseInt(num), 0);\n     \
    \   let sumB = b.toString().split('').reduce((acc, num) => acc + parseInt(num),\
    \ 0);\n        if (sumA === sumB) {\n            return nums.indexOf(a) - nums.indexOf(b);\n\
    \        }\n        return sumA - sumB;\n    });\n}\n", "    if(nums.length ==\
    \ 0){\n        return [];\n    }\n    var sum = 0;\n    var nums_sum = [];\n \
    \   for(var i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j\
    \ = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        nums_sum.push(sum);\n    }\n    var nums_sum_sorted = nums_sum.slice().sort(function(a,\
    \ b){return a - b});\n    var nums_sorted = [];\n    for(var i = 0; i < nums_sum_sorted.length;\
    \ i++){\n        for(var j = 0; j < nums_sum.length; j++){\n            if(nums_sum_sorted[i]\
    \ == nums_sum[j]){\n                nums_sorted.push(nums[j]);\n             \
    \   nums_sum[j] = -1;\n                break;\n            }\n        }\n    }\n\
    \    return nums_sorted;\n}\n", "  return nums.sort((a, b) => {\n    let sumA\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \   let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    if (sumA === sumB) {\n      return nums.indexOf(a) - nums.indexOf(b);\n\
    \    }\n    return sumA - sumB;\n  });\n}\n", "    return nums.sort((a, b) =>\
    \ {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ arr = [];\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        arr = nums[i].toString().split('');\n        for(let\
    \ j = 0; j < arr.length; j++){\n            sum += parseInt(arr[j]);\n       \
    \ }\n        result.push(sum);\n    }\n    for(let i = 0; i < result.length; i++){\n\
    \        for(let j = i + 1; j < result.length; j++){\n            if(result[i]\
    \ > result[j]){\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                let temp2 =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\n", "    var result = [];\n\
    \    var sum = 0;\n    var nums_sum = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    nums_sum.push(sum);\n    }\n    for(var i = 0; i < nums_sum.length; i++){\n\
    \        var min = Math.min.apply(null, nums_sum);\n        var index = nums_sum.indexOf(min);\n\
    \        result.push(nums[index]);\n        nums_sum.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let result = [];\n    let arr = [];\n    for(let i = 0; i\
    \ < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(let i = 0; i < arr.length; i++){\n       \
    \ let min = Math.min(...arr);\n        let index = arr.indexOf(min);\n       \
    \ result.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let aSum = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ Number(curr), 0);\n        let bSum = b.toString().split('').reduce((acc, curr)\
    \ => acc + Number(curr), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => sum_of_digits(a) - sum_of_digits(b));\n}\n", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var sumArr = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArr.push(sum);\n    }\n    for(var i = 0; i < sumArr.length; i++){\n \
    \       for(var j = 0; j < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n\
    \                var temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                var temp2 = nums[i];\n   \
    \             nums[i] = nums[j];\n                nums[j] = temp2;\n         \
    \   }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    for(let i = 0; i < arr.length; i++){\n        for(let j = 0; j < arr.length;\
    \ j++){\n            if(arr[i] < arr[j]){\n                let temp = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = temp;\n          \
    \      temp = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n", "    var sum\
    \ = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n       \
    \ sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n    \
    \        sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length;\
    \ j++){\n            if(arr[i] < arr[j]){\n                var temp = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = temp;\n          \
    \      var temp2 = nums[i];\n                nums[i] = nums[j];\n            \
    \    nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = 0;\n        let sumB = 0;\n\
    \        let strA = a.toString();\n        let strB = b.toString();\n        for\
    \ (let i = 0; i < strA.length; i++) {\n            sumA += parseInt(strA[i]);\n\
    \        }\n        for (let i = 0; i < strB.length; i++) {\n            sumB\
    \ += parseInt(strB[i]);\n        }\n        if (sumA < sumB) {\n            return\
    \ -1;\n        } else if (sumA > sumB) {\n            return 1;\n        } else\
    \ {\n            return a - b;\n        }\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => sum_digits(a) - sum_digits(b));\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    var temp = 0;\n    for(var i = 0; i < sum_arr.length; i++){\n    \
    \    for(var j = i + 1; j < sum_arr.length; j++){\n            if(sum_arr[i] >\
    \ sum_arr[j]){\n                temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < sums.length; i++){\n    \
    \    var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let sumA = a.toString().split('').reduce((sum, current) => sum + parseInt(current),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, current) => sum\
    \ + parseInt(current), 0);\n        return sumA - sumB;\n    });\n}\n", "    var\
    \ sum = 0;\n    var result = [];\n    var arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             var temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                var temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n     \
    \   let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result = [];\n    let sum = 0;\n    let nums_copy = nums.slice();\n   \
    \ let nums_copy_2 = nums.slice();\n    let nums_copy_3 = nums.slice();\n    let\
    \ nums_copy_4 = nums.slice();\n    let nums_copy_5 = nums.slice();\n    let nums_copy_6\
    \ = nums.slice();\n    let nums_copy_7 = nums.slice();\n    let nums_copy_8 =\
    \ nums.slice();\n    let nums_copy_9 = nums.slice();\n    let nums_copy_10 = nums.slice();\n\
    \    let nums_copy_11 = nums.slice();\n    let nums_copy_12 = nums.slice();\n\
    \    let nums_copy_13 = nums.slice();\n    let nums_copy_14 = nums.slice();\n\
    \    let nums_copy_15 = nums.slice();\n    let nums_copy_16 = nums.slice();\n\
    \    let nums_copy_17 = nums.slice();\n    let nums_copy_18 = nums.slice();\n\
    \    let nums_copy_19 = nums.slice();\n    let nums_copy_20 = nums.slice();\n\
    \    let nums_copy_21 = nums.slice();\n    let nums_copy_22 = nums.slice();\n\
    \    let nums_copy_23 = nums.slice();\n    let nums_copy_24 = nums.slice();\n\
    \    let nums_copy_25 = nums.slice();\n    let nums_copy_26 = nums.slice();\n\
    \    let nums_copy_27 = nums.slice();\n    let nums_copy_28 = nums.slice();\n\
    \    let nums_copy_29 = nums.slice();\n    let nums_copy_30 = nums.slice();\n\
    \    let nums_copy_31 = nums.slice();\n    let nums_copy_32 = nums.slice();\n\
    \    let nums_copy_33 = nums.slice();\n    let nums_", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + +curr, 0);\n        let sumB = b.toString().split('').reduce((acc, curr) =>\
    \ acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = sum_of_digits(a);\n        let sumB = sum_of_digits(b);\n\
    \        if (sumA === sumB) {\n            return nums.indexOf(a) - nums.indexOf(b);\n\
    \        }\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((sum, num) => sum\
    \ + parseInt(num), 0);\n        let bSum = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result = [];\n    let sums = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        let sum = 0;\n        let num = nums[i];\n        while(num > 0){\n \
    \           sum += num % 10;\n            num = Math.floor(num / 10);\n      \
    \  }\n        sums.push(sum);\n    }\n    for(let i = 0; i < sums.length; i++){\n\
    \        let min = Math.min(...sums);\n        let index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums[index] = Infinity;\n    }\n \
    \   return result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b), 0);\n \
    \       let bSum = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        result.push([sum, i]);\n        sum = 0;\n    }\n\
    \    result.sort(function(a, b){\n        if(a[0] === b[0]){\n            return\
    \ a[1] - b[1];\n        }\n        return a[0] - b[0];\n    });\n    for(let i\
    \ = 0; i < result.length; i++){\n        result[i] = nums[result[i][1]];\n   \
    \ }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((acc, curr) => acc + Number(curr), 0);\n\
    \        let sumB = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ +curr, 0);\n        let bSum = b.toString().split('').reduce((acc, curr) =>\
    \ acc + +curr, 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc\
    \ + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let result = [];\n    let temp = [];\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    temp.push(sum);\n    }\n    for(let i = 0; i < temp.length; i++){\n     \
    \   for(let j = 0; j < temp.length; j++){\n            if(temp[i] < temp[j]){\n\
    \                let temp1 = temp[i];\n                temp[i] = temp[j];\n  \
    \              temp[j] = temp1;\n                let temp2 = nums[i];\n      \
    \          nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var nums_sum = nums.map(function(num){\n        return [num, num.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        }, 0)];\n    });\n\
    \    nums_sum.sort(function(a, b){\n        if(a[1] === b[1]){\n            return\
    \ a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n    return nums_sum.map(function(num){\n\
    \        return num[0];\n    });\n}\n", "    return nums.sort((a, b) => {\n  \
    \      let sumA = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        let sumB = b.toString().split('').reduce((sum, num) => sum + parseInt(num),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((a, b) => +a + +b);\n\
    \        let bSum = b.toString().split('').reduce((a, b) => +a + +b);\n      \
    \  return aSum - bSum;\n    });\n}\n", "    var result = [];\n    var sums = [];\n\
    \    var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(var j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n  \
    \  }\n    for(var i = 0; i < sums.length; i++){\n        var min = Math.min.apply(null,\
    \ sums);\n        var index = sums.indexOf(min);\n        result.push(nums[index]);\n\
    \        sums.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n     \
    \   let min = Math.min(...arr);\n        let index = arr.indexOf(min);\n     \
    \   result.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}", "    return nums.sort((a, b) => {\n    \
    \    let sumA = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let sumB = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return sumA - sumB;\n    });\n}\n", "    return nums.sort((a, b) => sum_of_digits(a)\
    \ - sum_of_digits(b));\n}\n", "    let sum = 0;\n    let sumArr = [];\n    let\
    \ result = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for(let i = 0; i < sumArr.length; i++){\n        let min = sumArr[i];\n\
    \        let index = i;\n        for(let j = i + 1; j < sumArr.length; j++){\n\
    \            if(sumArr[j] < min){\n                min = sumArr[j];\n        \
    \        index = j;\n            }\n        }\n        let temp = sumArr[i];\n\
    \        sumArr[i] = sumArr[index];\n        sumArr[index] = temp;\n        temp\
    \ = nums[i];\n        nums[i] = nums[index];\n        nums[index] = temp;\n  \
    \  }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((acc, curr) => acc + Number(curr), 0);\n   \
    \     let bSum = b.toString().split('').reduce((acc, curr) => acc + Number(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((acc, curr) => acc +\
    \ +curr, 0);\n        let sumB = b.toString().split('').reduce((acc, curr) =>\
    \ acc + +curr, 0);\n        return sumA - sumB;\n    });\n}\n", "    let result\
    \ = [];\n    let sum = 0;\n    let obj = {};\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    obj[sum] = nums[i];\n    }\n    for(let key in obj){\n        result.push(obj[key]);\n\
    \    }\n    return result;\n}", "    return nums.sort((a, b) => {\n        let\
    \ sumA = sum_digits(a);\n        let sumB = sum_digits(b);\n        if (sumA ===\
    \ sumB) {\n            return nums.indexOf(a) - nums.indexOf(b);\n        }\n\
    \        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let sumArr\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    let newArr = [];\n    for(let\
    \ i = 0; i < sumArr.length; i++){\n        let min = Math.min(...sumArr);\n  \
    \      let index = sumArr.indexOf(min);\n        newArr.push(nums[index]);\n \
    \       sumArr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ newArr;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => sum_of_digits(a) - sum_of_digits(b));\n}\n", " \
    \   return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => sum_of_digits(a) - sum_of_digits(b));\n}\n", " \
    \   return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    let arr2 = [];\n    let arr3 = [];\n \
    \   for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n      \
    \  while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        arr.push(sum);\n        arr2.push(sum);\n       \
    \ sum = 0;\n    }\n    arr2.sort(function(a, b){return a - b});\n    for(let i\
    \ = 0; i < arr2.length; i++){\n        for(let j = 0; j < arr.length; j++){\n\
    \            if(arr2[i] === arr[j]){\n                arr3.push(nums[j]);\n  \
    \              arr[j] = -1;\n            }\n        }\n    }\n    return arr3;\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => a + Number(b), 0);\n        return sumA - sumB;\n    });\n}", "    return\
    \ nums.sort((a, b) => {\n        let a_sum = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        let b_sum = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        if (a_sum === b_sum) {\n         \
    \   return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return a_sum\
    \ - b_sum;\n    });\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \       let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    if(nums.length == 0){\n        return [];\n    }\n    var sum = 0;\n    var\
    \ sum_array = [];\n    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(var j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sum_array.push(sum);\n\
    \    }\n    var result = [];\n    var min = sum_array[0];\n    var index = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        min = sum_array[0];\n    \
    \    index = 0;\n        for(var j = 0; j < sum_array.length; j++){\n        \
    \    if(sum_array[j] < min){\n                min = sum_array[j];\n          \
    \      index = j;\n            }\n        }\n        result.push(nums[index]);\n\
    \        sum_array.splice(index, 1);\n        nums.splice(index, 1);\n    }\n\
    \    return result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n \
    \       let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let sumA = a.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        let sumB = b.toString().split('').reduce((a, b) => a + parseInt(b),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    let nums_copy = nums.slice();\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push(sum);\n    }\n    for(let i = 0; i < result.length; i++){\n \
    \       for(let j = i + 1; j < result.length; j++){\n            if(result[i]\
    \ > result[j]){\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums_copy[i];\n\
    \                nums_copy[i] = nums_copy[j];\n                nums_copy[j] =\
    \ temp;\n            }\n        }\n    }\n    return nums_copy;\n}\n", "    let\
    \ sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        result.push([nums[i],\
    \ sum]);\n        sum = 0;\n    }\n    result.sort(function(a, b){\n        if(a[1]\
    \ === b[1]){\n            return a[0] - b[0];\n        }\n        return a[1]\
    \ - b[1];\n    });\n    for(let i = 0; i < result.length; i++){\n        result[i]\
    \ = result[i][0];\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((sum, num) => sum\
    \ + parseInt(num), 0);\n        let sumB = b.toString().split('').reduce((sum,\
    \ num) => sum + parseInt(num), 0);\n        return sumA - sumB;\n    });\n}\n",
  "  let sum = 0;\n  let arr = [];\n  let result = [];\n  for(let i = 0; i < nums.length;\
    \ i++){\n    sum = 0;\n    arr = nums[i].toString().split('');\n    for(let j\
    \ = 0; j < arr.length; j++){\n      sum += Number(arr[j]);\n    }\n    result.push([nums[i],\
    \ sum]);\n  }\n  result.sort(function(a, b){\n    if(a[1] === b[1]){\n      return\
    \ a[0] - b[0];\n    }\n    return a[1] - b[1];\n  });\n  for(let i = 0; i < result.length;\
    \ i++){\n    result[i] = result[i][0];\n  }\n  return result;\n}\n", "    var\
    \ sums = [];\n    for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n\
    \        var num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        sums.push(sum);\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < sums.length; i++){\n    \
    \    var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n", "    if(nums.length === 0){\n        return\
    \ [];\n    }\n    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push([sum, nums[i]]);\n    }\n    result.sort(function(a, b){\n  \
    \      if(a[0] === b[0]){\n            return a[1] - b[1];\n        }\n      \
    \  return a[0] - b[0];\n    });\n    for(let i = 0; i < result.length; i++){\n\
    \        result[i] = result[i][1];\n    }\n    return result;\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + +b, 0);\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ a + +b, 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n\
    \    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        for(let j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n   \
    \ }\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j <\
    \ arr.length; j++){\n            if(arr[i] > arr[j]){\n                let temp\
    \ = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \                temp = nums[i];\n                nums[i] = nums[j];\n       \
    \         nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    return nums.sort((a, b) => sum_of_digits(a) - sum_of_digits(b));\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + Number(curr), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = 0; j < sum_arr.length; j++){\n            if(sum_arr[i] <\
    \ sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((acc, curr) => acc +\
    \ parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    let sum = 0;\n    let sum_arr = [];\n    let result = [];\n    for(let i =\
    \ 0; i < nums.length; i++){\n        let num = nums[i];\n        while(num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        sum_arr.push(sum);\n        sum = 0;\n    }\n    for(let i = 0;\
    \ i < sum_arr.length; i++){\n        let min = Math.min(...sum_arr);\n       \
    \ let index = sum_arr.indexOf(min);\n        result.push(nums[index]);\n     \
    \   sum_arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        return aSum - bSum;\n    });\n}\n",
  "    var sum = 0;\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        for(var j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \        sum = 0;\n    }\n    var temp;\n    for(var i = 0; i < result.length;\
    \ i++){\n        for(var j = i + 1; j < result.length; j++){\n            if(result[i]\
    \ > result[j]){\n                temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b)\
    \ => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

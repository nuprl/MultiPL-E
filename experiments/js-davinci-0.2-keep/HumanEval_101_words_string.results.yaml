name: HumanEval_101_words_string
language: javascript
results:
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp0m7by9v3.js:18:10)\n    at Object.<anonymous> (/tmp/tmp0m7by9v3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpskh0ngiq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpskh0ngiq.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqgyyvgvw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqgyyvgvw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmptcjll75w.js:18:10)\n    at Object.<anonymous> (/tmp/tmptcjll75w.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmplzmynwoc.js:18:10)\n    at Object.<anonymous> (/tmp/tmplzmynwoc.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpkkh68rj4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkkh68rj4.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpt9w6gw4i.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt9w6gw4i.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpu1wdwt2j.js:18:10)\n    at Object.<anonymous> (/tmp/tmpu1wdwt2j.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpbn3bocs0.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbn3bocs0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5uor3a2g.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5uor3a2g.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpkzur0msq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkzur0msq.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpz0q4o_tl.js:18:10)\n    at Object.<anonymous> (/tmp/tmpz0q4o_tl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpzkuj6rln.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzkuj6rln.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpa0y6_buu.js:18:10)\n    at Object.<anonymous> (/tmp/tmpa0y6_buu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp0cwnug14.js:18:10)\n    at Object.<anonymous> (/tmp/tmp0cwnug14.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp1hf_r2ch.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1hf_r2ch.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqois38ja.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqois38ja.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5teednnp.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5teednnp.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpcsf372tg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcsf372tg.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp8d7ohjco.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8d7ohjco.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpva0ywgpw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpva0ywgpw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpby3z6dyh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpby3z6dyh.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpemn_yhl4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpemn_yhl4.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmph1l1ur4b.js:18:10)\n    at Object.<anonymous> (/tmp/tmph1l1ur4b.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp6iys_21k.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6iys_21k.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpmvidcvkn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmvidcvkn.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpq6x6572r.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq6x6572r.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpm_2ntrwv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpm_2ntrwv.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7s3n7u8f.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7s3n7u8f.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp18tkbnlt.js:18:10)\n    at Object.<anonymous> (/tmp/tmp18tkbnlt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgbblq6nr.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgbblq6nr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpjel31c6p.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjel31c6p.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpv5ukse_9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv5ukse_9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqyd6is1_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqyd6is1_.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxczzst8t.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxczzst8t.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp609bl4_j.js:18:10)\n    at Object.<anonymous> (/tmp/tmp609bl4_j.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpkznu2vhl.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkznu2vhl.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpvhm9ai3f.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvhm9ai3f.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpnfgm8lq5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnfgm8lq5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp3olw27_6.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3olw27_6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpv2ul84rs.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv2ul84rs.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp463jzqqt.js:18:10)\n    at Object.<anonymous> (/tmp/tmp463jzqqt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpepnwmn_g.js:18:10)\n    at Object.<anonymous> (/tmp/tmpepnwmn_g.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpp03s8nf3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpp03s8nf3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpeu6o44o6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpeu6o44o6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpcyjsiyvu.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcyjsiyvu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpwwwxkpn6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwwwxkpn6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpea4u4b0m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpea4u4b0m.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmprofwhh_i.js:18:10)\n    at Object.<anonymous> (/tmp/tmprofwhh_i.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4jdyeb1n.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4jdyeb1n.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp35ao5tu4.js:18:10)\n    at Object.<anonymous> (/tmp/tmp35ao5tu4.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpidaouz6f.js:18:10)\n    at Object.<anonymous> (/tmp/tmpidaouz6f.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmppgy33mhu.js:18:10)\n    at Object.<anonymous> (/tmp/tmppgy33mhu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpfctzl2i2.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfctzl2i2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpt1nravlw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt1nravlw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpa1fmi3_m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpa1fmi3_m.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpkf9pjqpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkf9pjqpa.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxacrzyy0.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxacrzyy0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxjve2kz9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxjve2kz9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmph9se_218.js:18:10)\n    at Object.<anonymous> (/tmp/tmph9se_218.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp8hrjevn1.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8hrjevn1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpo_lzymzd.js:18:10)\n    at Object.<anonymous> (/tmp/tmpo_lzymzd.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp13mytuf1.js:18:10)\n    at Object.<anonymous> (/tmp/tmp13mytuf1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpsm9y4d81.js:18:10)\n    at Object.<anonymous> (/tmp/tmpsm9y4d81.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgrh_fvey.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgrh_fvey.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4q11kokx.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4q11kokx.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpaftx8niw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpaftx8niw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp54t1y53i.js:18:10)\n    at Object.<anonymous> (/tmp/tmp54t1y53i.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpdr4_091d.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdr4_091d.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqi83h8_b.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqi83h8_b.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmps25sg33b.js:18:10)\n    at Object.<anonymous> (/tmp/tmps25sg33b.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_icozp9l.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_icozp9l.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpchh6r4kw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpchh6r4kw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpyzrep9r8.js:18:10)\n    at Object.<anonymous> (/tmp/tmpyzrep9r8.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpikhxvl6s.js:18:10)\n    at Object.<anonymous> (/tmp/tmpikhxvl6s.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpboxc4frn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpboxc4frn.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpecno38f8.js:18:10)\n    at Object.<anonymous> (/tmp/tmpecno38f8.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp6bz36e_h.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6bz36e_h.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_rww6t27.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_rww6t27.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpfdfkd4vm.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfdfkd4vm.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmphlg5btni.js:18:10)\n    at Object.<anonymous> (/tmp/tmphlg5btni.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpv75p0ghh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv75p0ghh.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp758c_as9.js:18:10)\n    at Object.<anonymous> (/tmp/tmp758c_as9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpe8xiftrt.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe8xiftrt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpzqlvijg1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzqlvijg1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpylix2id1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpylix2id1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpd3nzqi14.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd3nzqi14.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp97vw67l1.js:18:10)\n    at Object.<anonymous> (/tmp/tmp97vw67l1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp58jjrwrr.js:18:10)\n    at Object.<anonymous> (/tmp/tmp58jjrwrr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqakts6d1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqakts6d1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp9w5jcx23.js:18:10)\n    at Object.<anonymous> (/tmp/tmp9w5jcx23.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmptba6b1h3.js:18:10)\n    at Object.<anonymous> (/tmp/tmptba6b1h3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmph0x6lcfw.js:18:10)\n    at Object.<anonymous> (/tmp/tmph0x6lcfw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpw22o3j1y.js:18:10)\n    at Object.<anonymous> (/tmp/tmpw22o3j1y.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpydxgwkqf.js:18:10)\n    at Object.<anonymous> (/tmp/tmpydxgwkqf.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpp152k8jf.js:18:10)\n    at Object.<anonymous> (/tmp/tmpp152k8jf.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7jxhgpvm.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7jxhgpvm.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpl7upr7aw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpl7upr7aw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpckdyuasv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckdyuasv.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxue1zd_7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxue1zd_7.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpplb68ahu.js:18:10)\n    at Object.<anonymous> (/tmp/tmpplb68ahu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpjkhnlhp2.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjkhnlhp2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp25ldf_f8.js:18:10)\n    at Object.<anonymous> (/tmp/tmp25ldf_f8.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_h_v5fmq.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_h_v5fmq.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7vq8449w.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7vq8449w.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgp9wd2s7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgp9wd2s7.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpf51lvmxo.js:18:10)\n    at Object.<anonymous> (/tmp/tmpf51lvmxo.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpf5f283sa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpf5f283sa.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgkaffj6x.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgkaffj6x.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4td6scpv.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4td6scpv.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpulqtps40.js:18:10)\n    at Object.<anonymous> (/tmp/tmpulqtps40.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpr8e18j3_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpr8e18j3_.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp6q7sftc8.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6q7sftc8.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp9oefe2jh.js:18:10)\n    at Object.<anonymous> (/tmp/tmp9oefe2jh.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpzs5r8qeg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpzs5r8qeg.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_suindr5.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_suindr5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp8xqn5x_l.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8xqn5x_l.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp6c6l0_y0.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6c6l0_y0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpe5n2jzbb.js:18:10)\n    at Object.<anonymous> (/tmp/tmpe5n2jzbb.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpdkesft8h.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdkesft8h.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpt00862xa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpt00862xa.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp9t8pxusv.js:18:10)\n    at Object.<anonymous> (/tmp/tmp9t8pxusv.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5dfrwgk_.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5dfrwgk_.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpmrxzydvk.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmrxzydvk.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpw2pd2wk6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpw2pd2wk6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp47b3zrbn.js:18:10)\n    at Object.<anonymous> (/tmp/tmp47b3zrbn.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp9kuvzmoj.js:18:10)\n    at Object.<anonymous> (/tmp/tmp9kuvzmoj.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpcl4t_zam.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcl4t_zam.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxzzk8hjn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxzzk8hjn.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpoy4oobnm.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoy4oobnm.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgwezvv8l.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgwezvv8l.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4bt915ri.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4bt915ri.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpd08xb5tr.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd08xb5tr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpulxlo0lr.js:18:10)\n    at Object.<anonymous> (/tmp/tmpulxlo0lr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmptgmhjxmt.js:18:10)\n    at Object.<anonymous> (/tmp/tmptgmhjxmt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpxk6vaiel.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxk6vaiel.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpn466f6vd.js:18:10)\n    at Object.<anonymous> (/tmp/tmpn466f6vd.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4km7go4z.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4km7go4z.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmph9qm4xcw.js:18:10)\n    at Object.<anonymous> (/tmp/tmph9qm4xcw.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpyibti13g.js:18:10)\n    at Object.<anonymous> (/tmp/tmpyibti13g.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpewj935iv.js:18:10)\n    at Object.<anonymous> (/tmp/tmpewj935iv.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpac1dmaf_.js:18:10)\n    at Object.<anonymous> (/tmp/tmpac1dmaf_.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpcaq2krqs.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcaq2krqs.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5a134_rd.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5a134_rd.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpq0dcar8c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq0dcar8c.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmps8w66ob_.js:18:10)\n    at Object.<anonymous> (/tmp/tmps8w66ob_.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpbd17b29p.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbd17b29p.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqg1a543e.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqg1a543e.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpq4k_sfd3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq4k_sfd3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpayvzb8_2.js:18:10)\n    at Object.<anonymous> (/tmp/tmpayvzb8_2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpb5g0py_1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpb5g0py_1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpmlge87m5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmlge87m5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpjdkpk88g.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjdkpk88g.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpv6d4diwz.js:18:10)\n    at Object.<anonymous> (/tmp/tmpv6d4diwz.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpybucjdx3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpybucjdx3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp9q4b_3pk.js:18:10)\n    at Object.<anonymous> (/tmp/tmp9q4b_3pk.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpcggpjf7h.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcggpjf7h.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmplzr8izs2.js:18:10)\n    at Object.<anonymous> (/tmp/tmplzr8izs2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpizf56hl0.js:18:10)\n    at Object.<anonymous> (/tmp/tmpizf56hl0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpb594nz1a.js:18:10)\n    at Object.<anonymous> (/tmp/tmpb594nz1a.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp3hh5a_h9.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3hh5a_h9.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpet5igtmu.js:18:10)\n    at Object.<anonymous> (/tmp/tmpet5igtmu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpfqppq2be.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfqppq2be.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpi3c0ngme.js:18:10)\n    at Object.<anonymous> (/tmp/tmpi3c0ngme.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5atbe8ze.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5atbe8ze.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpoftfxzj1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoftfxzj1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmphe2d3uoy.js:18:10)\n    at Object.<anonymous> (/tmp/tmphe2d3uoy.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp8yb4aqgt.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8yb4aqgt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp1zqhx1e0.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1zqhx1e0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpmhyh5z8n.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmhyh5z8n.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpl38cikzc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpl38cikzc.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmplx77i6jn.js:18:10)\n    at Object.<anonymous> (/tmp/tmplx77i6jn.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpyvp6684q.js:18:10)\n    at Object.<anonymous> (/tmp/tmpyvp6684q.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmplx33ok21.js:18:10)\n    at Object.<anonymous> (/tmp/tmplx33ok21.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmptxg_x9w2.js:18:10)\n    at Object.<anonymous> (/tmp/tmptxg_x9w2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpmq2b67cf.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmq2b67cf.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpnk1l_x4p.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnk1l_x4p.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpagxvefs4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpagxvefs4.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4cegmmv6.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4cegmmv6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmprv9my1zp.js:18:10)\n    at Object.<anonymous> (/tmp/tmprv9my1zp.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpj7j3s9e1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpj7j3s9e1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7fze4bsc.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7fze4bsc.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp1xdwmq7g.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1xdwmq7g.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmppb2i06wi.js:18:10)\n    at Object.<anonymous> (/tmp/tmppb2i06wi.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp0yaz5yio.js:18:10)\n    at Object.<anonymous> (/tmp/tmp0yaz5yio.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpwfeiws4d.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwfeiws4d.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_4e0eexc.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_4e0eexc.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgrah6yx0.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgrah6yx0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmphy2rhdua.js:18:10)\n    at Object.<anonymous> (/tmp/tmphy2rhdua.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpeglmp78i.js:18:10)\n    at Object.<anonymous> (/tmp/tmpeglmp78i.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgrjk8r0b.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgrjk8r0b.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp2rw3dnkb.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2rw3dnkb.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp_1rqtfys.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_1rqtfys.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmphcn02ulf.js:18:10)\n    at Object.<anonymous> (/tmp/tmphcn02ulf.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[ ,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmputuxb9xp.js:18:10)\n    at Object.<anonymous> (/tmp/tmputuxb9xp.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpl3cascrd.js:18:10)\n    at Object.<anonymous> (/tmp/tmpl3cascrd.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp028vnzl3.js:18:10)\n    at Object.<anonymous> (/tmp/tmp028vnzl3.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpyw_12_4n.js:18:10)\n    at Object.<anonymous> (/tmp/tmpyw_12_4n.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp282sg5q8.js:18:10)\n    at Object.<anonymous> (/tmp/tmp282sg5q8.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpy88vbojh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpy88vbojh.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError

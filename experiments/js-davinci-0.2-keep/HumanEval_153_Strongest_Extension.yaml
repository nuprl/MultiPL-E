name: HumanEval_153_Strongest_Extension
language: javascript
prompt: "//You will be given the name of a class (a string) and a list of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ list.\n// For example, if you are given \"Slices\" as the class and a list of\
  \ the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n//\
  \ return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\n// for Strongest_Extension('my_class',\
  \ ['AA', 'Be', 'CC']) == 'my_class.AA'\nfunction Strongest_Extension(class_name,\
  \ extensions){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = Strongest_Extension;\n  assert.deepEqual(candidate(\"Watashi\", [\"tEN\", \"\
  niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strongest = extensions[0];\n    for(let i = 1; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > 0){\n       \
    \     strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   for(let i = 1; i < extensions.length; i++){\n        let current = extensions[i];\n\
    \        let current_strength = current.split('').filter(x => x.match(/[A-Z]/)).length\
    \ - current.split('').filter(x => x.match(/[a-z]/)).length;\n        let strongest_strength\
    \ = strongest.split('').filter(x => x.match(/[A-Z]/)).length - strongest.split('').filter(x\
    \ => x.match(/[a-z]/)).length;\n        if(current_strength > strongest_strength){\n\
    \            strongest = current;\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest_strength){\n            strongest_strength = strength;\n       \
    \     strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest = extensions[i];\n           \
    \ strongest_strength = current_strength;\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    var strongest = 0;\n    var strongest_ext\
    \ = '';\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n\
    \        var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n \
    \       for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_ext\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    extensions.forEach(extension => {\n    \
    \    let strength = 0;\n        for(let i = 0; i < extension.length; i++){\n \
    \           if(extension[i] === extension[i].toUpperCase()){\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extension;\n        }\n    });\n    return\
    \ `${class_name}.${strongest}`;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    for(let i = 1; i < extensions.length; i++){\n        let\
    \ curr = extensions[i];\n        let strongest_strength = strength(strongest);\n\
    \        let curr_strength = strength(curr);\n        if(curr_strength > strongest_strength){\n\
    \            strongest = curr;\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongestStrength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongestStrength){\n            strongestStrength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_ext = '';\n    extensions.forEach(ext => {\n       \
    \ let cap = 0;\n        let sm = 0;\n        for(let i = 0; i < ext.length; i++){\n\
    \            if(ext[i] === ext[i].toUpperCase()){\n                cap++;\n  \
    \          } else {\n                sm++;\n            }\n        }\n       \
    \ let strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_ext = ext;\n        }\n    });\n    return\
    \ `${class_name}.${strongest_ext}`;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strength\
    \ = 0;\n    let strongest = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_ext = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ for(let i = 1; i < extensions.length; i++){\n        let current = extensions[i];\n\
    \        let current_strength = get_strength(current);\n        let strongest_strength\
    \ = get_strength(strongest);\n        if(current_strength > strongest_strength){\n\
    \            strongest = current;\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension = '';\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n     \
    \   let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n           \
    \     cap++;\n            }\n            else{\n                sm++;\n      \
    \      }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension = '';\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n     \
    \   let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] === extensions[i][j].toUpperCase()){\n          \
    \      cap++;\n            }else{\n                sm++;\n            }\n    \
    \    }\n        if(cap - sm > strongest){\n            strongest = cap - sm;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}", "    let strongest = 0;\n    let\
    \ strongest_ext = '';\n    for(let i = 0; i < extensions.length; i++){\n     \
    \   let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n \
    \       for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ == extensions[i][j].toUpperCase()){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength = 0;\n        for(let i = 0; i < extension.length;\
    \ i++){\n            if(extension[i] === extension[i].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extension;\n  \
    \      }\n    });\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension_strength = 0;\n  \
    \      for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength +=\
    \ 1;\n            } else {\n                extension_strength -= 1;\n       \
    \     }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n", "    let strongest = extensions[0];\n  \
    \  let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }else{\n                strength--;\n    \
    \        }\n        }\n        if(strength > strongest_strength){\n          \
    \  strongest_strength = strength;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongestStrength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongestStrength){\n       \
    \     strongestStrength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_ext = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = {\n  \
    \      name: '',\n        strength: -Infinity\n    };\n    for(let i = 0; i <\
    \ extensions.length; i++){\n        let ext = extensions[i];\n        let strength\
    \ = 0;\n        for(let j = 0; j < ext.length; j++){\n            if(ext[j] ===\
    \ ext[j].toUpperCase()){\n                strength++;\n            }\n       \
    \     else{\n                strength--;\n            }\n        }\n        if(strength\
    \ > strongest.strength){\n            strongest.name = ext;\n            strongest.strength\
    \ = strength;\n        }\n    }\n    return `${class_name}.${strongest.name}`;\n\
    }\n", "    let strongest = extensions[0];\n    for(let i = 1; i < extensions.length;\
    \ i++){\n        let current = extensions[i];\n        let current_strength =\
    \ 0;\n        let strongest_strength = 0;\n        for(let j = 0; j < current.length;\
    \ j++){\n            if(current[j] === current[j].toUpperCase()){\n          \
    \      current_strength++;\n            }else{\n                current_strength--;\n\
    \            }\n        }\n        for(let j = 0; j < strongest.length; j++){\n\
    \            if(strongest[j] === strongest[j].toUpperCase()){\n              \
    \  strongest_strength++;\n            }else{\n                strongest_strength--;\n\
    \            }\n        }\n        if(current_strength > strongest_strength){\n\
    \            strongest = current;\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    var strongest = 0;\n    var strongest_extension = \"\
    \";\n    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n \
    \       var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        var strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongestStrength = 0;\n  \
    \  for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongestStrength){\n            strongestStrength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var cap = 0;\n        var sm = 0;\n        for(var j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j]\
    \ <= 'Z'){\n                cap++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                sm++;\n            }\n\
    \        }\n        if(cap - sm > strongest){\n            strongest = cap - sm;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongestStrength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let extension = extensions[i];\n        let strength = 0;\n        for(let\
    \ j = 0; j < extension.length; j++){\n            let char = extension[j];\n \
    \           if(char === char.toUpperCase()){\n                strength++;\n  \
    \          }\n            else{\n                strength--;\n            }\n\
    \        }\n        if(strength > strongestStrength){\n            strongestStrength\
    \ = strength;\n            strongest = extension;\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    var strongest\
    \ = 0;\n    var strongest_extension = '';\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var extension = extensions[i];\n        var cap = 0;\n      \
    \  var sm = 0;\n        for(var j = 0; j < extension.length; j++){\n         \
    \   if(extension[j] == extension[j].toUpperCase()){\n                cap++;\n\
    \            }else{\n                sm++;\n            }\n        }\n       \
    \ var strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}", "    var strongest =\
    \ extensions[0];\n    var strongest_strength = 0;\n    for(var i = 0; i < extensions.length;\
    \ i++){\n        var strength = 0;\n        for(var j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strength\
    \ = 0;\n    let strongest = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_ext\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest = extensions[i];\n           \
    \ strongest_strength = current_strength;\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }else{\n                sm++;\n            }\n \
    \       }\n        let strength = cap - sm;\n        if(strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongestExtension\
    \ = extensions[0];\n    let strongestExtensionStrength = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongestExtensionStrength)\
    \ {\n            strongestExtensionStrength = strength;\n            strongestExtension\
    \ = extension;\n        }\n    }\n    return class_name + '.' + strongestExtension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n \
    \       for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    extensions.forEach(ext\
    \ => {\n        let strength = ext.split('').reduce((acc, cur) => {\n        \
    \    if(cur.match(/[A-Z]/)){\n                acc += 1;\n            }\n     \
    \       else if(cur.match(/[a-z]/)){\n                acc -= 1;\n            }\n\
    \            return acc;\n        }, 0);\n        if(strength > strongest_strength){\n\
    \            strongest = ext;\n            strongest_strength = strength;\n  \
    \      }\n    });\n    return `${class_name}.${strongest}`;\n}\n", "    let className\
    \ = class_name;\n    let strongestExtension = extensions[0];\n    let strongestExtensionStrength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for(let j = 0; j < extension.length;\
    \ j++){\n            let char = extension[j];\n            if(char.toUpperCase()\
    \ === char){\n                strength++;\n            }\n            else{\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongestExtensionStrength){\n            strongestExtensionStrength = strength;\n\
    \            strongestExtension = extension;\n        }\n    }\n    return className\
    \ + '.' + strongestExtension;\n}\n", "    let strongest = extensions[0];\n   \
    \ let strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n       \
    \ let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength += 1;\n            }\n            else{\n                strength\
    \ -= 1;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    for(let i = 1; i < extensions.length; i++){\n        let\
    \ strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] === extensions[i][j].toUpperCase()){\n          \
    \      strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > 0){\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + '.' + strongest;\n\
    }\n", "    let strongest = 0;\n    let strongest_ext = '';\n    for(let i = 0;\
    \ i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strongest){\n            strongest = cap - sm;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }\n", "    let strongest = extensions[0];\n    let strongestStrength = 0;\n  \
    \  for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongestStrength){\n            strongestStrength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   for(let i = 1; i < extensions.length; i++){\n        if(extensions[i].length\
    \ - extensions[i].toLowerCase().length > strongest.length - strongest.toLowerCase().length){\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strongest){\n            strongest = cap\
    \ - sm;\n            strongest_extension = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    extensions.forEach(extension =>\
    \ {\n        let strength = extension.split('').reduce((acc, curr) => {\n    \
    \        if(curr === curr.toUpperCase()){\n                acc += 1;\n       \
    \     }else{\n                acc -= 1;\n            }\n            return acc;\n\
    \        }, 0);\n        if(strength > strongest){\n            strongest = strength;\n\
    \            strongest_extension = extension;\n        }\n    });\n    return\
    \ `${class_name}.${strongest_extension}`;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongestStrength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let extension = extensions[i];\n        let strength = 0;\n        for(let\
    \ j = 0; j < extension.length; j++){\n            let char = extension[j];\n \
    \           if(char === char.toUpperCase()){\n                strength++;\n  \
    \          }\n            else{\n                strength--;\n            }\n\
    \        }\n        if(strength > strongestStrength){\n            strongestStrength\
    \ = strength;\n            strongest = extension;\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let CAP = 0;\n        let SM = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                CAP++;\n            }\n            else{\n                SM++;\n\
    \            }\n        }\n        if(CAP - SM > strongest){\n            strongest\
    \ = CAP - SM;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else if(extensions[i][j]\
    \ >= 'a' && extensions[i][j] <= 'z'){\n                strength--;\n         \
    \   }\n        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_ext\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         cap++;\n            }\n            else{\n                sm++;\n  \
    \          }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n \
    \       for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else{\n                strength--;\n            }\n       \
    \ }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strength = 0;\n    for(let i = 0;\
    \ i < extensions.length; i++){\n        let cap = 0;\n        let sm = 0;\n  \
    \      for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                cap++;\n            }\n\
    \            else{\n                sm++;\n            }\n        }\n        if(cap\
    \ - sm > strength){\n            strength = cap - sm;\n            strongest =\
    \ extensions[i];\n        }\n    }\n    return class_name + '.' + strongest;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n   \
    \             strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let max\
    \ = 0;\n    let result = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                cap++;\n            }\n            if(extensions[i][j] >= 'a'\
    \ && extensions[i][j] <= 'z'){\n                sm++;\n            }\n       \
    \ }\n        if(cap - sm > max){\n            max = cap - sm;\n            result\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + result;\n}",
  "    let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ i = 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest_strength = current_strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_extension;\n\
    }", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n   \
    \ for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n   \
    \     for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}", "    var strongest = 0;\n    var strongest_extension = '';\n\
    \    for(var i = 0; i < extensions.length; i++){\n        var cap = 0;\n     \
    \   var sm = 0;\n        for(var j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] == extensions[i][j].toUpperCase()){\n           \
    \     cap++;\n            }else{\n                sm++;\n            }\n     \
    \   }\n        if(cap - sm > strongest){\n            strongest = cap - sm;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let max\
    \ = 0;\n    let result = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let upper = 0;\n        let lower = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                upper++;\n            }\n            else{\n                lower++;\n\
    \            }\n        }\n        if(upper - lower > max){\n            max =\
    \ upper - lower;\n            result = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + result;\n}\n", "    let strongest = extensions[0];\n    let\
    \ strongestStrength = 0;\n    for(let i = 0; i < extensions.length; i++){\n  \
    \      let currentStrength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                currentStrength++;\n            }\n            else{\n      \
    \          currentStrength--;\n            }\n        }\n        if(currentStrength\
    \ > strongestStrength){\n            strongestStrength = currentStrength;\n  \
    \          strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = {\n        name: '',\n      \
    \  strength: 0\n    };\n    for(let i = 0; i < extensions.length; i++){\n    \
    \    let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            } else {\n                strength--;\n  \
    \          }\n        }\n        if(strength > strongest.strength){\n        \
    \    strongest.name = extensions[i];\n            strongest.strength = strength;\n\
    \        }\n    }\n    return class_name + '.' + strongest.name;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongestExtension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            } else {\n                sm++;\n       \
    \     }\n        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongestExtension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongestExtension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let\
    \ extension of extensions){\n        let strength = extension.match(/[A-Z]/g).length\
    \ - extension.match(/[a-z]/g).length;\n        if(strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength = extension.split('').reduce((acc, curr) => {\n \
    \           if(curr.toUpperCase() === curr) acc++;\n            else acc--;\n\
    \            return acc;\n        }, 0);\n        if(strength > strongest_strength){\n\
    \            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    });\n    return `${class_name}.${strongest}`;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] >= 'A'\
    \ && extensions[i][j] <= 'Z'){\n                strength++;\n            }\n \
    \           else{\n                strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_ext = '';\n\
    \    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n     \
    \   let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] == extensions[i][j].toUpperCase()){\n           \
    \     cap++;\n            }\n            else{\n                sm++;\n      \
    \      }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_ext = extensions[i];\n        }\n    }\n\
    \    return class_name + '.' + strongest_ext;\n}", "    let strength = 0;\n  \
    \  let strongest = '';\n    for(let i = 0; i < extensions.length; i++){\n    \
    \    let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strength\
    \ = 0;\n    let strongest = '';\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n     \
    \   let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        if(cap - sm > strength){\n            strength = cap\
    \ - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongestExtension\
    \ = extensions[0];\n    let strongestExtensionStrength = 0;\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let extensionStrength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extensionStrength++;\n            } else {\n  \
    \              extensionStrength--;\n            }\n        }\n        if (extensionStrength\
    \ > strongestExtensionStrength) {\n            strongestExtensionStrength = extensionStrength;\n\
    \            strongestExtension = extension;\n        }\n    }\n    return class_name\
    \ + '.' + strongestExtension;\n}\n", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let current_strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                current_strength++;\n            }\n            else{\n     \
    \           current_strength--;\n            }\n        }\n        if(current_strength\
    \ > strongest_strength){\n            strongest_strength = current_strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z'){\n                strength++;\n         \
    \   }\n            else if(extensions[i][j] >= 'a' && extensions[i][j] <= 'z'){\n\
    \                strength--;\n            }\n        }\n        if(strength >\
    \ strongest_strength){\n            strongest_strength = strength;\n         \
    \   strongest = extensions[i];\n        }\n    }\n    return class_name + '.'\
    \ + strongest;\n}", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n   \
    \ let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          strength++;\n            }else{\n                strength--;\n    \
    \        }\n        }\n        if(strength > strongest_strength){\n          \
    \  strongest_strength = strength;\n            strongest = extensions[i];\n  \
    \      }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}", "    let strongest\
    \ = extensions[0];\n    for(let i = 1; i < extensions.length; i++){\n        let\
    \ strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] === extensions[i][j].toUpperCase()){\n          \
    \      strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        let strongest_strength = 0;\n        for(let\
    \ j = 0; j < strongest.length; j++){\n            if(strongest[j] === strongest[j].toUpperCase()){\n\
    \                strongest_strength++;\n            }\n            else{\n   \
    \             strongest_strength--;\n            }\n        }\n        if(strength\
    \ > strongest_strength){\n            strongest = extensions[i];\n        }\n\
    \    }\n    return class_name + '.' + strongest;\n}", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n       \
    \         strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest_strength){\n      \
    \      strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_ext = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        let strength = cap - sm;\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_ext\
    \ = extensions[i];\n        }\n    }\n    return class_name + '.' + strongest_ext;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for(let i = 0; i < extensions.length; i++){\n        let strength = 0;\n \
    \       for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let cap = 0;\n\
    \        let sm = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n      \
    \          cap++;\n            }\n            else{\n                sm++;\n \
    \           }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + strongest_extension;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = \"\";\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strongest){\n            strongest\
    \ = cap - sm;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest\
    \ = 0;\n    let strongest_extension = '';\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let extension = extensions[i];\n        let cap = 0;\n      \
    \  let sm = 0;\n        for(let j = 0; j < extension.length; j++){\n         \
    \   if(extension[j] === extension[j].toUpperCase()){\n                cap++;\n\
    \            }else{\n                sm++;\n            }\n        }\n       \
    \ let strength = cap - sm;\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + '.' + strongest_extension;\n}", "    let strongest =\
    \ 0;\n    let strongest_extension = '';\n    extensions.forEach(extension => {\n\
    \        let strength = 0;\n        for(let i = 0; i < extension.length; i++){\n\
    \            if(extension[i] >= 'A' && extension[i] <= 'Z'){\n               \
    \ strength++;\n            }\n            else if(extension[i] >= 'a' && extension[i]\
    \ <= 'z'){\n                strength--;\n            }\n        }\n        if(strength\
    \ > strongest){\n            strongest = strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + '.' + strongest_extension;\n\
    }\n", "    let strongest = {\n        name: '',\n        strength: 0\n    };\n\
    \    for(let extension of extensions){\n        let strength = 0;\n        for(let\
    \ i = 0; i < extension.length; i++){\n            if(extension[i] === extension[i].toUpperCase()){\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest.strength){\n      \
    \      strongest.name = extension;\n            strongest.strength = strength;\n\
    \        }\n    }\n    return `${class_name}.${strongest.name}`;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for(let i =\
    \ 0; i < extensions.length; i++){\n        let strength = 0;\n        for(let\
    \ j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()){\n                strength++;\n            }\n\
    \            else{\n                strength--;\n            }\n        }\n  \
    \      if(strength > strongest_strength){\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = 0;\n    let strongest_extension\
    \ = '';\n    for(let i = 0; i < extensions.length; i++){\n        let strength\
    \ = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n            if(extensions[i][j]\
    \ === extensions[i][j].toUpperCase()){\n                strength++;\n        \
    \    }\n            else{\n                strength--;\n            }\n      \
    \  }\n        if(strength > strongest){\n            strongest = strength;\n \
    \           strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest_extension;\n}\n", "    let strongest = 0;\n   \
    \ let strongest_ext = '';\n    for(let i = 0; i < extensions.length; i++){\n \
    \       let cap = 0;\n        let sm = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }else{\n                sm++;\n         \
    \   }\n        }\n        let strength = cap - sm;\n        if(strength > strongest){\n\
    \            strongest = strength;\n            strongest_ext = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest_ext;\n}\n", "    let\
    \ strongest = 0;\n    let strongest_extension = '';\n    extensions.forEach(extension\
    \ => {\n        let strength = 0;\n        for(let i = 0; i < extension.length;\
    \ i++){\n            if(extension[i] === extension[i].toUpperCase()){\n      \
    \          strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        if(strength > strongest){\n            strongest\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return `${class_name}.${strongest_extension}`;\n}", "    let strongest =\
    \ extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] == extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    for(let i = 1; i < extensions.length; i++){\n        let\
    \ strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n    \
    \        if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n           \
    \     strength++;\n            }\n            else{\n                strength--;\n\
    \            }\n        }\n        let strongest_strength = 0;\n        for(let\
    \ j = 0; j < strongest.length; j++){\n            if(strongest[j] >= 'A' && strongest[j]\
    \ <= 'Z'){\n                strongest_strength++;\n            }\n           \
    \ else{\n                strongest_strength--;\n            }\n        }\n   \
    \     if(strength > strongest_strength){\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongestStrength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongestStrength){\n\
    \            strongestStrength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let strength = 0;\n        for(let j = 0; j < extensions[i].length;\
    \ j++){\n            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n\
    \                strength++;\n            }\n            else{\n             \
    \   strength--;\n            }\n        }\n        if(strength > strongest_strength){\n\
    \            strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + strongest;\n}\n", "    let strongest\
    \ = extensions[0];\n    let strength = 0;\n    for(let i = 0; i < extensions.length;\
    \ i++){\n        let cap = 0;\n        let sm = 0;\n        for(let j = 0; j <\
    \ extensions[i].length; j++){\n            if(extensions[i][j] === extensions[i][j].toUpperCase()){\n\
    \                cap++;\n            }\n            else{\n                sm++;\n\
    \            }\n        }\n        if(cap - sm > strength){\n            strength\
    \ = cap - sm;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}\n", "    let strongest = extensions[0];\n \
    \   let strongest_strength = 0;\n    for(let i = 0; i < extensions.length; i++){\n\
    \        let strength = 0;\n        for(let j = 0; j < extensions[i].length; j++){\n\
    \            if(extensions[i][j] >= 'A' && extensions[i][j] <= 'Z'){\n       \
    \         strength++;\n            }\n            else if(extensions[i][j] >=\
    \ 'a' && extensions[i][j] <= 'z'){\n                strength--;\n            }\n\
    \        }\n        if(strength > strongest_strength){\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + strongest;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_136_largest_smallest_integers
language: javascript
prompt: "//Create a function that returns a tuple (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in a list.\n\
  // If there is no negative or positive integers, return them as None.\n// Examples:\n\
  // largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n// largest_smallest_integers([])\
  \ == (None, None)\n// largest_smallest_integers([0]) == (None, None)\nfunction largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    let pos = null;\n    let neg = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0 && (pos === null || lst[i] < pos)){\n         \
    \   pos = lst[i];\n        }\n        if(lst[i] < 0 && (neg === null || lst[i]\
    \ > neg)){\n            neg = lst[i];\n        }\n    }\n    return [neg, pos];\n\
    }\n", "  var pos = lst.filter(function(x){return x > 0});\n  var neg = lst.filter(function(x){return\
    \ x < 0});\n  return [neg.length > 0 ? neg.reduce(function(a,b){return Math.max(a,b)})\
    \ : null, pos.length > 0 ? pos.reduce(function(a,b){return Math.min(a,b)}) : null];\n\
    }\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0 && (b === null || lst[i] < b)){\n            b\
    \ = lst[i];\n        }\n        if(lst[i] < 0 && (a === null || lst[i] > a)){\n\
    \            a = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var\
    \ a = lst.filter(function(x){return x<0}).sort(function(a,b){return a-b}).pop();\n\
    \    var b = lst.filter(function(x){return x>0}).sort(function(a,b){return a-b}).shift();\n\
    \    if (a === undefined){\n        a = null;\n    }\n    if (b === undefined){\n\
    \        b = null;\n    }\n    return [a,b];\n}\n", "    var a = null;\n    var\
    \ b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a == null){\n                a = lst[i];\n            }\n    \
    \        else if(lst[i] > a){\n                a = lst[i];\n            }\n  \
    \      }\n        else if(lst[i] > 0){\n            if(b == null){\n         \
    \       b = lst[i];\n            }\n            else if(lst[i] < b){\n       \
    \         b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(a === null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b ===\
    \ null){\n                b = lst[i];\n            }\n            else if(lst[i]\
    \ < b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "  var min = null;\n  var max = null;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max == null || lst[i] > max){\n       \
    \ max = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(min == null\
    \ || lst[i] < min){\n        min = lst[i];\n      }\n    }\n  }\n  return [max,\
    \ min];\n}\n", "    let pos = null;\n    let neg = null;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > 0 && (pos === null || lst[i] < pos)){\n\
    \            pos = lst[i];\n        }\n        if(lst[i] < 0 && (neg === null\
    \ || lst[i] > neg)){\n            neg = lst[i];\n        }\n    }\n    return\
    \ [neg, pos];\n}\n", "    let neg = lst.filter(x => x < 0);\n    let pos = lst.filter(x\
    \ => x > 0);\n    if (neg.length == 0) {\n        neg = null;\n    } else {\n\
    \        neg = Math.max(...neg);\n    }\n    if (pos.length == 0) {\n        pos\
    \ = null;\n    } else {\n        pos = Math.min(...pos);\n    }\n    return [neg,\
    \ pos];\n}\n", "    var maxNegative = null;\n    var minPositive = null;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(maxNegative\
    \ == null || lst[i] > maxNegative){\n                maxNegative = lst[i];\n \
    \           }\n        }\n        else if(lst[i] > 0){\n            if(minPositive\
    \ == null || lst[i] < minPositive){\n                minPositive = lst[i];\n \
    \           }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n",
  "    var maxNeg = null;\n    var minPos = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(maxNeg == null){\n          \
    \      maxNeg = lst[i];\n            }\n            else if(lst[i] > maxNeg){\n\
    \                maxNeg = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(minPos == null){\n                minPos = lst[i];\n \
    \           }\n            else if(lst[i] < minPos){\n                minPos =\
    \ lst[i];\n            }\n        }\n    }\n    return [maxNeg, minPos];\n}\n",
  "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(a == null || lst[i] > a){\n         \
    \       a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n\
    \            if(b == null || lst[i] < b){\n                b = lst[i];\n     \
    \       }\n        }\n    }\n    return [a, b];\n}\n", "    let a = null;\n  \
    \  let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a === null){\n              \
    \  a = lst[i];\n            }\n            else if(lst[i] > a){\n            \
    \    a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n   \
    \         if(b === null){\n                b = lst[i];\n            }\n      \
    \      else if(lst[i] < b){\n                b = lst[i];\n            }\n    \
    \    }\n    }\n    return [a, b];\n}\n", "  var neg = [];\n  var pos = [];\n \
    \ for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      neg.push(lst[i]);\n\
    \    } else if (lst[i] > 0){\n      pos.push(lst[i]);\n    }\n  }\n  if (neg.length\
    \ == 0){\n    neg.push(null);\n  } else {\n    neg.sort(function(a, b){return\
    \ a-b});\n  }\n  if (pos.length == 0){\n    pos.push(null);\n  } else {\n    pos.sort(function(a,\
    \ b){return a-b});\n  }\n  return [neg[neg.length-1], pos[0]];\n}\n", "    var\
    \ a = null;\n    var b = null;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] > 0 && (b == null || lst[i] < b)){\n            b = lst[i];\n\
    \        }\n        if(lst[i] < 0 && (a == null || lst[i] > a)){\n           \
    \ a = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "  var neg = [];\n\
    \  var pos = [];\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n\
    \      neg.push(lst[i]);\n    }\n    else if (lst[i] > 0){\n      pos.push(lst[i]);\n\
    \    }\n  }\n  if (neg.length == 0){\n    neg = null;\n  }\n  else{\n    neg =\
    \ Math.max.apply(null, neg);\n  }\n  if (pos.length == 0){\n    pos = null;\n\
    \  }\n  else{\n    pos = Math.min.apply(null, pos);\n  }\n  return [neg, pos];\n\
    }\n", "    var a = null;\n    var b = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a == null){\n               \
    \ a = lst[i];\n            }\n            else if(lst[i] > a){\n             \
    \   a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(b == null){\n                b = lst[i];\n            }\n        \
    \    else if(lst[i] < b){\n                b = lst[i];\n            }\n      \
    \  }\n    }\n    return [a, b];\n}\n", "    var max = 0;\n    var min = 0;\n \
    \   var max_neg = 0;\n    var min_pos = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n        }\n   \
    \     if(lst[i] < min){\n            min = lst[i];\n        }\n        if(lst[i]\
    \ < 0 && lst[i] > max_neg){\n            max_neg = lst[i];\n        }\n      \
    \  if(lst[i] > 0 && lst[i] < min_pos){\n            min_pos = lst[i];\n      \
    \  }\n    }\n    return [max_neg, min_pos];\n}\n", "    var largest = null;\n\
    \    var smallest = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest == null || lst[i] > largest){\n              \
    \  largest = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n\
    \            if(smallest == null || lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let neg = null;\n    let pos = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(neg === null || lst[i] > neg){\n\
    \                neg = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(pos === null || lst[i] < pos){\n                pos =\
    \ lst[i];\n            }\n        }\n    }\n    return [neg, pos];\n}\n", "  \
    \  let min = null;\n    let max = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > 0){\n            if(min === null || lst[i] < min){\n    \
    \            min = lst[i];\n            }\n        }else if(lst[i] < 0){\n   \
    \         if(max === null || lst[i] > max){\n                max = lst[i];\n \
    \           }\n        }\n    }\n    return [max, min];\n}\n", "    var negative\
    \ = [];\n    var positive = [];\n    for(var i = 0; i < lst.length; i++){\n  \
    \      if(lst[i] < 0){\n            negative.push(lst[i]);\n        }\n      \
    \  else if(lst[i] > 0){\n            positive.push(lst[i]);\n        }\n    }\n\
    \    if(negative.length > 0){\n        negative.sort(function(a, b){return a -\
    \ b});\n        var a = negative[negative.length - 1];\n    }\n    else{\n   \
    \     var a = null;\n    }\n    if(positive.length > 0){\n        positive.sort(function(a,\
    \ b){return a - b});\n        var b = positive[0];\n    }\n    else{\n       \
    \ var b = null;\n    }\n    return [a, b];\n}\n", "  let min = null;\n  let max\
    \ = null;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n     \
    \ if(max === null){\n        max = lst[i];\n      }\n      else if(lst[i] > max){\n\
    \        max = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(min\
    \ === null){\n        min = lst[i];\n      }\n      else if(lst[i] < min){\n \
    \       min = lst[i];\n      }\n    }\n  }\n  return [max, min];\n}\n", "    let\
    \ a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(a === null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b ===\
    \ null){\n                b = lst[i];\n            }\n            else if(lst[i]\
    \ < b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "    let neg = [];\n    let pos = [];\n    for (let i = 0; i\
    \ < lst.length; i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n\
    \        }\n        else if (lst[i] > 0){\n            pos.push(lst[i]);\n   \
    \     }\n    }\n    if (neg.length == 0){\n        neg = None;\n    }\n    else{\n\
    \        neg = Math.max(...neg);\n    }\n    if (pos.length == 0){\n        pos\
    \ = None;\n    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return\
    \ (neg, pos);\n}\n", "  var min = null;\n  var max = null;\n  for(var i = 0; i\
    \ < lst.length; i++){\n    if(lst[i] > 0){\n      if(min == null){\n        min\
    \ = lst[i];\n      }\n      else if(lst[i] < min){\n        min = lst[i];\n  \
    \    }\n    }\n    else if(lst[i] < 0){\n      if(max == null){\n        max =\
    \ lst[i];\n      }\n      else if(lst[i] > max){\n        max = lst[i];\n    \
    \  }\n    }\n  }\n  return [max, min];\n}\n", "    var min = null;\n    var max\
    \ = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(max == null || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(min ==\
    \ null || lst[i] < min){\n                min = lst[i];\n            }\n     \
    \   }\n    }\n    return [max, min];\n}\n", "  var pos = null;\n  var neg = null;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > 0 && (pos == null ||\
    \ lst[i] < pos)){\n      pos = lst[i];\n    }\n    if(lst[i] < 0 && (neg == null\
    \ || lst[i] > neg)){\n      neg = lst[i];\n    }\n  }\n  return [neg, pos];\n\
    }\n", "    let min = null;\n    let max = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0){\n            if(min === null || lst[i] < min){\n\
    \                min = lst[i];\n            }\n        }\n        if(lst[i] <\
    \ 0){\n            if(max === null || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "  var pos = null;\n\
    \  var neg = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > 0\
    \ && (pos == null || lst[i] < pos)){\n      pos = lst[i];\n    }\n    if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n      neg = lst[i];\n    }\n  }\n  return\
    \ [neg, pos];\n}\n", "    var a = null;\n    var b = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null){\n                b = lst[i];\n           \
    \ }\n            else if(lst[i] < b){\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "    let a = null;\n    let\
    \ b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a == null || lst[i] > a){\n                a = lst[i];\n     \
    \       }\n        }\n        else if(lst[i] > 0){\n            if(b == null ||\
    \ lst[i] < b){\n                b = lst[i];\n            }\n        }\n    }\n\
    \    return [a, b];\n}\n", "    var a = null;\n    var b = null;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (b == null || lst[i]\
    \ < b)){\n            b = lst[i];\n        }\n        if(lst[i] < 0 && (a == null\
    \ || lst[i] > a)){\n            a = lst[i];\n        }\n    }\n    return [a,\
    \ b];\n}\n", "  var a = lst.filter(function(x){return x < 0});\n  var b = lst.filter(function(x){return\
    \ x > 0});\n  if (a.length == 0){\n    a = null;\n  } else {\n    a = Math.max.apply(null,\
    \ a);\n  }\n  if (b.length == 0){\n    b = null;\n  } else {\n    b = Math.min.apply(null,\
    \ b);\n  }\n  return [a, b];\n}\n", "    var pos = null;\n    var neg = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (pos == null\
    \ || lst[i] < pos)){\n            pos = lst[i];\n        }\n        if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n            neg = lst[i];\n        }\n\
    \    }\n    return [neg, pos];\n}\n", "    let a = lst.filter(x => x < 0).sort((a,\
    \ b) => a - b).pop();\n    let b = lst.filter(x => x > 0).sort((a, b) => a - b).shift();\n\
    \    return [a, b];\n}\n", "    let a = null;\n    let b = null;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null){\n                b = lst[i];\n           \
    \ }\n            else if(lst[i] < b){\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "    var largest = null;\n\
    \    var smallest = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest == null){\n                largest = lst[i];\n\
    \            }\n            else if(lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(smallest == null){\n                smallest = lst[i];\n            }\n\
    \            else if(lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ neg = lst.filter(function(x){return x < 0});\n  var pos = lst.filter(function(x){return\
    \ x > 0});\n  if (neg.length === 0){\n    neg = null;\n  } else {\n    neg = Math.max.apply(null,\
    \ neg);\n  }\n  if (pos.length === 0){\n    pos = null;\n  } else {\n    pos =\
    \ Math.min.apply(null, pos);\n  }\n  return [neg, pos];\n}\n", "    var min =\
    \ null;\n    var max = null;\n    for(var i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] > 0){\n            if(min == null || lst[i] < min){\n          \
    \      min = lst[i];\n            }\n        }\n        else if(lst[i] < 0){\n\
    \            if(max == null || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    let a = null;\n\
    \    let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a === null){\n                a = lst[i];\n          \
    \  }\n            else if(lst[i] > a){\n                a = lst[i];\n        \
    \    }\n        }\n        else if(lst[i] > 0){\n            if(b === null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    var negative = [];\n    var positive = [];\n    for(var i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            negative.push(lst[i]);\n\
    \        }\n        else if(lst[i] > 0){\n            positive.push(lst[i]);\n\
    \        }\n    }\n    if(negative.length == 0){\n        negative = null;\n \
    \   }\n    else{\n        negative = Math.max(...negative);\n    }\n    if(positive.length\
    \ == 0){\n        positive = null;\n    }\n    else{\n        positive = Math.min(...positive);\n\
    \    }\n    return [negative, positive];\n}\n", "    var neg = null;\n    var\
    \ pos = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(neg == null || lst[i] > neg){\n                neg = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(pos ==\
    \ null || lst[i] < pos){\n                pos = lst[i];\n            }\n     \
    \   }\n    }\n    return [neg, pos];\n}\n", "    var a = null;\n    var b = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(a === null || lst[i] > a){\n                a = lst[i];\n            }\n\
    \        }\n        else if(lst[i] > 0){\n            if(b === null || lst[i]\
    \ < b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "    var neg = null;\n    var pos = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(neg == null ||\
    \ lst[i] > neg){\n                neg = lst[i];\n            }\n        }\n  \
    \      else if(lst[i] > 0){\n            if(pos == null || lst[i] < pos){\n  \
    \              pos = lst[i];\n            }\n        }\n    }\n    return [neg,\
    \ pos];\n}\n", "  var a = null;\n  var b = null;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0 && (a == null || lst[i] > a)){\n      a = lst[i];\n\
    \    }\n    if(lst[i] > 0 && (b == null || lst[i] < b)){\n      b = lst[i];\n\
    \    }\n  }\n  return [a, b];\n}\n", "  let neg = null;\n  let pos = null;\n \
    \ for(let i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n      if(neg ===\
    \ null){\n        neg = lst[i];\n      }\n      else if(lst[i] > neg){\n     \
    \   neg = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(pos ===\
    \ null){\n        pos = lst[i];\n      }\n      else if(lst[i] < pos){\n     \
    \   pos = lst[i];\n      }\n    }\n  }\n  return [neg, pos];\n}\n", "  var pos\
    \ = [];\n  var neg = [];\n  var a = 0;\n  var b = 0;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] > 0){\n      pos.push(lst[i]);\n    }\n    else if(lst[i]\
    \ < 0){\n      neg.push(lst[i]);\n    }\n  }\n  if(pos.length > 0){\n    b = Math.min.apply(null,\
    \ pos);\n  }\n  else{\n    b = null;\n  }\n  if(neg.length > 0){\n    a = Math.max.apply(null,\
    \ neg);\n  }\n  else{\n    a = null;\n  }\n  return [a, b];\n}\n", "  var min\
    \ = null;\n  var max = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < 0){\n      if(max == null){\n        max = lst[i];\n      }\n      else if(lst[i]\
    \ > max){\n        max = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n \
    \     if(min == null){\n        min = lst[i];\n      }\n      else if(lst[i] <\
    \ min){\n        min = lst[i];\n      }\n    }\n  }\n  return [max, min];\n}\n",
  "    let a = lst.filter(x => x < 0).sort((a, b) => a - b).pop();\n    let b = lst.filter(x\
    \ => x > 0).sort((a, b) => a - b).shift();\n    return [a, b];\n}\n", "    let\
    \ a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(a === null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b ===\
    \ null){\n                b = lst[i];\n            }\n            else if(lst[i]\
    \ < b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "    if(lst.length == 0) return [null, null];\n    let neg =\
    \ null;\n    let pos = null;\n    for(let i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] < 0 && (neg == null || lst[i] > neg)) neg = lst[i];\n        if(lst[i]\
    \ > 0 && (pos == null || lst[i] < pos)) pos = lst[i];\n    }\n    return [neg,\
    \ pos];\n}\n", "  var positive = [];\n  var negative = [];\n  for (var i = 0;\
    \ i < lst.length; i++){\n    if (lst[i] > 0){\n      positive.push(lst[i]);\n\
    \    }\n    else if (lst[i] < 0){\n      negative.push(lst[i]);\n    }\n  }\n\
    \  if (positive.length === 0){\n    positive = null;\n  }\n  else{\n    positive\
    \ = Math.min.apply(null, positive);\n  }\n  if (negative.length === 0){\n    negative\
    \ = null;\n  }\n  else{\n    negative = Math.max.apply(null, negative);\n  }\n\
    \  return [negative, positive];\n}\n", "    var largestNegative = null;\n    var\
    \ smallestPositive = null;\n    for(var i = 0; i < lst.length; i++){\n       \
    \ if(lst[i] < 0){\n            if(largestNegative == null){\n                largestNegative\
    \ = lst[i];\n            }\n            else if(lst[i] > largestNegative){\n \
    \               largestNegative = lst[i];\n            }\n        }\n        else\
    \ if(lst[i] > 0){\n            if(smallestPositive == null){\n               \
    \ smallestPositive = lst[i];\n            }\n            else if(lst[i] < smallestPositive){\n\
    \                smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n", "  var neg = [];\n  var\
    \ pos = [];\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n \
    \     neg.push(lst[i]);\n    }\n    else if (lst[i] > 0){\n      pos.push(lst[i]);\n\
    \    }\n  }\n  if (neg.length == 0){\n    neg = None;\n  }\n  else{\n    neg =\
    \ Math.max(...neg);\n  }\n  if (pos.length == 0){\n    pos = None;\n  }\n  else{\n\
    \    pos = Math.min(...pos);\n  }\n  return [neg, pos];\n}\n", "    var a = null;\n\
    \    var b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let negative = [];\n    let positive = [];\n    for (let i =\
    \ 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            negative.push(lst[i]);\n\
    \        }\n        else if (lst[i] > 0){\n            positive.push(lst[i]);\n\
    \        }\n    }\n    if (negative.length === 0){\n        negative = None;\n\
    \    }\n    else{\n        negative = Math.max(...negative);\n    }\n    if (positive.length\
    \ === 0){\n        positive = None;\n    }\n    else{\n        positive = Math.min(...positive);\n\
    \    }\n    return [negative, positive];\n}\n", "  let negative = null;\n  let\
    \ positive = null;\n  for (let i = 0; i < lst.length; i++){\n    if (lst[i] <\
    \ 0){\n      if (negative === null){\n        negative = lst[i];\n      }\n  \
    \    else if (lst[i] > negative){\n        negative = lst[i];\n      }\n    }\n\
    \    else if (lst[i] > 0){\n      if (positive === null){\n        positive =\
    \ lst[i];\n      }\n      else if (lst[i] < positive){\n        positive = lst[i];\n\
    \      }\n    }\n  }\n  return [negative, positive];\n}\n", "    let a = null;\n\
    \    let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a === null){\n                a = lst[i];\n          \
    \  }\n            else if(lst[i] > a){\n                a = lst[i];\n        \
    \    }\n        }\n        else if(lst[i] > 0){\n            if(b === null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a == null){\n               \
    \ a = lst[i];\n            }\n            else if(lst[i] > a){\n             \
    \   a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(b == null){\n                b = lst[i];\n            }\n        \
    \    else if(lst[i] < b){\n                b = lst[i];\n            }\n      \
    \  }\n    }\n    return [a, b];\n}\n", "    let smallest = null;\n    let largest\
    \ = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n\
    \            if(smallest == null){\n                smallest = lst[i];\n     \
    \       }\n            else if(lst[i] < smallest){\n                smallest =\
    \ lst[i];\n            }\n        }\n        else if(lst[i] < 0){\n          \
    \  if(largest == null){\n                largest = lst[i];\n            }\n  \
    \          else if(lst[i] > largest){\n                largest = lst[i];\n   \
    \         }\n        }\n    }\n    return [largest, smallest];\n}\n", "    let\
    \ pos = [];\n    let neg = [];\n    for (let i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] > 0){\n            pos.push(lst[i]);\n        } else if (lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n    }\n    if (pos.length >\
    \ 0 && neg.length > 0){\n        return [Math.max(...neg), Math.min(...pos)];\n\
    \    } else {\n        return [null, null];\n    }\n}\n", "  var pos = null;\n\
    \  var neg = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > 0\
    \ && (pos == null || lst[i] < pos)){\n      pos = lst[i];\n    }\n    if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n      neg = lst[i];\n    }\n  }\n  return\
    \ [neg, pos];\n}\n", "    let neg = [];\n    let pos = [];\n    for (let i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n\
    \        }\n        else if (lst[i] > 0){\n            pos.push(lst[i]);\n   \
    \     }\n    }\n    if (neg.length == 0){\n        neg = null;\n    }\n    else{\n\
    \        neg = Math.max(...neg);\n    }\n    if (pos.length == 0){\n        pos\
    \ = null;\n    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return\
    \ [neg, pos];\n}\n", "    var neg = [];\n    var pos = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            neg.push(lst[i]);\n\
    \        }\n        else if(lst[i] > 0){\n            pos.push(lst[i]);\n    \
    \    }\n    }\n    if(neg.length == 0){\n        neg = null;\n    }\n    else{\n\
    \        neg = Math.max(...neg);\n    }\n    if(pos.length == 0){\n        pos\
    \ = null;\n    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return\
    \ [neg, pos];\n}\n", "    var a = null;\n    var b = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }else if(lst[i] > a){\n            \
    \    a = lst[i];\n            }\n        }else if(lst[i] > 0){\n            if(b\
    \ == null){\n                b = lst[i];\n            }else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let negative = lst.filter(x => x < 0);\n    let positive = lst.filter(x\
    \ => x > 0);\n    if (negative.length == 0 || positive.length == 0) {\n      \
    \  return [null, null];\n    }\n    return [Math.max(...negative), Math.min(...positive)];\n\
    }\n", "  var min = null;\n  var max = null;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(max == null || lst[i] > max){\n       \
    \ max = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(min == null\
    \ || lst[i] < min){\n        min = lst[i];\n      }\n    }\n  }\n  return [max,\
    \ min];\n}\n", "    var a = [];\n    var b = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            a.push(lst[i]);\n        }\n   \
    \     else if(lst[i] > 0){\n            b.push(lst[i]);\n        }\n    }\n  \
    \  if(a.length == 0){\n        a = null;\n    }\n    else{\n        a = Math.max(...a);\n\
    \    }\n    if(b.length == 0){\n        b = null;\n    }\n    else{\n        b\
    \ = Math.min(...b);\n    }\n    return [a, b];\n}\n", "  var max = Math.max.apply(null,\
    \ lst);\n  var min = Math.min.apply(null, lst);\n  if(max < 0){\n    return [max,\
    \ null];\n  }\n  else if(min > 0){\n    return [null, min];\n  }\n  else{\n  \
    \  return [null, null];\n  }\n}\n", "    let neg = lst.filter(x => x < 0);\n \
    \   let pos = lst.filter(x => x > 0);\n    if (neg.length === 0) {\n        neg\
    \ = null;\n    } else {\n        neg = Math.max(...neg);\n    }\n    if (pos.length\
    \ === 0) {\n        pos = null;\n    } else {\n        pos = Math.min(...pos);\n\
    \    }\n    return [neg, pos];\n}\n", "  var min = null;\n  var max = null;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] > 0){\n      if(min ==\
    \ null || lst[i] < min){\n        min = lst[i];\n      }\n    }\n    else if(lst[i]\
    \ < 0){\n      if(max == null || lst[i] > max){\n        max = lst[i];\n     \
    \ }\n    }\n  }\n  return [max, min];\n}\n", "    let pos = [];\n    let neg =\
    \ [];\n    let result = [];\n    for (let i = 0; i < lst.length; i++){\n     \
    \   if (lst[i] < 0){\n            neg.push(lst[i]);\n        } else if (lst[i]\
    \ > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length ===\
    \ 0){\n        result.push(null);\n    } else {\n        result.push(Math.max(...neg));\n\
    \    }\n    if (pos.length === 0){\n        result.push(null);\n    } else {\n\
    \        result.push(Math.min(...pos));\n    }\n    return result;\n}\n", "  \
    \  var largest = null;\n    var smallest = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest == null){\n         \
    \       largest = lst[i];\n            }\n            else if(lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(smallest == null){\n                smallest = lst[i];\n\
    \            }\n            else if(lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var lst = lst.sort(function(a, b){return a-b});\n    var neg = [];\n\
    \    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n        else if (lst[i] > 0){\n\
    \            pos.push(lst[i]);\n        }\n    }\n    if (neg.length == 0){\n\
    \        neg = None;\n    }\n    else{\n        neg = neg[neg.length-1];\n   \
    \ }\n    if (pos.length == 0){\n        pos = None;\n    }\n    else{\n      \
    \  pos = pos[0];\n    }\n    return [neg, pos];\n}\n", "    var pos = null;\n\
    \    var neg = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > 0 && (pos == null || lst[i] < pos)){\n            pos = lst[i];\n        }\n\
    \        if(lst[i] < 0 && (neg == null || lst[i] > neg)){\n            neg = lst[i];\n\
    \        }\n    }\n    return [neg, pos];\n}\n", "    var largest = null;\n  \
    \  var smallest = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest == null){\n                largest = lst[i];\n\
    \            }\n            else if(lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(smallest == null){\n                smallest = lst[i];\n            }\n\
    \            else if(lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var min = null;\n    var max = null;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(max == null || lst[i] > max){\n     \
    \           max = lst[i];\n            }\n        }\n        else if(lst[i] >\
    \ 0){\n            if(min == null || lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var a = lst.filter(function(x){return\
    \ x < 0}).sort(function(a,b){return a-b});\n    var b = lst.filter(function(x){return\
    \ x > 0}).sort(function(a,b){return a-b});\n    return (a.length > 0 ? a[a.length-1]\
    \ : null, b.length > 0 ? b[0] : null);\n}\n", "    var a = null;\n    var b =\
    \ null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n \
    \           if(a == null || lst[i] > a){\n                a = lst[i];\n      \
    \      }\n        }\n        else if(lst[i] > 0){\n            if(b == null ||\
    \ lst[i] < b){\n                b = lst[i];\n            }\n        }\n    }\n\
    \    return [a, b];\n}\n", "    let neg = [];\n    let pos = [];\n    for (let\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n\
    \        } else if (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n \
    \   }\n    if (neg.length === 0){\n        neg = null;\n    } else {\n       \
    \ neg = Math.max(...neg);\n    }\n    if (pos.length === 0){\n        pos = null;\n\
    \    } else {\n        pos = Math.min(...pos);\n    }\n    return [neg, pos];\n\
    }\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a == null || lst[i] > a){\n \
    \               a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null || lst[i] < b){\n                b = lst[i];\n\
    \            }\n        }\n    }\n    return [a, b];\n}\n", "  let a = null;\n\
    \  let b = null;\n  for (let i = 0; i < lst.length; i++){\n    if (lst[i] < 0\
    \ && a === null){\n      a = lst[i];\n    }\n    if (lst[i] < 0 && lst[i] > a){\n\
    \      a = lst[i];\n    }\n    if (lst[i] > 0 && b === null){\n      b = lst[i];\n\
    \    }\n    if (lst[i] > 0 && lst[i] < b){\n      b = lst[i];\n    }\n  }\n  return\
    \ [a, b];\n}\n", "    let positive = lst.filter(x => x > 0);\n    let negative\
    \ = lst.filter(x => x < 0);\n    let a = negative.length > 0 ? Math.max(...negative)\
    \ : null;\n    let b = positive.length > 0 ? Math.min(...positive) : null;\n \
    \   return [a, b];\n}\n", "    let neg = lst.filter(x => x < 0);\n    let pos\
    \ = lst.filter(x => x > 0);\n    if (neg.length == 0){\n        neg = null;\n\
    \    } else {\n        neg = Math.max(...neg);\n    }\n    if (pos.length == 0){\n\
    \        pos = null;\n    } else {\n        pos = Math.min(...pos);\n    }\n \
    \   return [neg, pos];\n}\n", "  var neg = [];\n  var pos = [];\n  for (var i\
    \ = 0; i < lst.length; i++){\n    if (lst[i] < 0){\n      neg.push(lst[i]);\n\
    \    }\n    else if (lst[i] > 0){\n      pos.push(lst[i]);\n    }\n  }\n  if (neg.length\
    \ > 0){\n    neg.sort(function(a, b){return a-b});\n    var largest = neg[neg.length-1];\n\
    \  }\n  else {\n    var largest = null;\n  }\n  if (pos.length > 0){\n    pos.sort(function(a,\
    \ b){return a-b});\n    var smallest = pos[0];\n  }\n  else {\n    var smallest\
    \ = null;\n  }\n  return [largest, smallest];\n}\n", "    var a = null;\n    var\
    \ b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a == null){\n                a = lst[i];\n            }\n    \
    \        else if(lst[i] > a){\n                a = lst[i];\n            }\n  \
    \      }\n        else if(lst[i] > 0){\n            if(b == null){\n         \
    \       b = lst[i];\n            }\n            else if(lst[i] < b){\n       \
    \         b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "    let neg = null;\n    let pos = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(neg === null){\n                neg =\
    \ lst[i];\n            }\n            else if(lst[i] > neg){\n               \
    \ neg = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(pos === null){\n                pos = lst[i];\n            }\n   \
    \         else if(lst[i] < pos){\n                pos = lst[i];\n            }\n\
    \        }\n    }\n    return [neg, pos];\n}\n", "    let a = null;\n    let b\
    \ = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a === null){\n                a = lst[i];\n            }\n   \
    \         else if(lst[i] > a){\n                a = lst[i];\n            }\n \
    \       }\n        else if(lst[i] > 0){\n            if(b === null){\n       \
    \         b = lst[i];\n            }\n            else if(lst[i] < b){\n     \
    \           b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n\
    }\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a === null){\n              \
    \  a = lst[i];\n            }\n            else if(lst[i] > a){\n            \
    \    a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n   \
    \         if(b === null){\n                b = lst[i];\n            }\n      \
    \      else if(lst[i] < b){\n                b = lst[i];\n            }\n    \
    \    }\n    }\n    return [a, b];\n}", "    let a = null;\n    let b = null;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (b === null\
    \ || lst[i] < b)){\n            b = lst[i];\n        }\n        if(lst[i] < 0\
    \ && (a === null || lst[i] > a)){\n            a = lst[i];\n        }\n    }\n\
    \    return [a, b];\n}\n", "    var smallest = null;\n    var largest = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n         \
    \   if(smallest == null){\n                smallest = lst[i];\n            }\n\
    \            else if(lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n        else if(lst[i] < 0){\n            if(largest\
    \ == null){\n                largest = lst[i];\n            }\n            else\
    \ if(lst[i] > largest){\n                largest = lst[i];\n            }\n  \
    \      }\n    }\n    return [largest, smallest];\n}\n", "    var min = null;\n\
    \    var max = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > 0){\n            if(min == null || lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n        else if(lst[i] < 0){\n            if(max ==\
    \ null || lst[i] > max){\n                max = lst[i];\n            }\n     \
    \   }\n    }\n    return [max, min];\n}\n", "    let a = null;\n    let b = null;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (b === null\
    \ || lst[i] < b)){\n            b = lst[i];\n        }\n        if(lst[i] < 0\
    \ && (a === null || lst[i] > a)){\n            a = lst[i];\n        }\n    }\n\
    \    return [a, b];\n}\n", "    let a = null;\n    let b = null;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null\
    \ || lst[i] > a){\n                a = lst[i];\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(b == null || lst[i] < b){\n       \
    \         b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "    let neg = lst.filter(x => x < 0);\n    let pos = lst.filter(x => x > 0);\n\
    \    let a = neg.length > 0 ? Math.max(...neg) : null;\n    let b = pos.length\
    \ > 0 ? Math.min(...pos) : null;\n    return [a, b];\n}\n", "    var pos = [];\n\
    \    var neg = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n        else if(lst[i] > 0){\n\
    \            pos.push(lst[i]);\n        }\n    }\n    if(neg.length == 0){\n \
    \       neg = null;\n    }\n    else{\n        neg = Math.max(...neg);\n    }\n\
    \    if(pos.length == 0){\n        pos = null;\n    }\n    else{\n        pos\
    \ = Math.min(...pos);\n    }\n    return [neg, pos];\n}\n", "    let a = null;\n\
    \    let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0 && (b === null || lst[i] < b)){\n            b\
    \ = lst[i];\n        }\n        if(lst[i] < 0 && (a === null || lst[i] > a)){\n\
    \            a = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    let\
    \ a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(a == null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a === null){\n              \
    \  a = lst[i];\n            }\n            else if(lst[i] > a){\n            \
    \    a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n   \
    \         if(b === null){\n                b = lst[i];\n            }\n      \
    \      else if(lst[i] < b){\n                b = lst[i];\n            }\n    \
    \    }\n    }\n    return [a, b];\n}\n", "    let neg = lst.filter(x => x < 0).sort((a,\
    \ b) => b - a);\n    let pos = lst.filter(x => x > 0).sort((a, b) => a - b);\n\
    \    return [neg[0], pos[0]];\n}\n", "    let a = null;\n    let b = null;\n \
    \   for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n          \
    \  if(a == null){\n                a = lst[i];\n            }\n            else\
    \ if(lst[i] > a){\n                a = lst[i];\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(b == null){\n                b = lst[i];\n\
    \            }\n            else if(lst[i] < b){\n                b = lst[i];\n\
    \            }\n        }\n    }\n    return [a, b];\n}\n", "    let largestNegative\
    \ = null;\n    let smallestPositive = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largestNegative === null || lst[i]\
    \ > largestNegative){\n                largestNegative = lst[i];\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallestPositive\
    \ === null || lst[i] < smallestPositive){\n                smallestPositive =\
    \ lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "  var a = null;\n  var b = null;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < 0 && (a == null || lst[i] > a)){\n      a = lst[i];\n    }\n\
    \    if(lst[i] > 0 && (b == null || lst[i] < b)){\n      b = lst[i];\n    }\n\
    \  }\n  return [a, b];\n}\n", "    var a = null;\n    var b = null;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null){\n                b = lst[i];\n           \
    \ }\n            else if(lst[i] < b){\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "    let largest = null;\n\
    \    let smallest = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest === null){\n                largest = lst[i];\n\
    \            }\n            else if(lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(smallest === null){\n                smallest = lst[i];\n            }\n\
    \            else if(lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var positive = null;\n    var negative = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0){\n            if(positive == null){\n        \
    \        positive = lst[i];\n            }\n            else if(lst[i] < positive){\n\
    \                positive = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ < 0){\n            if(negative == null){\n                negative = lst[i];\n\
    \            }\n            else if(lst[i] > negative){\n                negative\
    \ = lst[i];\n            }\n        }\n    }\n    return [negative, positive];\n\
    }\n", "    let smallest = null;\n    let largest = null;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > 0){\n            if(smallest === null){\n\
    \                smallest = lst[i];\n            }\n            else if(lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \        else if(lst[i] < 0){\n            if(largest === null){\n           \
    \     largest = lst[i];\n            }\n            else if(lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    if(lst.length == 0){\n        return [null,\
    \ null];\n    }\n    var max = null;\n    var min = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(max == null){\n\
    \                max = lst[i];\n            }\n            else if(lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(min == null){\n                min = lst[i];\n       \
    \     }\n            else if(lst[i] < min){\n                min = lst[i];\n \
    \           }\n        }\n    }\n    return [max, min];\n}\n", "    if(lst.length\
    \ == 0){\n        return [null, null];\n    }\n    var largest = null;\n    var\
    \ smallest = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(largest == null){\n                largest = lst[i];\n\
    \            }\n            else if(lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n        \
    \    if(smallest == null){\n                smallest = lst[i];\n            }\n\
    \            else if(lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var min = null;\n    var max = null;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > 0){\n            if(min == null || lst[i] < min){\n     \
    \           min = lst[i];\n            }\n        }\n        else if(lst[i] <\
    \ 0){\n            if(max == null || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var pos =\
    \ null;\n    var neg = null;\n    for(var i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] > 0 && (pos == null || lst[i] < pos)){\n            pos = lst[i];\n\
    \        }\n        if(lst[i] < 0 && (neg == null || lst[i] > neg)){\n       \
    \     neg = lst[i];\n        }\n    }\n    return [neg, pos];\n}\n", "  var pos\
    \ = null;\n  var neg = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ > 0 && (pos == null || lst[i] < pos)){\n      pos = lst[i];\n    }\n    if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n      neg = lst[i];\n    }\n  }\n  return\
    \ [neg, pos];\n}\n", "  var pos = null;\n  var neg = null;\n  for(var i = 0; i\
    \ < lst.length; i++){\n    if(lst[i] > 0 && (pos == null || lst[i] < pos)){\n\
    \      pos = lst[i];\n    }\n    if(lst[i] < 0 && (neg == null || lst[i] > neg)){\n\
    \      neg = lst[i];\n    }\n  }\n  return [neg, pos];\n}\n", "    var min = null;\n\
    \    var max = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(max == null || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(min ==\
    \ null || lst[i] < min){\n                min = lst[i];\n            }\n     \
    \   }\n    }\n    return [max, min];\n}\n", "    var min = null;\n    var max\
    \ = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n\
    \            if(min == null || lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n        else if(lst[i] < 0){\n            if(max ==\
    \ null || lst[i] > max){\n                max = lst[i];\n            }\n     \
    \   }\n    }\n    return [max, min];\n}\n", "    var a = null;\n    var b = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(a == null){\n                a = lst[i];\n            }\n            else\
    \ if(lst[i] > a){\n                a = lst[i];\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(b == null){\n                b = lst[i];\n\
    \            }\n            else if(lst[i] < b){\n                b = lst[i];\n\
    \            }\n        }\n    }\n    return [a, b];\n}\n", "    let neg = lst.filter(x\
    \ => x < 0);\n    let pos = lst.filter(x => x > 0);\n    let a = neg.length >\
    \ 0 ? Math.max(...neg) : null;\n    let b = pos.length > 0 ? Math.min(...pos)\
    \ : null;\n    return [a, b];\n}\n", "    let neg = [];\n    let pos = [];\n \
    \   for (let i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n        \
    \    neg.push(lst[i]);\n        }\n        else if (lst[i] > 0){\n           \
    \ pos.push(lst[i]);\n        }\n    }\n    if (neg.length == 0){\n        neg\
    \ = None;\n    }\n    else{\n        neg = Math.max(...neg);\n    }\n    if (pos.length\
    \ == 0){\n        pos = None;\n    }\n    else{\n        pos = Math.min(...pos);\n\
    \    }\n    return (neg, pos);\n}\n", "    var a = [];\n    var b = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            a.push(lst[i]);\n\
    \        }\n        else if(lst[i] > 0){\n            b.push(lst[i]);\n      \
    \  }\n    }\n    if(a.length == 0){\n        a = null;\n    }\n    else{\n   \
    \     a = Math.max(...a);\n    }\n    if(b.length == 0){\n        b = null;\n\
    \    }\n    else{\n        b = Math.min(...b);\n    }\n    return [a, b];\n}\n",
  "    let pos = lst.filter(x => x > 0);\n    let neg = lst.filter(x => x < 0);\n\
    \    if (pos.length === 0 && neg.length === 0) {\n        return [null, null];\n\
    \    } else if (pos.length === 0) {\n        return [Math.max(...neg), null];\n\
    \    } else if (neg.length === 0) {\n        return [null, Math.min(...pos)];\n\
    \    } else {\n        return [Math.max(...neg), Math.min(...pos)];\n    }\n}\n",
  "  var a = lst.filter(function(x){return x < 0}).sort(function(a,b){return a-b}).pop();\n\
    \  var b = lst.filter(function(x){return x > 0}).sort(function(a,b){return a-b}).shift();\n\
    \  return [a,b];\n}\n", "    var a = lst.filter(function(x){return x < 0}).sort(function(a,b){return\
    \ a-b}).pop();\n    var b = lst.filter(function(x){return x > 0}).sort(function(a,b){return\
    \ a-b}).shift();\n    return [a,b];\n}\n", "    let neg = lst.filter(x => x <\
    \ 0);\n    let pos = lst.filter(x => x > 0);\n    if (neg.length === 0 || pos.length\
    \ === 0) {\n        return [null, null];\n    }\n    return [Math.max(...neg),\
    \ Math.min(...pos)];\n}\n", "    var pos = null;\n    var neg = null;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(neg ==\
    \ null || lst[i] > neg){\n                neg = lst[i];\n            }\n     \
    \   }\n        else if(lst[i] > 0){\n            if(pos == null || lst[i] < pos){\n\
    \                pos = lst[i];\n            }\n        }\n    }\n    return [neg,\
    \ pos];\n}\n", "    if(lst.length === 0) return [null, null];\n    let negative\
    \ = lst.filter(x => x < 0);\n    let positive = lst.filter(x => x > 0);\n    if(negative.length\
    \ === 0) negative = null;\n    else negative = Math.max(...negative);\n    if(positive.length\
    \ === 0) positive = null;\n    else positive = Math.min(...positive);\n    return\
    \ [negative, positive];\n}\n", "    var pos = [];\n    var neg = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n            pos.push(lst[i]);\n\
    \        }\n        else if(lst[i] < 0){\n            neg.push(lst[i]);\n    \
    \    }\n    }\n    if(pos.length == 0){\n        pos = null;\n    }\n    else{\n\
    \        pos = Math.min(...pos);\n    }\n    if(neg.length == 0){\n        neg\
    \ = null;\n    }\n    else{\n        neg = Math.max(...neg);\n    }\n    return\
    \ [neg, pos];\n}\n", "    var a = lst.filter(function(x){return x < 0});\n   \
    \ var b = lst.filter(function(x){return x > 0});\n    return (a.length > 0 ? Math.max.apply(null,\
    \ a) : null, b.length > 0 ? Math.min.apply(null, b) : null);\n}\n", "    let a\
    \ = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] < 0){\n            if(a == null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    var neg = [];\n    var pos = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            neg.push(lst[i]);\n        }\n \
    \       else if(lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n\
    \    if(neg.length > 0){\n        neg.sort(function(a, b){return a - b});\n  \
    \      neg = neg[neg.length - 1];\n    }\n    else{\n        neg = null;\n   \
    \ }\n    if(pos.length > 0){\n        pos.sort(function(a, b){return a - b});\n\
    \        pos = pos[0];\n    }\n    else{\n        pos = null;\n    }\n    return\
    \ [neg, pos];\n}\n", "    var a = null;\n    var b = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null){\n                b = lst[i];\n           \
    \ }\n            else if(lst[i] < b){\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "    let a = null;\n    let\
    \ b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0 &&\
    \ (b === null || lst[i] < b)){\n            b = lst[i];\n        }\n        if(lst[i]\
    \ < 0 && (a === null || lst[i] > a)){\n            a = lst[i];\n        }\n  \
    \  }\n    return [a, b];\n}\n", "    var neg = null;\n    var pos = null;\n  \
    \  for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n           \
    \ if(neg === null || lst[i] > neg){\n                neg = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(pos === null ||\
    \ lst[i] < pos){\n                pos = lst[i];\n            }\n        }\n  \
    \  }\n    return [neg, pos];\n}\n", "    var pos = null;\n    var neg = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (pos == null\
    \ || lst[i] < pos)){\n            pos = lst[i];\n        }\n        if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n            neg = lst[i];\n        }\n\
    \    }\n    return [neg, pos];\n}\n", "    if(lst.length == 0){\n        return\
    \ [null, null];\n    }\n    let min = lst[0];\n    let max = lst[0];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \        }\n        if(lst[i] < min){\n            min = lst[i];\n        }\n\
    \    }\n    return [min, max];\n}\n", "    let a = null;\n    let b = null;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(a == null || lst[i] > a){\n                a = lst[i];\n            }\n\
    \        }\n        else if(lst[i] > 0){\n            if(b == null || lst[i] <\
    \ b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "    let neg = lst.filter(x => x < 0).sort((a, b) => b - a);\n\
    \    let pos = lst.filter(x => x > 0).sort((a, b) => a - b);\n    return [neg[0],\
    \ pos[0]];\n}\n", "    var a = null;\n    var b = null;\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null || lst[i]\
    \ > a){\n                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null || lst[i] < b){\n                b = lst[i];\n\
    \            }\n        }\n    }\n    return [a, b];\n}\n", "    let a = null;\n\
    \    let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a === null){\n                a = lst[i];\n          \
    \  }\n            else if(lst[i] > a){\n                a = lst[i];\n        \
    \    }\n        }\n        else if(lst[i] > 0){\n            if(b === null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a == null){\n               \
    \ a = lst[i];\n            }\n            else if(lst[i] > a){\n             \
    \   a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(b == null){\n                b = lst[i];\n            }\n        \
    \    else if(lst[i] < b){\n                b = lst[i];\n            }\n      \
    \  }\n    }\n    return [a, b];\n}\n", "    var largest = null;\n    var smallest\
    \ = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(largest == null){\n                largest = lst[i];\n       \
    \     }\n            else if(lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(smallest\
    \ == null){\n                smallest = lst[i];\n            }\n            else\
    \ if(lst[i] < smallest){\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}", "    var neg = [];\n \
    \   var pos = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n        else if(lst[i] > 0){\n\
    \            pos.push(lst[i]);\n        }\n    }\n    if(neg.length == 0){\n \
    \       neg = null;\n    }\n    else{\n        neg = Math.max(...neg);\n    }\n\
    \    if(pos.length == 0){\n        pos = null;\n    }\n    else{\n        pos\
    \ = Math.min(...pos);\n    }\n    return [neg, pos];\n}\n", "    var a = null;\n\
    \    var b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let neg = [];\n    let pos = [];\n    for (let i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n\
    \        else if (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n   \
    \ }\n    if (neg.length == 0){\n        neg = None;\n    }\n    else{\n      \
    \  neg = Math.max(...neg);\n    }\n    if (pos.length == 0){\n        pos = None;\n\
    \    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return (neg, pos);\n\
    }\n", "    var a = null;\n    var b = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0 && (b == null || lst[i] < b)){\n            b =\
    \ lst[i];\n        }\n        if(lst[i] < 0 && (a == null || lst[i] > a)){\n \
    \           a = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var\
    \ min = null;\n    var max = null;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > 0){\n            if(min == null){\n                min =\
    \ lst[i];\n            }\n            else if(lst[i] < min){\n               \
    \ min = lst[i];\n            }\n        }\n        else if(lst[i] < 0){\n    \
    \        if(max == null){\n                max = lst[i];\n            }\n    \
    \        else if(lst[i] > max){\n                max = lst[i];\n            }\n\
    \        }\n    }\n    return [max, min];\n}\n", "    let pos = null;\n    let\
    \ neg = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0\
    \ && (pos === null || lst[i] < pos)){\n            pos = lst[i];\n        }\n\
    \        if(lst[i] < 0 && (neg === null || lst[i] > neg)){\n            neg =\
    \ lst[i];\n        }\n    }\n    return [neg, pos];\n}\n", "    let a = null;\n\
    \    let b = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "  var pos = [];\n  var neg = [];\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > 0){\n      pos.push(lst[i]);\n    }\n    else if (lst[i]\
    \ < 0){\n      neg.push(lst[i]);\n    }\n  }\n  if (pos.length == 0 && neg.length\
    \ == 0){\n    return [null, null];\n  }\n  else if (pos.length == 0){\n    return\
    \ [Math.max.apply(null, neg), null];\n  }\n  else if (neg.length == 0){\n    return\
    \ [null, Math.min.apply(null, pos)];\n  }\n  else{\n    return [Math.max.apply(null,\
    \ neg), Math.min.apply(null, pos)];\n  }\n}\n", "    let largestNegative = null;\n\
    \    let smallestPositive = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(largestNegative === null){\n        \
    \        largestNegative = lst[i];\n            }\n            else if(lst[i]\
    \ > largestNegative){\n                largestNegative = lst[i];\n           \
    \ }\n        }\n        else if(lst[i] > 0){\n            if(smallestPositive\
    \ === null){\n                smallestPositive = lst[i];\n            }\n    \
    \        else if(lst[i] < smallestPositive){\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let maxNeg = null;\n    let minPos = null;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] < 0){\n            if(maxNeg == null ||\
    \ lst[i] > maxNeg){\n                maxNeg = lst[i];\n            }\n       \
    \ }\n        else if(lst[i] > 0){\n            if(minPos == null || lst[i] < minPos){\n\
    \                minPos = lst[i];\n            }\n        }\n    }\n    return\
    \ [maxNeg, minPos];\n}\n", "    let a = null;\n    let b = null;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a ===\
    \ null){\n                a = lst[i];\n            }\n            else if(lst[i]\
    \ > a){\n                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b === null){\n                b = lst[i];\n          \
    \  }\n            else if(lst[i] < b){\n                b = lst[i];\n        \
    \    }\n        }\n    }\n    return [a, b];\n}\n", "  var min = null;\n  var\
    \ max = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n \
    \     if(max == null || lst[i] > max){\n        max = lst[i];\n      }\n    }\n\
    \    else if(lst[i] > 0){\n      if(min == null || lst[i] < min){\n        min\
    \ = lst[i];\n      }\n    }\n  }\n  return [max, min];\n}\n", "  var min = null;\n\
    \  var max = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n\
    \      if(max == null){\n        max = lst[i];\n      }\n      else if(lst[i]\
    \ > max){\n        max = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n \
    \     if(min == null){\n        min = lst[i];\n      }\n      else if(lst[i] <\
    \ min){\n        min = lst[i];\n      }\n    }\n  }\n  return [max, min];\n}\n",
  "    let a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(a === null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b ===\
    \ null){\n                b = lst[i];\n            }\n            else if(lst[i]\
    \ < b){\n                b = lst[i];\n            }\n        }\n    }\n    return\
    \ [a, b];\n}\n", "  let pos = lst.filter(x => x > 0);\n  let neg = lst.filter(x\
    \ => x < 0);\n  if (pos.length == 0 && neg.length == 0) {\n    return [null, null];\n\
    \  } else if (pos.length == 0) {\n    return [Math.max(...neg), null];\n  } else\
    \ if (neg.length == 0) {\n    return [null, Math.min(...pos)];\n  } else {\n \
    \   return [Math.max(...neg), Math.min(...pos)];\n  }\n}\n", "    if (lst.length\
    \ == 0) {\n        return [null, null];\n    }\n    var max = Math.max.apply(null,\
    \ lst);\n    var min = Math.min.apply(null, lst);\n    if (max < 0) {\n      \
    \  max = null;\n    }\n    if (min > 0) {\n        min = null;\n    }\n    return\
    \ [max, min];\n}\n", "    let neg = null;\n    let pos = null;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(neg ===\
    \ null || lst[i] > neg){\n                neg = lst[i];\n            }\n     \
    \   }\n        else if(lst[i] > 0){\n            if(pos === null || lst[i] < pos){\n\
    \                pos = lst[i];\n            }\n        }\n    }\n    return [neg,\
    \ pos];\n}\n", "    var neg = [];\n    var pos = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            neg.push(lst[i]);\n        }\n \
    \       else if(lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n\
    \    if(neg.length == 0){\n        neg = None;\n    }\n    else{\n        neg\
    \ = Math.max(...neg);\n    }\n    if(pos.length == 0){\n        pos = None;\n\
    \    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return [neg, pos];\n\
    }\n", "\tvar negative = [];\n\tvar positive = [];\n\tfor(var i = 0; i < lst.length;\
    \ i++){\n\t\tif(lst[i] < 0){\n\t\t\tnegative.push(lst[i]);\n\t\t}\n\t\telse if(lst[i]\
    \ > 0){\n\t\t\tpositive.push(lst[i]);\n\t\t}\n\t}\n\tif(negative.length == 0){\n\
    \t\tnegative = null;\n\t}\n\telse{\n\t\tnegative = Math.max.apply(null, negative);\n\
    \t}\n\tif(positive.length == 0){\n\t\tpositive = null;\n\t}\n\telse{\n\t\tpositive\
    \ = Math.min.apply(null, positive);\n\t}\n\treturn [negative, positive];\n}\n",
  "    let a = lst.filter(x => x < 0).sort((a, b) => b - a)[0];\n    let b = lst.filter(x\
    \ => x > 0).sort((a, b) => a - b)[0];\n    return [a, b];\n}\n", "    let a =\
    \ lst.filter(x => x < 0).sort((a, b) => a - b).pop();\n    let b = lst.filter(x\
    \ => x > 0).sort((a, b) => a - b).shift();\n    return [a, b];\n}\n", "    let\
    \ neg = [];\n    let pos = [];\n    for (let i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            neg.push(lst[i]);\n        } else if (lst[i]\
    \ > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length ==\
    \ 0){\n        neg = null;\n    } else {\n        neg = Math.max(...neg);\n  \
    \  }\n    if (pos.length == 0){\n        pos = null;\n    } else {\n        pos\
    \ = Math.min(...pos);\n    }\n    return [neg, pos];\n}\n", "    let min = null;\n\
    \    let max = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > 0){\n            if(min == null){\n                min = lst[i];\n       \
    \     }\n            else if(lst[i] < min){\n                min = lst[i];\n \
    \           }\n        }\n        else if(lst[i] < 0){\n            if(max ==\
    \ null){\n                max = lst[i];\n            }\n            else if(lst[i]\
    \ > max){\n                max = lst[i];\n            }\n        }\n    }\n  \
    \  return [max, min];\n}\n", "  var positive = lst.filter(function(x){return x\
    \ > 0});\n  var negative = lst.filter(function(x){return x < 0});\n  if (positive.length\
    \ == 0){\n    positive = null;\n  } else {\n    positive = Math.min.apply(null,\
    \ positive);\n  }\n  if (negative.length == 0){\n    negative = null;\n  } else\
    \ {\n    negative = Math.max.apply(null, negative);\n  }\n  return [negative,\
    \ positive];\n}\n", "    var neg = null;\n    var pos = null;\n    for(var i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(neg == null){\n\
    \                neg = lst[i];\n            }\n            else if(lst[i] > neg){\n\
    \                neg = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(pos == null){\n                pos = lst[i];\n       \
    \     }\n            else if(lst[i] < pos){\n                pos = lst[i];\n \
    \           }\n        }\n    }\n    return [neg, pos];\n}\n", "    var a = null;\n\
    \    var b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0){\n            if(a == null){\n                a = lst[i];\n           \
    \ }\n            else if(lst[i] > a){\n                a = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n \
    \               b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    let pos = null;\n    let neg = null;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > 0 && (pos === null || lst[i] < pos)){\n\
    \            pos = lst[i];\n        }\n        if(lst[i] < 0 && (neg === null\
    \ || lst[i] > neg)){\n            neg = lst[i];\n        }\n    }\n    return\
    \ [neg, pos];\n}\n", "    let neg = null;\n    let pos = null;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(neg == null){\n\
    \                neg = lst[i];\n            }\n            else if(lst[i] > neg){\n\
    \                neg = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(pos == null){\n                pos = lst[i];\n       \
    \     }\n            else if(lst[i] < pos){\n                pos = lst[i];\n \
    \           }\n        }\n    }\n    return [neg, pos];\n}\n", "    var pos =\
    \ null;\n    var neg = null;\n    for(var i = 0; i < lst.length; i++){\n     \
    \   if(lst[i] > 0 && (pos == null || lst[i] < pos)){\n            pos = lst[i];\n\
    \        }\n        if(lst[i] < 0 && (neg == null || lst[i] > neg)){\n       \
    \     neg = lst[i];\n        }\n    }\n    return [neg, pos];\n}\n", "    let\
    \ a = null;\n    let b = null;\n    for(let i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < 0){\n            if(a == null){\n                a = lst[i];\n\
    \            }\n            else if(lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(b == null){\n\
    \                b = lst[i];\n            }\n            else if(lst[i] < b){\n\
    \                b = lst[i];\n            }\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    var min = null;\n    var max = null;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] > 0){\n            if(min == null || lst[i]\
    \ < min){\n                min = lst[i];\n            }\n        }\n        else\
    \ if(lst[i] < 0){\n            if(max == null || lst[i] > max){\n            \
    \    max = lst[i];\n            }\n        }\n    }\n    return [max, min];\n\
    }\n", "  var largestNegative = null;\n  var smallestPositive = null;\n  for (var\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === null || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === null ||\
    \ lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
    \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n", "  var largestNegative\
    \ = null;\n  var smallestPositive = null;\n  for (var i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      if (largestNegative === null || lst[i] > largestNegative)\
    \ {\n        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (smallestPositive === null || lst[i] < smallestPositive) {\n       \
    \ smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n", "    let neg = [];\n    let pos = [];\n    for (let\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n\
    \        }\n        else if (lst[i] > 0){\n            pos.push(lst[i]);\n   \
    \     }\n    }\n    if (neg.length > 0 && pos.length > 0){\n        return [Math.max(...neg),\
    \ Math.min(...pos)];\n    }\n    else if (neg.length > 0 && pos.length === 0){\n\
    \        return [Math.max(...neg), null];\n    }\n    else if (neg.length ===\
    \ 0 && pos.length > 0){\n        return [null, Math.min(...pos)];\n    }\n   \
    \ else {\n        return [null, null];\n    }\n}\n", "    let neg = [];\n    let\
    \ pos = [];\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n\
    \            neg.push(lst[i]);\n        }\n        else if (lst[i] > 0){\n   \
    \         pos.push(lst[i]);\n        }\n    }\n    if (neg.length == 0){\n   \
    \     neg = null;\n    }\n    else{\n        neg = Math.max(...neg);\n    }\n\
    \    if (pos.length == 0){\n        pos = null;\n    }\n    else{\n        pos\
    \ = Math.min(...pos);\n    }\n    return [neg, pos];\n}\n", "    let negative\
    \ = [];\n    let positive = [];\n    for (let i = 0; i < lst.length; i++){\n \
    \       if (lst[i] < 0){\n            negative.push(lst[i]);\n        }\n    \
    \    else if (lst[i] > 0){\n            positive.push(lst[i]);\n        }\n  \
    \  }\n    if (negative.length == 0){\n        negative = None;\n    }\n    else{\n\
    \        negative = Math.max(...negative);\n    }\n    if (positive.length ==\
    \ 0){\n        positive = None;\n    }\n    else{\n        positive = Math.min(...positive);\n\
    \    }\n    return (negative, positive);\n}\n", "    let a = null;\n    let b\
    \ = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a == null){\n                a = lst[i];\n            }\n    \
    \        else if(lst[i] > a){\n                a = lst[i];\n            }\n  \
    \      }\n        else if(lst[i] > 0){\n            if(b == null){\n         \
    \       b = lst[i];\n            }\n            else if(lst[i] < b){\n       \
    \         b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "  var largest = null;\n  var smallest = null;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < 0){\n      if(largest == null || lst[i] > largest){\n\
    \        largest = lst[i];\n      }\n    }\n    else if(lst[i] > 0){\n      if(smallest\
    \ == null || lst[i] < smallest){\n        smallest = lst[i];\n      }\n    }\n\
    \  }\n  return [largest, smallest];\n}\n", "    let neg = null;\n    let pos =\
    \ null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n \
    \           if(neg === null || lst[i] > neg){\n                neg = lst[i];\n\
    \            }\n        }\n        else if(lst[i] > 0){\n            if(pos ===\
    \ null || lst[i] < pos){\n                pos = lst[i];\n            }\n     \
    \   }\n    }\n    return [neg, pos];\n}\n", "    let a = null;\n    let b = null;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(a === null){\n                a = lst[i];\n            }\n            else\
    \ if(lst[i] > a){\n                a = lst[i];\n            }\n        }\n   \
    \     else if(lst[i] > 0){\n            if(b === null){\n                b = lst[i];\n\
    \            }\n            else if(lst[i] < b){\n                b = lst[i];\n\
    \            }\n        }\n    }\n    return [a, b];\n}\n", "    let pos = null;\n\
    \    let neg = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > 0 && (pos === null || lst[i] < pos)){\n            pos = lst[i];\n       \
    \ }\n        if(lst[i] < 0 && (neg === null || lst[i] > neg)){\n            neg\
    \ = lst[i];\n        }\n    }\n    return [neg, pos];\n}\n", "  var a = null;\n\
    \  var b = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0 &&\
    \ (a == null || lst[i] > a)){\n      a = lst[i];\n    }\n    if(lst[i] > 0 &&\
    \ (b == null || lst[i] < b)){\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "    var pos = null;\n    var neg = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > 0 && (pos == null || lst[i] < pos)){\n          \
    \  pos = lst[i];\n        }\n        if(lst[i] < 0 && (neg == null || lst[i] >\
    \ neg)){\n            neg = lst[i];\n        }\n    }\n    return [neg, pos];\n\
    }\n", "    if(lst.length === 0){\n        return [null, null];\n    }\n    let\
    \ neg = null;\n    let pos = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(neg === null){\n                neg =\
    \ lst[i];\n            }\n            else if(lst[i] > neg){\n               \
    \ neg = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(pos === null){\n                pos = lst[i];\n            }\n   \
    \         else if(lst[i] < pos){\n                pos = lst[i];\n            }\n\
    \        }\n    }\n    return [neg, pos];\n}\n", "  var maxNeg = null;\n  var\
    \ minPos = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < 0){\n\
    \      if(maxNeg == null || lst[i] > maxNeg){\n        maxNeg = lst[i];\n    \
    \  }\n    }\n    else if(lst[i] > 0){\n      if(minPos == null || lst[i] < minPos){\n\
    \        minPos = lst[i];\n      }\n    }\n  }\n  return [maxNeg, minPos];\n}\n",
  "    var negative = [];\n    var positive = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            negative.push(lst[i]);\n       \
    \ }\n        else if(lst[i] > 0){\n            positive.push(lst[i]);\n      \
    \  }\n    }\n    if(negative.length == 0){\n        negative = null;\n    }\n\
    \    else{\n        negative = Math.max(...negative);\n    }\n    if(positive.length\
    \ == 0){\n        positive = null;\n    }\n    else{\n        positive = Math.min(...positive);\n\
    \    }\n    return [negative, positive];\n}\n", "    let min = null;\n    let\
    \ max = null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n\
    \            if(min == null){\n                min = lst[i];\n            }\n\
    \            else if(lst[i] < min){\n                min = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] < 0){\n            if(max == null){\n\
    \                max = lst[i];\n            }\n            else if(lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n    }\n    return [max,\
    \ min];\n}\n", "    let pos = null;\n    let neg = null;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] > 0 && (pos === null || lst[i] < pos)){\n\
    \            pos = lst[i];\n        }\n        if(lst[i] < 0 && (neg === null\
    \ || lst[i] > neg)){\n            neg = lst[i];\n        }\n    }\n    return\
    \ [neg, pos];\n}\n", "    var a = null;\n    var b = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < 0){\n            if(a == null){\n\
    \                a = lst[i];\n            }\n            else if(lst[i] > a){\n\
    \                a = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(b == null){\n                b = lst[i];\n           \
    \ }\n            else if(lst[i] < b){\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "    var a = null;\n    var\
    \ b = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n\
    \            if(a == null){\n                a = lst[i];\n            }\n    \
    \        else if(lst[i] > a){\n                a = lst[i];\n            }\n  \
    \      }\n        else if(lst[i] > 0){\n            if(b == null){\n         \
    \       b = lst[i];\n            }\n            else if(lst[i] < b){\n       \
    \         b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "    var largest = null;\n    var smallest = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(largest == null){\n         \
    \       largest = lst[i];\n            }\n            else if(lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ > 0){\n            if(smallest == null){\n                smallest = lst[i];\n\
    \            }\n            else if(lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let neg = [];\n    let pos = [];\n    for (let i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n\
    \        else if (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n   \
    \ }\n    if (neg.length == 0){\n        neg = null;\n    }\n    else{\n      \
    \  neg = Math.max(...neg);\n    }\n    if (pos.length == 0){\n        pos = null;\n\
    \    }\n    else{\n        pos = Math.min(...pos);\n    }\n    return [neg, pos];\n\
    }\n", "    var a = null;\n    var b = null;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < 0){\n            if(a == null){\n               \
    \ a = lst[i];\n            }\n            else if(lst[i] > a){\n             \
    \   a = lst[i];\n            }\n        }\n        else if(lst[i] > 0){\n    \
    \        if(b == null){\n                b = lst[i];\n            }\n        \
    \    else if(lst[i] < b){\n                b = lst[i];\n            }\n      \
    \  }\n    }\n    return [a, b];\n}\n", "    var pos = null;\n    var neg = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (pos == null\
    \ || lst[i] < pos)){\n            pos = lst[i];\n        }\n        if(lst[i]\
    \ < 0 && (neg == null || lst[i] > neg)){\n            neg = lst[i];\n        }\n\
    \    }\n    return [neg, pos];\n}\n", "    let min = null;\n    let max = null;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n         \
    \   if(max === null || lst[i] > max){\n                max = lst[i];\n       \
    \     }\n        }\n        else if(lst[i] > 0){\n            if(min === null\
    \ || lst[i] < min){\n                min = lst[i];\n            }\n        }\n\
    \    }\n    return [max, min];\n}\n", "    var a = null;\n    var b = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0 && (b == null\
    \ || lst[i] < b)){\n            b = lst[i];\n        }\n        if(lst[i] < 0\
    \ && (a == null || lst[i] > a)){\n            a = lst[i];\n        }\n    }\n\
    \    return [a, b];\n}\n", "    var positive = null;\n    var negative = null;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > 0){\n         \
    \   if(positive == null || lst[i] < positive){\n                positive = lst[i];\n\
    \            }\n        }\n        else if(lst[i] < 0){\n            if(negative\
    \ == null || lst[i] > negative){\n                negative = lst[i];\n       \
    \     }\n        }\n    }\n    return [negative, positive];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

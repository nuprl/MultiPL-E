name: HumanEval_13_greatest_common_divisor
language: javascript
prompt: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
  \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a,\
  \ b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
  \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
  \ 60),12);\n}\n\ntest();"
completions: ["    if (a === 0) return b;\n    if (b === 0) return a;\n    if (a ===\
    \ b) return a;\n    if (a > b) return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}\n", "    if(a\
    \ == 0 || b == 0){\n        return a + b;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0) return b;\n    if (b == 0) return a;\n\
    \    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a -\
    \ b, b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if(a < b){\n\
    \        var temp = a;\n        a = b;\n        b = temp;\n    }\n    if(a % b\
    \ == 0){\n        return b;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n\
    \        return a;\n    if (a == b)\n        return a;\n    if (a > b)\n     \
    \   return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0 || b == 0)\n        return a + b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0 || b === 0) {\n        return a + b;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if (a == 0 || b == 0) {\n     \
    \   return a + b;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    var divisor = 2,\n\
    \        greatestDivisor = 1;\n\n    //if u pass a -ve number this will not work.\
    \ fix it dude!!\n    if (a < 2 || b < 2)\n        return 1;\n\n    while(a >=\
    \ divisor && b >= divisor){\n        if(a %divisor == 0 && b% divisor ==0){\n\
    \            greatestDivisor = divisor;\n        }\n        divisor++;\n    }\n\
    \    return greatestDivisor;\n}\n", "  if (a === 0) {\n    return b;\n  }\n  if\
    \ (b === 0) {\n    return a;\n  }\n  if (a > b) {\n    return greatest_common_divisor(a\
    \ % b, b);\n  } else {\n    return greatest_common_divisor(a, b % a);\n  }\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if(a === 0 || b === 0){\n        return a + b;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n", "    if (a < b) {\n    \
    \    var temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b ==\
    \ 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0) {\n        return b;\n    }\n    if (b\
    \ == 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0) {\n        return a;\n    }\n    else {\n     \
    \   return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if(a == 0 ||\
    \ b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0){\n        return b;\n    }\n    if (b == 0){\n\
    \        return a;\n    }\n    if (a == b){\n        return a;\n    }\n    if\
    \ (a > b){\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0) {\n        return\
    \ b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a > b) {\n\
    \        return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a == 0 || b == 0)\
    \ {\n        return a + b;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a ==\
    \ b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(a === 0) return\
    \ b;\n    if(b === 0) return a;\n    if(a === b) return a;\n    if(a > b) return\
    \ greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a, b-a);\n\
    }\n", "    if (a == 0 || b == 0) {\n        return a + b;\n    }\n    if (a >\
    \ b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n    \
    \    return greatest_common_divisor(a, b % a);\n    }\n}\n", "    var divisor\
    \ = 2,\n        greatestDivisor = 1;\n\n    //if u pass a -ve number this will\
    \ not work. fix it dude!!\n    if (a < 2 || b < 2)\n        return 1;\n\n    while(a\
    \ >= divisor && b >= divisor){\n        if(a %divisor == 0 && b% divisor ==0){\n\
    \            greatestDivisor = divisor;\n        }\n        divisor++;\n    }\n\
    \    return greatestDivisor;\n}\n", "    if (b == 0) {\n        return a;\n  \
    \  } else {\n        return greatest_common_divisor(b, a % b);\n    }\n}\n", " \
    \   if (a < b) {\n        var temp = a;\n        a = b;\n        b = temp;\n \
    \   }\n    while (b != 0) {\n        var temp = a % b;\n        a = b;\n     \
    \   b = temp;\n    }\n    return a;\n}\n", "    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if\
    \ (a > b)\n        return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(b == 0){\n \
    \       return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if(a == 0 || b == 0){\n        return a + b;\n    }\n    else{\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a === 0) {\n     \
    \   return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a\
    \ === b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a < b) {\n        var temp = a;\n        a = b;\n  \
    \      b = temp;\n    }\n    while (b != 0) {\n        var temp = a % b;\n   \
    \     a = b;\n        b = temp;\n    }\n    return a;\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (a === 0 || b ===\
    \ 0) {\n        return a + b;\n    }\n    return greatest_common_divisor(b, a\
    \ % b);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n \
    \       return a;\n    return greatest_common_divisor(b, a % b);\n}\n", "    if(a\
    \ < b){\n        let temp = a;\n        a = b;\n        b = temp;\n    }\n   \
    \ let r = a % b;\n    while(r != 0){\n        a = b;\n        b = r;\n       \
    \ r = a % b;\n    }\n    return b;\n}\n", "    if (a < b) {\n        var temp\
    \ = a;\n        a = b;\n        b = temp;\n    }\n    while (b != 0) {\n     \
    \   var temp = a % b;\n        a = b;\n        b = temp;\n    }\n    return a;\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a === 0) {\n\
    \        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if(a ==\
    \ 0 || b == 0){\n        return a + b;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n\
    \        return a;\n    if (a == b)\n        return a;\n    if (a > b)\n     \
    \   return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0 || b == 0) {\n        return a + b;\n    }\n  \
    \  if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ == 0 || b == 0)\n        return a + b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a, b-a);\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a === 0) {\n\
    \        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if\
    \ (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n\
    \        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a ==\
    \ 0 || b == 0) {\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if(a == 0 || b == 0){\n        return a + b;\n    }\n  \
    \  return greatest_common_divisor(b, a % b);\n}\n", "    if(a === 0 || b === 0){\n\
    \        return 0;\n    }\n    if(a === b){\n        return a;\n    }\n    if(a\
    \ > b){\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);\n}\n", "    if (a === 0) return b;\n    if\
    \ (b === 0) return a;\n    if (a === b) return a;\n    if (a > b) return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (b ==\
    \ 0) {\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a === 0) return b;\n    if (b === 0) return a;\n    if (a === b)\
    \ return a;\n    if (a > b) return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n        return a;\n\
    \    else\n        return greatest_common_divisor(b, a % b);\n}\n", "    if (a\
    \ == 0 || b == 0) {\n        return 0;\n    }\n    if (a == b) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a\
    \ == b){\n        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if(a\
    \ == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n        return\
    \ a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n       \
    \ return a;\n    else\n        return greatest_common_divisor(b, a % b);\n}\n",
  "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return\
    \ a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a % b, b);\n\
    \    } else {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n",
  "\tif (a < b) {\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\twhile (b !=\
    \ 0) {\n\t\tvar temp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\treturn a;\n}\n",
  "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "\tif (b == 0)\n\t\t\
    return a;\n\telse\n\t\treturn greatest_common_divisor(b, a % b);\n}\n", "    if(a\
    \ === 0) return b;\n    if(b === 0) return a;\n    if(a === b) return a;\n   \
    \ if(a > b) return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0 || b == 0)\n        return a + b;\n    else\n \
    \       return greatest_common_divisor(b, a % b);\n}\n", "    if (a < b) {\n \
    \       var temp = a;\n        a = b;\n        b = temp;\n    }\n    while (b\
    \ != 0) {\n        var temp = a % b;\n        a = b;\n        b = temp;\n    }\n\
    \    return a;\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b\
    \ === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if(a === 0){\n        return b;\n    }\n    if(b === 0){\n\
    \        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    else{\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a < b) {\n        var temp = a;\n        a = b;\n     \
    \   b = temp;\n    }\n    while (b != 0) {\n        var temp = a % b;\n      \
    \  a = b;\n        b = temp;\n    }\n    return a;\n}\n", "    //Your code here\n\
    \    if (a == 0 || b == 0) {\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    // TODO: Implement this function\n    var divisor = 2,\n\
    \        greatestDivisor = 1;\n\n    if (a < 2 || b < 2)\n        return 1;\n\n\
    \    while (a >= divisor && b >= divisor) {\n        if (a % divisor == 0 && b\
    \ % divisor == 0) {\n            greatestDivisor = divisor;\n        }\n     \
    \   divisor++;\n    }\n    return greatestDivisor;\n}\n", "    if (a % b == 0)\
    \ {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if(a < b){\n        var temp = a;\n        a = b;\n\
    \        b = temp;\n    }\n    while(b != 0){\n        var temp = a % b;\n   \
    \     a = b;\n        b = temp;\n    }\n    return a;\n}\n", "    if (a < b) {\n\
    \        var temp = a;\n        a = b;\n        b = temp;\n    }\n    while (b\
    \ != 0) {\n        var temp = a % b;\n        a = b;\n        b = temp;\n    }\n\
    \    return a;\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n \
    \       return a;\n    if (a == b)\n        return a;\n    if (a > b)\n      \
    \  return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a === 0) return b;\n    if (b === 0) return a;\n    if\
    \ (a === b) return a;\n    if (a > b) return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < 0) a = -a;\n\
    \    if (b < 0) b = -b;\n    if (a == 0) return b;\n    if (b == 0) return a;\n\
    \    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a -\
    \ b, b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    var divisor = 2,\n  \
    \      greatestDivisor = 1;\n\n    //if u pass a -ve number this will not work.\
    \ fix it dude!!\n    if (a < 2 || b < 2)\n        return 1;\n\n    while(a >=\
    \ divisor && b >= divisor){\n        if(a %divisor == 0 && b% divisor ==0){\n\
    \            greatestDivisor = divisor;\n        }\n        divisor++;\n    }\n\
    \    return greatestDivisor;\n}\n", "    if (a == 0)\n        return b;\n    while\
    \ (b != 0) {\n        if (a > b)\n            a = a - b;\n        else\n     \
    \       b = b - a;\n    }\n    return a;\n}\n", "    if (a === 0) {\n        return\
    \ b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a > b) {\n\
    \        return greatest_common_divisor(a % b, b);\n    } else {\n        return\
    \ greatest_common_divisor(a, b % a);\n    }\n}\n", "    if(b == 0){\n        return\
    \ a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if(a >\
    \ b){\n        var temp = a;\n        a = b;\n        b = temp;\n    }\n    if(a\
    \ == 0){\n        return b;\n    }\n    return greatest_common_divisor(b % a,\
    \ a);\n}\n", "    if (a == 0 || b == 0) {\n        return a + b;\n    }\n    else\
    \ {\n        return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a\
    \ % b == 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0)\n        return b;\n    return greatest_common_divisor(b\
    \ % a, a);\n}\n", "    if (a == 0 || b == 0) {\n        return a + b;\n    }\n\
    \    return greatest_common_divisor(b, a % b);\n}\n", "    if (b == 0)\n     \
    \   return a;\n    else\n        return greatest_common_divisor(b, a % b);\n}\n",
  "    if(a == 0 || b == 0){\n        return a + b;\n    }\n    if(a > b){\n     \
    \   return greatest_common_divisor(a % b, b);\n    }\n    else{\n        return\
    \ greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a == 0)\n        return\
    \ b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n\
    \    if (a > b)\n        return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0) {\n        return a;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (a == 0)\
    \ {\n        return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a\
    \ == 0)\n        return b;\n    return greatest_common_divisor(b % a, a);\n}\n",
  "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    // TODO: implement this function\n    var gcd = 1;\n   \
    \ for (var i = 1; i <= a && i <= b; i++) {\n        if (a % i == 0 && b % i ==\
    \ 0) {\n            gcd = i;\n        }\n    }\n    return gcd;\n}\n", "    if\
    \ (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if (a ==\
    \ b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(a == 0 || b\
    \ == 0){\n        return a + b;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "\tif(a == 0 || b == 0){\n\t\treturn 0;\n\t}\n\tif(a ==\
    \ b){\n\t\treturn a;\n\t}\n\tif(a > b){\n\t\treturn greatest_common_divisor(a-b,\
    \ b);\n\t}\n\treturn greatest_common_divisor(a, b-a);\n}\n", "  //Your code here\n\
    }\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n    \
    \    return a;\n    }\n    if (a === b) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);\n}\n", "    if(a == 0 || b == 0){\n     \
    \   return a + b;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n    if\
    \ (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a - b, b);\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a < b) {\n    \
    \    let temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b ==\
    \ 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (b == 0) {\n        return a;\n    } else {\n       \
    \ return greatest_common_divisor(b, a % b);\n    }\n}\n", "    if(a == 0) return\
    \ b;\n    if(b == 0) return a;\n    if(a == b) return a;\n    if(a > b) return\
    \ greatest_common_divisor(a-b, b);\n    if(a < b) return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    var divisor = 2, \n        greatestDivisor = 1;\n\n    //if\
    \ u pass a -ve number this will not work. fix it dude!!\n    if (a < 2 || b <\
    \ 2)\n        return 1;\n    \n    while(a >= divisor && b >= divisor){\n    \
    \    if(a %divisor == 0 && b% divisor ==0){\n            greatestDivisor = divisor;\
    \      \n        }\n       divisor++;\n    }\n    return greatestDivisor;\n}\n",
  "    if(a == 0 || b == 0){\n        return 0;\n    }\n    if(a == b){\n        return\
    \ a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a - b, b);\n\
    \    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n       \
    \ return a;\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (a <\
    \ b) {\n        var temp = a;\n        a = b;\n        b = temp;\n    }\n    var\
    \ r = a % b;\n    while (r != 0) {\n        a = b;\n        b = r;\n        r\
    \ = a % b;\n    }\n    return b;\n}\n", "    if (b == 0) {\n        return a;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if(a === 0 ||\
    \ b === 0){\n        return 0;\n    }\n    if(a < 0){\n        a = -a;\n    }\n\
    \    if(b < 0){\n        b = -b;\n    }\n    if(a === b){\n        return a;\n\
    \    }\n    if(a > b){\n        return greatest_common_divisor(a - b, b);\n  \
    \  }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0 ||\
    \ b == 0) {\n        return a + b;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if(a === 0 || b === 0){\n        return a + b;\n    }\n   \
    \ if(a > b){\n        return greatest_common_divisor(a % b, b);\n    }\n    else{\n\
    \        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if(b ==\
    \ 0){\n        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a < b) {\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while (b != 0) {\n        var temp = a % b;\n        a = b;\n    \
    \    b = temp;\n    }\n    return a;\n}\n", "    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if\
    \ (a > b)\n        return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(a === 0) return\
    \ b;\n    if(b === 0) return a;\n    if(a === b) return a;\n    if(a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n    if\
    \ (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    //YOUR CODE HERE\n    if (a == 0 || b == 0) {\n        return\
    \ a + b;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a %\
    \ b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n  \
    \  }\n}\n", "\tif (a == 0)\n\t\treturn b;\n\tif (b == 0)\n\t\treturn a;\n\tif\
    \ (a == b)\n\t\treturn a;\n\tif (a > b)\n\t\treturn greatest_common_divisor(a-b,\
    \ b);\n\treturn greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n   \
    \     return a;\n    return greatest_common_divisor(b, a % b);\n}\n", "    if\
    \ (b == 0) {\n        return a;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0 || b == 0) {\n        return a + b;\n\
    \    }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (a === 0)\
    \ {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n\
    \    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) return b;\n    if (b === 0) return a;\n   \
    \ if (a === b) return a;\n    if (a > b) return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (a < b) {\n      \
    \  var temp = a;\n        a = b;\n        b = temp;\n    }\n    if (a % b ===\
    \ 0) {\n        return b;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a == 0 || b == 0) {\n        return 0;\n    }\n\
    \    if (a == b) {\n        return a;\n    }\n    if (a > b) {\n        return\
    \ greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a === b) {\n        return a;\n    }\n\
    \    if (a > b) {\n        return greatest_common_divisor(a - b, b);\n    }\n\
    \    return greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n     \
    \   return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n        return\
    \ a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n    return\
    \ greatest_common_divisor(a, b-a);\n}\n", "    if (a == 0 || b == 0) {\n     \
    \   return 0;\n    }\n    if (a == b) {\n        return a;\n    }\n    if (a >\
    \ b) {\n        return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a, b-a);\n\
    }\n", "    if(a % b == 0){\n        return b;\n    }\n    else{\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n", "    if (a == 0) return b;\n\
    \    if (b == 0) return a;\n    if (a == b) return a;\n    if (a > b) return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(a == 0 || b\
    \ == 0){\n        return a + b;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ % b, b);\n    }\n    else{\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if(a === 0){\n        return b;\n    }\n    if(b === 0){\n\
    \        return a;\n    }\n    if(a === b){\n        return a;\n    }\n    if(a\
    \ > b){\n        return greatest_common_divisor(a - b, b);\n    }\n    return\
    \ greatest_common_divisor(a, b - a);\n}\n", "    if (a == 0)\n        return b;\n\
    \    if (b == 0)\n        return a;\n    if (a == b)\n        return a;\n    if\
    \ (a > b)\n        return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0 || b == 0)\n        return 0;\n    if (a == b)\n\
    \        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n    \
    \    return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0 || b === 0) {\n        return a + b;\n    }\n \
    \   if (a > b) {\n        return greatest_common_divisor(a % b, b);\n    } else\
    \ {\n        return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (b\
    \ == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    //TODO: implement this function\n    if (a == 0) {\n   \
    \     return b;\n    }\n    if (b == 0) {\n        return a;\n    }\n    if (a\
    \ == b) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    // Your code here\n\
    \    if (a == 0 || b == 0) {\n        return a + b;\n    }\n    if (a == b) {\n\
    \        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if(a === 0){\n\
    \        return b;\n    }\n    if(b === 0){\n        return a;\n    }\n    if(a\
    \ === b){\n        return a;\n    }\n    if(a > b){\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a === 0) {\n        return b;\n    }\n    if (b === 0) {\n        return a;\n\
    \    }\n    if (a === b) {\n        return a;\n    }\n    if (a > b) {\n     \
    \   return greatest_common_divisor(a - b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b - a);\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b ===\
    \ 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if (b === 0)\
    \ {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n", "    if (a == 0 || b == 0)\n        return 0;\n    if (a == b)\n\
    \        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a === 0) return\
    \ b;\n    if (b === 0) return a;\n    if (a === b) return a;\n    if (a > b) return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\n", "    //your code here\n}\n", "    //Your code here\n}\n", "   \
    \ if (a == 0 || b == 0) {\n        return 0;\n    }\n    if (a == b) {\n     \
    \   return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ - b, b);\n    }\n    return greatest_common_divisor(a, b - a);\n}\n", "    if\
    \ (a == 0 || b == 0)\n        return a + b;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a, b-a);\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a == 0)\n \
    \       return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n     \
    \   return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (a === 0) {\n    \
    \    return b;\n    }\n    if (b === 0) {\n        return a;\n    }\n    if (a\
    \ > b) {\n        return greatest_common_divisor(a % b, b);\n    } else {\n  \
    \      return greatest_common_divisor(a, b % a);\n    }\n}\n", "    if (a == 0)\n\
    \        return b;\n    if (b == 0)\n        return a;\n    if (a == b)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a-b, b);\n\
    \    return greatest_common_divisor(a, b-a);\n}\n", "    if (a == 0 || b == 0)\n\
    \        return 0;\n    if (a == b)\n        return a;\n    if (a > b)\n     \
    \   return greatest_common_divisor(a-b, b);\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a\
    \ - b, b);\n    return greatest_common_divisor(a, b - a);\n}\n", "    if (b ==\
    \ 0)\n        return a;\n    else\n        return greatest_common_divisor(b, a\
    \ % b);\n}\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return\
    \ a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (b == 0) {\n\
    \        return a;\n    }\n    return greatest_common_divisor(b, a % b);\n}\n",
  "    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n", "    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n", "    if (a % b == 0)\
    \ {\n        return b;\n    } else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a < b) {\n        var temp = a;\n        a =\
    \ b;\n        b = temp;\n    }\n    if (a % b == 0) {\n        return b;\n   \
    \ }\n    return greatest_common_divisor(b, a % b);\n}\n", "    if (a === 0 ||\
    \ b === 0) {\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n", "    if(a == 0 || b == 0){\n        return a + b;\n    }\n  \
    \  else{\n        return greatest_common_divisor(b, a % b);\n    }\n}\n", "  \
    \  if (b == 0) {\n        return a;\n    }\n    else {\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n", "    if (a === 0) {\n        return b;\n    }\n    if\
    \ (b === 0) {\n        return a;\n    }\n    if (a > b) {\n        return greatest_common_divisor(a\
    \ % b, b);\n    } else {\n        return greatest_common_divisor(a, b % a);\n\
    \    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_41_car_race_collision
language: javascript
results:
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpbn97ygxi.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpbn97ygxi.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1lnih2vx.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1lnih2vx.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // your code here\n    var left = [];\n    var right = [];\n    for(var i\
    \ = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n  \
    \  var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j <\
    \ n; j++){\n            if(left[i] == right[j]){\n                count++;\n \
    \           }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmppi6uj6hl.js:33:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmppi6uj6hl.js:40:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpaxudlec7.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpaxudlec7.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuar1blqj.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuar1blqj.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    var count = 0;\n    for(var i = 0; i\
    \ < n; i++){\n        for(var j = 0; j < n; j++){\n            if(i == j){\n \
    \               count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpxe1m1qw9.js:27:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpxe1m1qw9.js:34:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpspbzt9fk.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpspbzt9fk.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp5z7o8nk4.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp5z7o8nk4.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmptvsqlqgy.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmptvsqlqgy.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \t//TODO: Implement this function\n\treturn 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpqyt0vza5.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpqyt0vza5.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpp4gdrql6.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpp4gdrql6.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            if(i == j){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpo6cn13zy.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpo6cn13zy.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  // your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuh9ultdf.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpuh9ultdf.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp58bw7is5.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp58bw7is5.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpatsha5rg.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpatsha5rg.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var left = [];\n  var right = [];\n  for(var i = 0; i < n; i++){\n    left.push(i);\n\
    \    right.push(i);\n  }\n  var count = 0;\n  while(left.length > 0 && right.length\
    \ > 0){\n    var l = left.shift();\n    var r = right.shift();\n    if(l == r){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpaatr62xm.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpaatr62xm.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO:  Implement this function.\n    //Hint:  Use a priority queue.\n \
    \   var left_to_right = new PriorityQueue();\n    var right_to_left = new PriorityQueue();\n\
    \    var collision = 0;\n    for(var i = 0; i < n; i++){\n        left_to_right.enqueue(i,\
    \ i);\n        right_to_left.enqueue(i, -i);\n    }\n    while(!left_to_right.isEmpty()\
    \ && !right_to_left.isEmpty()){\n        var left = left_to_right.dequeue();\n\
    \        var right = right_to_left.dequeue();\n        if(left.priority < -right.priority){\n\
    \            collision++;\n        }\n    }\n    return collision;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = car_race_collision;\n\
    \  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n\
    \  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpkz7dchct.js:12\\n    var left_to_right = new PriorityQueue();\\\
    n                        ^\\n\\nReferenceError: PriorityQueue is not defined\\\
    n    at car_race_collision (/tmp/tmpkz7dchct.js:12:25)\\n    at test (/tmp/tmpkz7dchct.js:34:20)\\\
    n    at Object.<anonymous> (/tmp/tmpkz7dchct.js:41:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: ReferenceError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    //Hint:  You can use the fact that\
    \ the cars are infinitely sturdy to your advantage.\n    //Hint:  You can use\
    \ the fact that the cars are moving in the same speed to your advantage.\n   \
    \ //Hint:  You can use the fact that the cars are moving in the same direction\
    \ to your advantage.\n    //Hint:  You can use the fact that the cars are moving\
    \ in the same direction to your advantage.\n    //Hint:  You can use the fact\
    \ that the cars are moving in the same direction to your advantage.\n    //Hint:\
    \  You can use the fact that the cars are moving in the same direction to your\
    \ advantage.\n    //Hint:  You can use the fact that the cars are moving in the\
    \ same direction to your advantage.\n    //Hint:  You can use the fact that the\
    \ cars are moving in the same direction to your advantage.\n    //Hint:  You can\
    \ use the fact that the cars are moving in the same direction to your advantage.\n\
    \    //Hint:  You can use the fact that the cars are moving in the same direction\
    \ to your advantage.\n    //Hint:  You can use the fact that the cars are moving\
    \ in the same direction to your advantage.\n    //Hint:  You can use the fact\
    \ that the cars are moving in the same direction to your advantage.\n    //Hint:\
    \  You can use the fact that the cars are moving in the same direction to your\
    \ advantage.\n    //Hint:  You can use the fact that the cars are moving in the\
    \ same direction to your advantage.\n    //Hint:  You can use the fact that the\
    \ cars are moving in the same direction to your advantage.\n    //Hint:  You can\
    \ use the fact that the cars are moving in the same direction to your advantage.\n\
    \    //Hint:  You can use the fact that the cars are moving in the same direction\
    \ to your advantage.\n    //Hint:  You can use the fact that the cars are moving\
    \ in the same direction to your advantage.\n    //Hint:  You can use the fact\
    \ that the cars are moving in the same direction to your advantage.\n    //Hint:\
    \  You can use the fact that the cars are moving in the same direction to your\
    \ advantage.\n    //H\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpr8c0a2wt.js:44\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpn1v1djco.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpn1v1djco.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n * (n - 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpcximgmqh.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpcximgmqh.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpicihltyy.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpicihltyy.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function.\n  // Hint:  You can use a dictionary to keep\
    \ track of the cars.\n  //        The key is the car's position, and the value\
    \ is whether the car is moving\n  //        left to right (true) or right to left\
    \ (false).\n  //        You can use a dictionary to keep track of the cars.\n\
    \  //        The key is the car's position, and the value is whether the car is\
    \ moving\n  //        left to right (true) or right to left (false).\n  var cars\
    \ = {};\n  var collisions = 0;\n  for (var i = 0; i < n; i++) {\n    cars[i] =\
    \ true;\n    cars[-i] = false;\n  }\n  for (var i = 0; i < n; i++) {\n    for\
    \ (var j = 0; j < n; j++) {\n      if (cars[i] && !cars[j]) {\n        collisions++;\n\
    \      }\n    }\n  }\n  return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7kw47pzd.js:38:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp7kw47pzd.js:45:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var collisions = 0;\n    var left_to_right = [];\n    var right_to_left =\
    \ [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n     \
    \   right_to_left.push(i);\n    }\n    for(var i = 0; i < n; i++){\n        for(var\
    \ j = 0; j < n; j++){\n            if(left_to_right[i] === right_to_left[j]){\n\
    \                collisions++;\n            }\n        }\n    }\n    return collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpbyadzd3y.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpbyadzd3y.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpypolc74w.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpypolc74w.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmplq2puzwm.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmplq2puzwm.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpdxusbph2.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpdxusbph2.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    var count = 0;\n    for(var i = 0; i\
    \ < n; i++){\n        for(var j = 0; j < n; j++){\n            if(i == j){\n \
    \               count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1bolsqh7.js:27:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1bolsqh7.js:34:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            if(i == j){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp8u0f60rr.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp8u0f60rr.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \t//TODO: Implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp8upef1tu.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp8upef1tu.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1z_ho77a.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1z_ho77a.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar left = [];\n\tvar right = [];\n\tvar collisions = 0;\n\tfor(var i = 0; i\
    \ < n; i++){\n\t\tleft.push(i);\n\t\tright.push(i);\n\t}\n\tleft.sort(function(a,b){return\
    \ a-b});\n\tright.sort(function(a,b){return b-a});\n\tfor(var i = 0; i < n; i++){\n\
    \t\tif(left[i] == right[i]){\n\t\t\tcollisions++;\n\t\t}\n\t}\n\treturn collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpqttia7m_.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpqttia7m_.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpcr_3b4o_.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpcr_3b4o_.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1uxoqu77.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1uxoqu77.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmph2rcgijc.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmph2rcgijc.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp3vzl2m5c.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp3vzl2m5c.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var left = [];\n  var right = [];\n  var collisions = 0;\n  for(var i = 0;\
    \ i < n; i++){\n    left.push(i);\n    right.push(n-i);\n  }\n  for(var i = 0;\
    \ i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(left[i] === right[j]){\n\
    \        collisions++;\n      }\n    }\n  }\n  return collisions;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = car_race_collision;\n\
    \  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n\
    \  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpbpbhelm2.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpbpbhelm2.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpsjwsp1iz.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpsjwsp1iz.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp80lq5gyp.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp80lq5gyp.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var num_collisions = 0;\n    var left_to_right = [];\n    var right_to_left\
    \ = [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n   \
    \     right_to_left.push(n-i);\n    }\n    for(var i = 0; i < n; i++){\n     \
    \   for(var j = 0; j < n; j++){\n            if(left_to_right[i] === right_to_left[j]){\n\
    \                num_collisions++;\n            }\n        }\n    }\n    return\
    \ num_collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpp_1d4l1r.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpp_1d4l1r.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpjvijgmss.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpjvijgmss.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpf2tt5ay9.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpf2tt5ay9.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var left = 0;\n    var right = 0;\n    var collisions = 0;\n    for(var i\
    \ = 0; i < n; i++){\n        left += i;\n        right += n - i - 1;\n       \
    \ collisions += left + right;\n    }\n    return collisions;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = car_race_collision;\n\
    \  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n\
    \  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n3\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpa91b65bo.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpa91b65bo.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 3,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var collisions = 0;\n  var left = [];\n  var right = [];\n  for(var i = 0;\
    \ i < n; i++){\n    left.push(i);\n    right.push(i);\n  }\n  while(left.length\
    \ > 0 && right.length > 0){\n    if(left[0] === right[0]){\n      collisions++;\n\
    \      left.shift();\n      right.shift();\n    }\n    else if(left[0] < right[0]){\n\
    \      left.shift();\n    }\n    else{\n      right.shift();\n    }\n  }\n  return\
    \ collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpat7xe3w_.js:38:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpat7xe3w_.js:45:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpvs7a4lti.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpvs7a4lti.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n * (n - 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpjtj8fmkm.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpjtj8fmkm.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp09740qyt.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp09740qyt.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpsv1inhpr.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpsv1inhpr.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpdj4pd8sp.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpdj4pd8sp.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 1; i <= n; i++){\n        for(var j = n;\
    \ j >= 1; j--){\n            if(i == j){\n                count++;\n         \
    \   }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpsmi436m_.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpsmi436m_.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7nhvhayy.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp7nhvhayy.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  // TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpv6qe6cfb.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpv6qe6cfb.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO:  Implement this function.\n    //Hint:  You can use a hash table\
    \ to keep track of the cars that are moving\n    //left to right.  The key can\
    \ be the position of the car, and the value can be\n    //the speed of the car.\n\
    \    //Hint:  You can use a hash table to keep track of the cars that are moving\n\
    \    //right to left.  The key can be the position of the car, and the value can\
    \ be\n    //the speed of the car.\n    //Hint:  You can use a hash table to keep\
    \ track of the cars that are moving\n    //left to right.  The key can be the\
    \ position of the car, and the value can be\n    //the speed of the car.\n   \
    \ //Hint:  You can use a hash table to keep track of the cars that are moving\n\
    \    //right to left.  The key can be the position of the car, and the value can\
    \ be\n    //the speed of the car.\n    //Hint:  You can use a hash table to keep\
    \ track of the cars that are moving\n    //left to right.  The key can be the\
    \ position of the car, and the value can be\n    //the speed of the car.\n   \
    \ //Hint:  You can use a hash table to keep track of the cars that are moving\n\
    \    //right to left.  The key can be the position of the car, and the value can\
    \ be\n    //the speed of the car.\n    //Hint:  You can use a hash table to keep\
    \ track of the cars that are moving\n    //left to right.  The key can be the\
    \ position of the car, and the value can be\n    //the speed of the car.\n   \
    \ //Hint:  You can use a hash table to keep track of the cars that are moving\n\
    \    //right to left.  The key can be the position of the car, and the value can\
    \ be\n    //the speed of the car.\n    //Hint:  You can use a hash table to keep\
    \ track of the cars that are moving\n    //left to right.  The key can be the\
    \ position of the car, and the value can be\n    //the speed of the car.\n   \
    \ //Hint:  You can use a hash table to\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpgq65jh69.js:51\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1yyhws04.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1yyhws04.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpahu7yros.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpahu7yros.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //YOUR CODE HERE\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuk1xb0l2.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuk1xb0l2.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar count = 0;\n\tvar left = [];\n\tvar right = [];\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tleft.push(i);\n\t\tright.push(i);\n\t}\n\tfor(var i = 0; i < n; i++){\n\
    \t\tfor(var j = 0; j < n; j++){\n\t\t\tif(left[i] == right[j]){\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp2k102szd.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp2k102szd.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpp2f083bk.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpp2f083bk.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7ay62swv.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp7ay62swv.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // Your code here\n    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpp2zvpbkh.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpp2zvpbkh.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var count = 0;\n  var left = [];\n  var right = [];\n  for(var i = 0; i < n;\
    \ i++){\n    left.push(i);\n    right.push(i);\n  }\n  for(var i = 0; i < n; i++){\n\
    \    for(var j = 0; j < n; j++){\n      if(left[i] === right[j]){\n        count++;\n\
    \      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpd5n8p_np.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpd5n8p_np.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpiwva4_1b.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpiwva4_1b.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function.\n  //Hint:  You can use the fact that the\
    \ cars are infinitely strong and sturdy.\n  //Hint:  You can use the fact that\
    \ the cars are moving in the same speed.\n  //Hint:  You can use the fact that\
    \ the cars are moving in the same direction.\n  //Hint:  You can use the fact\
    \ that the cars are moving in opposite directions.\n  //Hint:  You can use the\
    \ fact that the cars are moving in opposite directions.\n  //Hint:  You can use\
    \ the fact that the cars are moving in opposite directions.\n  //Hint:  You can\
    \ use the fact that the cars are moving in opposite directions.\n  //Hint:  You\
    \ can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are moving in opposite directions.\n  //Hint:\
    \  You can use the fact that the cars are\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpdu__x9r5.js:47\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    //Hint: you can use the following function\
    \ to generate a random number between 0 and 1\n    //Math.random()\n    //Hint:\
    \ you can use the following function to generate a random integer between 0 and\
    \ n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(Math.random()*n)\n    //Hint: you can use the following\
    \ function to generate a random integer between 0 and n-1\n    //Math.floor(Math.random()*n)\n\
    \    //Hint: you can use the following function to generate a random integer between\
    \ 0 and n-1\n    //Math.floor(\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpxe021ga3.js:51\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpkv_07lnt.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpkv_07lnt.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpxzha8trg.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpxzha8trg.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var count = 0;\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n\
    \      if(i < j){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpkvtasu4b.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpkvtasu4b.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function.\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpyghsevc0.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpyghsevc0.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar left = 0;\n\tvar right = 0;\n\tvar count = 0;\n\twhile(left < n && right\
    \ < n){\n\t\tif(left == right){\n\t\t\tcount++;\n\t\t\tleft++;\n\t\t\tright++;\n\
    \t\t}\n\t\telse if(left < right){\n\t\t\tleft++;\n\t\t}\n\t\telse{\n\t\t\tright++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp9hxhc8vb.js:34:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp9hxhc8vb.js:41:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpiwocyj8i.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpiwocyj8i.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuwj14hb6.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuwj14hb6.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //YOUR CODE HERE\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpg3w21yi8.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpg3w21yi8.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var left_to_right = [];\n  var right_to_left = [];\n  var collisions = 0;\n\
    \  for(var i = 0; i < n; i++){\n    left_to_right.push(i);\n    right_to_left.push(i);\n\
    \  }\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(left_to_right[i]\
    \ === right_to_left[j]){\n        collisions++;\n      }\n    }\n  }\n  return\
    \ collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpyd_8c16a.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpyd_8c16a.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  var collisions = 0;\n  var left = [];\n\
    \  var right = [];\n  for (var i = 0; i < n; i++) {\n    left.push(i);\n    right.push(i);\n\
    \  }\n  for (var i = 0; i < n; i++) {\n    for (var j = 0; j < n; j++) {\n   \
    \   if (left[i] === right[j]) {\n        collisions++;\n      }\n    }\n  }\n\
    \  return collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpas7chs75.js:33:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpas7chs75.js:40:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmphrkhz_ss.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmphrkhz_ss.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var count = 0;\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //YOUR CODE HERE\n    var count = 0;\n    for (var i = 0; i < n; i++) {\n\
    \        for (var j = 0; j < n; j++) {\n            if (i == j) {\n          \
    \      count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = car_race_collision;\n\
    \  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n\
    \  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpikpj4_cd.js:27:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpikpj4_cd.js:34:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpeq1ifav_.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpeq1ifav_.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpntzia897.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpntzia897.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp9z0nqz68.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp9z0nqz68.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp0_gcwg8y.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp0_gcwg8y.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmprpuuuikb.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmprpuuuikb.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmptjiahe1r.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmptjiahe1r.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \t//Your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp_1a0dc0r.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp_1a0dc0r.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    var collisions = 0;\n    var left_to_right\
    \ = [];\n    var right_to_left = [];\n    for (var i = 0; i < n; i++) {\n    \
    \    left_to_right.push(i);\n        right_to_left.push(i);\n    }\n    for (var\
    \ i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if\
    \ (left_to_right[i] === right_to_left[j]) {\n                collisions++;\n \
    \           }\n        }\n    }\n    return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpxzbj_uxx.js:33:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpxzbj_uxx.js:40:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var count = 0;\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n\
    \      if(i < j){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpd8uvgw1n.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpd8uvgw1n.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpv95o4sg5.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpv95o4sg5.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    var left = [];\n    var right = [];\n    for(var i =\
    \ 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(left[i]\
    \ == right[j]){\n                count++;\n            }\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp8e3b_485.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp8e3b_485.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO:  implement this function.\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7ixtk3tw.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp7ixtk3tw.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpi3710q9r.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpi3710q9r.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar count = 0;\n\tvar left = [];\n\tvar right = [];\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tleft.push(i);\n\t\tright.push(i);\n\t}\n\tfor(var i = 0; i < n; i++){\n\
    \t\tfor(var j = 0; j < n; j++){\n\t\t\tif(left[i] == right[j]){\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpi56pv4az.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpi56pv4az.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1wsfk2u3.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1wsfk2u3.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    //TODO: implement this function\n  \
    \  var left_to_right = [];\n    var right_to_left = [];\n    var collisions =\
    \ 0;\n    for (var i = 0; i < n; i++) {\n        left_to_right.push(i);\n    \
    \    right_to_left.push(i);\n    }\n    for (var i = 0; i < n; i++) {\n      \
    \  for (var j = 0; j < n; j++) {\n            if (left_to_right[i] == right_to_left[j])\
    \ {\n                collisions++;\n            }\n        }\n    }\n    return\
    \ collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpkidmeazb.js:34:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpkidmeazb.js:41:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpul7gal7l.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpul7gal7l.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpv9u2soa9.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpv9u2soa9.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n * (n - 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp85xyy6h0.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp85xyy6h0.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    var left = [];\n    var right = [];\n    for(var i =\
    \ 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(left[i]\
    \ == right[j]){\n                count++;\n            }\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp3hpsoweo.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp3hpsoweo.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmplyl5378o.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmplyl5378o.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7pnxbgp0.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp7pnxbgp0.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpt5muaydx.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpt5muaydx.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    var left = [];\n    var right = [];\n    for(var i =\
    \ 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n    for(var\
    \ i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n            if(left[i]\
    \ === right[j]){\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpmx6o3qly.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpmx6o3qly.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \t//TODO: Implement this function.\n\t// Hint:  You can use the fact that the\
    \ cars are moving in a straight line\n\t// to simplify the problem.  For example,\
    \ you can use the fact that the cars\n\t// are moving in a straight line to simplify\
    \ the problem.  For example, you can\n\t// use the fact that the cars are moving\
    \ in a straight line to simplify the problem.\n\t// For example, you can use the\
    \ fact that the cars are moving in a straight line\n\t// to simplify the problem.\
    \  For example, you can use the fact that the cars\n\t// are moving in a straight\
    \ line to simplify the problem.  For example, you can\n\t// use the fact that\
    \ the cars are moving in a straight line to simplify the problem.\n\t// For example,\
    \ you can use the fact that the cars are moving in a straight line\n\t// to simplify\
    \ the problem.  For example, you can use the fact that the cars\n\t// are moving\
    \ in a straight line to simplify the problem.  For example, you can\n\t// use\
    \ the fact that the cars are moving in a straight line to simplify the problem.\n\
    \t// For example, you can use the fact that the cars are moving in a straight\
    \ line\n\t// to simplify the problem.  For example, you can use the fact that\
    \ the cars\n\t// are moving in a straight line to simplify the problem.  For example,\
    \ you can\n\t// use the fact that the cars are moving in a straight line to simplify\
    \ the problem.\n\t// For example, you can use the fact that the cars are moving\
    \ in a straight line\n\t// to simplify the problem.  For example, you can use\
    \ the fact that the cars\n\t// are moving in a straight line to simplify the problem.\
    \  For example, you can\n\t// use the fact that the cars are moving in a straight\
    \ line to simplify the problem.\n\t// For example, you can use the fact that the\
    \ cars are moving in a straight line\n\t// to simplify the problem.  For example,\
    \ you can use the fact that the cars\n\t// are moving in a straight line to simplify\
    \ the problem.  For example, you can\n\t// use the fact that the cars are moving\
    \ in a straight line to simplify the problem.\n\t// For example, you can use the\
    \ fact that the cars are moving in a straight line\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpx1ogqvst.js:48\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmphwp5gui1.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmphwp5gui1.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement the function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp6467bgxt.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp6467bgxt.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO:  implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmprao18h81.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmprao18h81.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpn4bqgmxu.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpn4bqgmxu.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp48m053a5.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp48m053a5.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var count = 0;\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var collisions = 0;\n    var left_to_right = [];\n    var right_to_left =\
    \ [];\n    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n     \
    \   right_to_left.push(i);\n    }\n    var left_to_right_index = 0;\n    var right_to_left_index\
    \ = 0;\n    while(left_to_right_index < left_to_right.length && right_to_left_index\
    \ < right_to_left.length){\n        if(left_to_right[left_to_right_index] ===\
    \ right_to_left[right_to_left_index]){\n            collisions++;\n          \
    \  left_to_right_index++;\n            right_to_left_index++;\n        }\n   \
    \     else if(left_to_right[left_to_right_index] < right_to_left[right_to_left_index]){\n\
    \            left_to_right_index++;\n        }\n        else{\n            right_to_left_index++;\n\
    \        }\n    }\n    return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpzgdub5k6.js:40:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpzgdub5k6.js:47:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmprn8wao8s.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmprn8wao8s.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp_oszjjnq.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp_oszjjnq.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //YOUR CODE HERE\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1vuymawp.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1vuymawp.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar count = 0;\n\tfor(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar collisions = 0;\n\tvar cars = [];\n\tfor(var i = 0; i < n; i++){\n\t\tcars.push(i);\n\
    \t}\n\tfor(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tif(cars[i]\
    \ == cars[j]){\n\t\t\t\tcollisions++;\n\t\t\t}\n\t\t}\n\t}\n\treturn collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpajj28tuz.js:30:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpajj28tuz.js:37:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpbeupxby4.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpbeupxby4.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpwmljl5v4.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpwmljl5v4.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpge_co13q.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpge_co13q.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpvkwzz9aq.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpvkwzz9aq.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var left_to_right = [];\n    var right_to_left = [];\n    var count = 0;\n\
    \    for(var i = 0; i < n; i++){\n        left_to_right.push(i);\n        right_to_left.push(i);\n\
    \    }\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n\
    \            if(left_to_right[i] === right_to_left[j]){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7s6d2e0k.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp7s6d2e0k.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpud1p4hbb.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpud1p4hbb.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpfib7ucew.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpfib7ucew.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpe0mj0v_2.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpe0mj0v_2.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp8u2c246o.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp8u2c246o.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp1o25qh3t.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp1o25qh3t.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpep96pxw0.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpep96pxw0.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp2nko6rmx.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp2nko6rmx.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp0u6v7d7y.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp0u6v7d7y.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp9kl8wgud.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp9kl8wgud.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO:  Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpr1zdry3z.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpr1zdry3z.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmps3tye3nu.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmps3tye3nu.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp8x3rstti.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp8x3rstti.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp17nl80vw.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp17nl80vw.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var collisions = 0;\n    var left = [];\n    var right = [];\n    for(var\
    \ i = 0; i < n; i++){\n        left.push(i);\n        right.push(i);\n    }\n\
    \    for(var i = 0; i < n; i++){\n        for(var j = 0; j < n; j++){\n      \
    \      if(left[i] == right[j]){\n                collisions++;\n            }\n\
    \        }\n    }\n    return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpz3t3ztma.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpz3t3ztma.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmppqt9owkv.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmppqt9owkv.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var collisions = 0;\n  var left_cars = [];\n  var right_cars = [];\n  for(var\
    \ i = 0; i < n; i++){\n    left_cars.push(i);\n    right_cars.push(i);\n  }\n\
    \  while(left_cars.length > 0 && right_cars.length > 0){\n    if(left_cars[0]\
    \ === right_cars[0]){\n      collisions++;\n      left_cars.shift();\n      right_cars.shift();\n\
    \    }\n    else if(left_cars[0] < right_cars[0]){\n      left_cars.shift();\n\
    \    }\n    else{\n      right_cars.shift();\n    }\n  }\n  return collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpysittygs.js:38:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpysittygs.js:45:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpop5xdcr0.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpop5xdcr0.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuaqu97dx.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuaqu97dx.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  //Hint: use a hash table to keep track of\
    \ the cars that are moving right to left\n  //and their positions.\n  //Hint:\
    \ use a hash table to keep track of the cars that are moving left to right\n \
    \ //and their positions.\n  //Hint: use a hash table to keep track of the cars\
    \ that are moving right to left\n  //and their positions.\n  //Hint: use a hash\
    \ table to keep track of the cars that are moving left to right\n  //and their\
    \ positions.\n  //Hint: use a hash table to keep track of the cars that are moving\
    \ right to left\n  //and their positions.\n  //Hint: use a hash table to keep\
    \ track of the cars that are moving left to right\n  //and their positions.\n\
    \  //Hint: use a hash table to keep track of the cars that are moving right to\
    \ left\n  //and their positions.\n  //Hint: use a hash table to keep track of\
    \ the cars that are moving left to right\n  //and their positions.\n  //Hint:\
    \ use a hash table to keep track of the cars that are moving right to left\n \
    \ //and their positions.\n  //Hint: use a hash table to keep track of the cars\
    \ that are moving left to right\n  //and their positions.\n  //Hint: use a hash\
    \ table to keep track of the cars that are moving right to left\n  //and their\
    \ positions.\n  //Hint: use a hash table to keep track of the cars that are moving\
    \ left to right\n  //and their positions.\n  //Hint: use a hash table to keep\
    \ track of the cars that are moving right to left\n  //and their positions.\n\
    \  //Hint: use a hash table to keep track of the cars that are moving left to\
    \ right\n  //and their positions.\n  //Hint: use a hash table to keep track of\
    \ the cars that are moving right to left\n  //and their positions.\n  //Hint:\
    \ use a hash table to keep track of the cars that are moving left to right\n \
    \ //and their positions.\n  //Hint: use a hash table to keep track of the cars\
    \ that are moving right to left\n  //and their positions.\n  //Hint: use a hash\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b'/tmp/tmpyy81hbfb.js:58\\ntest();\\n       \\n\\nSyntaxError: Unexpected\
    \ end of input\\n    at Object.compileFunction (node:vm:360:18)\\n    at wrapSafe\
    \ (node:internal/modules/cjs/loader:1049:15)\\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\\\
    n\\nNode.js v18.7.0\\n'"
  exit_code: 1
  status: SyntaxError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpxjv097m1.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpxjv097m1.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmphg4u75_r.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmphg4u75_r.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpq5vpjixz.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpq5vpjixz.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var collisions = 0;\n  var cars = [];\n  var i;\n  for(i = 0; i < n; i++){\n\
    \    cars.push(i);\n  }\n  for(i = 0; i < n; i++){\n    if(cars[i] < i){\n   \
    \   collisions++;\n    }\n  }\n  return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpyll7o0tv.js:29:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpyll7o0tv.js:36:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \treturn n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpfbwliqgg.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpfbwliqgg.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmprt56ge0_.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmprt56ge0_.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp9uxseyws.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp9uxseyws.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpow597uer.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpow597uer.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpfo20ehkg.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpfo20ehkg.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuxe4bgu8.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuxe4bgu8.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO:  Implement this function.\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpw1cj0cyw.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpw1cj0cyw.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //Your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpqe0al6vr.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpqe0al6vr.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n    return 0;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpycdafhu7.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpycdafhu7.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmphh7ja5ba.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmphh7ja5ba.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var left_to_right = [];\n  var right_to_left = [];\n  var collisions = 0;\n\
    \  for(var i = 0; i < n; i++){\n    left_to_right.push(i);\n    right_to_left.push(n-i);\n\
    \  }\n  while(left_to_right.length > 0 && right_to_left.length > 0){\n    if(left_to_right[0]\
    \ === right_to_left[0]){\n      collisions++;\n      left_to_right.shift();\n\
    \      right_to_left.shift();\n    }\n    else if(left_to_right[0] < right_to_left[0]){\n\
    \      left_to_right.shift();\n    }\n    else{\n      right_to_left.shift();\n\
    \    }\n  }\n  return collisions;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpmgrr7krh.js:38:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpmgrr7krh.js:45:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //Your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpgisg212p.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpgisg212p.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp5sy86yw6.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmp5sy86yw6.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpa41h3coq.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpa41h3coq.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO:  Implement this function.\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpw0mmxxtz.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpw0mmxxtz.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpeb3gj9r3.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpeb3gj9r3.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpr7zl_sts.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpr7zl_sts.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //YOUR CODE HERE\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmplrz223eq.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmplrz223eq.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //YOUR CODE HERE\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp3f5k_65g.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp3f5k_65g.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmprbovz24z.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmprbovz24z.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var left = [];\n    var right = [];\n    for(var i = 0; i < n; i++){\n  \
    \      left.push(i);\n        right.push(i);\n    }\n    var count = 0;\n    while(left.length\
    \ > 0 && right.length > 0){\n        if(left[0] == right[0]){\n            count++;\n\
    \            left.shift();\n            right.shift();\n        }\n        else\
    \ if(left[0] < right[0]){\n            left.shift();\n        }\n        else{\n\
    \            right.shift();\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = car_race_collision;\n\
    \  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n\
    \  assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpea1jlo6g.js:38:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpea1jlo6g.js:45:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpo_bvfpo7.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpo_bvfpo7.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar count = 0;\n\tvar left = [];\n\tvar right = [];\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tleft.push(i);\n\t\tright.push(i);\n\t}\n\tfor(var i = 0; i < n; i++){\n\
    \t\tfor(var j = 0; j < n; j++){\n\t\t\tif(left[i] == right[j]){\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpvfkowqki.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpvfkowqki.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuyusbzqq.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuyusbzqq.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmptbwwwzan.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmptbwwwzan.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpky66vw6f.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpky66vw6f.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO:  Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp5pl5ct40.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp5pl5ct40.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpb0emyci4.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpb0emyci4.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpr5vvp7d9.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpr5vvp7d9.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp7a7q39ny.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp7a7q39ny.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpskiv2t93.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpskiv2t93.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpy90kp897.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpy90kp897.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpcoruqkpf.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpcoruqkpf.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpskrpudes.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpskrpudes.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpaqmjllci.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpaqmjllci.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpsh6numg1.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpsh6numg1.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO:  Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmp912tbkj6.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmp912tbkj6.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: Implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpxalt6ksb.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpxalt6ksb.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // your code here\n    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpo_guqo3w.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpo_guqo3w.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpkhc6fdia.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpkhc6fdia.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpqfp7cohi.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpqfp7cohi.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    // TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpfuuwi11t.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpfuuwi11t.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tvar left_to_right = [];\n\tvar right_to_left = [];\n\tvar collisions = 0;\n\t\
    for(var i = 0; i < n; i++){\n\t\tleft_to_right.push(i);\n\t\tright_to_left.push(i);\n\
    \t}\n\tfor(var i = 0; i < n; i++){\n\t\tfor(var j = 0; j < n; j++){\n\t\t\tif(left_to_right[i]\
    \ == right_to_left[j]){\n\t\t\t\tcollisions++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ collisions;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpom5pwr6w.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpom5pwr6w.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpzofnt8l6.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpzofnt8l6.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: implement this function\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmps2j2w_br.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmps2j2w_br.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    return n*(n-1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpixb5z3bg.js:18:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpixb5z3bg.js:25:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpvm8b4lac.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpvm8b4lac.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpki318404.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpki318404.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    var count = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = 0; j\
    \ < n; j++){\n            if(i == j){\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpfpeo9abe.js:26:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpfpeo9abe.js:33:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \    //TODO: Implement this function.\n    return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n0\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpv7efr0rk.js:19:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpv7efr0rk.js:26:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 0,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \tlet left = 0;\n\tlet right = 0;\n\tlet count = 0;\n\twhile(left < n && right\
    \ < n){\n\t\tif(left < right){\n\t\t\tleft++;\n\t\t}\n\t\telse if(left > right){\n\
    \t\t\tright++;\n\t\t}\n\t\telse{\n\t\t\tleft++;\n\t\t\tright++;\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpc26qgs9k.js:34:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpc26qgs9k.js:41:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var left_to_right = [];\n  var right_to_left = [];\n  for(var i = 0; i < n;\
    \ i++){\n    left_to_right.push(i);\n    right_to_left.push(i);\n  }\n  var collisions\
    \ = 0;\n  while(left_to_right.length > 0 && right_to_left.length > 0){\n    var\
    \ left_car = left_to_right.shift();\n    var right_car = right_to_left.shift();\n\
    \    if(left_car === right_car){\n      collisions++;\n    }\n  }\n  return collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n2\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpuu7rqy_z.js:32:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpuu7rqy_z.js:39:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 2,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  //TODO: implement this function\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n\
    \  assert.deepEqual(candidate(3),9);\n  assert.deepEqual(candidate(4),16);\n \
    \ assert.deepEqual(candidate(8),64);\n  assert.deepEqual(candidate(10),100);\n\
    }\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\nundefined\\\
    n\\nshould loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpy3relh8c.js:18:10)\\\
    n    at Object.<anonymous> (/tmp/tmpy3relh8c.js:25:1)\\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\\
    n    at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: undefined,\\\
    n  expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError
- program: "//Imagine a road that's a perfectly straight infinitely long line.\n//\
    \ n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision(n){\n\
    \  var collisions = 0;\n  var cars = [];\n  for(var i = 0; i < n; i++){\n    cars.push(i);\n\
    \  }\n  for(var i = 0; i < n; i++){\n    for(var j = 0; j < n; j++){\n      if(cars[i]\
    \ > cars[j]){\n        collisions++;\n      }\n    }\n  }\n  return collisions;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = car_race_collision;\n  assert.deepEqual(candidate(2),4);\n  assert.deepEqual(candidate(3),9);\n\
    \  assert.deepEqual(candidate(4),16);\n  assert.deepEqual(candidate(8),64);\n\
    \  assert.deepEqual(candidate(10),100);\n}\n\ntest();"
  stdout: b''
  stderr: "b\"node:assert:124\\n  throw new AssertionError(obj);\\n  ^\\n\\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\\n\\n1\\n\\nshould\
    \ loosely deep-equal\\n\\n4\\n    at test (/tmp/tmpqxgez9q7.js:30:10)\\n    at\
    \ Object.<anonymous> (/tmp/tmpqxgez9q7.js:37:1)\\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\\\
    n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\\n \
    \   at Module.load (node:internal/modules/cjs/loader:998:32)\\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\\n    at node:internal/main/run_main_module:17:47\
    \ {\\n  generatedMessage: true,\\n  code: 'ERR_ASSERTION',\\n  actual: 1,\\n \
    \ expected: 4,\\n  operator: 'deepEqual'\\n}\\n\\nNode.js v18.7.0\\n\""
  exit_code: 1
  status: AssertionError

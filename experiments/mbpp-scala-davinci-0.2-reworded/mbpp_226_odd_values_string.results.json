{
  "name": "mbpp_226_odd_values_string",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_226_odd_values_string.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length if i % 2 == 0) result += str(i)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result.append(str(i))\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(_._2 % 2 == 0).map(_._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result.append(str(i))\n            }\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        val strList = str.toList\n        val evenList = for (i <- 0 until strList.length if i % 2 == 0) yield strList(i)\n        evenList.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for(i <- 0 until str.length) {\n            if(i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length if i % 2 == 0) {\n            result += str(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(p => p._2 % 2 == 0).map(p => p._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for(i <- 0 until str.length) {\n            if(i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        val strArray = str.toCharArray\n        val strBuilder = new StringBuilder\n        for (i <- 0 until strArray.length) {\n            if (i % 2 == 0) {\n                strBuilder.append(strArray(i))\n            }\n        }\n        strBuilder.toString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        val strArray = str.toArray\n        val strBuffer = new StringBuilder\n        for (i <- 0 until strArray.length) {\n            if (i % 2 == 0) strBuffer.append(strArray(i))\n        }\n        strBuffer.toString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var res = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) res += str(i)\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length if i % 2 == 0) {\n            result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(_._2 % 2 == 0).map(_._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0)\n                result += str(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var s = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                s += str(i)\n            }\n        }\n        return s\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(_._2 % 2 == 0).map(_._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        val sb = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) sb.append(str(i))\n        }\n        return sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result : String = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        str.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509857,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) result += str(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1666124042,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to remove the characters which have odd index values of a given string.\n    def oddValuesString(str : String) : String = {\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i % 2 == 0) {\n                result += str(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(oddValuesString((\"abcdef\")).equals((\"ace\")));\n    assert(oddValuesString((\"python\")).equals((\"pto\")));\n    assert(oddValuesString((\"data\")).equals((\"dt\")));\n    assert(oddValuesString((\"lambs\")).equals((\"lms\")));\n    }\n\n}\n",
      "timestamp": 1665509858,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_799_left_rotate",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\n    def leftRotate(n : Long, d : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_799_left_rotate.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(leftRotate((16l), (2l)) == (64l));\n    assert(leftRotate((10l), (2l)) == (40l));\n    assert(leftRotate((99l), (3l)) == (792l));\n    assert(leftRotate((99l), (3l)) == (792l));\n    assert(leftRotate((1l), (3l)) == (8l));\n    assert(leftRotate((5l), (3l)) == (40l));\n    assert(leftRotate((29l), (3l)) == (232l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n & mask\n        val right = n >> d\n        (left << (32 - d)) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = (n >> (32 - d)) & mask\n        val right = n << d\n        left | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFF",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & (mask << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val s = n.toBinaryString\n        val s1 = s.substring(d.toInt, s.length)\n        val s2 = s.substring(0, d.toInt)\n        (s1 + s2).toLong(2)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        (n & mask) << (32 - d) | (n >> d)",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val b = n.toBinaryString\n        val l = b.length\n        val r = b.substring(d, l) + b.substring(0, d)\n        val rl = r.length\n        val rr = rl - 32\n        val rrr = if (rr > 0) r.substring(rr, rl) else r\n        val rrrr = if (rrr.length < 32) rrr.padTo(32, \"0\").mkString else rrr\n        rrrr.toLong(2)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & (0xFFFFFFFFL)",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1L << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & (mask << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n & mask\n        val right = n >> d\n        (left << (32 - d)) | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & (mask << (32 - d))",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1L << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val bits = 32\n        val mask = (1 << bits) - 1\n        val left = (n << d) & mask\n        val right = (n >> (bits - d)) & mask\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val left = n << d\n        val right = n >> (32 - d)\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        var result = 0L\n        for (i <- 0 until 32) {\n            val bit = (n >> i) & 1\n            result |= (bit << ((i + d) % 32))\n        }\n        result",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xffffffff",
    "        val mask = (1 << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n << d\n        (left & mask) | right",
    "        val mask = (1L << d) - 1\n        ((n << d) & ~mask) | ((n >> (32 - d)) & mask)",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1L << d) - 1\n        val mask2 = (1L << 32) - 1 - mask\n        ((n & mask2) << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xffffffff",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        left | right",
    "        val mask = (1L << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val s = n.toBinaryString\n        val s1 = s.substring(d.toInt)\n        val s2 = s.substring(0, d.toInt)\n        val s3 = s1 + s2\n        val s4 = s3.padTo(32, '0')\n        s4.toLong(2)",
    "        val mask = (1 << d) - 1\n        val mask2 = ~mask\n        val left = (n & mask2) << d\n        val right = (n & mask) >> (32 - d)\n        left | right",
    "        val s = n.toBinaryString\n        val l = s.length\n        val z = \"0\" * (32 - l)\n        val s1 = z + s\n        val s2 = s1.substring(d.toInt) + s1.substring(0, d.toInt)\n        val n1 = BigInt(s2, 2)\n        n1.toLong",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = (n >> (32 - d)) & mask\n        val right = n << d\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n & mask\n        val right = n >> d\n        (left << (32 - d)) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val left = n << d\n        val right = n >> (32 - d)\n        left | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & (mask << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1L << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n & mask\n        left | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        ((n << d) | ((n & mask) << (32 - d))) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val left = n << d\n        val right = n >> (32 - d)\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1L << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1L << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        return ((n & ~mask) << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val mask2 = (1 << 32) - 1\n        ((n << d) | ((n & mask2) >> (32 - d))) & mask2",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n & mask\n        val right = n >> d\n        (left << (32 - d)) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val left = n << d\n        val right = n >> (32 - d)\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFF",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        ((n << d) & 0xFFFFFFFFL) | ((n & mask) >> (32 - d))",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) << (32 - d))",
    "        val mask = (1L << 32) - 1\n        val left = (n << d) & mask\n        val right = (n >> (32 - d)) & mask\n        left | right",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & (mask << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        left | right",
    "        val mask = (1L << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)",
    "        val mask = (1L << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (left << d) | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1L << 32) - 1)",
    "        val mask = (1L << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = (n & mask) << (32 - d)\n        val right = n >> d\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) >> (32 - d))",
    "        val x = (n << d) | (n >> (32 - d))\n        x",
    "        val mask = (1 << d) - 1\n        val left = (n >> (32 - d)) & mask\n        val right = (n << d) & ~mask\n        left | right",
    "        val mask = (1 << d) - 1\n        (n << d) | ((n & mask) >> (32 - d))",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = n & mask\n        left | (right << (32 - d))",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1L << d) - 1\n        val left = n >> (32 - d)\n        val right = n & mask\n        (right << (32 - d)) | left",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xffffffff",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        val left = n & mask\n        val right = n >> d\n        (left << (32 - d)) | right",
    "        val mask = (1L << d) - 1\n        val left = n << d\n        val right = (n & mask) << (32 - d)\n        (left | right) & 0xFFFFFFFFL",
    "        val mask = (1 << d) - 1\n        (n << d) | (n >> (32 - d) & mask)",
    "        val mask = (1 << d) - 1\n        val left = n << d\n        val right = n >> (32 - d)\n        (left | right) & ((1 << 32) - 1)"
  ]
}
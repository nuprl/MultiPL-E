{
  "name": "mbpp_798__sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_798__sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpijo_69uc.scala:9)\n\tat Problem.main(tmpijo_69uc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)((a,b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) sum += i\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Fill in the code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgoth9zdm.scala:10)\n\tat Problem.main(tmpgoth9zdm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpiysuhni6.scala:10)\n\tat Problem.main(tmpiysuhni6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpiysuhni6.scala:10)\n\tat Problem.main(tmpiysuhni6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) sum += i\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Fill in the code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgoth9zdm.scala:10)\n\tat Problem.main(tmpgoth9zdm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)((a,b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        arr.foreach(sum += _)\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.reduceLeft((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((a,b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpiysuhni6.scala:10)\n\tat Problem.main(tmpiysuhni6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) sum += i\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpy97s2zh1.scala:10)\n\tat Problem.main(tmpy97s2zh1.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_+_)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((a, b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpijo_69uc.scala:9)\n\tat Problem.main(tmpijo_69uc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpijo_69uc.scala:9)\n\tat Problem.main(tmpijo_69uc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- arr) {\n            sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((x, y) => x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr) sum += i\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- arr) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        return arr.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of a list.\n    def Sum(arr : List[Long]) : Long = {\n        arr.foldLeft(0L)((a,b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(Sum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (6l));\n    assert(Sum((List[Long](15l.toLong, 12l.toLong, 13l.toLong, 10l.toLong))) == (50l));\n    assert(Sum((List[Long](0l.toLong, 1l.toLong, 2l.toLong))) == (3l));\n    }\n\n}\n",
      "timestamp": 1666123131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_93_power",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_93_power.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        if (b == 1) return a\n        var result = power(a, b / 2)\n        result = result * result\n        if (b % 2 == 1) result = result * a\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val t = power(a, b / 2)\n            t * t\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        } else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        } else {\n            val p = power(a, b / 2)\n            a * p * p\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else c * c * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val x = power(a, b / 2)\n            if (b % 2 == 0) x * x\n            else x * x * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        var result = a\n        for (i <- 1 until b) {\n            result *= a\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsa5ejn4t.scala:8:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until b) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (b : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val x = power(a, b / 2)\n            if (b % 2 == 0) x * x\n            else x * x * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        if (b == 1) return a\n        var x = power(a, b / 2)\n        if (b % 2 == 0) return x * x\n        else return a * x * x\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result : Long = 1\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else {\n            val x = power(a, (b - 1) / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val t = power(a, b / 2)\n            t * t\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        } else {\n            val c = power(a, b / 2)\n            a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else c * c * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        } else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0)\n            1\n        else if (b == 1)\n            a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else\n            a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        var result = a\n        for (i <- 1 until b) {\n            result *= a\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsa5ejn4t.scala:8:26 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until b) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^\u001b[0m\n\u001b[31m  |\u001b[0m                          Found:    (b : Long)\n\u001b[31m  |\u001b[0m                          Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result : Long = 1\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else c * c * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result : Long = 1\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val t = power(a, b / 2)\n            t * t\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        } else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val half = power(a, b / 2)\n            half * half\n        } else {\n            val half = power(a, b / 2)\n            a * half * half\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        if (b == 1) return a\n        var x = power(a, b / 2)\n        if (b % 2 == 0) return x * x\n        else return a * x * x\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        } else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else c * c * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result = 1L\n        for (i <- 1 to b.toInt) result *= a\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        var result = a\n        for (i <- 2 to b.toInt) result *= a\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) return 1\n        if (b == 1) return a\n        var result = a\n        for (i <- 2 to b.toInt) result *= a\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        } else {\n            val x = power(a, b / 2)\n            a * x * x\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val p = power(a, b / 2)\n            p * p\n        } else {\n            val p = power(a, b / 2)\n            a * p * p\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val c = power(a, b / 2)\n            if (b % 2 == 0) c * c\n            else a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        } else {\n            val c = power(a, b / 2)\n            a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        } else {\n            val c = power(a, b / 2)\n            a * c * c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        var result : Long = 1\n        for (i <- 1 to b.toInt) {\n            result *= a\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124136,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b / 2) * power(a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val half = power(a, b / 2)\n            half * half\n        }\n        else {\n            val half = power(a, (b - 1) / 2)\n            a * half * half\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b % 2 == 0) {\n            val x = power(a, b / 2)\n            x * x\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) {\n            val c = power(a, b / 2)\n            c * c\n        }\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, (b - 1) / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a * a, b / 2)\n        else a * power(a * a, b / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else if (b % 2 == 0) power(a, b / 2) * power(a, b / 2)\n        else a * power(a, b - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1666124135,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the value of 'a' to the power 'b'.\n    def power(a : Long, b : Long) : Long = {\n        if (b == 0) 1\n        else if (b == 1) a\n        else {\n            val half = power(a, b / 2)\n            if (b % 2 == 0) half * half\n            else half * half * a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(power((3l), (4l)) == (81l));\n    assert(power((2l), (3l)) == (8l));\n    assert(power((5l), (5l)) == (3125l));\n    }\n\n}\n",
      "timestamp": 1665510643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}